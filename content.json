{"meta":{"title":"Dev Star SJ","subtitle":"DevStarSJ","description":"Sharing the common developer's try-on","author":"Yun Seok-joon","url":"http://DevStarSJ.github.io"},"pages":[{"title":"all-archives","date":"2017-04-24T05:03:20.000Z","updated":"2017-03-05T14:32:17.000Z","comments":false,"path":"all-archives/index.html","permalink":"http://DevStarSJ.github.io/all-archives/index.html","excerpt":"","text":""},{"title":"all-categories","date":"2017-04-24T05:03:20.000Z","updated":"2017-03-05T14:23:47.000Z","comments":false,"path":"all-categories/index.html","permalink":"http://DevStarSJ.github.io/all-categories/index.html","excerpt":"","text":""},{"title":"all-tags","date":"2017-04-24T05:03:20.000Z","updated":"2017-03-05T14:25:15.000Z","comments":false,"path":"all-tags/index.html","permalink":"http://DevStarSJ.github.io/all-tags/index.html","excerpt":"","text":""}],"posts":[{"title":"AWS Lambda + API Gateway Binary Response 예제","slug":"AWS-Lambda-BinaryResponse","date":"2017-04-07T15:00:00.000Z","updated":"2017-04-23T08:21:19.000Z","comments":true,"path":"2017/04/08/AWS-Lambda-BinaryResponse/","link":"","permalink":"http://DevStarSJ.github.io/2017/04/08/AWS-Lambda-BinaryResponse/","excerpt":"","text":"AWS Lambda + API Gateway Binary Response &#xC608;&#xC81C; API Gateway&#xC758; Binary Response&#xAC00; &#xAC00;&#xB2A5;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC774;&#xBBF8;&#xC9C0; &#xD30C;&#xC77C;(png, jpg)&#xB098; pdf &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xAC19;&#xC740;&#xAC78; Lambda&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xAD6C;&#xD604;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. AWS &#xC5D0;&#xC11C; &#xC81C;&#xACF5;&#xD574;&#xC8FC;&#xB294; &#xC608;&#xC81C;&#xB294; AWS Compute Blog&#xC5D0; &#xC788;&#xB294; Binary Support for API Integrations with Amazon API Gateway &#xB780; &#xD3EC;&#xC2A4;&#xD305;&#xC774; &#xC788;&#xB294;&#xB370; &#xC774;&#xAC83;&#xC744; &#xC77D;&#xACE0; &#xC2E4;&#xC81C;&#xB85C; &#xAD6C;&#xD604;&#xC744; &#xD558;&#xAE30;&#xC5D0;&#xB294; &#xC870;&#xAE08; &#xBD80;&#xC871;&#xD558;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xBC14;&#xB85C; &#xC0AC;&#xC6A9; &#xAC00;&#xB2A5;&#xD55C; &#xC608;&#xC81C; &#xCF54;&#xB4DC;&#xB97C; &#xC791;&#xC131;&#xD574; &#xBCF4;&#xC558;&#xB2E4;. &#xC774;&#xBC88;&#xC5D0; &#xD68C;&#xC0AC;(&#xC9C1;&#xBC29;)&#xC5D0;&#xC11C; html to pdf API &#xB0B4;&#xC7AC;&#xD654; (&#xC608;&#xC804;&#xC5D0;&#xB294; &#xC678;&#xBD80; &#xC720;&#xB8CC; &#xC11C;&#xBE44;&#xC2A4; &#xC0AC;&#xC6A9;) &#xC791;&#xC5C5;&#xC744; &#xC9C4;&#xD589;&#xD558;&#xBA74;&#xC11C; Binary Response&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xACBD;&#xD5D8;&#xC744; &#xD558;&#xAC8C; &#xB418;&#xC5C8;&#xB2E4;. &#xADF8; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xB9CE;&#xC740; &#xC0BD;&#xC9C8;(?)&#xC744; &#xD558;&#xAC8C; &#xB418;&#xC5C8;&#xB294;&#xB370;, &#xC774;&#xB7F0; &#xC608;&#xC81C; &#xCF54;&#xB4DC;&#xB9CC; &#xD558;&#xB098; &#xAC80;&#xC0C9;&#xC73C;&#xB85C; &#xCC3E;&#xC744; &#xC218; &#xC788;&#xC5C8;&#xC5B4;&#xB3C4; &#xC2DC;&#xAC04;&#xC744; &#xB9CE;&#xC774; &#xC544;&#xB084;&#xC218; &#xC788;&#xC5C8;&#xC744; &#xAEBC;&#xB780; &#xC0DD;&#xAC01;&#xC774; &#xB4E4;&#xC5C8;&#xB2E4;. 1. Lambda &#xCF54;&#xB4DC; &#xC791;&#xC131; Node.JS&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xC791;&#xC131;&#xD558;&#xC600;&#xB2E4;. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556&quot;use strict&quot;;const fs = require(&quot;fs&quot;);const qs = require(&quot;querystring&quot;);const FILE = { JPG: &quot;test.jpg&quot;, PNG: &quot;test.png&quot;, PDF: &quot;test.pdf&quot;};const CONTENT_TYPE = { JPG: &quot;image/jpg&quot;, PNG: &quot;image/png&quot;, PDF: &quot;application/pdf&quot;};exports.handler = (event, context, callback) =&gt; { console.info(JSON.stringify(event,null,2)); const qs = event.queryStringParameters || {}; const path = event.pathParameters.proxy; const body = getBody(event); const KEY = path.indexOf(&quot;jpg&quot;) &gt;= 0 ? &quot;JPG&quot; : path.indexOf(&quot;png&quot;) &gt;= 0 ? &quot;PNG&quot; : &quot;PDF&quot;; const content = fs.readFileSync(FILE[KEY]); const response = { statusCode: 200, headers: { &quot;Content-Type&quot;: CONTENT_TYPE[KEY], &quot;Content-Disposition&quot;: `inline; filename=&quot;${FILE[KEY]}&quot;` }, body: new Buffer(content).toString(&quot;base64&quot;), isBase64Encoded: true } callback(null, response);};function getBody(event){ if (!event.body) return null; const rawBody = event.isBase64Encoded ? new Buffer(event.body, &quot;base64&quot;).toString() : event.body; const body = event.headers[&quot;Content-Type&quot;] === &quot;application/x-www-form-urlencoded&quot; ? qs.parse(rawBody) : rawBody; return body;} &#xCF54;&#xB4DC; &#xB300;&#xD574;&#xC11C;&#xB294; &#xAC04;&#xB7B5;&#xD558;&#xAC8C;&#xB9CC; &#xC124;&#xBA85;&#xD558;&#xACA0;&#xB2E4;. &#xACBD;&#xB85C;&#xC0C1;&#xC5D0; pdf, png, jpg &#xAC00; &#xC788;&#xB294; &#xACBD;&#xC6B0; &#xAC01;&#xAC01; &#xADF8; &#xC608;&#xC81C; &#xBC14;&#xC774;&#xB108;&#xB9AC;&#xB97C; &#xB9AC;&#xD134;&#xD574;&#xC8FC;&#xB294; &#xAC04;&#xB2E8;&#xD55C; API&#xB2E4;. API Gateway&#xC758; Lambda Proxy Integration&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; event&#xB97C; &#xBC1B;&#xC744; &#xC608;&#xC815;&#xC774;&#xB2E4;. &#xC608;&#xC804;&#xC5D0;&#xB294; {proxy+} &#xB9AC;&#xC18C;&#xC2A4;&#xB97C; &#xC0AC;&#xC6A9;&#xD574;&#xC57C;&#xC9C0;&#xB9CC; &#xD504;&#xB77D;&#xC2DC; &#xD1B5;&#xD569;&#xC774; &#xC0AC;&#xC6A9;&#xAC00;&#xB2A5;&#xD588;&#xC9C0;&#xB9CC;, &#xC774;&#xC81C;&#xB294; &#xAC01;&#xAC01;&#xC758; &#xB9AC;&#xC18C;&#xC2A4;, &#xBA54;&#xC11C;&#xB4DC;&#xB97C; &#xC9C1;&#xC811; &#xC9C0;&#xC815;&#xD558;&#xB354;&#xB77C;&#xB3C4; &#xD504;&#xB77D;&#xC2A4; &#xD1B5;&#xD569; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xBBC0;&#xB85C; &#xC774;&#xAC78; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xC744; &#xC774;&#xC720;&#xAC00; &#xC5C6;&#xB2E4;. &#xC774;&#xBC88; &#xC608;&#xC81C;&#xC5D0;&#xC11C; body&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0;&#xB294; &#xC54A;&#xC744; &#xC608;&#xC815;&#xC774;&#xB77C; getBody &#xD568;&#xC218;&#xAC00; &#xC0AC;&#xC2E4;&#xC0C1; &#xD544;&#xC694;&#xB294; &#xC5C6;&#xC9C0;&#xB9CC;, &#xBC14;&#xC774;&#xB108;&#xB9AC;&#xB85C; body&#xB97C; &#xBC1B;&#xC744; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xD574;&#xB2F9; &#xCF54;&#xB4DC;&#xB97C; &#xCC38;&#xACE0;&#xD574;&#xC11C; &#xCC98;&#xB9AC;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. &#xC704; &#xADF8;&#xB9BC;&#xACFC; &#xAC19;&#xC774; isBase64Encoded &#xAC12;&#xC744; &#xBCF4;&#xACE0; body&#xB97C; &#xC778;&#xCF54;&#xB529; &#xD574;&#xC918;&#xC57C; &#xD55C;&#xB2E4;. &#xC778;&#xCF54;&#xB529; &#xC5EC;&#xBD80;&#xB97C; &#xC6B0;&#xB9AC;&#xAC00; &#xC815;&#xD560; &#xC218; &#xC788;&#xB294;&#xC9C0;&#xB294; &#xC798; &#xBAA8;&#xB974;&#xACA0;&#xC9C0;&#xB9CC;, API Gateway&#xC5D0;&#xC11C; &#xC54C;&#xC544;&#xC11C; &#xD310;&#xB2E8;&#xD558;&#xC5EC; &#xC778;&#xCF54;&#xB529; &#xD574;&#xC8FC;&#xB294;&#xAC83; &#xAC19;&#xB2E4;. &#xC5EC;&#xB7EC; &#xBC88;&#xC758; &#xD14C;&#xC2A4;&#xD2B8;&#xB97C; &#xD574;&#xBCF4;&#xB2C8; isBase64Encoded&#xAC00; false&#xB85C; &#xACC4;&#xC18D; &#xC804;&#xB2EC;&#xB418;&#xB2E4;&#xAC00; API Gateway deploy &#xC774;&#xD6C4; true&#xB85C; &#xBC14;&#xB010;&#xC801;&#xB3C4; &#xC788;&#xB2E4;. JavaScript&#xC5D0;&#xC11C;&#xC758; switch-case &#xBB38;&#xC5D0; &#xB300;&#xD55C; &#xAD6C;&#xD604;&#xC740; &#xAC1C;&#xC778;&#xC801;&#xC73C;&#xB85C; &#xC704;&#xC640; &#xAC19;&#xC774; Object&#xB97C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC11C; key-value pair&#xB97C; &#xD65C;&#xC6A9;&#xD558;&#xB294;&#xAC8C; &#xAE54;&#xB054;&#xD574; &#xBCF4;&#xC778;&#xB2E4;. 2. Lambda &#xBC30;&#xD3EC; &#xC704; &#xC791;&#xC131;&#xD55C; &#xCF54;&#xB4DC;&#xC640; test.jpg, test.png, test.pdf &#xB97C; &#xAC19;&#xC740; &#xD3F4;&#xB354;&#xC5D0; &#xBCF5;&#xC0AC;&#xD55C; &#xB4A4; &#xAC19;&#xC774; &#xC555;&#xCD95;&#xD574; &#xC8FC;&#xC790;. zip -r test.zip . &#xADF8;&#xB9AC;&#xACE0; AWS Lambda Console&#xB85C; &#xAC00;&#xC11C; binaryTest &#xB780; &#xC774;&#xB984;&#xC73C;&#xB85C; Function&#xC744; &#xC0DD;&#xC131;&#xD558;&#xC790;. &#xB7F0;&#xD0C0;&#xC784;&#xC740; Node.js 6.10 &#xC744; &#xC120;&#xD0DD;&#xD558;&#xACE0; &#xD574;&#xB2F9; &#xC555;&#xCD95;&#xD30C;&#xC77C;&#xC744; &#xC5C5;&#xB85C;&#xB529;&#xD558;&#xC790;. &#xB2E4;&#xB978; &#xC124;&#xC815;&#xC740; &#xC801;&#xB2F9;&#xD788; &#xC54C;&#xC544;&#xC11C; &#xD558;&#xBA74; &#xB41C;&#xB2E4;. &#xC774; &#xC608;&#xC81C;&#xB294; S3&#xB098; &#xB2E4;&#xB978; AWS &#xC0C1;&#xC758; &#xB9AC;&#xC18C;&#xC2A4;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xC73C;&#xB2C8; Role &#xC124;&#xC815;&#xB3C4; &#xB530;&#xB85C; &#xBCF5;&#xC7A1;&#xD558;&#xAC8C; &#xD560; &#xAC83;&#xC774; &#xC5C6;&#xB2E4;. &#xB2E8;, &#xBA54;&#xBAA8;&#xB9AC;&#xC640; &#xD0C0;&#xC784;&#xC544;&#xC6C3;&#xC740; &#xC801;&#xB2F9;&#xD788; &#xC5EC;&#xC720;&#xC788;&#xAC8C; &#xC8FC;&#xAE38; &#xBC14;&#xB780;&#xB2E4;. &#xBC14;&#xC774;&#xB108;&#xB9AC; &#xCC98;&#xB9AC; &#xC790;&#xCCB4;&#xAC00; &#xD30C;&#xC77C;&#xC744; &#xC77D;&#xACE0;, &#xC4F0;&#xB294; &#xC791;&#xC5C5;&#xC774; &#xD544;&#xC694;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xBA54;&#xBAA8;&#xB9AC;&#xAC00; &#xB9CE;&#xC774; &#xD544;&#xC694; &#xD560; &#xC218;&#xB3C4; &#xC788;&#xACE0;, &#xC2DC;&#xAC04;&#xB3C4; &#xC0DD;&#xAC01;&#xBCF4;&#xB2E4; &#xC624;&#xB798; &#xAC78;&#xB9B4;&#xC218; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC774;&#xB2E4;. 3. API Gateway &#xC0DD;&#xC131; &#xBC0F; &#xC124;&#xC815; 3.1 &#xC77C;&#xB2E8; API &#xC0DD;&#xC131; &#xADF8;&#xB0E5; binaryTest&#xB85C; &#xD558;&#xB098; &#xC0DD;&#xC131;&#xD55C;&#xB2E4;. 3.2 &#xB9AC;&#xC18C;&#xC2A4; &#xCD94;&#xAC00; Action -&gt; Create Method &#xB97C; &#xB204;&#xB978; &#xB4A4; proxy resource&#xB97C; &#xCCB4;&#xD06C;&#xD558;&#xACE0; Create Resource&#xB97C; &#xB20C;&#xB7EC;&#xC8FC;&#xC790;. &#xC774;&#xBC88; &#xC608;&#xC81C;&#xC5D0;&#xC11C;&#xB294; &#xBAA8;&#xB4E0; &#xACBD;&#xB85C;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xD558;&#xB098;&#xC758; Lambda&#xB97C; &#xC2E4;&#xD589;&#xC2DC;&#xD0AC; &#xAC83;&#xC774;&#xB2E4;. &#xB2E8;, &#xC774; &#xBC29;&#xBC95;&#xC740; &#xC720;&#xD6A8;&#xD558;&#xC9C0; &#xC54A;&#xC740; &#xACBD;&#xB85C; &#xB4F1;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB3C4; &#xBAA8;&#xB450; Lambda&#xB97C; &#xC2E4;&#xD589;&#xC2DC;&#xD0A4;&#xAC8C; &#xB418;&#xBBC0;&#xB85C; &#xC4F8;&#xB370;&#xC5C6;&#xB294; &#xBE44;&#xC6A9;&#xC774; &#xBC1C;&#xC0DD; &#xD560; &#xC218;&#xB3C4; &#xC788;&#xB2E4;&#xB294;&#xAC74; &#xC54C;&#xC544;&#xB46C;&#xC57C; &#xD55C;&#xB2E4;. Lambda&#xC5D0;&#xC11C; &#xCC98;&#xB9AC; &#xAC00;&#xB2A5;&#xD55C; &#xACBD;&#xB85C;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB9CC; &#xD638;&#xCD9C;&#xC744; &#xD560; &#xAC83;&#xC774;&#xB77C;&#xBA74; &#xB9AC;&#xC18C;&#xC2A4;&#xB97C; &#xC720;&#xD6A8;&#xD55C; &#xAC83;&#xB9CC; &#xB530;&#xB85C; &#xC0DD;&#xC131;&#xD558;&#xB294;&#xAC8C; &#xC88B;&#xB2E4;. &#xD574;&#xB2F9; &#xD504;&#xB77D;&#xC2DC; &#xB9AC;&#xC18C;&#xC2A4;&#xC5D0;&#xC11C; &#xC2E4;&#xD589;&#xC2DC;&#xD0AC; Lambda&#xB97C; &#xC124;&#xC815;&#xD574; &#xC8FC;&#xC790;. image &#xC704;&#xC5D0;&#xC11C; &#xC0DD;&#xC131;&#xD55C; binaryTest Lambda Function&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD558;&#xC790;. 3.3 Binary Support &#xCD94;&#xAC00; API Gateway &#xC0C1;&#xC758; Binary Support &#xD0ED;&#xC744; &#xB20C;&#xB7EC;&#xC11C; &#xB4E4;&#xC5B4;&#xAC00;&#xC790;. image &#xD574;&#xB2F9; API&#xB97C; &#xD638;&#xCD9C;&#xD560; &#xB54C; headers&#xC5D0;&#xC11C; Accept&#xB85C; &#xC694;&#xCCAD;&#xD558;&#xB294; &#xD615;&#xD0DC;&#xB4E4;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xBBF8;&#xB9AC; &#xC815;&#xC758;&#xD574; &#xC918;&#xC57C; &#xD55C;&#xB2E4;. &#xB9CC;&#xC57D; &#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xC5D0;&#xC11C; url&#xB85C; &#xBC14;&#xB85C; &#xD638;&#xCD9C;&#xD560; &#xAC83;&#xC774;&#xB77C;&#xBA74; */*&#xB97C; &#xCD94;&#xAC00;&#xD574; &#xC918;&#xC57C; &#xD55C;&#xB2E4;. &#xADF8; &#xBC16;&#xC758; &#xB2E4;&#xB978; &#xACF3;&#xC5D0;&#xC11C; &#xC694;&#xCCAD;&#xC2DC; Accept&#xB85C; &#xBA85;&#xC2DC;&#xD574;&#xC8FC;&#xB294; &#xD615;&#xD0DC;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xCD94;&#xAC00;&#xB97C; &#xD574;&#xC918;&#xC57C; API Gateway&#xC5D0;&#xC11C; &#xBC14;&#xC774;&#xB108;&#xB9AC; &#xD615;&#xD0DC;&#xB85C; &#xC751;&#xB2F5;&#xC744; &#xC81C;&#xACF5;&#xD55C;&#xB2E4;. 3.4 &#xBC30;&#xD3EC; &#xB2E4;&#xC2DC; Resources &#xD0ED;&#xC73C;&#xB85C; &#xAC00;&#xC11C; Actions -&gt; Deploy API&#xB97C; &#xB20C;&#xB7EC;&#xC11C; &#xBC30;&#xD3EC;&#xB97C; &#xD558;&#xC790;. &#xADF8;&#xB0E5; &#xB298; &#xD558;&#xB358;&#xB370;&#xB85C; prod&#xB77C;&#xB294; &#xC774;&#xB984;&#xC73C;&#xB85C; &#xBC30;&#xD3EC;&#xB97C; &#xD588;&#xB2E4;. 4. &#xD14C;&#xC2A4;&#xD2B8; &#xBC30;&#xD3EC;&#xB97C; &#xD558;&#xBA74; url&#xC774; &#xC0DD;&#xC131;&#xB41C;&#xB2E4;. &#xC774; url &#xB4A4;&#xC5D0; /pdf , /png , /jpg&#xB97C; &#xBD99;&#xC5EC;&#xC11C; &#xD638;&#xCD9C;&#xD558;&#xC5EC; &#xBC14;&#xC774;&#xB108;&#xB9AC; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC;&#xAC00; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xB418;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD574; &#xBCF4;&#xC790;. &#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xC5D0;&#xC11C; &#xC9C1;&#xC811; &#xD638;&#xCD9C;&#xD558;&#xBA74; &#xBC14;&#xB85C; &#xD654;&#xBA74;&#xC5D0; &#xB098;&#xD0C0;&#xB098;&#xACA0;&#xACE0;, curl &#xC774;&#xB098; POSTMAN&#xC744; &#xC0AC;&#xC6A9;&#xD560;&#xB824;&#xBA74; header&#xC5D0; Accept&#xAC12;&#xC744; &#xB123;&#xC5B4;&#xC11C; &#xD638;&#xCD9C;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. curl -X GET -H &#x201C;{Accept:application/pdf}&#x201D; https://xxx/prod/pdf &gt; test.pdf POSTMAN&#xC758; &#xACBD;&#xC6B0; &#xC774;&#xBBF8;&#xC9C0;&#xB294; &#xBC14;&#xB85C; &#xD654;&#xBA74;&#xC5D0; &#xBCF4;&#xC5EC;&#xC8FC;&#xC9C0;&#xB9CC;, pdf&#xB294; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xBCF4;&#xC5EC;&#xC8FC;&#xC9C0; &#xBABB;&#xD55C;&#xB2E4;. Lambda Binary &#xC791;&#xC5C5; Tip(?) : Native Module &#xC0AC;&#xC6A9; Lambda&#xB85C; binary response &#xC791;&#xC5C5;&#xC744; &#xD560;&#xB824;&#xBA74; &#xBA87;&#xAC00;&#xC9C0;&#xB9CC; &#xBBF8;&#xB9AC; &#xC54C;&#xC544;&#xB450;&#xB354;&#xB77C;&#xB3C4; &#xC0BD;&#xC9C8;(?) &#xD560; &#xC2DC;&#xAC04;&#xC744; &#xC544;&#xB084; &#xC218; &#xC788;&#xB2E4;. Lambda&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xB294; &#xD658;&#xACBD;&#xC740; Linux &#xC774;&#xB2E4;. Lambda Execution Environment and Available Libraries &#xC5D0;&#xC11C; &#xC815;&#xD655;&#xD55C; &#xC815;&#xBCF4;&#xB97C; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xB2E4;. Lambda&#xC5D0; 50mb &#xC815;&#xB3C4;&#xC758; &#xB514;&#xC2A4;&#xD06C; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. /tmp &#xD3F4;&#xB354;&#xB0B4;&#xC5D0; &#xD30C;&#xC77C;&#xC744; &#xC784;&#xC2DC;&#xB85C; &#xC800;&#xC7A5;&#xD558;&#xACE0; &#xC0AC;&#xC6A9;&#xD558;&#xB294;&#xAC8C; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; Lambda&#xAC00; warm start&#xB85C; &#xC2E4;&#xD589;&#xB420; &#xACBD;&#xC6B0; &#xC774;&#xBBF8; &#xB9CC;&#xB4E4;&#xC5B4;&#xC9C4; Lambda&#xB97C; &#xC7AC;&#xC0AC;&#xC6A9;&#xD558;&#xBBC0;&#xB85C; &#xD574;&#xB2F9; &#xD3F4;&#xB354;&#xC5D0; &#xC784;&#xC2DC;&#xB85C; &#xB9CC;&#xB4E4;&#xC5B4; &#xB193;&#xC740; &#xD30C;&#xC77C;&#xC740; &#xACC4;&#xC18D; &#xB0A8;&#xC544;&#xC788;&#xAC8C; &#xB41C;&#xB2E4;. &#xC784;&#xC2DC;&#xB85C; &#xD30C;&#xC77C;&#xC744; &#xB9CC;&#xB4E4;&#xC5B4;&#xC11C; &#xD65C;&#xC6A9;&#xD560; &#xACBD;&#xC6B0; &#xB3D9;&#xC77C;&#xD55C; &#xC774;&#xB984;&#xC744; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; &#xD56D;&#xC0C1; &#xB36E;&#xC5B4;&#xC4F0;&#xAC70;&#xB098; &#xC544;&#xB2C8;&#xBA74; &#xD574;&#xB2F9; &#xD30C;&#xC77C;&#xC744; &#xB2E4; &#xC0AC;&#xC6A9;&#xD55C; &#xD6C4;&#xC5D0;&#xB294; &#xC9C0;&#xC6CC;&#xC8FC;&#xB294; &#xCF54;&#xB4DC;&#xB97C; &#xB123;&#xC5B4;&#xC8FC;&#xB3C4;&#xB85D; &#xD558;&#xC790;. Native Module&#xC744; &#xC0AC;&#xC6A9;&#xD560; &#xACBD;&#xC6B0; &#xBC14;&#xC774;&#xB108;&#xB9AC; &#xC751;&#xB2F5;&#xC744; &#xC8FC;&#xB294; &#xAE30;&#xB2A5; &#xAD6C;&#xD604;&#xC744; &#xC704;&#xD574;&#xC11C;&#xB294; native module&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xAC00; &#xB9CE;&#xB2E4;. native module&#xB97C; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;&#xBA74;, &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xACFC;&#xC815;&#xC73C;&#xB85C; &#xAC1C;&#xBC1C;&#xC744; &#xD560; &#xAC83;&#xC774;&#xB2E4;. &#xD574;&#xB2F9; native module&#xC744; &#xC124;&#xCE58;&#xD55C;&#xB2E4;. (macos&#xC758; &#xACBD;&#xC6B0; brew&#xB97C; &#xC0AC;&#xC6A9;) &#xD574;&#xB2F9; &#xBAA8;&#xB4C8;&#xC758; wrapper npm&#xC774; &#xC788;&#xB294;&#xC9C0; &#xAC80;&#xC0C9;&#xD55C;&#xB2E4;. &#xC788;&#xB2E4;&#xBA74; &#xADF8;&#xAC78; &#xD65C;&#xC6A9;&#xD55C;&#xB2E4;. &#xC5C6;&#xB2E4;&#xBA74; &#xC9C1;&#xC811; shell&#xC5D0;&#xC11C; &#xC2E4;&#xD589;&#xC2DC;&#xCF1C;&#xC8FC;&#xB294; wrapper&#xB97C; &#xAD6C;&#xD604;&#xD574;&#xC11C; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;. &#xC774;&#xAC78; Lambda&#xB85C; &#xBC30;&#xD3EC;&#xD558;&#xB824;&#xBA74; &#xD574;&#xB2F9; native module&#xC744; &#xAC19;&#xC774; &#xBC30;&#xD3EC;&#xD574;&#xC57C;&#xD55C;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xC544;&#xB798; &#xACFC;&#xC815;&#xC774; &#xCD94;&#xAC00;&#xB41C;&#xB2E4;. wrapper npm&#xC744; &#xD65C;&#xC6A9;&#xD55C; &#xACBD;&#xC6B0;&#xB77C;&#xBA74; &#xADF8; &#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xB97C; &#xC0B4;&#xD3B4;&#xBCF4;&#xBA74;&#xC11C; &#xD574;&#xB2F9; &#xBAA8;&#xB4C8;&#xC744; &#xC2DC;&#xC2A4;&#xD15C; &#xC0C1;&#xC5D0; &#xC124;&#xCE58;&#xB41C; &#xAC83;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xB294;&#xC9C0;, &#xC544;&#xB2C8;&#xBA74; npm&#xC73C;&#xB85C; &#xC124;&#xCE58;&#xD560;&#xB54C; &#xAC19;&#xC774; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xB418;&#xB294;&#xC9C0; &#xC0B4;&#xD3B4;&#xBCF8;&#xB2E4;. &#xC2DC;&#xC2A4;&#xD15C;&#xC0C1; &#xC124;&#xCE58;&#xB41C; &#xAC83;&#xC744; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;&#xBA74; native module&#xC758; &#xC2E4;&#xD589;&#xD30C;&#xC77C;&#xC744; &#xC555;&#xCD95;&#xD574; &#xBCF8;&#xB2E4;. &#xC555;&#xCD95; &#xD6C4; &#xC6A9;&#xB7C9;&#xC774; 50mb&#xAC00; &#xB118;&#xC73C;&#xBA74; &#xD3EC;&#xAE30;&#xD55C;&#xB2E4;. &#x3160;&#x3160; 50 mb &#xC774;&#xD558;&#xB77C;&#xBA74; Lambda &#xB97C; &#xBC30;&#xD3EC;&#xD560; &#xD3F4;&#xB354; &#xC544;&#xB798;&#xC5D0; &#xD574;&#xB2F9; &#xD30C;&#xC77C;&#xC744; &#xBCF5;&#xC0AC;&#xD55C;&#xB2E4;. &#xC62E;&#xAE34; &#xC2E4;&#xD589; &#xD30C;&#xC77C;&#xC744; &#xC2E4;&#xD589;&#xD558;&#xB3C4;&#xB85D; wrapper&#xB97C; &#xC218;&#xC815;&#xD55C;&#xB2E4;. &#xC5EC;&#xAE30;&#xC11C; &#xBC18;&#xB4DC;&#xC2DC; &#xBA85;&#xC2F1;&#xD574;&#xC57C; &#xD560;&#xAC83;&#xC740; Lambda&#xC758; &#xC2E4;&#xD589;&#xD658;&#xACBD;&#xC740; Linux&#xC774;&#xB2E4;. &#xC9C0;&#xAE08; &#xB0B4; &#xAC1C;&#xBC1C;&#xD658;&#xACBD;&#xC774; macos&#xC778; &#xACBD;&#xC6B0; &#xC774;&#xAC83;&#xC744; &#xADF8;&#xB300;&#xB85C; Lambda&#xB85C; &#xBC30;&#xD3EC;&#xD558;&#xBA74; &#xC2E4;&#xD589;&#xC774; &#xC548;&#xB41C;&#xB2E4;. &#xD574;&#xB2F9; native module&#xC744; Linux&#xC6A9;&#xC73C;&#xB85C; &#xBC14;&#xAFD4;&#xC11C; &#xBC30;&#xD3EC;&#xD574;&#xC57C;&#xD55C;&#xB2E4;. wrapper npm&#xC5D0;&#xC11C; native module&#xC744; &#xAC19;&#xC774; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xBC1B;&#xAC8C; &#xB418;&#xC5B4; &#xC788;&#xB2E4;&#xBA74;, &#xCF54;&#xB4DC;&#xB97C; &#xC0B4;&#xD3B4;&#xBCF4;&#xC790;. &#xBD84;&#xBA85; OS &#xD0C0;&#xC785;&#xBCC4;&#xB85C; &#xAC01;&#xAC01; &#xB2E4;&#xB978; &#xD30C;&#xC77C;&#xC744; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xD558;&#xB294; &#xBD84;&#xAE30; &#xCF54;&#xB4DC;&#xAC00; &#xC788;&#xC744; &#xAC83;&#xC774;&#xB2E4;. &#xADF8;&#xAC78; &#xBCF4;&#xACE0; Linux&#xC6A9; &#xC2E4;&#xD589;&#xD30C;&#xC77C;&#xC744; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xBC1B;&#xC790;. &#xC2DC;&#xC2A4;&#xD15C; &#xC0C1;&#xC5D0; &#xC124;&#xCE58;&#xB41C; &#xC2E4;&#xD589;&#xD30C;&#xC77C;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xB77C;&#xBA74; &#xB530;&#xB85C; Linux&#xC6A9;&#xC744; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xBC1B;&#xC790;. &#xB85C;&#xCEEC;&#xC5D0;&#xC11C; &#xD14C;&#xC2A4;&#xD2B8;&#xB85C; &#xC2E4;&#xD589;&#xC2DC;&#xCF1C;&#xBCFC; &#xD658;&#xACBD;&#xACFC; Lambda&#xB85C; &#xBC30;&#xD3EC;&#xD560; &#xD658;&#xACBD;&#xC744; &#xB530;&#xB85C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC57C; &#xD55C;&#xB2E4;. &#xBC30;&#xD3EC; &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB97C; &#xB9CC;&#xB4E4;&#xBA74; &#xD3B8;&#xD558;&#xB2E4;. &#xD3F4;&#xB354; &#xC0DD;&#xC131; Lambda &#xCF54;&#xB4DC; &#xBCF5;&#xC0AC; npm i --only=production native module&#xC744; linux &#xC6A9;&#xC73C;&#xB85C; &#xBCF5;&#xC0AC; &#xBC30;&#xD3EC; OS&#xC5D0; &#xB530;&#xB77C; Native Module&#xC758; &#xACB0;&#xACFC;&#xAC00; &#xB2E4;&#xB97C; &#xC218; &#xC788;&#xB2E4;. &#xAC19;&#xC740; native module&#xC774;&#xB77C;&#xB3C4; &#xAC01; OS&#xBCC4;&#xB85C; &#xB2E4;&#xB974;&#xAC8C; &#xB3D9;&#xC791;&#xD560; &#xC218; &#xC788;&#xB2E4;. &#xC774; &#xC0AC;&#xC2E4;&#xC744; &#xBAA8;&#xB974;&#xACE0; &#xACB0;&#xACFC;&#xBB3C;&#xC744; &#xAC1C;&#xBC1C; &#xD658;&#xACBD;&#xC5D0; &#xB9DE;&#xCDB0;&#xC11C; &#xC9C4;&#xD589;&#xD558;&#xB2E4;&#xBCF4;&#xBA74; Lambda &#xBC30;&#xD3EC; &#xD6C4; &#xACB0;&#xACFC;&#xAC00; &#xB2E4;&#xB978;&#xAC78; &#xBCF4;&#xACE0; &#xB610; &#xB2E4;&#xC2DC; &#xC0BD;&#xC9C8;&#xC744; &#xD574;&#xC57C;&#xD560; &#xC218; &#xC788;&#xB2E4;. &#xADF8;&#xB7EC;&#xB2C8; &#xC77C;&#xB2E8; &#xB3D9;&#xC791;&#xD558;&#xB294;&#xAC8C; &#xD655;&#xC778;&#xB418;&#xBA74; Lambda&#xB85C; &#xBC30;&#xD3EC;&#xD55C; &#xD6C4; &#xADF8; &#xACB0;&#xACFC;&#xB97C; &#xD655;&#xC778;&#xD574;&#xBCF4;&#xACE0; &#xC9C4;&#xD589;&#xD558;&#xB294;&#xAC8C; &#xC88B;&#xB2E4;. &#xB9C8;&#xCE58;&#xBA70;&#x2026; &#xC798;&#xBABB;&#xB418;&#xC5C8;&#xAC70;&#xB098;, &#xBCC0;&#xACBD;&#xB41C; &#xC810;, &#xAE30;&#xD0C0; &#xCD94;&#xAC00; &#xC0AC;&#xD56D;&#xC5D0; &#xB300;&#xD55C; &#xD53C;&#xB4DC;&#xBC31;&#xC740; &#xC5B8;&#xC81C;&#xB098; &#xD658;&#xC601;&#xD569;&#xB2C8;&#xB2E4;. - seokjoon.yun@gmail.com","categories":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/categories/AWS/"},{"name":"Lambda","slug":"AWS/Lambda","permalink":"http://DevStarSJ.github.io/categories/AWS/Lambda/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/tags/AWS/"},{"name":"Lambda","slug":"Lambda","permalink":"http://DevStarSJ.github.io/tags/Lambda/"},{"name":"APIGateway","slug":"APIGateway","permalink":"http://DevStarSJ.github.io/tags/APIGateway/"}]},{"title":"AWS Lambda에 Python Slack Chatbot을 통해서 미세먼지 대기정보 알림이 만들기","slug":"Lambda.Chatbot.01","date":"2017-03-25T15:00:00.000Z","updated":"2017-04-23T09:23:32.000Z","comments":true,"path":"2017/03/26/Lambda.Chatbot.01/","link":"","permalink":"http://DevStarSJ.github.io/2017/03/26/Lambda.Chatbot.01/","excerpt":"","text":"AWS Lambda&#xC5D0; Python Slack Chatbot&#xC744; &#xD1B5;&#xD574;&#xC11C; &#xBBF8;&#xC138;&#xBA3C;&#xC9C0; &#xB300;&#xAE30;&#xC815;&#xBCF4; &#xC54C;&#xB9BC;&#xC774; &#xB9CC;&#xB4E4;&#xAE30; Lambda&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; Slack&#xC6A9; Chatbot&#xC744; &#xB9CC;&#xB4E4;&#xC5B4; &#xBCF4;&#xC558;&#xB2E4;. &#xA0; &#xAC1C;&#xBC1C;&#xC5B8;&#xC5B4;&#xB85C;&#xB294; Python&#xC744; &#xC0AC;&#xC6A9;&#xD588;&#xB2E4;. Lambda&#xC5D0;&#xB294; Python 2.7&#xB9CC; &#xC9C0;&#xC6D0;&#xB418;&#xC5B4;&#xC11C; &#xC791;&#xC5C5;&#xD558;&#xBA74;&#xC11C;&#xB3C4; &#xBD88;&#xD3B8;&#xD55C; &#xC810;&#xC774; &#xB9CE;&#xC558;&#xB2E4;. &#xD2B9;&#xD788; &#xCC57;&#xBD07;&#xC774;&#xB2E4;&#xBCF4;&#xB2C8; &#xC720;&#xB2C8;&#xCF54;&#xB4DC;(&#xD55C;&#xAE00;) &#xCC98;&#xB9AC;&#xAC00; &#xD544;&#xC218;&#xC5EC;&#xC11C;&#xB2E4;. (Node.JS&#xB294; 6.1&#xAE4C;&#xC9C0; &#xC9C0;&#xC6D0;&#xD574;&#xC8FC;&#xB294;&#xB370;&#x2026; Python&#xB3C4; 3&#xC744; &#xBE68;&#xB9AC; &#xC9C0;&#xC6D0;&#xD574;&#xC8FC;&#xBA74; &#xC88B;&#xACA0;&#xB2E4;.) &#xC608;&#xC81C;&#xB85C; &#xB9CC;&#xB4E4;&#xC5B4;&#xBCF8; &#xCC57;&#xBD07;&#xC740; &#xC11C;&#xC6B8;&#xC2DC; &#xC885;&#xB85C;&#xAD6C;&#xC758; &#xB300;&#xAE30;&#xC0C1;&#xD0DC;&#xB97C; &#xC54C;&#xB824;&#xC8FC;&#xB294; &#xAE30;&#xB2A5;&#xC744; &#xC81C;&#xACF5;&#xD55C;&#xB2E4;. &#xB9E4;&#xC77C; &#xC544;&#xCE68; 5&#xC2DC; 20&#xBD84;(&#xB0B4; &#xAE30;&#xC0C1;&#xC2DC;&#xAC04;)&#xACFC; &#xC624;&#xD6C4; 12&#xC2DC; 20&#xBD84;(&#xC810;&#xC2EC; &#xBA39;&#xC73C;&#xB7EC; &#xAC00;&#xAE30; &#xC804;&#xC5D0; &#xC9C0;&#xD558;&#xC2DD;&#xB2F9;&#xC5D0;&#xC11C; &#xBA39;&#xC744;&#xC9C0; &#xBC16;&#xC5D0; &#xB098;&#xAC00;&#xC11C; &#xBA39;&#xC744;&#xC9C0; &#xC0DD;&#xAC01;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;)&#xC5D0; &#xC54C;&#xB824;&#xC8FC;&#xB3C4;&#xB85D; &#xC124;&#xC815;&#xD558;&#xC600;&#xB2E4;. &#xC194;&#xC9C1;&#xD788; &#xC624;&#xD6C4; 12&#xC2DC;&#xC5D0; &#xAD73;&#xC774; 20&#xBD84;&#xC744; &#xD55C; &#xC774;&#xC720;&#xB294; CloudWatch&#xC758; event &#xC0DD;&#xC131;&#xC744; &#xD3B8;&#xD558;&#xAC8C; &#xD558;&#xAE30;&#xC704;&#xD574;&#xC11C;&#xC774;&#xB2E4;. &#xC194;&#xC9C1;&#xD788; 12&#xC2DC; 40&#xBD84;&#xC5D0; &#xC54C;&#xB824;&#xC8FC;&#xB294;&#xAC8C; &#xB354; &#xC88B;&#xC744;&#xAC83; &#xAC19;&#xAE34;&#xD558;&#xC9C0;&#xB9CC;, &#xADF8;&#xAC83; &#xB54C;&#xBB38;&#xC5D0; event&#xB97C; &#xCD94;&#xAC00;&#xB85C; &#xC0DD;&#xC131;&#xD558;&#xAE30;&#xC5D4; &#xADC0;&#xCC2E;&#xAE30;&#xB3C4; &#xD558;&#xACE0;, &#xAD00;&#xB9AC;&#xD3EC;&#xC778;&#xD2B8;&#xAC00; &#xB450;&#xAD70;&#xB370;&#xAC00; &#xC0DD;&#xAE30;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xADF8;&#xB0E5; 20&#xBD84;&#xC73C;&#xB85C; &#xD1B5;&#xC77C;&#xD588;&#xB2E4;. &#xCC57;&#xBD07; &#xAD6C;&#xD604;&#xC744; &#xC704;&#xD55C; Lambda&#xB97C; 2&#xAC1C;&#xB85C; &#xB098;&#xB204;&#xC5C8;&#xB2E4;. Slack&#xC5D0; &#xBA54;&#xC138;&#xC9C0;&#xB97C; &#xC804;&#xB2EC;&#xD574;&#xC8FC;&#xB294; Lambda &#xD06C;&#xB864;&#xB9C1;&#xD558;&#xC5EC; &#xB300;&#xAE30;&#xC0C1;&#xD0DC; &#xB370;&#xC774;&#xD130;&#xB97C; &#xBF51;&#xC544;&#xB0B4;&#xACE0; &#xBA54;&#xC138;&#xC9C0;&#xB97C; &#xB9CC;&#xB4DC;&#xB294; Lambda &#xD06C;&#xB864;&#xB9C1; Lambda&#xB294; SNS&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xBA54;&#xC138;&#xC9C0; &#xC804;&#xB2EC; Lambda&#xB97C; &#xD638;&#xCD9C;&#xD55C;&#xB2E4;. &#xD06C;&#xB864;&#xB9C1; Lambda&#xB294; CloudWatch&#xC758; event&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xD638;&#xCD9C;&#xB41C;&#xB2E4;. &#xADF8; &#xACFC;&#xC815;&#xC744; &#xADF8;&#xB9BC;&#xC73C;&#xB85C; &#xD45C;&#xD604;&#xD558;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xB2E4;. &#xC774;&#xC804;&#xC5D0; &#xD45C;&#xC2A4;&#xD305;&#xD55C; &#xB0B4;&#xC6A9;&#xC5D0; &#xC788;&#xB294; &#xAC83;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xC124;&#xBA85;&#xC744; &#xC0DD;&#xB7B5;&#xD558;&#xACA0;&#xB2E4;. &#xD574;&#xB2F9; &#xB0B4;&#xC6A9;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xC544;&#xB798; &#xB9C1;&#xD06C;&#xB97C; &#xCC38;&#xACE0;&#xD558;&#xBA74; &#xAD00;&#xB828; &#xB0B4;&#xC6A9;&#xC774; &#xC788;&#xB2E4;. Python &#xCF54;&#xB4DC;&#xB97C; Lambda&#xC5D0; &#xBC30;&#xD3EC;&#xD558;&#xB294; &#xBC29;&#xBC95; : Lambda Python Packaging Lambda -&gt; SNS -&gt; Lambda &#xB85C; &#xD638;&#xCD9C;&#xD558;&#xB294; &#xBC29;&#xBC95; : Lambda&#xC5D0;&#xC11C; Lambda&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xB294; &#xBC29;&#xBC95; 1. Slack&#xC5D0; &#xBA54;&#xC138;&#xC9C0; &#xBCF4;&#xB0B4;&#xAE30; &#xBA3C;&#xC800; Slack Bot&#xC744; &#xB9CC;&#xB4E4;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; API Token&#xC774; &#xD544;&#xC694;&#xD558;&#xB2E4;. &#xC790;&#xC138;&#xD55C; &#xC0DD;&#xC131;&#xBC29;&#xBC95;&#xC740; &#xAC80;&#xC0C9;&#xD558;&#xBA74; &#xB9CE;&#xC774; &#xB098;&#xC624;&#xB2C8;&#xAE50; &#xC0DD;&#xB7B5;&#xD558;&#xACA0;&#xB2E4;. &#xAC04;&#xB7B5;&#xD558;&#xAC8C; &#xC124;&#xBA85;&#xC5C6;&#xC774; &#xBC29;&#xBC95;&#xB9CC; &#xC801;&#xACA0;&#xB2E4;. Slack&#xC5D0;&#xC11C; &#xCC44;&#xB110;&#xBA85; &#xD074;&#xB9AD;&#xD574;&#xC11C; &#xB098;&#xC624;&#xB294; &#xBA54;&#xB274;&#xC5D0;&#xC11C; Apps &amp; intergrations &#xD074;&#xB9AD; Bots &#xAC80;&#xC0C9;&#xD574;&#xC11C; &#xD074;&#xB9AD; Add Configuration&#xD074;&#xB9AD; &#xC548;&#xB0B4;&#xB300;&#xB85C; &#xCB49; &#xC124;&#xC815;&#xD558;&#xACE0; &#xB098;&#xC624;&#xB294; &#xD654;&#xBA74;&#xC5D0;&#xC11C; API Token&#xAC12;&#xC744; &#xBCF4;&#xACE0; &#xAE30;&#xB85D;&#xD574; &#xB193;&#xC74C; &#xC774;&#xC81C; Slack&#xC5D0; &#xBA54;&#xC138;&#xC9C0;&#xB97C; &#xBCF4;&#xB0B4;&#xB294; Python &#xD568;&#xC218;&#xB97C; &#xBA3C;&#xC800; &#xB9CC;&#xB4E4;&#xC5B4; &#xBCF4;&#xC790;. &#xB9CC;&#xC57D; Python &#xBC84;&#xC804;&#xC774; 2.7&#xC774; &#xC544;&#xB2CC; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; virtualenv&#xB97C; &#xD1B5;&#xD574;&#xC11C; 2.7 &#xD658;&#xACBD;&#xC73C;&#xB85C; &#xB9CC;&#xB4E4;&#xC5B4; &#xB193;&#xACE0; &#xC791;&#xC5C5;&#xC744; &#xD574;&#xC57C;&#xD55C;&#xB2E4;. &#xADF8; &#xBC29;&#xBC95;&#xC740; Lambda Python Packaging &#xB9C1;&#xD06C;&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xD655;&#xC778;&#xD558;&#xAE30; &#xBC14;&#xB780;&#xB2E4;. slacker&#xB77C;&#xB294; &#xD328;&#xD0A4;&#xC9C0;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xBA74; &#xC815;&#xB9D0; &#xC27D;&#xAC8C; &#xC791;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xC6B0;&#xB9AC;&#xB294; Lambda&#xC5D0; &#xBC30;&#xD3EC;&#xD574;&#xC57C;&#xD558;&#xB2C8; pip&#xB85C; &#xD328;&#xD0A4;&#xC9C0;&#xB97C; &#xC124;&#xCE58;&#xD560; &#xB54C; &#xD574;&#xB2F9; &#xD3F4;&#xB354;&#xC5D0; &#xC124;&#xCE58;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. pip install slacker -t . &#xC774;&#xC81C; index.py&#xB77C;&#xB294; &#xD30C;&#xC77C;&#xBA85;&#xC73C;&#xB85C; &#xC544;&#xB798; &#xCF54;&#xB4DC;&#xB97C; &#xC785;&#xB825;&#xD55C;&#xB2E4;. 12345678910111213141516171819# -*- coding: utf-8 -*-from slacker import Slackertoken = &apos;{Slack Bot API Token}&apos;slack = Slacker(token)def handler(event, context): ch = event[&quot;channel&quot;] message = event[&quot;message&quot;] slack.chat.post_message(ch, msg)if __name__ == &apos;__main__&apos;: event= {}; event[&quot;channel&quot;] = &quot;#general&quot;; event[&quot;message&quot;] = &quot;&#xBA54;&#xC778; &#xD14C;&#xC2A4;&#xD2B8;&quot;; handler(event, None); &#xC2E4;&#xD589;&#xC744; &#xD588;&#xC744; &#xB54C; Slack&#xC758; #general &#xCC44;&#xB110;&#xC5D0; &#xBA54;&#xC138;&#xC9C0;&#xAC00; &#xCD9C;&#xB825;&#xB418;&#xBA74; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xB3D9;&#xC791;&#xD558;&#xB294; &#xAC83;&#xC774;&#xB2E4;. python index.py &#xC774;&#xC81C; Lambda&#xB85C; &#xC62C;&#xB824;&#xC11C; &#xD14C;&#xC2A4;&#xD2B8; &#xD574;&#xBCF4;&#xC790;. zip -r bot.zip . &#xC704; &#xBA85;&#xB839;&#xC5B4;&#xB85C; &#xC555;&#xCD95;&#xC744; &#xD55C; &#xD6C4;&#xC5D0; Lambda&#xC5D0; &#xC62C;&#xB824;&#xC11C; &#xBC30;&#xD3EC;&#xB97C; &#xD55C; &#xD6C4; &#xD14C;&#xC2A4;&#xD2B8; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xD615;&#xD0DC;&#xB85C; &#xB123;&#xC740; &#xD6C4; &#xC2E4;&#xD589;&#xD574;&#xC11C; Slack&#xC5D0; &#xBA54;&#xC138;&#xC9C0;&#xAC00; &#xB098;&#xC624;&#xBA74; &#xC131;&#xACF5;&#xD55C; &#xAC83;&#xC774;&#xB2E4;. 1234{ &quot;channel&quot;: &quot;#general&quot;, &quot;message&quot;: &quot;&#xB78C;&#xB2E4;&#xB78C;&#xB2E4; &#xD14C;&#xC2A4;&#xD2B8;&quot;} 2. &#xB300;&#xAE30;&#xC815;&#xBCF4;&#xB97C; &#xC5BB;&#xAE30;&#xC704;&#xD574;&#xC11C; &#xC6F9; &#xD06C;&#xB864;&#xB9C1;&#xD558;&#xAE30; &#xC704;&#xC5D0; &#xC791;&#xC131;&#xD55C; &#xCF54;&#xB4DC;&#xC640;&#xB294; &#xB2E4;&#xB978; &#xD3F4;&#xB354;&#xC5D0;&#xC11C; &#xC791;&#xC5C5;&#xD558;&#xACA0;&#xB2E4;. &#xC65C;&#xB0D0;&#xBA74; &#xB2E4;&#xB978; Lambda&#xB85C; &#xBC30;&#xD3EC;&#xD560; &#xCF54;&#xB4DC;&#xB77C; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xB294; &#xD328;&#xD0A4;&#xC9C0;&#xAE4C;&#xC9C0; &#xAC19;&#xC774; &#xD3EC;&#xD568;&#xB418;&#xC5B4; &#xBC30;&#xD3EC;&#xD560; &#xC6A9;&#xB7C9;&#xC774; &#xCEE4;&#xC9C0;&#xB294;&#xAC78; &#xD53C;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB2E4;. &#xC11C;&#xC6B8;&#xD2B9;&#xBCC4;&#xC2DC; &#xB300;&#xAE30;&#xD658;&#xACBD;&#xC815;&#xBCF4;(http://cleanair.seoul.go.kr/air_city.htm?method=measure)&#xC5D0;&#xC11C; &#xAD00;&#xB828; &#xB370;&#xC774;&#xD130;&#xB97C; &#xD06C;&#xB864;&#xB9C1;&#xD588;&#xB2E4;. (&#xB124;&#xC774;&#xBC84;&#xB294; &#xD06C;&#xB864;&#xB9C1;&#xC744; &#xB9C9;&#xC544;&#xB194;&#xC11C;&#x2026; &#x3160;&#x3160; &#xC544;&#xB9C8; &#xC801;&#xC808;&#xD788; User-Agent&#xAC12;&#xC744; &#xB123;&#xB294;&#xB2E4;&#xB358;&#xC9C0;, headers &#xC815;&#xBCF4;&#xB97C; &#xAC10;&#xCABD;&#xAC19;&#xC774; &#xC18D;&#xC778;&#xB2E4;&#xB358;&#xC9C0;, &#xC6F9;&#xBE0C;&#xB77C;&#xC6B0;&#xC800; &#xC5D4;&#xC9C4;&#xC744; &#xC774;&#xC6A9;&#xD55C;&#xB2E4;&#xB358;&#xC9C0; &#xD558;&#xB294; &#xBC29;&#xBC95;&#xC744; &#xC774;&#xC6A9;&#xD558;&#xBA74; &#xB418;&#xACA0;&#xC9C0;&#xB9CC;&#x2026; &#xBB50; &#xB300;&#xB2E8;&#xD55C; &#xAC70;&#xB77C;&#xACE0; &#xADF8;&#xB0E5; &#xB2E4;&#xB978; &#xACF3;&#xC744; &#xC120;&#xD0DD;&#xD588;&#xB2E4;. &#xCD5C;&#xB300;&#xD55C; &#xC27D;&#xAC8C; &#xC27D;&#xAC8C;&#x2026;) &#xC6F9;&#xD398;&#xC774;&#xC9C0; &#xC18C;&#xC2A4;&#xB97C; &#xAC00;&#xC838;&#xC624;&#xAE30; &#xC704;&#xD574;&#xC11C; requests&#xB97C; &#xC0AC;&#xC6A9;&#xD588;&#xC73C;&#xBA70; &#xD574;&#xB2F9; &#xC18C;&#xC2A4;&#xB97C; &#xBD84;&#xC11D;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C; beautifulsoup&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC600;&#xB2E4;. &#xADF8;&#xB3D9;&#xC548; &#xB9D0;&#xB85C;&#xB9CC; &#xB4E3;&#xB358; beautifulsoup&#xB97C; &#xCC98;&#xC74C; &#xC368;&#xBD24;&#xB294;&#xB370;, 100% &#xB9C8;&#xC74C;&#xC5D0; &#xB4E4;&#xC9C0;&#xB294; &#xC54A;&#xC558;&#xC9C0;&#xB9CC; &#xADF8;&#xB798;&#xB3C4; &#xC6D0;&#xD558;&#xB294; &#xAE30;&#xB2A5;&#xB4E4;&#xC774; &#xAF64; &#xB9CE;&#xC774; &#xAD6C;&#xD604;&#xB418;&#xC5B4; &#xC788;&#xC5C8;&#xB2E4;. &#xD14D;&#xC2A4;&#xD2B8;&#xB97C; &#xD55C;&#xC904; &#xD55C;&#xC904; &#xC77D;&#xC5B4;&#xAC00;&#xBA74;&#xC11C; &#xBD84;&#xC11D;&#xD574;&#xC57C;&#xD558;&#xB294; &#xC77C;&#xC744; &#xB9CE;&#xC774; &#xC904;&#xC5EC;&#xC8FC;&#xC5C8;&#xB2E4;. pip install requests beautifulsoup -t . &#xC704; &#xD398;&#xC774;&#xC9C0;&#xC5D0;&#xC11C; &#xAC1C;&#xBC1C;&#xC790; &#xB3C4;&#xAD6C;&#xB97C; &#xC5F4;&#xC5B4;&#xC11C; &#xC18C;&#xC2A4;&#xB3C4; &#xC0B4;&#xD3B4;&#xBCF4;&#xACE0;&#x2026; &#xAC01; element &#xBCC4;&#xB85C; &#xD074;&#xB9AD;&#xD574;&#xC11C; &#xC801;&#xC808;&#xD55C; id&#xAC12;&#xB3C4; &#xCC3E;&#xC544;&#xBCF4;&#xACE0;&#x2026; &#xC774;&#xB798;&#xC800;&#xB798; &#xD574;&#xBD24;&#xB294;&#xB370;&#x2026; &#xD55C;&#xBC29;&#xC5D0; &#xB531;! &#xBF51;&#xC544; &#xB0BC; &#xC218; &#xC788;&#xB294; &#xAD6C;&#xC870;&#xAC00; &#xC544;&#xB2C8;&#xB2E4;. &#xADF8;&#xB0E5; &#xC77C;&#xB2E8; &#xBC1B;&#xC544;&#xB193;&#xACE0; &#xB178;&#xAC00;&#xB2E4;&#xB85C; &#xCC3E;&#xC544;&#xC57C; &#xACA0;&#xB2E4;. 1234567891011from BeautifulSoup import BeautifulSoupimport jsonimport requestsURL = &apos;http://cleanair.seoul.go.kr/air_city.htm?method=measure&apos;response = requests.get(URL)html_doc = response.textsoup = BeautifulSoup(html_doc)print soup.prettify() &#xB85C; &#xC77C;&#xB2E8; &#xCC0D;&#xC5B4;&#xBCF4;&#xC790;. &#xC5EC;&#xAE30;&#xC11C; &#xBB58; &#xBCF4;&#xACA0;&#xB2E4;&#xB294;&#xAC8C; &#xC544;&#xB2C8;&#xB77C; &#xADF8;&#xB0E5; &#xC77C;&#xB2E8; &#xC798; &#xB3D9;&#xC791;&#xD558;&#xB098; &#xBCF4;&#xC790;. &#xAC81;&#xB098; &#xAE38;&#xAC8C; html&#xC774; &#xC6B0;&#xB8E8;&#xB8E8; &#xCD9C;&#xB825;&#xB418;&#xBA74; &#xC131;&#xACF5;&#xD55C; &#xAC83;&#xC774;&#xB2E4;. &#xB2E4;&#xC2DC;&#xD55C;&#xBC88; &#xAC1C;&#xBC1C;&#xC790; &#xB3C4;&#xAD6C;&#xB85C; &#xD574;&#xB2F9;&#xD398;&#xC774;&#xC9C0;&#xB97C; &#xBCF4;&#xB2C8; &#xC544;&#xB798;&#xCABD; &#xD45C; &#xBD80;&#xBD84;&#xC5D0; &#xC11C;&#xC6B8;&#xC2DC; &#xAC01; &#xB3C4;&#xBCC4;&#xB85C; &#xB300;&#xAE30;&#xC0C1;&#xD0DC; &#xAC12;&#xB4E4;&#xC774; &#xC788;&#xB2E4;. &lt;table&gt; &#xD0DC;&#xADF8; &#xC815;&#xBCF4;&#xB4E4;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xAC12;&#xC744; &#xCD94;&#xCD9C;&#xD574; &#xBCF4;&#xC790;. 12tables = soup.findAll(&apos;table&apos;)print tables 3&#xBC88;&#xC9F8; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xC6D0;&#xD558;&#xB294; &#xC815;&#xBCF4;&#xAC00; &#xC788;&#xB2E4;. &#xAC01; &lt;tr&gt;&#xBCC4;&#xB85C; &#xC0B4;&#xD3B4;&#xBD10;&#xC11C; &#xC6B0;&#xB9AC;&#xAC00; &#xC6D0;&#xD558;&#xB294; &#xC704;&#xCE58;(&#xC885;&#xB85C;&#xAD6C;)&#xC5D0; &#xAD00;&#xD55C; &#xC815;&#xBCF4;&#xB9CC; &#xCC3E;&#xC544;&#xBCF4;&#xC790;. 123456dataTable = tables[2]trs = dataTable.findAll(&apos;tr&apos;)for tr in trs: if &apos;&#xC885;&#xB85C;&#xAD6C;&apos; in str(tr): print tr; &#xC6B0;&#xB9AC;&#xAC00; &#xC6D0;&#xD558;&#xB294; &#xC815;&#xBCF4;&#xB294; &#xC800;&#xAE30;&#xC5D0; &#xB2E4; &#xC788;&#xB294;&#xAC8C; &#xD655;&#xC778;&#xB418;&#xC5C8;&#xB2E4;. &#xC774;&#xC81C; &#xC774;&#xAC78; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xBA54;&#xC138;&#xC9C0;&#xB97C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC11C; &#xCD9C;&#xB825;&#xD574; &#xBCF4;&#xACA0;&#xB2E4;. 123456789101112dataTable = tables[2]trs = dataTable.findAll(&apos;tr&apos;)for tr in trs: if &apos;&#xC885;&#xB85C;&#xAD6C;&apos; in str(tr): tds = tr.findAll(&apos;td&apos;) message1 = u&apos;&#xC885;&#xB85C;&#xAD6C;&#xC758; &#xD604;&#xC7AC; &#xD1B5;&#xD569;&#xB300;&#xAE30;&#xD658;&#xACBD;&#xC9C0;&#xC218;&#xB294; {}({}) &#xC785;&#xB2C8;&#xB2E4;.&apos;.format(tds[7].getText(), tds[8].getText()) message2 = u&apos;&#xBBF8;&#xC138;&#xBA3C;&#xC9C0;: {}&#x338D;/&#x33A5;, &#xCD08;&#xBBF8;&#xC138;&#xBA3C;&#xC9C0;: {}&#x338D;/&#x33A5;, &#xC624;&#xC874;: {}ppm, &#xC774;&#xC0B0;&#xD654;&#xC9C8;&#xC18C;: {}ppm, &#xC77C;&#xC0B0;&#xD654;&#xD0C4;&#xC18C;: {}ppm, &#xC544;&#xD669;&#xC0B0;&#xAC00;&#xC2A4;: {}ppm&apos;.format(tds[1].getText(), tds[2].getText(), tds[3].getText(), tds[4].getText(), tds[5].getText(), tds[6].getText()) messageTotal = message1 + u&quot;(&quot; + message2 + &quot;)&quot; print messageTotal &#xC885;&#xB85C;&#xAD6C;&#xC758; &#xD604;&#xC7AC; &#xD1B5;&#xD569;&#xB300;&#xAE30;&#xD658;&#xACBD;&#xC9C0;&#xC218;&#xB294; &#xBCF4;&#xD1B5;(70) &#xC785;&#xB2C8;&#xB2E4;.(&#xBBF8;&#xC138;&#xBA3C;&#xC9C0;: 44&#x338D;/&#x33A5;, &#xCD08;&#xBBF8;&#xC138;&#xBA3C;&#xC9C0;: 25&#x338D;/&#x33A5;, &#xC624;&#xC874;: 0.036ppm, &#xC774;&#xC0B0;&#xD654;&#xC9C8;&#xC18C;: 0.033ppm, &#xC77C;&#xC0B0;&#xD654;&#xD0C4;&#xC18C;: 0.5ppm, &#xC544;&#xD669;&#xC0B0;&#xAC00;&#xC2A4;: 0.004ppm) &#xC774;&#xC81C;&#xAE4C;&#xC9C0;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xD55C;&#xBC88; &#xC815;&#xB9AC;&#xD574; &#xBCF4;&#xACA0;&#xB2E4;. 1234567891011121314151617181920212223242526272829303132# -*- coding: utf-8 -*-from BeautifulSoup import BeautifulSoupimport jsonimport requestsURL = &apos;http://cleanair.seoul.go.kr/air_city.htm?method=measure&apos;def GetInfo(gu): response = requests.get(URL) html_doc = response.text soup = BeautifulSoup(html_doc) tables = soup.findAll(&apos;table&apos;); dataTable = tables[2] trs = dataTable.findAll(&apos;tr&apos;) for tr in trs: if gu in str(tr): return tr;def MakeMessage(data): tds = data.findAll(&apos;td&apos;) message1 = u&apos;&#xC885;&#xB85C;&#xAD6C;&#xC758; &#xD604;&#xC7AC; &#xD1B5;&#xD569;&#xB300;&#xAE30;&#xD658;&#xACBD;&#xC9C0;&#xC218;&#xB294; {}({}) &#xC785;&#xB2C8;&#xB2E4;.&apos;.format(tds[7].getText(), tds[8].getText()) message2 = u&apos;&#xBBF8;&#xC138;&#xBA3C;&#xC9C0;: {}&#x338D;/&#x33A5;, &#xCD08;&#xBBF8;&#xC138;&#xBA3C;&#xC9C0;: {}&#x338D;/&#x33A5;, &#xC624;&#xC874;: {}ppm, &#xC774;&#xC0B0;&#xD654;&#xC9C8;&#xC18C;: {}ppm, &#xC77C;&#xC0B0;&#xD654;&#xD0C4;&#xC18C;: {}ppm, &#xC544;&#xD669;&#xC0B0;&#xAC00;&#xC2A4;: {}ppm&apos;.format(tds[1].getText(), tds[2].getText(), tds[3].getText(), tds[4].getText(), tds[5].getText(), tds[6].getText()) messageTotal = message1 + u&quot;(&quot; + message2 + &quot;)&quot; return messageTotalif __name__ == &quot;__main__&quot;: print MakeMessage(GetInfo(&apos;&#xC885;&#xB85C;&#xAD6C;&apos;)) 3. SNS&#xC744; &#xD1B5;&#xD574;&#xC11C; Slack Lambda &#xD638;&#xCD9C;&#xD558;&#xAE30; &#xC790;&#xC138;&#xD55C; &#xC124;&#xBA85;&#xC740; Lambda&#xC5D0;&#xC11C; Lambda&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xB294; &#xBC29;&#xBC95; &#xB9C1;&#xD06C;&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xD655;&#xC778;&#xD558;&#xAE30; &#xBC14;&#xB780;&#xB2E4;. &#xD574;&#xB2F9; SNS&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xBA54;&#xC138;&#xC9C0;&#xB97C; &#xBCF4;&#xB0B4;&#xAE30; &#xC704;&#xD574;&#xC11C; SNS&#xC758; ARN &#xC8FC;&#xC18C;&#xB97C; &#xC5B4;&#xB514;&#xC5D0; &#xC801;&#xC5B4; &#xB193;&#xC544;&#xC57C; &#xD55C;&#xB2E4;. SNS &#xC5D0;&#xC11C; Lambda &#xB85C; &#xC804;&#xB2EC;&#xB418;&#xB294; &#xBA54;&#xC138;&#xC9C0; &#xD615;&#xD0DC;&#xB97C; &#xCC98;&#xB9AC;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; &#xC704; &#xCF54;&#xB4DC;&#xB97C; &#xC218;&#xC815;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. &#xCC38;&#xACE0;&#xB85C; Subject&#xB85C; &#xCC44;&#xB110;&#xBA85;&#xC744; &#xC785;&#xB825;&#xBC1B;&#xACE0; Message &#xC804;&#xB2EC;&#xD560; &#xBA54;&#xC138;&#xC9C0;&#xB97C; &#xC785;&#xB825;&#xBC1B;&#xB3C4;&#xB85D; &#xC124;&#xC815;&#xD558;&#xC600;&#xB2E4;. 12345678910111213141516171819202122232425262728# -*- coding: utf-8 -*-from slacker import Slackertoken = &apos;{Slack Bot API Token}&apos;slack = Slacker(token)def handler(event, context): keys = event.keys() ch = &quot;&quot; message = &quot;&quot; if &apos;channel&apos; in keys: ch = event[&quot;channel&quot;] msg = event[&quot;message&quot;] else: ch = event[&apos;Records&apos;][0][&apos;Sns&apos;][&apos;Subject&apos;]; msg = event[&apos;Records&apos;][0][&apos;Sns&apos;][&apos;Message&apos;]; slack.chat.post_message(ch, msg)if __name__ == &apos;__main__&apos;: event= {}; event[&quot;channel&quot;] = &quot;#general&quot;; event[&quot;message&quot;] = &quot;&#xBA54;&#xC778; &#xD14C;&#xC2A4;&#xD2B8;&quot;; handler(event, None); 4. &#xB300;&#xAE30;&#xC815;&#xBCF4; Lambda&#xC5D0;&#xC11C; SNS&#xB85C; &#xBA54;&#xC138;&#xC9C0; &#xBCF4;&#xB0B4;&#xAE30; 2&#xBC88; &#xD56D;&#xBAA9;&#xC5D0;&#xC11C; &#xB9CC;&#xB4E0; &#xCF54;&#xB4DC;&#xC5D0; SNS&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xBA54;&#xC138;&#xC9C0;&#xB97C; &#xC804;&#xB2EC;&#xD558;&#xB294; &#xCF54;&#xB4DC;&#xB97C; &#xCD94;&#xAC00;&#xD574; &#xBCF4;&#xC790;. &#xBA3C;&#xC800; AWS &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xAE30; &#xC704;&#xD574; boto&#xB97C; &#xC124;&#xCE58;&#xD558;&#xC790;. pip install boto -t . 1234567891011121314151617181920212223242526272829303132333435363738394041424344# -*- coding: utf-8 -*-from BeautifulSoup import BeautifulSoupfrom datetime import datetimeimport jsonimport requestsimport boto.snsURL = &apos;http://cleanair.seoul.go.kr/air_city.htm?method=measure&apos;REGION = &apos;{&#xB9AC;&#xC804;}&apos;TOPIC = &apos;{SNS ARN &#xC8FC;&#xC18C;}&apos;conn = boto.sns.connect_to_region( REGION )def GetInfo(gu): response = requests.get(URL) html_doc = response.text soup = BeautifulSoup(html_doc) tables = soup.findAll(&apos;table&apos;); dataTable = tables[2] trs = dataTable.findAll(&apos;tr&apos;) for tr in trs: if gu in str(tr): return tr;def MakeMessage(data): tds = data.findAll(&apos;td&apos;) message1 = u&apos;&#xC885;&#xB85C;&#xAD6C;&#xC758; &#xD604;&#xC7AC; &#xD1B5;&#xD569;&#xB300;&#xAE30;&#xD658;&#xACBD;&#xC9C0;&#xC218;&#xB294; {}({}) &#xC785;&#xB2C8;&#xB2E4;.&apos;.format(tds[7].getText(), tds[8].getText()) message2 = u&apos;&#xBBF8;&#xC138;&#xBA3C;&#xC9C0;: {}&#x338D;/&#x33A5;, &#xCD08;&#xBBF8;&#xC138;&#xBA3C;&#xC9C0;: {}&#x338D;/&#x33A5;, &#xC624;&#xC874;: {}ppm, &#xC774;&#xC0B0;&#xD654;&#xC9C8;&#xC18C;: {}ppm, &#xC77C;&#xC0B0;&#xD654;&#xD0C4;&#xC18C;: {}ppm, &#xC544;&#xD669;&#xC0B0;&#xAC00;&#xC2A4;: {}ppm&apos;.format(tds[1].getText(), tds[2].getText(), tds[3].getText(), tds[4].getText(), tds[5].getText(), tds[6].getText()) messageTotal = message1 + u&quot;(&quot; + message2 + &quot;)&quot; return messageTotaldef handler(event, context): msg = MakeMessage(GetInfo(&apos;&#xC885;&#xB85C;&#xAD6C;&apos;)) pub = conn.publish( topic = TOPIC, subject =&quot;#general&quot; ,message = msg )if __name__ == &quot;__main__&quot;: handler(None, None) Lambda&#xB85C; &#xC62C;&#xB9AC;&#xAE30; &#xC804;&#xC5D0; &#xD14C;&#xC2A4;&#xD2B8;&#xB85C; &#xC2E4;&#xD589;&#xD574; &#xBCF8; &#xD6C4; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xC2E4;&#xD589;&#xB418;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD574; &#xBCF4;&#xC790;. &#xC704; &#xCF54;&#xB4DC; &#xC2E4;&#xD589; &#xD6C4; Slcak&#xC744; &#xD1B5;&#xD574;&#xC11C; &#xBA54;&#xC138;&#xC9C0;&#xAC00; &#xC804;&#xB2EC;&#xB418;&#xC5C8;&#xB2E4;&#xBA74; &#xC131;&#xACF5;&#xD55C; &#xAC83;&#xC774;&#xB2E4;. &#xC704; &#xCF54;&#xB4DC;&#xB3C4; &#xD3F4;&#xB354; &#xC804;&#xCCB4;&#xB97C; &#xC555;&#xCD95;&#xD574;&#xC11C; Lambda&#xB85C; &#xBC30;&#xD3EC;&#xD558;&#xC790;. 5. CloudWatch&#xB97C; &#xD1B5;&#xD574;&#xC11C; event &#xC0DD;&#xC131;&#xD558;&#xAE30; CloudWatch&#xC758; event&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xD2B9;&#xC815; &#xC2DC;&#xC810;&#xC5D0; Lambda &#xB97C; &#xC2E4;&#xD589;&#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xB2E4;. CloudWatch -&gt; Events -&gt; Create rule Add taget&#xC744; &#xB20C;&#xB7EC;&#xC11C; &#xC704;&#xC5D0; &#xBC30;&#xD3EC;&#xD55C; Lambda&#xB97C; &#xC120;&#xD0DD; : &#xBCC4;&#xB3C4;&#xB85C; &#xC778;&#xC790;&#xB85C; &#xBC1B;&#xB294;&#xAC8C; &#xC5C6;&#xC73C;&#xBBC0;&#xB85C; &#xB098;&#xBA38;&#xC9C0; &#xC124;&#xC815;&#xB4E4;&#xC740; &#xAE30;&#xBCF8; &#xADF8;&#xB300;&#xB85C; &#xB460; Event Source&#xB97C; Schedule&#xB85C; &#xC120;&#xD0DD; Cron Expression : 20 3,20 * * ? *&#xB85C; &#xC785;&#xB825; (UTC &#xAE30;&#xC900; &#xB9E4;&#xC77C; 3&#xC2DC; 20&#xBD84;, 20&#xC2DC; 20&#xBD84;&#xC5D0; &#xC2E4;&#xD589;&#xC744; &#xC2DC;&#xD0A8;&#xB2E4;&#xB294; &#xB73B;) &#xC800;&#xC7A5;&#xC744; &#xD558;&#xBA74; &#xB05D;&#xC774;&#xB2E4;. &#xC774;&#xC81C; &#xC124;&#xC815;&#xD55C; &#xC2DC;&#xAC04;&#xC5D0; Lambda&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xC5B4;&#xC11C; Slack&#xC5D0; &#xBA54;&#xC138;&#xC9C0;&#xB97C; &#xC804;&#xB2EC;&#xD574; &#xC904; &#xAC83;&#xC774;&#xB2E4;. &#xD558;&#xB8E8;&#xAC00; &#xC9C0;&#xB09C; &#xC2DC;&#xC810;&#xC5D0; &#xD655;&#xC778;&#xD574;&#xBCF4;&#xB2C8; &#xC124;&#xC815;&#xD55C; &#xC2DC;&#xAC04;&#xC5D0; &#xAF2C;&#xBC15;&#xAF2C;&#xBC15; &#xC2E4;&#xD589; &#xC911;&#xC774;&#xB2E4;.","categories":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/categories/AWS/"},{"name":"Lambda","slug":"AWS/Lambda","permalink":"http://DevStarSJ.github.io/categories/AWS/Lambda/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/tags/AWS/"},{"name":"Lambda","slug":"Lambda","permalink":"http://DevStarSJ.github.io/tags/Lambda/"},{"name":"APIGateway","slug":"APIGateway","permalink":"http://DevStarSJ.github.io/tags/APIGateway/"},{"name":"Python","slug":"Python","permalink":"http://DevStarSJ.github.io/tags/Python/"}]},{"title":"Lambda에서 Lambda를 호출하는 방법","slug":"Lambda.invoke.Lambda","date":"2017-03-18T15:00:00.000Z","updated":"2017-04-23T09:24:55.000Z","comments":true,"path":"2017/03/19/Lambda.invoke.Lambda/","link":"","permalink":"http://DevStarSJ.github.io/2017/03/19/Lambda.invoke.Lambda/","excerpt":"","text":"Lambda에서 Lambda를 호출하는 방법AWS Lambda에서 Lambda를 호출하는 방법들에 대해서 소개하겠다. 언제 Lambda에서 Lambda를 호출하면 편리할까 ?첫째, 배치 성격의 작업을 여러 개로 나누어 병렬로 실행할 경우를 생각할 수 있다.Lambda 내에서 배치작업을 모두 다 실행시키도록 작성 할 수도 있겠지만,첫번째 Lambda에서 작업 전 필요한 준비작업을 한 후 이것을 다른 Lambda로 전달 할 수 있다.그 과정에서 다음 Lambda 1개에게 전달할게 아니라 비동기 invoke로 한 번에 여러 개의 Lambda를 생성하여 작업하면 전체 실행 시간을 줄일수 있을 것이다.(하지만 동시에 여러 Lambda가 실행될 경우 계정당 Lambda Limit 내에서 실행되도록 조정은 해야 한다.) 이 경우 AWS Step Functions 를 이용할 수도 있다.Step Functions를 사용하려고 살펴봤는데 아직까진 사용 사례도 없고, 그 과정에서의 비용도 있고, API Gateway와의 연동에 대해서도 확신이 없다.API Gateway에서 Step Function 호출을 지원한다는 글이 2017.02.15 에 올라오긴 했다. 둘째, 빠른 API 응답을 위해서 사용할 수 있다.Lambda를 만들었을 때의 원래 의도는 AWS 서비스 상에서의 event성 호출들에 대한 처리를 전적으로 할 목적이었다고 한다.하지만 API Gateway가 나온 이후로 Lambda를 이용하여 Serverless API를 구축하는게 가능하다.API를 호출한 사용자 입장에서 생각해 본다면 필요한 데이터를 빨리 응답해 주고, 나머지 작업들은 그 뒤에 따로 처리를 하는 방법이 있으면 좋을 것이다.예를 들어서 사용자가 접속시 호출해야하는 API가 있다고 가정해보자.이 API에서는 사용자가 이전에 어떤 작업을 하고 있었는지를 조회해서 알려줘야하며, 현재 시점의 접속 상태(시간, 위치, 접속한 기기정보 등)를 기록해야 한다면, 먼저 사용자에게 전달해야할 정보를 조회한 뒤, 기록해야 할 정보에 대해서 다른 Lambda를 비동기 invoke 한 후 응답을 하도록 설계가 가능하다. Lambda에서 Lambda 를 호출하는 방법에는 동기 invoke와 비동기 invoke 2가지가 있다. 동기 invoke : Lambda 호출 후 그 응답을 기다린다. 응답 결과를 보고 뭔가 처리를 해야할 경우에 사용된다. 비동기 invokde : Lambda 호출 후 응답을 기다리지 않고 지나간다. 동기든 비동기든 둘 다 Lambda 비용에 대해서 생각을 한다면 Lambda 를 2개 이상으로 나누는 것이 무조건 손해이다.Lambda는 과금이 설정 메모리 x 수행시간(100 ms 단위) 이다.만약 평균 수행시간 199 ms 인 작업을 2개의 Lambda로 나뉠 경우 100 ms + 99 ms로 나뉜다면 1개로 하는 것과 같은 비용이 들겠지만 101ms + 98ms 로 나뉜다면 100ms 수행시간에 대한 비용을 더 지불해야 한다. 이건 비동기 호출의 경우이고, 동기 호출이라면 첫번째 Lambda가 2번째 Lambda를 기다려야 하므로 최선의 경우라도 300 ms 만큼의 요금이 부과될 것이다. 더군다나 2번째로 호출되는 Lambda가 cold start 될 경우 첫번째 Lambda가 그 응답을 기다려야 하므로 비용은 훨씬 더 늘 것이다.이점을 충분히 고려해서 해당 비용을 감안하더라도 Lambda를 나누는것이 유리하다고 판단이 되는 작업을 나누길 바란다. 이제부터 Lambda에서 Lambda를 호출하는 방법들에 대해서 하나 하나씩 살펴보도록 하자. 예제는 Node.JS로 작업하겠다.AWS내의 event를 JSON Object로 전달하므로 Node.JS로 작업하는게 가장 편하다.다른 언어로 하려면 event 모양별로 model을 미리 선언해 주거나 stream을 이용해서 해당 언어별 JSON을 지원해주는 라이브러리로 전달하는 방법을 사용하여야 한다. 응답해야할 결과가 있고, 그것이 JSON Object일 경우에는 응답에도 똑같은 처리를 해줘야 한다. Python의 경우는 그나마 JSON 친화적(?) 이어서 Node.JS 다음으로 편한 것 같다. Lambda에서 Lambda를 호출하는 방법1. Lambda를 직접 invoke유일하게 Lambda 간의 동기 invoke가 가능한 방법이다.가장 쉬운 방법이기도 하다. 먼저 호출 될 Lambda를 먼저 등록하자.Lambda 등록에 대한 설명은 생략하겠다.이전에 포스팅한 글을 참조하길 바란다. AWS Lambda와 API Gateway를 이용해서 Serverless Web API 만들기 1.1 호출될 Lambda 등록아래 코드로 echoTest란 이름으로 Lambda를 등록한다. 12345678'use strict';const util = require('util');exports.handler = (event, context, callback) =&gt; &#123; console.info(util.inspect(event, &#123;depth:null&#125;)); callback(null, event);&#125;; 등록 후 오른쪽 위를 보면 ARN (Amazon Resource Name)을 볼 수 있다. ARN - arn:aws:lambda:{region}:{id}:function:echoTest 이걸 이용해서 aws-sdk를 사용해서 Lambda를 호출할 것이다. 1.2 동기 호출 코드이제 호출 할 Lambda를 작성해보록 하자. 먼저 local에서 테스트해보기 위해서는 aws-sdk를 설치해야 한다.Lambda 상에는 설치가 되어 있으므로 같이 올릴 필요가 없다. npm install aws-sdk –save 123456789101112131415161718'use strict'const aws = require('aws-sdk');const lambda = new aws.Lambda(&#123; region: 'ap-northeast-1' //change to your region&#125;);const event = &#123; id: \"1\", name:\"Luna\"&#125;;lambda.invoke(&#123; FunctionName: 'echoTest', Payload: JSON.stringify(event, null, 2) // pass params&#125;, function(error, data) &#123; if (error) &#123; console.info(error); &#125; else &#123; console.info(data); &#125;&#125;); 만약 위 코드를 index.js로 저장했다면 아래와 같이 실행하면 결과를 확인할 수 있다. node index.js 1&#123; StatusCode: 200, Payload: '&#123;\"id\":\"1\",\"name\":\"Luna\"&#125;' &#125; 1.3 비동기 호출 코드위 코드는 동기 invoke 하였다.비동기로 하기 위해서는 예전에는 InvokeAsync() 함수를 사용했는데 이 방법은 deprecated 되었다.지금은 InvocationType이란 인자에 Event값을 추가해주면 된다.참고로 default인 동기 호출의 설정값은 InvocationType: &#39;RequestResponse&#39;이다. 12345678910111213141516171819'use strict'const aws = require('aws-sdk');const lambda = new aws.Lambda(&#123; region: 'ap-northeast-1' //change to your region&#125;);const event = &#123; id: \"1\", name:\"Luna\"&#125;;lambda.invoke(&#123; FunctionName: 'echoTest', InvocationType: 'Event', Payload: JSON.stringify(event, null, 2) // pass params&#125;, function(error, data) &#123; if (error) &#123; console.info(error); &#125; else &#123; console.info(data); &#125;&#125;); 위와 같이 코드를 수정 후 호출하면 응답코드가 다르게 전달되는걸 확인할 수 있다. 1&#123; StatusCode: 202, Payload: '' &#125; 앞의 동기 invoke의 경우 200(성공)으로 서버가 요청을 정상적으로 처리했다는 코드를 보내왔지만,아래 비동기 invoke의 경우 202(허용됨)으로 서버가 요청을 접수했지만 아직 처리하지 않았다는 응답을 보내왔다. Lambda 상에서 제대로 처리된지 볼려면 echoTest에 console.info로 출력한 내용을 보면 된다. &gt; 11:52:05START RequestId: 094d4d3e-0c4f-11e7-ab68-a96f2d3f979f Version: $LATEST 11:52:052017-03-19T02:52:05.890Z 094d4d3e-0c4f-11e7-ab68-a96f2d3f979f { id: ‘1’, name: ‘Luna’ } 11:52:05END RequestId: 094d4d3e-0c4f-11e7-ab68-a96f2d3f979f 11:52:05REPORT RequestId: 094d4d3e-0c4f-11e7-ab68-a96f2d3f979f Duration: 208.59 ms Billed Duration: 300 ms Memory Size: 128 MB Max Memory Used: 15 MB 11:58:09START RequestId: e23bf84a-0c4f-11e7-81f6-25e9632564aa Version: $LATEST 11:58:092017-03-19T02:58:09.644Z e23bf84a-0c4f-11e7-81f6-25e9632564aa { id: ‘1’, name: ‘Luna’ } 11:58:09END RequestId: e23bf84a-0c4f-11e7-81f6-25e9632564aa 11:58:09REPORT RequestId: e23bf84a-0c4f-11e7-81f6-25e9632564aa Duration: 23.59 ms Billed Duration: 100 ms Memory Size: 128 MB Max 위 11:52에 수행된게 동기로 호출한 결과이며 아래 11:58에 수행된게 비동기로 호출한 결과이다. 둘 다 똑같이 console.info로 출력한 결과가 있는걸로 봐서 정상적으로 수행되었다고 판단할 수 있다. 수행시간이 다른건 앞에껀 cold start가 되었고, 뒤에껀 warm start가 된 결과로 보인다. 위 테스트 코드를 Lambda로 올리는 과정은 생략하겠다.수행할 코드들을 exports.handler = (event, context, callback) =&gt; { }로 감싸서 올리면 된다. 2. SNS의 Subscription으로 Lambda를 등록AWS SNS (Simple Notification Service)는 간단한 푸시 알림 서비스이다.SNS를 하나 만들어서 실행할 Lambda를 구독자로 등록해 놓고, 해당 SNS에 publish하는 방법으로 연동을 생각해 볼 수 있다. 2.1 SNS 생성 및 Lambda를 subscription으로 등록먼저 SNS를 생성한다. SNS dashboard에서 Create topic을 누름 (Topics에서 Create new topic를 눌러도 됨) Topic 생성 Topic name : testSns Display name : testSns Actions를 눌러서 Edit topic policy나 Edit topic delivery policy를 눌러서 각종 설정이 가능하다.여기에서는 그 내용에 대해서는 다루지 않겠다.별로 어렵지 않으니 필요할 경우 직접 해보길 바란다. 이제 해당 SNS에 Lambda를 등록할건데,앞에서 작성한 testEcho를 등록하도록 하자. 생성된 SNS의 ARN링크 arn:aws:sns:{region}:{id}:testSns를 눌러서 Topic details로 들어감 Create subscription을 누름 Protocol : AWS Lambda를 선택 Endpoint : 실행할 Lambda의 ARN을 선택 Version or alias : 일단 default 그대로 둠 (실제 서비스 할 경우에는 alias로 설정을 해야 편함) Version을 $LASTEST로 설정을 하면 관련 권한이 없다고 오류가 발생한다.일단은 그냥 넘어가자.실제 서비스 하는 경우라도 $LASTEST는 상당히 위험한 방법이다.Lambda 배포 후 테스트 과정을 거쳐서 검증되기 전까지는 alias를 사용해서 믿을만한 버전으로 서비스하는게 좋다. 2.2 SNS에서 Lambda 호출 테스트SNS 콘솔에서 Lambda를 제대로 호출하는지 테스트 해보자. Topic details 화면에서 Publish to topic를 누름 Subject : test subject Message format : JSON JSON message generator를 눌러서 Message에 입력 : 지켜보고 있다. Generate JSON 을 누름 Publish message 누름 이제 Lambda 의 CloudFront로 가서 제대로 호출되었는지 살펴보자. 12345678910111213141516&#123; Records: [ &#123; EventSource: 'aws:sns',EventVersion: '1.0',EventSubscriptionArn: 'arn:aws:sns&#123;region&#125;:&#123;id&#125;:testSns:1009056c-eb87-4f68-9cb1-de50b0024b90',Sns: &#123; Type: 'Notification',MessageId: 'd0e91f46-c46c-5ead-9633-4e013fb6c04d',TopicArn: 'arn:aws:sns&#123;region&#125;:&#123;id&#125;:testSns',Subject: 'test subject',Message: '지켜보고 있다.',Timestamp: '2017-03-19T03:23:06.272Z',SignatureVersion: '1',Signature: '...',SigningCertUrl: 'https://...',UnsubscribeUrl: 'https://...',MessageAttributes: &#123;&#125; &#125; &#125; ] &#125; 위의 결과가 출력된걸로 봐서 제대로 호출되었다고 판단이 가능하다. 2.3 코드에서 SNS를 호출하기아래와 같이 코드를 작성하자.그냥 sns.js로 저장하도록 하겠다. 12345678910111213141516171819202122232425'use strict'const AWS = require('aws-sdk');AWS.config.update(&#123; accessKeyId: \"...\", secretAccessKey: \"...\", region: '...'&#125;);const sns = new AWS.SNS();const params = &#123; TargetArn:'arn:aws:&#123;region&#125;:&#123;id&#125;:testSns', Message:'&#123;\"id\":\"snsFromNodeJS\", \"name\":\"Luna\"&#125;&#125;', Subject: 'TestSNS'&#125;;sns.publish(params, function(err,data)&#123; if (err) &#123; console.log('Error sending a message', err); &#125; else &#123; console.log('Sent message:', data.MessageId); console.info(data); &#125;&#125;); 실행하면 다음과 같은 응답을 얻을 수 있다. node sns.js 12&#123; ResponseMetadata: &#123; RequestId: '64efe66a-abfa-5a12-8abd-b72d55ebe4ce' &#125;, MessageId: '207e6adf-277a-5191-a94b-3b98d96b3f4d' &#125; Lambda 의 CloudFront로 가서 제대로 호출되었는지 살펴보자. 123456789101112131415[ &#123; EventSource: 'aws:sns',EventVersion: '1.0',EventSubscriptionArn: 'arn:aws:sns:&#123;region&#125;:&#123;id&#125;:testSns:1009056c-eb87-4f68-9cb1-de50b0024b90',Sns: &#123; Type: 'Notification',MessageId: '207e6adf-277a-5191-a94b-3b98d96b3f4d',TopicArn: 'arn:aws:sns:&#123;region&#125;:&#123;id&#125;:testSns',Subject: 'TestSNS',Message: '&#123;\"id\":\"snsFromNodeJS\", \"name\":\"Luna\"&#125;&#125;',Timestamp: '2017-03-19T03:32:33.996Z',SignatureVersion: '1',Signature: '...',SigningCertUrl: 'https://...',UnsubscribeUrl: 'https://...',MessageAttributes: &#123;&#125; &#125; &#125; ] &#125; 위 출력문으로 봐서 제대로 호출된게 확인 된다. 3. Kinesis로 Lambda 호출하기AWS Kinesis 는 스트리밍 데이터들을 처리하기 위한 용도로 만들어 졌다.입력받은 데이터들을 100개 단위(설정에서 변경 가능)로 묶어서 처리한다던지 그런 용도로 많이 사용한다.Kinesis를 Lambda에서 Lambda 호출용으로 사용하는건 좀 오바스럽긴 하지만 일단 한번 해보자. 3.1 Kinesis Stream 생성 Kinesis Streams 콘솔로 들어가서 Create stream를 누름 Stream name : testKinesis 입력 Number of shards : 1입력 Create stream을 누름 (나머지 설정은 그냥 건드리지 않음) Kinesis Stream이 만들어지고 난 다음 Details 탭으로 들어가서 ARN을 확인한다. arn:aws:kinesis:{region}:{id}:stream/testKinesis 3.2 Lambda에서 trggier로 Kinesis 등록하기먼저 Lambda의 Role에 Kinesis 관련 권한이 있는지 확인하고 없으면 추가해 준다. 1234&quot;kinesis:GetRecords&quot;,&quot;kinesis:GetShardIterator&quot;,&quot;kinesis:DescribeStream&quot;,&quot;kinesis:ListStreams&quot; 위에 나열한 권한이 필요하다. echoTest Lambda 설정으로 이동 Add trigger를 누름 Kinesis 선택 Kinesis stream : testKinesis 선택 Batch size : 1 입력 Start position : Trim horizon을 선택 Submit 누름 3.3 코드에서 Kinesis 호출하기아래와 같이 코드를 작성하자.그냥 kinesis.js로 저장하도록 하겠다. 123456789101112131415161718192021222324252627282930'use strict'const AWS = require('aws-sdk');AWS.config.update(&#123; accessKeyId: \"...\", secretAccessKey: \"...\", region: '...'&#125;);const kinesis = new AWS.Kinesis();const KinesisData = &#123; event_name: \"Kinesis 예제\", event_created_at: new Date()&#125;;const params = &#123; Data: JSON.stringify(KinesisData), PartitionKey: 'partition', StreamName: 'testKinesis'&#125;;kinesis.putRecord(params, function(err,data)&#123; if (err) &#123; console.log('Error sending a message', err); &#125; else &#123; console.info(data); &#125;&#125;); 이제 실행해보자. node kinesis.js 12&#123; ShardId: 'shardId-000000000000', SequenceNumber: '49571470617410410658004564491315382019801680888626937858' &#125; Lambda쪽 실행 결과를 살펴보자. 1234567891011121314&#123; Records: [ &#123; kinesis: &#123; kinesisSchemaVersion: '1.0',partitionKey: 'partition',sequenceNumber: '49571470617410410658004564491315382019801680888626937858',data: 'eyJldmVudF9uYW1lIjoiS2luZXNpcyDsmIjsoJwiLCJldmVudF9jcmVhdGVkX2F0IjoiMjAxNy0wMy0xOVQwNDo0ODo0My4xOTlaIn0=',approximateArrivalTimestamp: 1489898923.642 &#125;,eventSource: 'aws:kinesis',eventVersion: '1.0',eventID: 'shardId-000000000000:49571470617410410658004564491315382019801680888626937858',eventName: 'aws:kinesis:record',invokeIdentityArn: 'arn:aws:iam::768556645518:role/lambda2',awsRegion: 'ap-northeast-1',eventSourceARN: 'arn:aws:kinesis:ap-northeast-1:768556645518:stream/testKinesis' &#125; ] &#125; 살펴보니 data의 값이 누가봐도 암호화 된 것으로 보인다. eyJldmVudF9uYW1lIjoiS2luZXNpcyDsmIjsoJwiLCJldmVudF9jcmVhdGVkX2F0IjoiMjAxNy0wMy0xOVQwNDo0ODo0My4xOTlaIn0= Amazon Kinesis Streams Service API Reference 를 보면 base64로 암호화 되었다고 나온다. 3.4 Lambda 코드에서 Kinesis Data 복호화echoTest Lambda 코드를 아래와 같이 수정한다. 123456789101112131415&apos;use strict&apos;;const util = require(&apos;util&apos;);exports.handler = (event, context, callback) =&gt; &#123; const records = event.Records; console.log(&quot;records =&quot;, records); records.forEach(r =&gt; &#123; const data = new Buffer(r.kinesis.data, &apos;base64&apos;).toString(&apos;utf-8&apos;); console.info(data); &#125;); callback(null, event);&#125;; 다시 Kinesis 호출하는 코드를 실행해 보자. node kinesis.js 12&#123; ShardId: 'shardId-000000000000', SequenceNumber: '49571470617410410658004564491322635574719439376016736258' &#125; Lambda쪽 실행 결과를 살펴보자. 1234&#123; \"event_name\": \"Kinesis 예제\", \"event_created_at\": \"2017-03-19T05:05:52.273Z\"&#125; 데이터가 잘 전달된 것을 확인할 수 있다. Kinesis에서 받은 event를 보면 Records란 Key에 대해서 배열로 생성되어 있다.Kinesis에서 Data들을 설정된 값 단위로 배열을 전달해 준다.만약 100개로 선언되었다고 해서 항상 100개 단위로 주는건 아니다.그 갯수 이하라도 데이터를 전달해주니 그걸 고려해서 코드를 작성해야 한다. 4. 그 밖에 방법들앞의 Kinesis 연동 방법을 설정하는 중 Lambda의 Triggers 탭에서 본 것처럼 AWS 상의 여러 서비스에서 Lambda 수행이 가능하다.그걸 이용해서 호출하려는 Lambda에서 해당 서비스에 데이터를 전달하고 Lambda를 호출하는 방법으로의 설정이 얼마든지 가능하다.하지만 단순히 Lambda to Lambda 호출을 위해서 그런 방법을 사용하는건 비효율적인듯하다. 대신, 원래 하려는 작업이 S3나 DynamoDB에 데이터를 쌓는게 목적이라면 거기에 데이터를 저장하고 해당 작업에 대한 Trigger로 Lambda를 수행하도록 설정하는건 괜찮을것 같다. 이 내용에 대해서는 따로 다루지 않겠다.AWS 공식문서 상에 자습서를 참고해서 따라해보면 금방 익힐 수 있을 것이다. 자습서: DynamoDB 테이블에서 새 항목 처리","categories":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/categories/AWS/"},{"name":"Lambda","slug":"AWS/Lambda","permalink":"http://DevStarSJ.github.io/categories/AWS/Lambda/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/tags/AWS/"},{"name":"Lambda","slug":"Lambda","permalink":"http://DevStarSJ.github.io/tags/Lambda/"}]},{"title":"AWS Lambda 사용에 관련된 Tip","slug":"Lambda.Tips.01","date":"2017-03-10T15:00:00.000Z","updated":"2017-04-23T09:24:20.000Z","comments":true,"path":"2017/03/11/Lambda.Tips.01/","link":"","permalink":"http://DevStarSJ.github.io/2017/03/11/Lambda.Tips.01/","excerpt":"","text":"AWS Lambda &#xC0AC;&#xC6A9;&#xC5D0; &#xAD00;&#xB828;&#xB41C; Tip &#xADF8;&#xB3D9;&#xC548; AWS Lambda&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xBA74;&#xC11C; &#xC54C;&#xAC8C;&#xB41C; &#xB0B4;&#xC6A9;&#xB4E4;&#xACFC; &#xCD5C;&#xADFC; &#xC77D;&#xC740; Lambda &#xAD00;&#xB828; &#xD3EC;&#xC2A4;&#xD305; &#xB0B4;&#xC6A9;&#xB4E4;&#xC744; &#xC815;&#xB9AC;&#xD574; &#xBCF4;&#xC558;&#xB2E4;. 1. Memory Configuration Lambda&#xC758; &#xACFC;&#xAE08;&#xC740; &#xC2E4;&#xD589; &#xC2DC;&#xAC04; x &#xC0AC;&#xC6A9;&#xD55C; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0; &#xC758;&#xD574; &#xACB0;&#xC815;&#xB41C;&#xB2E4;. Lambda &#xC2E4;&#xD589;&#xC5D0; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xC5BC;&#xB9C8;&#xB098; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0;&#xB294;&#xC9C0;&#xB97C; &#xBCFC;&#xB824;&#xBA74; Lambda &#xB0B4;&#xC758; Test&#xAE30;&#xB2A5;&#xC744; &#xC774;&#xC6A9;&#xD558;&#xBA74; &#xD655;&#xC778;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xC704; &#xADF8;&#xB9BC;&#xC744; &#xBCF4;&#xBA74; 1024 MB&#xB85C; &#xC124;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xC73C;&#xBA70;, &#xC2E4;&#xC81C; &#xC0AC;&#xC6A9;&#xB7C9;&#xC740; 29 MB&#xB780; &#xAC83;&#xC744; &#xC54C; &#xC218; &#xC788;&#xB2E4;. Lambda&#xAC00; &#xC2E4;&#xD589;&#xD558;&#xB294; &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xC758; &#xC131;&#xB2A5;&#xC740; &#xBA54;&#xBAA8;&#xB9AC; &#xC124;&#xC815;&#xAC12;&#xC5D0; &#xBE44;&#xB840;&#xD574;&#xC11C; CPU &#xC131;&#xB2A5;&#xB3C4; &#xACB0;&#xC815;&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xBA54;&#xBAA8;&#xB9AC; &#xC0AC;&#xC6A9;&#xB7C9;&#xC774; &#xC801;&#xB2E4;&#xACE0; &#xBB34;&#xC870;&#xAC74; &#xAC70;&#xAE30;&#xC5D0; &#xB9DE;&#xAC8C; &#xC124;&#xC815;&#xC744; &#xD558;&#xBA74; &#xB2F9;&#xC5F0;&#xD788; &#xADF8;&#xB9CC;&#xD07C; &#xC218;&#xD589;&#xC2DC;&#xAC04;&#xC774; &#xAE38;&#xC5B4; &#xC9C8; &#xC218;&#xAC00; &#xC788;&#xB2E4;. &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; 1/10 &#xC815;&#xB3C4;&#xB85C; &#xC904;&#xC774;&#xB2C8; &#xC218;&#xD589;&#xC2DC;&#xAC04;&#xB3C4; 10&#xBC30; &#xC815;&#xB3C4;&#xB85C; &#xB354; &#xB298;&#xC5B4;&#xB09C; &#xAC83;&#xC744; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xB2E4;. &#xADF8;&#xB7EC;&#xBBC0;&#xB85C; &#xCD5C;&#xC18C; &#xACFC;&#xAE08;&#xC73C;&#xB85C; &#xC124;&#xC815;&#xC744; &#xD558;&#xAE30;&#xC704;&#xD574;&#xC11C; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xBB34;&#xC870;&#xAC74; &#xC218;&#xD589;&#xAC00;&#xB2A5;&#xD55C; &#xCD5C;&#xC18C;&#xB85C; &#xC124;&#xC815;&#xD558;&#xB294; &#xAC83;&#xBCF4;&#xB2E4;&#xB294; &#xC124;&#xC815;&#xAC12;&#xC744; &#xBC14;&#xAFD4;&#xAC00;&#xBA74;&#xC11C; &#xD14C;&#xC2A4;&#xD2B8;&#xB97C; &#xD574;&#xBCF4;&#xACE0; &#xACB0;&#xC815;&#xC744; &#xD558;&#xBA74; &#xB41C;&#xB2E4;. &#xC774;&#xB807;&#xAC8C; &#xBBF8;&#xB9AC; &#xD14C;&#xC2A4;&#xD2B8;&#xB97C; &#xD574;&#xBCF4;&#xBA74; &#xC774;&#xC655;&#xC774;&#xBA74; &#xAC19;&#xC740; &#xAE08;&#xC561;&#xC774;&#xBA74;&#xC11C; &#xC880; &#xB354; &#xBE60;&#xB974;&#xAC8C; &#xC218;&#xD589;&#xD558;&#xB294; &#xBC29;&#xD5A5;&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD558;&#xB294;&#xAC8C; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xACFC;&#xAE08;&#xBCF4;&#xB2E4; &#xBE60;&#xB978; &#xC11C;&#xBE44;&#xC2A4;&#xAC00; &#xB354; &#xC911;&#xC694;&#xD55C; &#xACBD;&#xC6B0;&#xB77C;&#xBA74; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xBB34;&#xC870;&#xAC74; &#xCD5C;&#xB300;&#xB85C; &#xC124;&#xC815;&#xD558;&#xB294;&#xAC8C; &#xC88B;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xB192;&#xC778;&#xB2E4;&#xACE0; &#xD574;&#xC11C; &#xBB34;&#xC870;&#xAC74; &#xADF8;&#xB9CC;&#xD07C; &#xB354; &#xBE68;&#xB9AC;&#xC9C0;&#xB294;&#xAC74; &#xC544;&#xB2C8;&#xB2E4;. Lambda&#xC5D0;&#xC11C; &#xB3D9;&#xC791;&#xD558;&#xB294; &#xC791;&#xC5C5; &#xC131;&#xACA9;&#xC5D0; &#xB530;&#xB77C; &#xBA54;&#xBAA8;&#xB9AC; &#xC124;&#xC815;&#xC744; &#xB354; &#xB298;&#xB824;&#xB3C4; &#xB354; &#xC774;&#xC0C1; &#xC218;&#xD589;&#xC2DC;&#xAC04;&#xC774; &#xC904;&#xC5B4;&#xB4E4;&#xC9C0; &#xC54A;&#xAC70;&#xB098; &#xC904;&#xC5B4;&#xB4DC;&#xB294; &#xBE44;&#xC911;&#xC774; &#xAE09;&#xACA9;&#xD788; &#xB0AE;&#xC544;&#xC9C0;&#xB294; &#xAD6C;&#xAC04;&#xC774; &#xC788;&#xC73C;&#xB2C8; &#xD14C;&#xC2A4;&#xD2B8; &#xD574;&#xBCF8; &#xD6C4; &#xC801;&#xC808;&#xD788; &#xC124;&#xC815;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. 2. Warm Start Lambda&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xBA74; &#xD574;&#xB2F9; &#xCF54;&#xB4DC;&#xB97C; &#xCEE8;&#xD14C;&#xC774;&#xB108; &#xAC19;&#xC740;&#xB370; &#xD560;&#xB2F9;&#xD558;&#xC5EC; EC2 instance &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xC218;&#xD589;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xC54C;&#xB824;&#xC838; &#xC788;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xCD5C;&#xCD08; &#xC218;&#xD589;&#xC2DC; cold start(&#xD574;&#xB2F9; &#xC790;&#xC6D0;&#xC744; &#xD560;&#xB2F9;&#xBC1B;&#xB294; &#xC2DC;&#xAC04;) &#xB54C;&#xBB38;&#xC5D0; &#xC218;&#xD589;&#xC2DC;&#xAC04;&#xC774; &#xC880; &#xB354; &#xAC78;&#xB9B0;&#xB2E4;. &#xC704;&#xC5D0; &#xADF8;&#xB9BC;&#xC744; &#xBCF4;&#xB354;&#xB77C;&#xB3C4; &#xCCAB;&#xBC88;&#xC9F8; &#xADF8;&#xB9BC;&#xACFC; &#xB450;&#xBC88;&#xC9F8; &#xADF8;&#xB9BC;&#xC758; &#xBA54;&#xBAA8;&#xB9AC; &#xC124;&#xC815;&#xAC12;&#xC774; &#xAC19;&#xC740;&#xB370; &#xC218;&#xD589;&#xC2DC;&#xAC04;&#xC774; &#xB2E4;&#xB974;&#xB2E4;. &#xADF8;&#xAC78; &#xBC29;&#xC9C0;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xC73C;&#xB85C; CloudWatch Schedule Event&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; 5&#xBD84; &#xAC04;&#xACA9;&#xC73C;&#xB85C; Lambda&#xB97C; &#xD55C;&#xBC88;&#xC529; &#xD638;&#xCD9C;&#xD574;&#xC8FC;&#xBA74; &#xB298; warm start(&#xBC14;&#xB85C; &#xC218;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD55C; &#xC0C1;&#xD0DC;)&#xB85C; &#xC720;&#xC9C0;&#xAC00; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xC2E4;&#xC81C;&#xB85C; Lambda&#xAC00; &#xC218;&#xD589;&#xB418;&#xBA74; &#xC548;&#xB420; &#xACBD;&#xC6B0;&#xC5D0; &#xD638;&#xCD9C;&#xB418;&#xC5C8;&#xC744; &#xB54C;&#xB97C; &#xB300;&#xBE44;&#xD574;&#xC11C; &#xB530;&#xB85C; ping &#xAC19;&#xC740; &#xC694;&#xCCAD;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC544;&#xBB34; &#xC77C;&#xB3C4; &#xD558;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; &#xCF54;&#xB4DC;&#xB97C; &#xCD94;&#xAC00;&#xD574; &#xC8FC;&#xC5B4;&#xC57C; &#xD55C;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xC774;&#xAC83;&#xC774; &#xBAA8;&#xB4E0;&#xAC83;&#xC744; &#xD574;&#xACB0;&#xD574;&#xC8FC;&#xB294; &#xAC83; &#xAC19;&#xC9C0;&#xB294; &#xC54A;&#xB2E4;. &#xD68C;&#xC0AC;&#xC5D0;&#xC11C; &#xB2E4;&#xB978; &#xB3D9;&#xB8CC;&#xBD84;&#xC774; &#xD14C;&#xC2A4;&#xD2B8; &#xD574;&#xBCF8; &#xACB0;&#xACFC;&#xB97C; &#xBCF4;&#xB2C8; &#xC774;&#xBBF8; warm start &#xAC00;&#xB2A5;&#xD55C; Lambda&#xAC00; &#xB5A0;&#xC788;&#xB294; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xC774; &#xB9CE;&#xC544;&#xC838;&#xC11C; &#xC0C8;&#xB85C;&#xC6B4; &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xB85C; Lambda&#xB97C; &#xC62C;&#xB824;&#xC57C; &#xD558;&#xB294; &#xACBD;&#xC6B0;&#xB97C; &#xBCF4;&#xB2C8; cold start&#xB85C; &#xC218;&#xD589;&#xB418;&#xB294; &#xAC83; &#xAC19;&#xB2E4;&#xB294; &#xACB0;&#xB860;&#xC5D0; &#xB3C4;&#xB2EC;&#xD588;&#xB2E4;. &#xC544;&#xC9C1; &#xC815;&#xD655;&#xD788; &#xC5B4;&#xB5BB;&#xAC8C; &#xB3D9;&#xC791;&#xD558;&#xB294;&#xC9C0;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC54C;&#xB824;&#xC9C4;&#xBC14;&#xAC00; &#xC5C6;&#xC73C;&#xB2C8; &#xD14C;&#xC2A4;&#xD2B8;&#xB97C; &#xC218;&#xD589;&#xD558;&#xBA74;&#xC11C; &#xC751;&#xB2F5;&#xC2DC;&#xAC04;&#xC774; &#xC5BC;&#xB9C8;&#xB098; &#xAC78;&#xB9AC;&#xB294;&#xC9C0;&#xB97C; &#xAC00;&#xC9C0;&#xACE0; &#xCD94;&#xCE21;&#xD560; &#xBFD0;&#xC774;&#xB2E4;. 3. Re-use Lambda &#xC704; &#xD56D;&#xBAA9;&#xC5D0;&#xC11C; &#xC598;&#xAE30;&#xD588;&#xB4DC;&#xC2DC; Lambda&#xAC00; warm start&#xB418;&#xB294; &#xACBD;&#xC6B0; &#xAE30;&#xC874;&#xC5D0; &#xC2E4;&#xD589;&#xD55C; &#xCEE8;&#xD14C;&#xC774;&#xB108;&#xB97C; &#xC7AC;&#xC0AC;&#xC6A9;&#xD574;&#xC11C; &#xC218;&#xD589;&#xD55C;&#xB2E4;. &#xC774;&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; Lambda &#xC218;&#xD589;&#xC2DC;&#xAC04;&#xC744; &#xC9E7;&#xAC8C; &#xD560; &#xC218; &#xC788;&#xB3C4;&#xB85D; &#xCF54;&#xB4DC; &#xC791;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xC804;&#xC5ED; &#xBCC0;&#xC218;&#xB97C; &#xC120;&#xC5B8;&#xD574; &#xB193;&#xACE0; &#xADF8; &#xAC12;&#xC73C;&#xB85C; &#xD14C;&#xC2A4;&#xD2B8; &#xD574;&#xBCF4;&#xB2C8; warm start&#xB418;&#xB294; Lambda&#xC758; &#xACBD;&#xC6B0; &#xADF8; &#xAC12;&#xC744; &#xACC4;&#xC18D;&#xD574;&#xC11C; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xB2E4;. &#xC774;&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xAC01;&#xC885; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;(npm &#xD3EC;&#xD568;)&#xB4E4;&#xC5D0; &#xB300;&#xD55C; &#xCD08;&#xAE30;&#xD654; &#xCF54;&#xB4DC;&#xB97C; handler &#xC548;&#xC5D0;&#xC11C;&#xAC00; &#xC544;&#xB2C8;&#xB77C; &#xC804;&#xC5ED;&#xC5D0;&#xC11C; &#xC218;&#xD589;&#xD574;&#xB450;&#xBA74; warm start&#xC758; &#xACBD;&#xC6B0; &#xB2E4;&#xC2DC; &#xCD08;&#xAE30;&#xD654; &#xCF54;&#xB4DC;&#xB97C; &#xC218;&#xD589;&#xD558;&#xC9C0; &#xC54A;&#xC544;&#xB3C4; &#xB41C;&#xB2E4;. &#xB2E8;, &#xC774;&#xB85C; &#xC778;&#xD574; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xC0AC;&#xC774;&#xB4DC; &#xC774;&#xD399;&#xD2B8;&#xAC00; &#xC788;&#xB294; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xADF8;&#xAC83;&#xC5D0; &#xB300;&#xD55C; &#xBC29;&#xC5B4;&#xCF54;&#xB4DC;&#xAC00; &#xCD94;&#xAC00;&#xB418;&#xC5B4;&#xC57C; &#xD55C;&#xB2E4;. DB &#xCEE4;&#xB125;&#xC158; &#xC5ED;&#xC2DC;&#xB3C4; &#xB9E4;&#xBC88; &#xC5F0;&#xACB0; -&gt; &#xCFFC;&#xB9AC;&#xC218;&#xD589; -&gt; &#xC885;&#xB8CC;&#xB97C; &#xC218;&#xD589;&#xD558;&#xB294;&#xAC83; &#xBCF4;&#xB2E4;&#xB294; &#xC804;&#xC5ED;&#xC5D0; &#xCEE4;&#xB125;&#xC158; &#xAC1D;&#xCCB4;&#xB97C; &#xB450;&#xACE0; &#xC5F0;&#xACB0;&#xC774; &#xC548;&#xB41C; &#xACBD;&#xC6B0;&#xC5D0;&#xB9CC; &#xC5F0;&#xACB0;&#xC744; &#xC218;&#xD589;&#xD558;&#xACE0; &#xACC4;&#xC18D;&#xD574;&#xC11C; &#xC7AC;&#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xB3C4; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xC774; &#xACBD;&#xC6B0; &#xC7AC;&#xC0AC;&#xC6A9;&#xB418;&#xB294; Lambda&#xC5D0;&#xC11C;&#xB294; &#xB2E4;&#xC2DC; &#xC5F0;&#xACB0;&#xD560; &#xD544;&#xC694;&#xAC00; &#xC5C6;&#xC73C;&#xB2C8; &#xBE68;&#xB77C;&#xC9C4;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xC790;&#xC8FC; &#xC0AC;&#xC6A9;&#xB418;&#xC9C0; &#xC54A;&#xC740; Lambda&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; DB &#xC785;&#xC7A5;&#xC5D0;&#xC11C; &#xBE44;&#xD6A8;&#xC728;&#xC801;&#xC774;&#xB2C8; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xC548;&#xC88B;&#xC744; &#xAC83;&#xC774;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xD544;&#xC694;&#xC5C6;&#xC774; DB &#xCEE4;&#xB125;&#xC158;&#xC774; &#xC624;&#xB7AB;&#xB3D9;&#xC548; &#xC720;&#xC9C0;&#xB420; &#xC218; &#xC788;&#xB2E4;&#xB294; &#xB2E8;&#xC810;&#xB3C4; &#xC788;&#xB2E4;. &#xC608;&#xB97C; &#xB4E4;&#xC5B4; &#xD3C9;&#xADE0; &#xCD08;&#xB2F9; 100&#xBC88; &#xC218;&#xD589;&#xB418;&#xBA70; &#xD3C9;&#xADE0; &#xC218;&#xD589;&#xC2DC;&#xAC04;&#xC774; 100ms&#xC778; Lambda&#xC758; &#xACBD;&#xC6B0; 10&#xAC1C;&#xC758; &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xAC00; &#xD65C;&#xC131;&#xD654;&#xB418;&#xC5B4; &#xC788;&#xC744; &#xAC83;&#xC774;&#xB2E4;. &#xADF8;&#xB7F0;&#xB370; &#xAC11;&#xC790;&#xAE30; 1&#xCD08;&#xC5D0; 200&#xAC1C;&#xC758; &#xC694;&#xCCAD;&#xC774; &#xC624;&#xACE0;, &#xADF8; &#xB2E4;&#xC74C;&#xBD80;&#xD130; &#xB2E4;&#xC2DC; 1&#xCD08;&#xB2F9; 100&#xBC88;&#xC758; &#xC694;&#xCCAD;&#xC774; &#xC624;&#xB294; &#xACBD;&#xC6B0;&#xB97C; &#xC0DD;&#xAC01;&#xD574;&#xBCF4;&#xC790;. &#xAC11;&#xC790;&#xAE30; 200&#xAC1C;&#xC758; &#xC694;&#xCCAD;&#xC774; &#xC628; &#xAC83; &#xB54C;&#xBB38;&#xC5D0; 10&#xAC1C;&#xC758; &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xAC00; &#xCD94;&#xAC00;&#xB85C; &#xD560;&#xB2F9;&#xB420; &#xAC83;&#xC774;&#xB2E4;. &#xADF8; &#xB2E4;&#xC74C;&#xBD80;&#xD130;&#xB294; &#xB2E4;&#xC2DC; 10&#xAC1C;&#xC758; &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xB9CC; &#xC788;&#xC5B4;&#xB3C4; &#xC218;&#xD589;&#xC774; &#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xB098;&#xBA38;&#xC9C0; 10&#xAC1C;&#xC758; &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xC5D0;&#xC11C;&#xB294; 15&#xBD84; &#xAC00;&#xB7C9;&#xB3D9;&#xC548; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xB294; DB &#xCEE4;&#xB125;&#xC158;&#xC744; &#xB04A;&#xC9C0; &#xC54A;&#xACE0; &#xACC4;&#xC18D; &#xAC00;&#xC9C0;&#xACE0;&#xC788;&#xAC8C; &#xB41C;&#xB2E4;. &#xC7A5;&#xC810;&#xACFC; &#xB2E8;&#xC810;&#xC744; &#xAC19;&#xC774; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xB294; &#xBC29;&#xBC95;&#xC774;&#xBBC0;&#xB85C; &#xD310;&#xB2E8;&#xC740; &#xAC01;&#xC790; &#xC54C;&#xC544;&#xC11C; &#xD558;&#xAE38; &#xBC14;&#xB780;&#xB2E4;. 4. Lambda Limit &#xAC01; &#xB9AC;&#xC83C;&#xBCC4;&#xB85C; Lambda&#xAC00; 100&#xAC1C; &#xB3D9;&#xC2DC; &#xC218;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD55C; &#xAC83;&#xC73C;&#xB85C; &#xAE30;&#xBCF8;&#xC124;&#xC815; &#xB418;&#xC5B4; &#xC788;&#xB2E4;. &#xC774;&#xB97C; &#xB118;&#xAE38; &#xACBD;&#xC6B0; Lambda&#xAC00; &#xC218;&#xD589;&#xB418;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xB3D9;&#xC2DC; &#xC218;&#xD589;&#xB418;&#xB294; Lambda&#xC218;&#xB97C; &#xC81C;&#xC5B4;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C; SQS&#xB97C; &#xD65C;&#xC6A9;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xC774; &#xC788;&#xB2E4;. Lambda&#xB97C; &#xBC14;&#xB85C; &#xC694;&#xCCAD;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xD574;&#xB2F9; &#xC694;&#xCCAD;&#xC744; SQS&#xB85C; &#xBCF4;&#xB0B4;&#xACE0; SQS&#xC5D0;&#xC11C; &#xB3D9;&#xC2DC; &#xC2E4;&#xD589;&#xB418;&#xB294; Lambda &#xC218;&#xB97C; &#xACE0;&#xB824;&#xD574;&#xC11C; &#xD638;&#xCD9C;&#xC744; &#xD558;&#xB294; &#xBC29;&#xBC95;&#xC774;&#xB2E4;. &#xAD00;&#xB828; &#xC218;&#xC2DD;&#xC5D0; &#xB530;&#xB974;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xACC4;&#xC0B0;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. 1Concurrent Invocations = events (or requests) per second * function duration (in secs) &#xD558;&#xC9C0;&#xB9CC; API Gateway + Lambda&#xB97C; &#xD65C;&#xC6A9;&#xD55C; Web API Service&#xC640; &#xAC19;&#xC774; &#xC694;&#xCCAD;&#xC2DC;&#xAC04;&#xC774; &#xB298;&#xC5B4;&#xB098;&#xB294; &#xAC83;&#xC774; &#xC548;&#xB418;&#xB294; &#xACBD;&#xC6B0;&#xB3C4; &#xC788;&#xB2E4;. &#xC774; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; AWS&#xC5D0; &#xC694;&#xCCAD;&#xD558;&#xBA74; &#xB298;&#xB824;&#xC900;&#xB2E4;. &#xC774; &#xACBD;&#xC6B0; Lambda &#xBFD0;&#xB9CC; &#xC544;&#xB2C8;&#xB77C; EC2&#xC758; Network Interface (350&#xC774; MAX)&#xACFC; API Gateway (&#xCD08;&#xB2F9; 1000&#xBC88;)&#xC758; &#xB9AC;&#xBBF8;&#xD2B8;&#xB3C4; &#xAC19;&#xC774; &#xB298;&#xB824;&#xC57C; &#xD560;&#xC218; &#xC788;&#xC73C;&#xB2C8; &#xC798; &#xACC4;&#xC0B0;&#xD574;&#xC11C; &#xAC19;&#xC774; &#xC694;&#xCCAD;&#xC744; &#xD574;&#xC57C; &#xD55C;&#xB2E4;. &#xCC38;&#xACE0;&#xB85C; &#xD604;&#xC7AC; &#xD68C;&#xC0AC;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xC911;&#xC778; &#xB9AC;&#xBBF8;&#xD2B8;&#xB294; Lambda 6000, Network Interface 4000, API Gateway 6000 per second &#xB85C; &#xB298;&#xB824;&#xB193;&#xC740; &#xC0C1;&#xD0DC;&#xC774;&#xB2E4;. 5. Devide Batch Task for Lambda &#xCC38;&#xACE0;&#xB85C; &#xC774; &#xB0B4;&#xC6A9;&#xC740; &#xC9C1;&#xC811; &#xACAA;&#xC740;&#xAC8C; &#xC544;&#xB2C8;&#xB77C; Do&#x2019;s and Don&#x2019;ts of AWS Lambda&#xB97C; &#xCC38;&#xACE0;&#xD55C; &#xB0B4;&#xC6A9;&#xC774;&#xB2E4;. Lambda&#xB85C; Batch &#xC791;&#xC5C5;&#xC744; &#xB098;&#xB220;&#xC11C; &#xC791;&#xC5C5;&#xD574;&#xC57C; &#xD560; &#xACBD;&#xC6B0; &#xD574;&#xB2F9; &#xC791;&#xC5C5;&#xC744; &#xC5BC;&#xB9C8;&#xB098; &#xC798;&#xAC8C; &#xB098;&#xB220;&#xC11C; &#xAC01; Lambda&#xB85C; &#xD560;&#xB2F9;&#xC744; &#xD574;&#xC57C;&#xD558;&#xB294;&#xC9C0;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xACE0;&#xBBFC;&#xC744; &#xD574;&#xC57C;&#xD55C;&#xB2E4;. &#xB300;&#xCCB4;&#xC801;&#xC73C;&#xB85C; &#xC5F0;&#xC0B0;&#xC774; &#xB9CE;&#xC544;&#xC11C; CPU &#xC0AC;&#xC6A9;&#xB7C9;&#xC774; &#xB9CE;&#xC740; &#xACBD;&#xC6B0;&#xB294; &#xCD5C;&#xB300;&#xD55C; Lambda&#xB85C; &#xC798;&#xAC8C; &#xB098;&#xB204;&#xB294;&#xAC8C; &#xC88B;&#xB2E4;. &#xBC18;&#xBA74; Lambda &#xC790;&#xCCB4;&#xC758; &#xC5F0;&#xC0B0;&#xBCF4;&#xB2E4;&#xB294; &#xC678;&#xBD80; I/O &#xC791;&#xC5C5;&#xC774; &#xB9CE;&#xC740; &#xACBD;&#xC6B0;&#xB294; Lambda &#xD558;&#xB098;&#xC758; &#xC218;&#xD589;&#xC2DC;&#xAC04;&#xC744; &#xAE38;&#xAC8C; &#xAC00;&#xC838;&#xAC00;&#xB294;&#xAC8C; &#xC88B;&#xB2E4;. &#xC5B4;&#xCC0C;&#xBCF4;&#xBA74; &#xB2F9;&#xC5F0;&#xD55C; &#xB9D0;&#xAC19;&#xB2E4;. CPU &#xC5F0;&#xC0B0;&#xC774; &#xB9CE;&#xC73C;&#xBA74; &#xCD5C;&#xB300;&#xD55C; &#xBCD1;&#xB82C;&#xB85C; &#xB098;&#xB204;&#xC5B4;&#xC11C; CPU&#xB97C; &#xB9CE;&#xC774; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xC774; &#xB2F9;&#xC5F0;&#xD788; &#xC88B;&#xC744; &#xAC83;&#xC774;&#xB2E4;. &#xBC18;&#xBA74;, DB &#xC5F0;&#xACB0;, SQS, Kinesis &#xB4F1; &#xB2E4;&#xB978; &#xC11C;&#xBE44;&#xC2A4; &#xD638;&#xCD9C; &#xB4F1;&#xC758; &#xD1B5;&#xC2E0;&#xC774; &#xD544;&#xC694;&#xD55C; &#xACBD;&#xC6B0; &#xCEE4;&#xB125;&#xC158;&#xC744; &#xB9FA;&#xB294; &#xC624;&#xBC84;&#xD574;&#xB4DC;&#xAC00; &#xC788;&#xC73C;&#xB2C8; &#xD55C; &#xBC88; &#xC5F0;&#xACB0;&#xC744; &#xB9FA;&#xACE0; &#xACC4;&#xC18D;&#xD574;&#xC11C; &#xC218;&#xD589;&#xD558;&#xB294;&#xAC8C; &#xC88B;&#xC744; &#xAC83;&#xC774;&#xB2E4;. 6. Logging in Lambda Lambda &#xC218;&#xD589; &#xC911; &#xB85C;&#xADF8;&#xB97C; &#xC218;&#xC9D1;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C; &#xC678;&#xBD80; &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xADF8;&#xB9CC;&#xD07C; Lambda &#xC131;&#xB2A5;&#xC5D0; &#xC601;&#xD5A5;&#xC744; &#xBBF8;&#xCE58;&#xAC8C; &#xB41C;&#xB2E4;. &#xCF54;&#xB4DC;&#xC5D0;&#xC11C; Node.JS&#xC758; &#xACBD;&#xC6B0; console.log, console.info, .NET core&#xC758; &#xACBD;&#xC6B0; Console.Writeline&#xB85C; &#xCD9C;&#xB825;&#xC744; &#xD558;&#xBA74; CloudWatch&#xC5D0;&#xC11C; &#xD655;&#xC778;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xC774; &#xBC29;&#xBC95;&#xC744; &#xC774;&#xC6A9;&#xD558;&#xBA74; Lambda &#xC131;&#xB2A5;&#xC5D0;&#xB294; &#xAC70;&#xC758; &#xC601;&#xD5A5;&#xC744; &#xBBF8;&#xCE58;&#xC9C0; &#xC54A;&#xACE0; &#xB85C;&#xADF8;&#xB97C; &#xB0A8;&#xAE38; &#xC218; &#xC788;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC;, CloudWatch &#xC0AC;&#xC6A9; &#xB610;&#xD55C; &#xC720;&#xB8CC;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xBB34;&#xD55C;&#xC815; &#xC313;&#xC544;&#xB458;&#xC218;&#xB294; &#xC5C6;&#xB2E4;. &#xD2B9;&#xC815; &#xAE30;&#xAC04; &#xC774;&#xD6C4;&#xC5D0; &#xAC83;&#xC744; S3&#xB85C; &#xBCF4;&#xAD00;&#xD558;&#xB294; &#xAC83;&#xB3C4; &#xAC00;&#xB2A5;&#xD558;&#xBA70;, CloudWatch&#xC5D0; &#xC313;&#xC778; &#xB85C;&#xADF8;&#xB97C; &#xB2E4;&#xB978; &#xBC29;&#xBC95;&#xC73C;&#xB85C; &#xBCC4;&#xB3C4; &#xB85C;&#xADF8; &#xC2DC;&#xC2A4;&#xD15C;&#xC73C;&#xB85C; &#xC800;&#xC7A5;&#xC744;&#xD558;&#xBA74; &#xC6D0;&#xB798; &#xC218;&#xD589;&#xC911;&#xC778; Lambda &#xC131;&#xB2A5;&#xC5D0;&#xB294; &#xC601;&#xD5A5;&#xC744; &#xC8FC;&#xC9C0; &#xC54A;&#xACE0;&#xB3C4; &#xB85C;&#xADF8; &#xC218;&#xC9D1;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xCC38;&#xACE0; Do&#x2019;s and Don&#x2019;ts of AWS Lambda : https://medium.com/@tjholowaychuk/dos-and-don-ts-of-aws-lambda-7dfcab7ad115#.xm94uvr5l Best practices &#x2013; AWS Lambda function : https://cloudncode.blog/2017/03/02/best-practices-aws-lambda-function","categories":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/categories/AWS/"},{"name":"Lambda","slug":"AWS/Lambda","permalink":"http://DevStarSJ.github.io/categories/AWS/Lambda/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/tags/AWS/"},{"name":"Lambda","slug":"Lambda","permalink":"http://DevStarSJ.github.io/tags/Lambda/"}]},{"title":"Monolith to Serverless using AWS Lambda (3)","slug":"MonolithToServerless.03","date":"2017-02-25T15:00:00.000Z","updated":"2017-04-23T09:32:51.000Z","comments":true,"path":"2017/02/26/MonolithToServerless.03/","link":"","permalink":"http://DevStarSJ.github.io/2017/02/26/MonolithToServerless.03/","excerpt":"","text":"Monolith to Serverless using AWS Lambda &#xAE30;&#xC874; &#xBAA8;&#xB178;&#xB9AC;&#xC2A4; API &#xC11C;&#xBC84;&#xB97C; AWS Lambda&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;&#xB85C; &#xBCC0;&#xACBD;&#xD558;&#xAE30; &#xC774;&#xC804;&#xAE00; : 1&#xD3B8;. &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;&#xB97C; &#xD558;&#xB824;&#xB294; &#xC774;&#xC720; &#xC774;&#xC804;&#xAE00; : 2&#xD3B8;. &#xC7A5;&#xC560; &#xB300;&#xC751; &#xD50C;&#xB79C; 3&#xD3B8;. Lambda &#xBC30;&#xD3EC; &#xD6C4; &#xACAA;&#xAC8C;&#xB418;&#xB294; &#xC77C;&#xB4E4; &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;&#xB97C; &#xAC00;&#xB2A5;&#xD558;&#xAC8C; &#xD574;&#xC8FC;&#xB294; &#xC11C;&#xBE44;&#xC2A4; &#xC911; &#xAC00;&#xC7A5; &#xB9CE;&#xC774; &#xC54C;&#xB824;&#xC9C4;&#xAC8C; AWS Lambda&#xC774;&#xB2E4;. &#xAC04;&#xB2E8;&#xD558;&#xAC8C; &#xC124;&#xBA85;&#xD558;&#xC790;&#xBA74; &#xC11C;&#xBC84;&#xB97C; &#xC2E4;&#xD589;&#xD574; &#xB193;&#xB294;&#xAC8C; &#xC544;&#xB2C8;&#xB77C; &#xC2E4;&#xD589;&#xB420; &#xCF54;&#xB4DC;&#xB97C; &#xC62C;&#xB824;&#xB193;&#xACE0; &#xD574;&#xB2F9; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xC2DC;&#xD0AC; &#xC774;&#xBCA4;&#xD2B8;&#xB97C; &#xBC1C;&#xC0DD;&#xC2DC;&#xD0A4;&#xBA74; &#xCF54;&#xB4DC;&#xAC00; &#xB3D9;&#xC791;&#xD558;&#xB294; &#xAC83;&#xC774;&#xB2E4;. &#xCF54;&#xB4DC;&#xAC00; &#xC5B4;&#xB290; PC&#xC5D0;&#xC11C; &#xB3D9;&#xC791;&#xD558;&#xB294;&#xC9C0;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xC6B0;&#xB9AC;&#xAC00; &#xC2E0;&#xACBD;&#xC4F8; &#xD544;&#xC694;&#xC5C6;&#xC774; AWS&#xC5D0; &#xC804;&#xC801;&#xC73C;&#xB85C; &#xB9E1;&#xACA8;&#xB193;&#xB294;&#xB2E4;. &#xACFC;&#xAE08;&#xC740; Lambda &#xC2E4;&#xD589;&#xC2DC;&#xAC04;(100ms &#xB2E8;&#xC704;)&#xC73C;&#xB85C; &#xD55C;&#xB2E4;. 1&#xD3B8; &#xAE00;&#xC5D0;&#xC11C; &#xC598;&#xAE30;&#xD588;&#xB4EF;, EC2 &#xC11C;&#xBC84;&#xB85C; &#xC6B4;&#xC601;&#xD560;&#xB54C;&#xB294; &#xAC11;&#xC790;&#xAE30; &#xC694;&#xCCAD;&#xC774; &#xBAB0;&#xB9AC;&#xB294; &#xACBD;&#xC6B0; &#xC11C;&#xBC84;&#xC5D0; &#xC7A5;&#xC560;&#xAC00; &#xBC1C;&#xC0DD;&#xD560; &#xC218; &#xC788;&#xB294;&#xB370; Lambda&#xC758; &#xACBD;&#xC6B0;&#xB294; &#xADF8;&#xB7F0; &#xC0C1;&#xD669;&#xC790;&#xCCB4;&#xB97C; &#xC804;&#xBD80; AWS&#xC5D0;&#xC11C; &#xC54C;&#xC544;&#xC11C; &#xD574;&#xB2EC;&#xB77C;&#xACE0; &#xC704;&#xC784;&#xD558;&#xB294;&#xAC8C; &#xB41C;&#xB2E4;. &#xC774;&#xB807;&#xAC8C; &#xC0DD;&#xAC01;&#xD558;&#xB294;&#xAC8C; &#xBCF4;&#xB2E4;&#xB294; AWS&#xC5D0;&#xC11C; &#xB9CE;&#xC740; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xACF5;&#xD1B5;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xD560; &#xAD49;&#xC7A5;&#xD788; &#xD070; &#xC11C;&#xBC84;&#xB97C; &#xB744;&#xC6CC;&#xB193;&#xACE0; &#xC6B0;&#xB9AC;&#xB294; &#xAC70;&#xAE30;&#xC5D0;&#xC11C; &#xC6B0;&#xB9AC; &#xCF54;&#xB4DC;&#xAC00; &#xC2E4;&#xC81C;&#xB85C; &#xC2E4;&#xD589;&#xB418;&#xB294; &#xC2DC;&#xAC04;&#xB9CC;&#xD07C;&#xB9CC; &#xACFC;&#xAE08;&#xC744; &#xD55C;&#xB2E4;&#xB77C;&#xACE0; &#xC0DD;&#xAC01;&#xD558;&#xB294;&#xAC8C; &#xB354; &#xC26C;&#xC6B4;&#xAC00; ? Lambda&#xB97C; &#xC218;&#xD589;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; aws-sdk&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xD638;&#xCD9C;&#xC744; &#xD558;&#xAC70;&#xB098;, AWS &#xB0B4;&#xC758; &#xAC01;&#xC885; &#xC11C;&#xBE44;&#xC2A4;&#xB4E4; CloudWatch, SQS, SNS, Kinesis, DynamoDB &#xB4F1;&#xC5D0;&#xC11C; &#xD2B8;&#xB9AC;&#xAC70;&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xC2E4;&#xD589;&#xB418;&#xAC8C; &#xD560; &#xC218; &#xC788;&#xB2E4;. Lambda&#xB97C; API&#xB85C; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; API Gateway&#xB97C; &#xD1B5;&#xD574;&#xC11C; url &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xC678;&#xBD80; &#xC694;&#xCCAD;&#xC744; &#xBC1B;&#xC544;&#xC11C; Lambda &#xC2E4;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;&#xB97C; &#xAD6C;&#xD604;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; &#xC8FC;&#xB85C; &#xC774; &#xBC29;&#xBC95;&#xC744; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;. API &#xC694;&#xCCAD; &#xC815;&#xBCF4; &#xBD84;&#xC11D; &#xAE30;&#xC874;&#xC758; EC2&#xB85C; &#xC218;&#xD589;&#xD558;&#xB358; API &#xC11C;&#xBC84;&#xB97C; CloudFront&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xC218;&#xD589;&#xB418;&#xB3C4;&#xB85D; &#xC124;&#xC815;&#xD558;&#xC600;&#xB2E4;. CloudFront&#xC5D0;&#xC11C;&#xB294; &#xC694;&#xCCAD;&#xB4E4;&#xC5D0; &#xB300;&#xD574;&#xC11C; S3&#xB85C; &#xB85C;&#xADF8;&#xB97C; &#xC0DD;&#xC131;&#xD574;&#xC8FC;&#xB294; &#xAE30;&#xB2A5;&#xC744; &#xC81C;&#xACF5;&#xD55C;&#xB2E4;. 2&#xD3B8;&#xC5D0;&#xC11C; &#xC124;&#xBA85;&#xD55C; &#xC7A5;&#xC560; &#xB300;&#xC751; &#xD50C;&#xB79C;&#xC744; &#xC218;&#xD589;&#xD558;&#xB294; &#xB3D9;&#xC548; &#xB85C;&#xADF8;&#xB97C; &#xACC4;&#xC18D; &#xC313;&#xC544;&#xB450;&#xC5B4;&#xC11C; &#xC774;&#xAC78; &#xBD84;&#xC11D;&#xD558;&#xC5EC; Lambda&#xB85C; &#xC62E;&#xAE38; API&#xC758; &#xC21C;&#xC11C;&#xB97C; &#xC815;&#xD588;&#xB2E4;. &#xC804;&#xCCB4;&#xC801;&#xC73C;&#xB85C; &#xC62E;&#xAE38; API&#xC218;&#xB294; 100&#xAC1C;&#xAC00; &#xC0B4;&#xC9DD; &#xB118;&#xB294; &#xC218;&#xC600;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xB85C;&#xADF8;&#xB97C; &#xBCF4;&#xB2C8; &#xC774;&#xC804;&#xCCB4;&#xAC00; &#xC9C0;&#xAE08; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xAC83;&#xC740; &#xC544;&#xB2C8;&#xC5C8;&#xB2E4;. 3&#xC8FC; &#xB3D9;&#xC548; &#xD638;&#xCD9C;&#xB41C; API&#xC758; &#xC218;&#xB294; 50 &#xC815;&#xB3C4;&#xAC00; &#xB418;&#xC5C8;&#xC73C;&#xBA70;, &#xC774; &#xC911; &#xB9CE;&#xC774; &#xD638;&#xCD9C;&#xB418;&#xACE0; &#xB0B4;&#xBD80; &#xCF54;&#xB4DC;&#xAC00; &#xBE44;&#xAD50;&#xC801; &#xAC04;&#xB2E8;&#xD55C; &#xAC83;&#xBD80;&#xD130; &#xC791;&#xC5C5;&#xC744; &#xC2DC;&#xC791;&#xD588;&#xB2E4;. S3&#xC5D0; &#xC313;&#xC544;&#xB454; &#xB85C;&#xADF8;&#xB294; python&#xC758; boto3&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xADF8;&#xB0E5; &#xB178;&#xD2B8;&#xBD81;&#xC73C;&#xB85C; &#xB2E4;&#xC6B4;&#xBC1B;&#xC544;&#xC11C; gz &#xC555;&#xCD95;&#xC744; &#xD480;&#xACE0; &#xB0B4;&#xAC00; &#xD544;&#xC694;&#xD55C; &#xC815;&#xBCF4;&#xB9CC; &#xB530;&#xB85C; &#xCD94;&#xB824;&#xC11C; csv&#xB85C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC11C; &#xAC01; url path &#xBCC4;&#xB85C; &#xD638;&#xCD9C; &#xBE48;&#xB3C4;&#xB97C; &#xCE74;&#xC6B4;&#xD305;&#xD558;&#xC600;&#xB2E4;. &#xADF8;&#xB7F0;&#xB370; path&#xB97C; &#xC778;&#xC790;&#xB85C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xB294; &#xC804;&#xBD80; &#xB2E4;&#xB978; path url&#xB85C; &#xC778;&#xC2DD;&#xB418;&#xC5B4;&#xC11C; &#xAC04;&#xB2E8;&#xD558;&#xAC8C; &#xADF8;&#xB7F0; &#xACBD;&#xC6B0;&#xB9CC; &#xB530;&#xB85C; path pattern&#xC744; &#xB9CC;&#xB4E4;&#xC5B4;&#xC11C; csv &#xD30C;&#xC77C;&#xC744; &#xB9CC;&#xB4E4;&#xB3C4;&#xB85D; &#xC218;&#xC815;&#xD588;&#xB2E4;. S3&#xC5D0; &#xC313;&#xC544;&#xB454; &#xB85C;&#xADF8;&#xB97C; &#xBCF4;&#xB2C8; querystring &#xC815;&#xBCF4;&#xB294; &#xBCFC; &#xC218; &#xC788;&#xC5C8;&#xC9C0;&#xB9CC;, POST &#xC694;&#xCCAD;&#xC5D0; &#xB300;&#xD55C; body &#xC815;&#xBCF4;&#xB294; &#xC5C6;&#xC5C8;&#xB2E4;. headers&#xC758; &#xC815;&#xBCF4;&#xAC00; &#xC804;&#xBD80; &#xB2E4; &#xC788;&#xB294;&#xAC74; &#xC544;&#xB2C8;&#xC5C8;&#xC9C0;&#xB9CC; &#xC911;&#xC694;&#xD55C; &#xBA87;&#xAC00;&#xC9C0;&#xB294; &#xC81C;&#xACF5;&#xD574;&#xC8FC;&#xACE0; &#xC788;&#xC5C8;&#xB2E4;. &#xCCAB;&#xBC88;&#xC9F8;&#xB85C; &#xC62E;&#xAE38; API&#xB294; &#xB124;&#xBC88;&#xC9F8;&#xB85C; &#xC790;&#xC8FC; &#xC694;&#xCCAD;&#xB418;&#xB294; &#xC0AC;&#xC6A9;&#xC790; &#xC815;&#xBCF4;&#xB97C; JSON &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xBCF4;&#xB0B4;&#xC8FC;&#xB294; API(/user/{id})&#xB85C; &#xC815;&#xD588;&#xB2E4;. Lambda &#xBA85;&#xCE6D;&#xB3C4; &#xADF8;&#xB0E5; api-user-id&#xB85C; &#xC9C0;&#xC5C8;&#xB2E4;. &#xCCAB;&#xBC88;&#xC9F8; &#xB9AC;&#xBBF8;&#xD2B8; : Lambda &#xB9AC;&#xBBF8;&#xD2B8; AWS Lambda &#xB9AC;&#xBBF8;&#xD2B8;&#xC758; &#xAE30;&#xBCF8;&#xAC12;&#xC740; &#xAC01; &#xB9AC;&#xC83C; &#xB2F9; 100&#xBC88;&#xC774;&#xB2E4;. &#xB3D9;&#xC2DC;&#xC5D0; &#xC218;&#xD589;&#xAC00;&#xB2A5;&#xD55C; Lambda&#xC758; &#xC218;&#xB97C; &#xB73B;&#xD55C;&#xB2E4;. &#xB300;&#xB7B5;&#xC801;&#xC73C;&#xB85C; &#xC218;&#xD589;&#xC2DC;&#xAC04;&#xC774; 100ms&#xC778; Lambda&#xC778; &#xACBD;&#xC6B0; &#xCD08;&#xB2F9; 1&#xCC9C;&#xBC88;&#xAE4C;&#xC9C0; &#xD638;&#xCD9C;&#xD574;&#xB3C4; &#xAD1C;&#xCC2E;&#xB2E4;. &#xBB3C;&#xB85C; &#xC774; &#xC218;&#xCE58;&#xB294; &#xD3C9;&#xADE0;&#xC801;&#xC778; &#xAC83;&#xC774;&#xC9C0; &#xC774;&#xB7F0; &#xC694;&#xCCAD;&#xC774; &#xC21C;&#xAC04;&#xC801;&#xC73C;&#xB85C; 100&#xBC88; &#xC774;&#xC0C1; &#xD638;&#xCD9C;&#xB418;&#xBA74; &#xC2E4;&#xD328;&#xAC00; &#xBC1C;&#xC0DD;&#xD55C;&#xB2E4;. Lambda &#xB9AC;&#xBBF8;&#xD2B8;&#xAC00; &#xBC1C;&#xC0DD;&#xD55C; &#xAC83;&#xC740; Lambda&#xCABD; CloudWatch &#xB85C;&#xADF8;&#xC5D0;&#xC11C;&#xB294; &#xD655;&#xC778;&#xC774; &#xB418;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;. &#xC65C;&#xB0D0;&#xBA74; &#xC218;&#xD589; &#xC790;&#xCCB4;&#xAC00; &#xC548;&#xB418;&#xC5C8;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; Lambda&#xC5D0; &#xB85C;&#xADF8;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;. &#xD574;&#xB2F9; Lambda&#xB85C; &#xC5F0;&#xACB0;&#xB41C; API Gateway&#xC758; &#xC624;&#xB958;&#xB97C; CloudWatch&#xB85C; &#xB85C;&#xADF8;&#xB97C; &#xB0A8;&#xAE30;&#xB3C4;&#xB85D; &#xC124;&#xC815;&#xD558;&#xBA74; &#xD655;&#xC778;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xC815;&#xD655;&#xC778; &#xC624;&#xB958; &#xBA54;&#xC138;&#xC9C0;&#xB294; &#xAE30;&#xC5B5;&#xC774; &#xB098;&#xC9C0; &#xC54A;&#xC9C0;&#xB9CC; exceed&#xB85C; &#xAC80;&#xC0C9;&#xC744; &#xD55C;&#xAC83; &#xAC19;&#xB2E4;. &#xD604;&#xC7AC; &#xD68C;&#xC0AC; &#xACC4;&#xC815;&#xC5D0;&#xC11C;&#xB294; &#xB3C4;&#xCFC4; &#xB9AC;&#xC83C;&#xC5D0; Lambda &#xB9AC;&#xBBF8;&#xD2B8;&#xB97C; 200&#xAC1C;&#xB85C; &#xB298;&#xB824;&#xB193;&#xC740; &#xC0C1;&#xD0DC;&#xC600;&#xB2E4;. api-user-id&#xB97C; &#xBC30;&#xD3EC;&#xD55C; &#xD6C4; &#xC5BC;&#xB9C8; &#xC9C0;&#xB098;&#xC9C0; &#xC54A;&#xC544;&#xC11C; 5XX &#xC624;&#xB958;&#xAC00; &#xBD84;&#xB2F9; 150&#xBC88; &#xC815;&#xB3C4; &#xACC4;&#xC18D; &#xBC1C;&#xC0DD;&#xD558;&#xC600;&#xB2E4;. &#xC77C;&#xB2E8; API&#xB97C; &#xC6D0;&#xB798;&#xB300;&#xB85C; &#xB864;&#xBC31;&#xD55C; &#xD6C4; &#xB85C;&#xADF8;&#xB97C; &#xBCF4;&#xB2C8; Lambda &#xB9AC;&#xBBF8;&#xD2B8;&#xC5D0; &#xAC78;&#xB838;&#xB2E4;. &#xCC98;&#xC74C;&#xBD80;&#xD130; &#xB108;&#xBB34; &#xC694;&#xCCAD;&#xC774; &#xB9CE;&#xC740; API&#xB97C; &#xC62E;&#xAE34;&#xAC83; &#xAC19;&#xB2E4;. AWS&#xC5D0; &#xC694;&#xCCAD;&#xC744; &#xD588;&#xB2E4;. EC2&#xB85C; &#xB418;&#xC5B4;&#xC788;&#xB294; &#xC11C;&#xBC84;&#xB97C; Lambda&#xB85C; &#xC62E;&#xAE30;&#xACE0; &#xC788;&#xB2E4;. 100&#xAC1C;&#xAC00; &#xB118;&#xB294;&#xAC78; &#xBAA8;&#xB450; &#xC62E;&#xAE38;&#xB824;&#xACE0; &#xD558;&#xB294;&#xB370; &#xADF8; &#xC911; 1&#xAC1C;&#xB9CC; &#xC62E;&#xACBC;&#xB294;&#xB370;&#xB3C4; Lambda &#xB9AC;&#xBBF8;&#xD2B8;&#xAC00; &#xBC1C;&#xC0DD;&#xD588;&#xB2E4;. 1 ~ 2k &#xC815;&#xB3C4;&#xB85C; &#xC880; &#xC62C;&#xB824;&#xB2EC;&#xB77C;&#xACE0; &#xC694;&#xCCAD;&#xC744; &#xD588;&#xB354;&#xB2C8; &#xC774;&#xD2C0; &#xB4A4; &#xC544;&#xCE68;&#xC5D0; &#xCD9C;&#xADFC;&#xD574;&#xC11C; &#xD655;&#xC778;&#xD558;&#xB2C8; 2000&#xAC1C;&#xB85C; &#xB9AC;&#xBBF8;&#xD2B8;&#xB97C; &#xC62C;&#xB838;&#xB2E4;&#xB294; &#xB0B4;&#xC6A9;&#xC744; &#xD655;&#xC778; &#xD560; &#xC218; &#xC788;&#xC5C8;&#xB2E4;. &#xB450;&#xBC88;&#xC9F8; &#xB9AC;&#xBBF8;&#xD2B8; : Subnet Limit Lambda &#xB9AC;&#xBBF8;&#xD2B8;&#xAC00; 2000&#xAC1C;&#xB85C; &#xC99D;&#xAC00;&#xB418;&#xC5C8;&#xB2E4;&#xB294; &#xC18C;&#xC2DD;&#xC744; &#xB4E3;&#xACE0; API&#xB97C; &#xB2E4;&#xC2DC; &#xBC30;&#xD3EC;&#xD558;&#xC600;&#xB2E4;. &#xC544;&#xCE68; &#xC77C;&#xCC0D; &#xBC30;&#xD3EC;&#xD588;&#xB294;&#xB370; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xC798; &#xB3D9;&#xC791;&#xD558;&#xACE0; &#xC788;&#xC5C8;&#xB2E4;. &#xC624;&#xD6C4; 4&#xC2DC;&#xC5D0; &#xC571; &#xD478;&#xC2DC;&#xAC00; &#xB098;&#xAC04; &#xB4A4; Lambda &#xC218;&#xD589;&#xC774; &#xBD84;&#xB2F9; 1&#xB9CC;&#xBC88;&#xC744; &#xB118;&#xAE30;&#xBA74;&#xC11C; 5XX &#xC624;&#xB958;&#xAC00; &#xC9C0;&#xC18D;&#xC801;&#xC73C;&#xB85C; &#xBC1C;&#xC0DD;&#xD588;&#xB2E4;. &#xB2E4;&#xC2DC; API&#xB97C; &#xB864;&#xBC31;&#xD558;&#xACE0; API Gateway&#xCABD; &#xC624;&#xB958;&#xB97C; &#xC0B4;&#xD3B4;&#xBCF4;&#xB2C8; &#xCC98;&#xC74C;&#xBCF4;&#xB294; &#xBA54;&#xC138;&#xC9C0; &#xC600;&#xB2E4;. 123456789Endpoint response body before transformations:{ &quot;Message&quot;: &quot;Lambda was not able to create an ENI in the VPC of the Lambda function because the limit for Network Interfaces has been reached.&quot;, &quot;Type&quot;: &quot;User&quot;}Execution failed due to configuration error: Malformed Lambda proxy responseMethod completed with status: 502 VPC&#xC5D0;&#xC11C; ENI&#xB97C; &#xB9CC;&#xB4E4;&#xC9C0; &#xBABB;&#xD588;&#xB2E8;&#xB2E4;. Lambda&#xB97C; VPC&#xC5D0;&#xC11C; &#xC218;&#xD589;&#xB418;&#xB3C4;&#xB85D; &#xC124;&#xC815;&#xD560; &#xD544;&#xC694;&#xB294; &#xC5C6;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xBCF4;&#xC548;&#xC744; &#xC704;&#xD574;&#xC11C; &#xADF8;&#xB807;&#xAC8C; &#xC124;&#xC815;&#xD574; &#xB193;&#xB294; &#xACBD;&#xC6B0;&#xAC00; &#xB9CE;&#xB2E4;. MySQL&#xC758; &#xACBD;&#xC6B0; &#xC0AC;&#xC6A9;&#xC790; ID, &#xBE44;&#xBC00;&#xBC88;&#xD638;&#xB85C;&#xB9CC; &#xBCF4;&#xC548;&#xC744; &#xC124;&#xC815;&#xD574; &#xB193;&#xB294;&#xAC83; &#xBCF4;&#xB2E4;&#xB294; &#xD2B9;&#xC815; &#xB300;&#xC5ED;&#xB300;&#xC758; IP&#xB4E4;&#xB9CC; &#xC811;&#xC18D;&#xC744; &#xD5C8;&#xC6A9;&#xD574; &#xB193;&#xB294;&#xAC8C; &#xB354; &#xC548;&#xC804;&#xD558;&#xB2E4;. Lambda &#xAC19;&#xC740; &#xACBD;&#xC6B0;&#xB294; &#xC5B4;&#xB5A4; IP&#xB85C; &#xC0DD;&#xC131;&#xB418;&#xB294;&#xC9C0; &#xC6B0;&#xB9AC;&#xAC00; &#xC54C; &#xC218;&#xAC00; &#xC5C6;&#xC73C;&#xBBC0;&#xB85C; VPC &#xC124;&#xC815;&#xC744; &#xD1B5;&#xD574;&#xC11C; &#xD2B9;&#xC815; &#xB300;&#xC5ED;&#xB300;&#xC758; subnet &#xC548;&#xC5D0;&#xC11C; &#xC0DD;&#xC131;&#xB418;&#xB3C4;&#xB85D; &#xC124;&#xC815;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. AWS VPC &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xC0DD;&#xC131;&#xB41C; VPC&#xC640; subnet&#xC744; &#xC124;&#xC815;&#xD574; &#xB450;&#xC5C8;&#xB2E4;. subnet&#xC740; 4000&#xAC1C;&#xC9DC;&#xB9AC; 2&#xAC1C;&#xB97C; &#xC124;&#xC815;&#xD588;&#xB2E4;. &#xD569;&#xC774; 8000&#xAC1C;&#xC778;&#xB370;, &#xB3D9;&#xC2DC; &#xC218;&#xD589;&#xC218;&#xAC00; 2000&#xAC1C;&#xC9DC;&#xB9AC; Lambda&#xAC00; &#xB9AC;&#xBBF8;&#xD2B8;&#xC5D0; &#xAC78;&#xB824;&#xC11C; &#xC0DD;&#xC131;&#xB418;&#xC9C0; &#xC54A;&#xC558;&#xB2E4;&#xB2C8;&#x2026; &#xADF8;&#xB798;&#xC11C; 16000&#xAC1C;&#xC9DC;&#xB9AC; subnet&#xC744; &#xD558;&#xB098; &#xB354; &#xC0DD;&#xC131;&#xD558;&#xC600;&#xB2E4;. &#xAE30;&#xC874;&#xC5D0; &#xC218;&#xD589;&#xC911;&#xC774;&#xB358; Lambda&#xB3C4; &#xB9CE;&#xC774; &#xC788;&#xC5C8;&#xC73C;&#xBBC0;&#xB85C;, &#xC774;&#xBC88;&#xC5D0; &#xC0C8;&#xB85C; &#xB9CC;&#xB4E0; api-user-id&#xC5D0;&#xB294; &#xAE30;&#xC874;&#xC758; 4000&#xAC1C; subnet &#xD558;&#xB098;&#xC640; &#xC0C8;&#xB85C;&#xB9CC;&#xB4E0; 16000&#xAC1C; &#xD558;&#xB098;&#xB97C; &#xC124;&#xC815;&#xD574; &#xB450;&#xC5C8;&#xB2E4;. &#xD569;&#xC774; 2&#xB9CC;&#xAC1C;&#xC778;&#xB370; &#xB2F9;&#xC5F0;&#xD788; &#xBD80;&#xC871;&#xD558;&#xC9C0; &#xC54A;&#xC73C;&#xB9AC;&#xB77C; &#xD310;&#xB2E8;&#xD588;&#xB2E4;. &#xC138;&#xBC88;&#xC9F8; &#xB9AC;&#xBBF8;&#xD2B8; : Network Interface &#xB9AC;&#xBBF8;&#xD2B8; &#xC0AC;&#xC2E4;&#xC0C1; &#xB450;&#xBC88;&#xC9F8; &#xB9AC;&#xBBF8;&#xD2B8;&#xB294; VPC &#xB9AC;&#xBBF8;&#xD2B8;&#xAC00; &#xC544;&#xB2C8;&#xB77C; Network Interface &#xB9AC;&#xBBF8;&#xD2B8; &#xC600;&#xB2E4;. &#xC774;&#xD2C0; &#xB4A4;&#xC5D0; &#xD574;&#xB2F9; API&#xB97C; &#xB2E4;&#xC2DC; &#xBC30;&#xD3EC;&#xD588;&#xB2E4;. &#xADF8;&#xB7F0;&#xB370; &#xBE44;&#xC2B7;&#xD55C; &#xC2DC;&#xAE30;&#xC5D0; &#xBE44;&#xC2B7;&#xD55C; &#xBE48;&#xB3C4;&#xB85C; 5XX &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xC600;&#xB2E4;. &#xBD84;&#xBA85; subnet&#xC758; &#xC218;&#xAC00; 2&#xBC30; &#xC774;&#xC0C1;&#xC73C;&#xB85C; &#xB298;&#xB838;&#xB294;&#xB370;&#xB3C4; &#xACC4;&#xC18D; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xC600;&#xB2E4;. &#xC65C; &#xADF8;&#xB7F4;&#xAE4C; &#xC0DD;&#xAC01;&#xC744; &#xD574;&#xBD24;&#xB294;&#xB370;, subnet 2&#xAC1C; (4000&#xAC1C;, 16000&#xAC1C;)&#xB97C; &#xD569;&#xCCD0;&#xC11C; 2&#xB9CC;&#xAC1C; &#xC911;&#xC5D0; 1&#xAC1C;&#xB85C; &#xD560;&#xB2F9;&#xD558;&#xB294;&#xAC8C; &#xC544;&#xB2C8;&#xB77C; 2&#xAC1C;&#xC758; subnet &#xC911; &#xD558;&#xB098;&#xB97C; &#xC120;&#xD0DD;&#xD574;&#xC11C; &#xAC70;&#xAE30;&#xC5D0; &#xD560;&#xB2F9;&#xC744; &#xD558;&#xB294; &#xC2DD;&#xC744; &#xB3D9;&#xC791;&#xD558;&#xB294;&#xAC8C; &#xC544;&#xB2CC;&#xAC00;&#xB77C; &#xD310;&#xB2E8;&#xB41C;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xBC14;&#xB85C; 4000&#xAC1C;&#xC758; subnet&#xC744; &#xC124;&#xC815;&#xC5D0;&#xC11C; &#xC0AD;&#xC81C;&#xD558;&#xC600;&#xB2E4;. &#xC0AD;&#xC81C;&#xD558;&#xC790;&#xB9C8;&#xC790; &#xC694;&#xCCAD; &#xB300;&#xBE44; &#xC624;&#xB958;&#xAC00; 50% &#xAC00;&#xAE4C;&#xC774;&#xB85C; &#xBC1C;&#xC0DD;&#xD588;&#xB2E4;. &#xB2E4;&#xC2DC; &#xD574;&#xB2F9; API&#xB97C; &#xB864;&#xBC31;&#xD588;&#xB2E4;. &#xADF8; &#xB4A4;&#xC5D0; &#xC0DD;&#xAC01;&#xD574;&#xBCF4;&#xB2C8; &#xC694;&#xCCAD;&#xC744; &#xC0AD;&#xC81C;&#xD55C; subnet&#xCABD; &#xC8FC;&#xC18C;&#xB85C; &#xACC4;&#xC18D;&#xD574;&#xC11C; &#xBCF4;&#xB0C8;&#xB358; &#xAC83;&#xC73C;&#xB85C; &#xCD94;&#xC815;&#xB41C;&#xB2E4;. 2&#xAC1C; &#xC911; 1&#xAC1C;&#xB97C; &#xC0AD;&#xC81C;&#xD588;&#xC73C;&#xB2C8; 50% &#xC815;&#xB3C4;&#xC758; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD55C;&#xAC8C; &#xC544;&#xB2CC;&#xAC00; &#xC0DD;&#xAC01;&#xB41C;&#xB2E4;. &#xADF8;&#xB7F0;&#xB370; &#xBB38;&#xC81C;&#xB294; subnet&#xC758; &#xAC2F;&#xC218;&#xAC00; &#xBD80;&#xC871;&#xD574;&#xC11C;&#xAC00; &#xC544;&#xB2C8;&#xB77C; &#xB2E4;&#xB978; &#xACF3;&#xC774;&#xC5C8;&#xB2E4;. AWS&#xC5D0; &#xBB38;&#xC758;&#xB97C; &#xD558;&#xB2C8; http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Appendix_Limits.html#vpc-limits-enis &#xB9C1;&#xD06C;&#xB97C; &#xBCF4;&#xB0B4;&#xC8FC;&#xC5C8;&#xB2E4;. &#xB9AC;&#xC804;&#xB2F9; Network Interface&#xAC00; &#xCD5C;&#xB300; 350&#xAC1C;&#xB77C;&#xACE0; &#xC124;&#xBA85;&#xC774; &#xB418;&#xC5B4; &#xC788;&#xB2E4;. &#xB354; &#xB298;&#xB9AC;&#xACE0; &#xC2F6;&#xC73C;&#xBA74; &#xBB38;&#xC758;&#xB97C; &#xD558;&#xB77C;&#xACE0; &#xB418;&#xC5B4;&#xC788;&#xB2E4;. &#xD68C;&#xC0AC; &#xB3D9;&#xB8CC;&#xBD84;&#xC774; &#xC800; &#xC815;&#xBCF4;&#xB97C; &#xC5B4;&#xB514;&#xC11C; &#xD655;&#xC778; &#xAC00;&#xB2A5;&#xD55C;&#xC9C0; &#xCC3E;&#xC544;&#xC8FC;&#xC5C8;&#xB2E4;. EC2&#xB85C; &#xB4E4;&#xC5B4;&#xAC00;&#xC11C; &#xC67C;&#xCABD;&#xC5D0; &#xBCF4;&#xBA74; Network Interface&#xB77C;&#xB294; &#xD0ED;&#xC774; &#xC788;&#xB2E4;. &#xAC70;&#xAE30;&#xC5D0; &#xB4E4;&#xC5B4;&#xAC00;&#xBCF4;&#xB2C8; &#xD604;&#xC7AC; &#xC0AC;&#xC6A9;&#xC911;&#xC778; Network Interface&#xAC00; 341&#xAC1C; &#xC600;&#xACE0;, &#xADF8;&#xC911; Description&#xC774; AWS Lambda &#xB85C; &#xC2DC;&#xC791;&#xD558;&#xB294;&#xAC8C; 240&#xAC1C;&#xAC00; &#xB118;&#xC5C8;&#xB2E4;. &#xB2E4;&#xC2DC; AWS&#xC5D0; &#xBB38;&#xC758;&#xB97C; &#xD558;&#xC5EC; &#xD574;&#xB2F9; &#xB9AC;&#xBBF8;&#xD2B8;&#xB97C; &#xB298;&#xB824;&#xB2EC;&#xB77C;&#xACE0; &#xD558;&#xC600;&#xB354;&#xB2C8; 2000&#xAC1C;&#xB85C; &#xB298;&#xB824;&#xC92C;&#xB2E4;&#xB294; &#xB2F5;&#xBCC0;&#xC774; &#xC654;&#xB2E4;. &#xC77C;&#xB2E8; subnet&#xC744; 4000&#xAC1C; 6&#xAC1C;&#xB85C; &#xB2E4;&#xC2DC; &#xD560;&#xB2F9;&#xC744; &#xD558;&#xC5EC;&#xC11C; &#xBC30;&#xD3EC;&#xB97C; &#xD588;&#xB294;&#xB370;, &#xADF8; &#xB4A4;&#xB85C;&#xB294; &#xD574;&#xB2F9; &#xC624;&#xB958;&#xAC00; &#xB354; &#xC774;&#xC0C1; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xB3D9;&#xC791;&#xD558;&#xC600;&#xB2E4;. &#xB124;&#xBC88;&#xC9F8; &#xB9AC;&#xBBF8;&#xD2B8; : API Gateway &#xB9AC;&#xBBF8;&#xD2B8; API Gateway&#xC5D0;&#xB3C4; &#xB9AC;&#xBBF8;&#xD2B8;&#xAC00; &#xC788;&#xB2E4;. &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C;&#xB294; &#xD3C9;&#xADE0; &#xCD08;&#xB2F9; 1000&#xBC88;, &#xCD5C;&#xB300; 1&#xCD08;&#xB2F9; 2000&#xBC88;&#xC758; &#xC694;&#xCCAD;&#xC744; &#xCC98;&#xB9AC; &#xAC00;&#xB2A5;&#xD558;&#xB3C4;&#xB85D; &#xB418;&#xC5B4;&#xC788;&#xB2E4;. CloudWatch&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xC0B4;&#xD3B4;&#xBCF4;&#xB358; &#xC911; &#xD2B9;&#xC815; &#xC2DC;&#xAC04;&#xB300;&#xC5D0; 5XX &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xB418;&#xC5C8;&#xAE38;&#xB798; &#xADF8;&#xB54C;&#xB97C; &#xC0B4;&#xD3B4;&#xBCF4;&#xB2C8; 1&#xBD84;&#xC5D0; 2&#xB9CC;&#xBC88; &#xC815;&#xB3C4;&#xC758; &#xC694;&#xCCAD;&#xC774; &#xC788;&#xC5C8;&#xB2E4;. &#xCD08;&#xB2F9; &#xC694;&#xCCAD;&#xC73C;&#xB85C; &#xACC4;&#xC0B0;&#xD558;&#xBA74; API Gateway&#xC758; &#xB9AC;&#xBBF8;&#xD2B8;&#xBCF4;&#xB2E4; &#xC791;&#xC558;&#xC9C0;&#xB9CC;, &#xD639;&#xC2DC; &#xC9E7;&#xC740; &#xC2DC;&#xAC04;&#xC5D0; 2000&#xBC88; &#xC774;&#xC0C1;&#xC758; &#xC694;&#xCCAD;&#xC774; &#xC788;&#xC9C0; &#xC54A;&#xC558;&#xB098; &#xD310;&#xB2E8;&#xB418;&#xC5B4; AWS&#xC5D0; &#xC694;&#xCCAD;&#xD558;&#xC600;&#xC73C;&#xB098;, API Gateway&#xC758; &#xBB38;&#xC81C;&#xB294; &#xC544;&#xB2C8;&#xC5C8;&#xACE0;, Lambda &#xB9AC;&#xBBF8;&#xD2B8;&#xAC00; &#xBC1C;&#xC0DD;&#xD55C; &#xAC83;&#xC73C;&#xB85C; &#xD310;&#xB2E8;&#xB418;&#xC5C8;&#xB2E4;&#xBA74;&#xC11C; Lambda &#xB9AC;&#xBBF8;&#xD2B8;&#xB97C; 3000&#xAC1C;&#xB85C; &#xB298;&#xB824;&#xC8FC;&#xC5C8;&#xB2E4;. &#xADF8; &#xC774;&#xD6C4;&#x2026; &#xADF8; &#xB4A4; &#xD574;&#xB2F9; API&#xB294; &#xC798; &#xB3D9;&#xC791;&#xD558;&#xACE0; &#xC788;&#xB2E4;. &#xB2E4;&#xB978; API&#xB4E4;&#xB3C4; &#xC791;&#xC5C5;&#xD574;&#xC11C; &#xBC30;&#xD3EC;&#xB97C; &#xD588;&#xB294;&#xB370; &#xC544;&#xBB34;&#xB7F0; &#xBB38;&#xC81C;&#xAC00; &#xC5C6;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xC55E;&#xC73C;&#xB85C; &#xBA87; &#xAC1C;&#xC758; API&#xB97C; &#xB354; &#xBC30;&#xD3EC;&#xD558;&#xBA74; &#xD604;&#xC7AC;&#xC758; &#xB9AC;&#xBBF8;&#xD2B8;&#xB97C; &#xB2E4;&#xC2DC; &#xB118;&#xAE30;&#xC9C0; &#xC54A;&#xC744;&#xAE4C; &#xAC71;&#xC815;&#xC774; &#xB41C;&#xB2E4;. &#xADF8;&#xAC78; &#xBBF8;&#xB9AC; &#xC608;&#xCE21;&#xD574;&#xC11C; AWS&#xC5D0; &#xC694;&#xCCAD;&#xC744; &#xD558;&#xBA74; &#xACFC;&#xC5F0; &#xB4E4;&#xC5B4;&#xC904;&#xC9C0; &#xBAA8;&#xB974;&#xACA0;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xD56D;&#xC0C1; API&#xB97C; &#xBC30;&#xD3EC;&#xD558;&#xACE0;&#xB294; Lambda &#xC2E4;&#xD589;&#xC218;, Network Interface &#xC218; &#xB4F1;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xBAA8;&#xB2C8;&#xD130;&#xB9C1;&#xC744; &#xD558;&#xACE0; &#xC788;&#xB2E4;. &#xAE30;&#xD0C0; &#xC791;&#xC5C5;&#xD558;&#xBA74;&#xC11C; &#xACAA;&#xC740; &#xC77C;&#xB4E4; 1. CloudFront CloudFront&#xC5D0;&#xC11C; &#xCE90;&#xC2DC;&#xC124;&#xC815; &#xD560; &#xB54C; headers&#xC5D0; &#xD1A0;&#xD070; &#xAC19;&#xC740;&#xAC83;&#xC744; &#xC804;&#xB2EC;&#xD558;&#xC5EC; &#xADF8;&#xAC83;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xB2E4;&#xB978; &#xAC12;&#xC744; &#xC918;&#xC57C;&#xD560; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xC548;&#xB41C;&#xB2E4;. headers&#xC5D0; &#xB2E4;&#xB978; &#xC815;&#xBCF4;&#xB97C; &#xC804;&#xB2EC;&#xD558;&#xB354;&#xB77C;&#xB3C4; &#xCFFC;&#xB9AC;&#xC2A4;&#xD2B8;&#xB9C1;&#xC774; &#xB3D9;&#xC77C;&#xD55C; &#xACBD;&#xC6B0; &#xCE90;&#xC2DC;&#xC5D0;&#xC11C; &#xAC19;&#xC740; &#xAC12;&#xC73C;&#xB85C; &#xC751;&#xB2F5;&#xD55C;&#xB2E4;. CloudFront&#xC5D0;&#xC11C; API Gateway&#xB85C; headers&#xC758; &#xC815;&#xBCF4; &#xC911; &#xD3EC;&#xC6CC;&#xB4DC; &#xD560;&#xAC8C; &#xC788;&#xB294; &#xACBD;&#xC6B0; host &#xC815;&#xBCF4;&#xB97C; &#xB118;&#xACA8;&#xC8FC;&#xBA74; CloudFront &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD55C;&#xB2E4;. 2. Lambda Lambda &#xC791;&#xC5C5;&#xC2DC; console.log &#xAC19;&#xC774; &#xCD9C;&#xB825;&#xBB38;&#xC744; &#xB123;&#xC5B4;&#xC8FC;&#xBA74; &#xD574;&#xB2F9; Lambda&#xC758; CloudWatch&#xC5D0;&#xC11C; &#xCD9C;&#xB825;&#xBB38;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xB2E4;. &#xC774;&#xAC78; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xCD08;&#xBC18;&#xC5D0; &#xD14C;&#xC2A4;&#xD2B8; &#xD560; &#xB54C;&#xB294; &#xD544;&#xC694;&#xD55C; &#xBAA8;&#xB4E0; &#xACF3;&#xC5D0; console.log, console.info, console.dir &#xB4F1;&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xD655;&#xC778;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xBA70;, &#xC11C;&#xBE44;&#xC2A4;&#xC6A9;&#xC73C;&#xB85C; &#xC62C;&#xB9B4;&#xB54C;&#xB3C4; event &#xC815;&#xBCF4;&#xB294; console.info&#xB85C; &#xCD9C;&#xB825;&#xC744; &#xD574; &#xB193;&#xC73C;&#xBA74; &#xC624;&#xB958; &#xBC1C;&#xC0DD;&#xC2DC; &#xBB50; &#xB54C;&#xBB38;&#xC774;&#xC9C0; &#xD655;&#xC778;&#xD560;&#xB54C; &#xD3B8;&#xB9AC;&#xD558;&#xB2E4;. API Gateway&#xC758; &#xB85C;&#xADF8;&#xB97C; &#xBCF4;&#xBA74; event&#xC815;&#xBCF4;&#xAC00; &#xC9E4;&#xB824;&#xC11C; &#xCD9C;&#xB825;&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC804;&#xCCB4; &#xB2E4;&#xB97C; &#xBCFC;&#xB824;&#xBA74; Lambda&#xCABD;&#xC5D0;&#xC11C; &#xCD9C;&#xB825;&#xD574;&#xC918;&#xC57C; &#xD55C;&#xB2E4;. &#xB2F9;&#xC5F0;&#xD788; &#xC774;&#xB807;&#xAC8C; &#xD558;&#xBA74; &#xC131;&#xB2A5;&#xC5D0; &#xC601;&#xD5A5;&#xC744; &#xBBF8;&#xCE58;&#xBBC0;&#xB85C; &#xADF8;&#xAC8C; &#xAC71;&#xC815;&#xC2A4;&#xB7FD;&#xB2E4;&#xBA74; &#xCD5C;&#xC18C;&#xD55C; try-catch&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xC624;&#xB958; &#xC0C1;&#xD669;&#xC5D0;&#xC11C;&#xB9CC;&#xC774;&#xB77C;&#xB3C4; &#xCD9C;&#xB825;&#xD574; &#xB193;&#xC73C;&#xBA74; &#xB098;&#xC911;&#xC5D0; &#xB514;&#xBC84;&#xAE45; &#xD560; &#xB54C; &#xC88B;&#xB2E4;. TypeScript&#xB85C; &#xC791;&#xC5C5;&#xD560; &#xACBD;&#xC6B0; Node 4.3&#xC5D0;&#xC11C; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xB3D9;&#xC791;&#xD558;&#xB294; &#xCF54;&#xB4DC;&#xB77C;&#xB3C4; Lambda&#xC5D0; &#xC62C;&#xB838;&#xC744; &#xACBD;&#xC6B0; &#xB3D9;&#xC791;&#xD558;&#xC9C0; &#xC54A;&#xC744; &#xC218;&#xB3C4; &#xC788;&#xC73C;&#xB2C8; &#xAF2D; &#xD14C;&#xC2A4;&#xD2B8;&#xB97C; &#xBA3C;&#xC800; &#xD574;&#xBCF4;&#xACE0; &#xC791;&#xC5C5;&#xC744; &#xD558;&#xB294;&#xAC8C; &#xC88B;&#xB2E4;. class, async/await &#xB4F1;&#xC740; &#xC81C;&#xB300;&#xB85C; &#xB418;&#xC9C0;&#xB9CC; static, default parameter &#xB4F1;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xC81C;&#xB300;&#xB85C; &#xB3D9;&#xC791;&#xD558;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;. 3. API Gateway API Gateway&#xB294; Lambda &#xD638;&#xCD9C;&#xD6C4; 30&#xCD08; &#xB3D9;&#xC548;&#xB9CC; &#xAE30;&#xB2E4;&#xB9B0;&#xB2E4;. &#xADF8;&#xB7EC;&#xB2C8; &#xD574;&#xB2F9; Lambda &#xC2E4;&#xD589;&#xC2DC;&#xAC04;&#xC744; 30&#xCD08; &#xC774;&#xC0C1;&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD560; &#xD544;&#xC694;&#xAC00; &#xC5C6;&#xB2E4;. API Gateway&#xB97C; {proxy+} &#xC124;&#xC815;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xD558;&#xACE0;, 1&#xAC1C;&#xC758; Lambda&#xC5D0;&#xC11C; 2&#xAC00;&#xC9C0; &#xC774;&#xC0C1;&#xC758; API &#xCF54;&#xB4DC;&#xAC00; &#xB4E4;&#xC5B4;&#xC788;&#xB354;&#xB77C;&#xB3C4;, Lambda&#xB97C; &#xB2E4;&#xB978; &#xC774;&#xB984;&#xC73C;&#xB85C; &#xBC30;&#xD3EC;&#xD558;&#xC5EC; &#xAC01; API&#xBCC4;&#xB85C; &#xD560;&#xB2F9;&#xD558;&#xB294;&#xAC8C; &#xC88B;&#xB2E4;. &#xB9CC;&#xC57D; 1&#xAC1C;&#xC758; Lambda&#xC5D0; 2&#xAC1C; &#xC774;&#xC0C1;&#xC758; API&#xAC00; &#xAC19;&#xC774; &#xCC98;&#xB9AC; &#xB420; &#xACBD;&#xC6B0; &#xC624;&#xB958; &#xBC1C;&#xC0DD; &#xC0C1;&#xD669;&#xC5D0;&#xC11C; &#xB85C;&#xADF8;&#xB85C; &#xD655;&#xC778;&#xD558;&#xB294;&#xAC8C; &#xD798;&#xB4E4;&#xB2E4;. &#xC774;&#xAC8C; &#xB9D8;&#xC5D0; &#xC548;&#xB4E0;&#xB2E4;&#xBA74; &#xB354; &#xC774;&#xC0C1; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xC548;&#xC815;&#xC801;&#xC73C;&#xB85C; &#xC11C;&#xBE44;&#xC2A4;&#xB418;&#xACE0; &#xC788;&#xB294; &#xC0C1;&#xD669;&#xC5D0;&#xC11C; Lambda &#xBC0F; API Gateway&#xC758; {proxy+} &#xC124;&#xC815;&#xC744; &#xD569;&#xCE58;&#xBA74; &#xB41C;&#xB2E4;. API Gateway&#xC5D0;&#xB294; &#xCFFC;&#xB9AC;&#xC2A4;&#xD2B8;&#xB9C1;&#xC744; &#xD30C;&#xC2F1;&#xD558;&#xC5EC; JSON &#xD615;&#xD0DC;&#xB85C; Lambda&#xC5D0; &#xC804;&#xB2EC;&#xB41C;&#xB2E4;. &#xADF8;&#xB7F0;&#xB370; &#xADF8; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xAE30;&#xC874;&#xC758; &#xB2E4;&#xB978; &#xC6F9; &#xD504;&#xB808;&#xC784;&#xC6CC;&#xD06C;&#xB791; &#xB2E4;&#xB974;&#xAC8C; &#xB3D9;&#xC791;&#xD55C;&#xB2E4;. &#xB300;&#xD45C;&#xC801;&#xC778; &#xC608;&#xAC00; &#xCFFC;&#xB9AC;&#xC2A4;&#xD2B8;&#xB9C1;&#xC758; &#xACBD;&#xC6B0; &#xAD6C;&#xBD84;&#xC790;&#xB85C; &amp;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294;&#xB370; API Gateway&#xC5D0;&#xC11C;&#xB294; ;&#xB3C4; &#xAD6C;&#xBD84;&#xC790;&#xB85C; &#xC778;&#xC2DD;&#xC740; &#xD55C;&#xB2E4;. &#xADF8;&#xB807;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; ?idList=1;2;3&amp;filter=name;phone&amp;flag=1;2&#xB85C; &#xC804;&#xB2EC;&#xD560; &#xB54C; API Gateway&#xB294; {IdList: 1, 2: , 3: , filter:name, phone: , flag: 1} &#xC2DD;&#xC73C;&#xB85C; &#xD574;&#xC11D;&#xC744; &#xD574;&#xBC84;&#xB9B0;&#xB2E4;. &#xC800;&#xB7F0; &#xBAA8;&#xC591;&#xC774;&#xB77C;&#xB3C4; &#xC5B5;&#xC9C0;&#xB85C; &#xD574;&#xC11D;&#xD574;&#xC11C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xB3C4; &#xC788;&#xC9C0;&#xB9CC; &#xADF8; &#xACFC;&#xC815;&#xC5D0;&#xC11C; idList&#xC758; 2&#xC640; flag&#xC758; 2&#xAC1C; &#xAC19;&#xC740; key&#xB85C; &#xC778;&#xC2DD;&#xC774; &#xB418;&#xC5B4;&#xC11C; &#xD574;&#xC11D;&#xC774; &#xC560;&#xB9E4;&#xBAA8;&#xD638;&#xD574;&#xC9C4;&#xB2E4;. &#xBC30;&#xC5F4;&#xAC12;&#xC744; ?id=1&amp;id=2&amp;id=3&#xC758; &#xBAA8;&#xC591;&#xC73C;&#xB85C; &#xC804;&#xB2EC;&#xD560; &#xACBD;&#xC6B0;&#xC5D0;&#xB3C4; {id:3}&#xC73C;&#xB85C; &#xB9C8;&#xC9C0;&#xB9C9;&#xAC12; &#xD558;&#xB098;&#xB9CC; &#xB0A8;&#xACA8;&#xB450;&#xACE0; &#xB2E4; &#xC0AC;&#xB77C;&#xC9C4;&#xB2E4;. &#xD604;&#xC7AC;&#xB85C;&#xC11C;&#xB294; &#xC81C;&#xB300;&#xB85C; &#xCC98;&#xB9AC;&#xB418;&#xB3C4;&#xB85D; &#xD558;&#xB294; &#xBC29;&#xBC95;&#xC744; &#xCC3E;&#xC9C0; &#xBABB;&#xD588;&#xB2E4;. CloudFront&#xC0C1;&#xC758; &#xB9AC;&#xD018;&#xC2A4;&#xD2B8; &#xB85C;&#xADF8;&#xB97C; &#xC0B4;&#xD3B4;&#xBCF4;&#xBA74; &#xCFFC;&#xB9AC;&#xC2A4;&#xD2B8;&#xB9C1;&#xC758; &#xBAA8;&#xC591;&#xC774; &#xADF8;&#xB300;&#xB85C; &#xB0A8;&#xC544;&#xC788;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xBD10;&#xC11C;&#xB294; LambdaEdge&#xB97C; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; &#xCFFC;&#xB9AC;&#xC2A4;&#xD2B8;&#xB9C1;&#xC744; &#xC218;&#xC815;&#xD55C; &#xB4A4; API Gateway&#xB85C; &#xC804;&#xB2EC;&#xD558;&#xC5EC; &#xCC98;&#xB9AC;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xB3C4; &#xC788;&#xACA0;&#xC9C0;&#xB9CC;, &#xD604;&#xC2DC;&#xC810;(2017&#xB144; 2&#xC6D4;) LambdaEdge&#xB294; &#xD504;&#xB9AC;&#xBDF0;&#xC778;&#xB370;&#xB2E4;&#xAC00; &#xB9AC;&#xC83C;&#xB2F9; 100&#xAC1C;&#xC758; &#xB9AC;&#xBBF8;&#xD2B8; &#xBC16;&#xC5D0; &#xD5C8;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xC544;&#xC11C; &#xC2E4;&#xC81C; &#xC11C;&#xBE44;&#xC2A4;&#xC5D0; &#xC0AC;&#xC6A9;&#xD558;&#xAE30;&#xC5D0;&#xB294; &#xB9DD;&#xC124;&#xC5EC;&#xC9C4;&#xB2E4;. &#xB2F9;&#xC5F0;&#xD55C; &#xC774;&#xC57C;&#xAE30;&#xC9C0;&#xB9CC; &#xC694;&#xCCAD;&#xD558;&#xB294; &#xCABD;&#xC5D0;&#xC11C; ;&#xB97C; &#xC778;&#xCF54;&#xB529;&#xD558;&#xC5EC; %3B&#xB85C; &#xC804;&#xB2EC;&#xD558;&#xBA74; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xCC98;&#xB9AC;&#xAC00; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. Lambda&#xC640; API Gateway&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; Serverless Web API &#xB9CC;&#xB4E4;&#xAE30; Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #1 (GET, POST) Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #2 (ANY, Deploy Staging, Node.JS Route) Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #3 (Proxy Resource) Lambda Node.JS Packaging AWS Lambda&#xC5D0; Python Handler &#xB9CC;&#xB4E4;&#xAE30; Lambda Python Packaging Lambda C# Handler &#xB9CC;&#xB4E4;&#xAE30;","categories":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/categories/AWS/"},{"name":"Lambda","slug":"AWS/Lambda","permalink":"http://DevStarSJ.github.io/categories/AWS/Lambda/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/tags/AWS/"},{"name":"Lambda","slug":"Lambda","permalink":"http://DevStarSJ.github.io/tags/Lambda/"},{"name":"Serverless","slug":"Serverless","permalink":"http://DevStarSJ.github.io/tags/Serverless/"}]},{"title":"Monolith to Serverless using AWS Lambda (2)","slug":"MonolithToServerless.02","date":"2017-02-24T15:00:00.000Z","updated":"2017-04-23T09:28:21.000Z","comments":true,"path":"2017/02/25/MonolithToServerless.02/","link":"","permalink":"http://DevStarSJ.github.io/2017/02/25/MonolithToServerless.02/","excerpt":"","text":"Monolith to Serverless using AWS Lambda &#xAE30;&#xC874; &#xBAA8;&#xB178;&#xB9AC;&#xC2A4; API &#xC11C;&#xBC84;&#xB97C; AWS Lambda&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;&#xB85C; &#xBCC0;&#xACBD;&#xD558;&#xAE30; &#xC774;&#xC804;&#xAE00; : 1&#xD3B8;. &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;&#xB97C; &#xD558;&#xB824;&#xB294; &#xC774;&#xC720; 2&#xD3B8;. &#xC7A5;&#xC560; &#xB300;&#xC751; &#xD50C;&#xB79C; &#xAE30;&#xC874;&#xC5D0; &#xC798; &#xB3CC;&#xC544;&#xAC00;&#xACE0; &#xC788;&#xB294; API &#xC11C;&#xBC84; (EC2)&#xB97C; &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;(Lambda)&#xB85C; &#xBCC0;&#xACBD;&#xD558;&#xACE0;&#xC790; &#xD55C;&#xB2E4;. &#xB9CC;&#xC57D; &#xB78C;&#xB2E4;&#xB85C; &#xAD6C;&#xD604;&#xD55C; API&#xAC00; &#xC815;&#xC0C1;&#xB3D9;&#xC791;&#xD558;&#xC9C0; &#xC54A;&#xB294; &#xACBD;&#xC6B0; &#xAE30;&#xC874;&#xC758; EC2 &#xC11C;&#xBC84;&#xB85C; &#xB418;&#xB3CC;&#xB9AC;&#xBA74; &#xB41C;&#xB2E4;. &#xC774;&#xAC8C; &#xB05D;. &#xC2EC;&#xD50C;&#xD558;&#xC9C0; &#xC54A;&#xC740;&#xAC00; ? &#xC774; &#xC2EC;&#xD50C;&#xD568;&#xC744; &#xAD6C;&#xD604;&#xD558;&#xAE30; &#xC704;&#xD574; &#xC5BC;&#xB9C8;&#xB098; &#xCEF4;&#xD50C;&#xB799;&#xC2A4;&#xD55C; &#xC77C;&#xB4E4;&#xC774; &#xD544;&#xC694;&#xD55C;&#xC9C0;&#xC5D0; &#xB300;&#xD55C; &#xAC83;&#xC774; 2&#xD3B8;&#xC758; &#xC804;&#xBC18;&#xC801;&#xC778; &#xB0B4;&#xC6A9;&#xC774;&#xB2E4;. &#xAE30;&#xC874; API &#xC11C;&#xBC84;&#xC5D0; &#xB300;&#xD55C; &#xC815;&#xBCF4; &#xB9CC;&#xC57D; api.luna.com&#xC774;&#xB780; &#xC774;&#xB984;&#xC758; API &#xC11C;&#xBC84;&#xB97C; EC2&#xC5D0; &#xC62C;&#xB824;&#xB193;&#xACE0; &#xC624;&#xD1A0; &#xC2A4;&#xCF00;&#xC77C;&#xB9C1; (AWS&#xC758; Elastic Beanstalk &#xC744; &#xD1B5;&#xD574; &#xC11C;&#xBE44;&#xC2A4;&#xD558;&#xACE0; &#xC788;&#xB294; &#xACBD;&#xC6B0;&#xB77C;&#xBA74;, ELB&#xC5D0;&#xC11C; &#xC81C;&#xACF5;&#xD574; &#xC8FC;&#xB294; url&#xC740; api-luna.elasticbeanstalk.com&#xACFC; &#xAC19;&#xC740; &#xC774;&#xB984;&#xC774; &#xB41C;&#xB2E4;. &#xC774;&#xAC83;&#xC744; api.luna.com&#xB780; &#xC774;&#xB984;&#xC758; &#xB3C4;&#xBA54;&#xC778;&#xC744; &#xC4F0;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; DNS &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. &#xD68C;&#xC0AC;&#xC5D0;&#xC11C;&#xB294; CloudFlare&#xB77C;&#xB294; &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xB294;&#xB370; CDN&#xC740; &#xAC70;&#xC758; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xACE0; DNS&#xB85C;&#xB9CC; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;. &#xC989;, &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xBAA8;&#xC591;&#xC73C;&#xB85C; &#xB418;&#xC5B4; &#xC788;&#xB2E4;. 1- C#&#xC73C;&#xB85C; &#xB418;&#xC5B4; &#xC788;&#xB294; API Server : ELB(api-luna.elasticbeanstalk.com) &lt;- DNS(api.luna.com) &#xB9CC;&#xC57D; API&#xC758; url&#xC774;&#xB098; &#xD30C;&#xB77C;&#xBA54;&#xD130; &#xC815;&#xBCF4;&#xB4E4;&#xC744; &#xC218;&#xC815;&#xD558;&#xAC8C; &#xB41C;&#xB2E4;&#xBA74;, &#xD574;&#xB2F9; API&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xC6F9;, &#xC571;(&#xC548;&#xB4DC;&#xB85C;&#xC774;&#xB4DC;, &#xC544;&#xC774;&#xD3F0;)&#xB3C4; &#xD568;&#xAED8; &#xC218;&#xC815;&#xD574;&#xC11C; &#xBC30;&#xD3EC;&#xB97C; &#xD574;&#xC57C;&#xD558;&#xB2C8; &#xC77C;&#xC774; &#xCEE4;&#xC9C4;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xB9CC;&#xC57D; &#xC7A5;&#xC560;&#xC2DC; &#xB2E4;&#xC2DC; &#xB418;&#xB3CC;&#xB9AC;&#xC9C0;&#xB3C4; &#xBABB;&#xD55C;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xAE30;&#xC874; url&#xC740; &#xBC14;&#xAFB8;&#xC9C0; &#xC54A;&#xACE0; &#xAC00;&#xC57C;&#xD55C;&#xB2E4;. &#xAC19;&#xC740; url&#xC5D0; path &#xC815;&#xBCF4;&#xAC00; &#xB2E4;&#xB978; &#xAC83;&#xB4E4;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC11C;&#xB85C; &#xB2E4;&#xB978; &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xB85C; &#xBCF4;&#xB0BC;&#xB824;&#xBA74; &#xC5B4;&#xB5BB;&#xAC8C; &#xD574;&#xC57C;&#xD560;&#xAE4C; ? (&#xB78C;&#xB2E4;&#xB294; &#xC11C;&#xBC84;&#xAC00; &#xC544;&#xB2C8;&#xBBC0;&#xB85C; &#xADF8;&#xB0E5; &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;(endpoint)&#xB85C; &#xD558;&#xACA0;&#xB2E4;.) AWS CloudFront&#xB77C;&#xB294; CDN&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xAC01; path &#xBCC4;&#xB85C; &#xCE90;&#xC2DC; &#xC815;&#xCC45;, &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8; &#xB4F1;&#xC758; &#xC124;&#xC815;&#xC744; &#xB2E4;&#xB974;&#xAC8C; &#xD560; &#xC218; &#xC788;&#xB2E4;. &#xC77C;&#xB2E8; &#xAE30;&#xC874;&#xC5D0; ELB&#xC5D0;&#xC11C; &#xB3CC;&#xC544;&#xAC00;&#xB294; &#xC11C;&#xBC84;&#xB97C; CloudFront&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xC11C;&#xBE44;&#xC2A4; &#xB418;&#xB3C4;&#xB85D; &#xC124;&#xC815;&#xC744; &#xBCC0;&#xACBD;&#xD558;&#xC600;&#xB2E4;. 123- &#xAE30;&#xC874; API Server&#xC758; DNAME &#xBCC0;&#xACBD; : ELB(api-luna.elasticbeanstalk.com) &lt;- DNS(api-origin.luna.com)- &#xAE30;&#xC874; &#xC8FC;&#xC18C;&#xB97C; CloudFront&#xB85C; &#xC5F0;&#xACB0; : CloudFront(cf1.cloudfront.net) &lt;- DNS(api.luna.com)- CF&#xC758; Default(*) Origin&#xC744; api-origin.luna.com &#xC73C;&#xB85C; &#xC124;&#xC815; &#xD558;&#xB098;&#xC758; &#xD750;&#xB984;&#xC73C;&#xB85C; &#xADF8;&#xB824;&#xBCF4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xB41C;&#xB2E4;. 1ELB(api-luna.elasticbeanstalk.com) &lt;- DNS(api-origin.luna.com) &lt;- CloudFront(cf1.cloudfront.net) &lt;- DNS(api.luna.com) &#xC0C8;&#xB85C;&#xB9CC;&#xB4DC;&#xB294; &#xB78C;&#xB2E4;&#xB97C; API Gateway&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xC11C;&#xBE44;&#xC2A4; &#xD560; &#xACBD;&#xC6B0; CloudFront&#xC5D0;&#xC11C; &#xD574;&#xB2F9; path&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB9CC; &#xB78C;&#xB2E4;&#xB97C; &#xBCF4;&#xB3C4;&#xB85D; &#xC124;&#xC815;&#xC744; &#xBD99;&#xC774;&#xAE30;&#xB9CC; &#xD558;&#xBA74; &#xB41C;&#xB2E4;. (&#xB78C;&#xB2E4;&#xB85C; &#xB9CC;&#xB4E0; API&#xC758; path&#xAC00; api.luan.com/user/{id}&#xB77C;&#xACE0; &#xAC00;&#xC815;&#xD558;&#xACE0;, &#xB78C;&#xB2E4;&#xBA85;&#xCE6D;&#xC744; api-user-id&#xB77C;&#xACE0; &#xD560; &#xACBD;&#xC6B0;) 12ELB(api-luna.elasticbeanstalk.com) &lt;- DNS(api-origin.luna.com) &lt;- CloudFront(cf1.cloudfront.net) &lt;- DNS(api.luna.com)Lambda(api-user-id) &lt;- API Gateway(exec-api.amazonaws.com/service) &lt;- &#xC774;&#xB7F0; &#xBAA8;&#xC591;&#xC73C;&#xB85C; &#xAD6C;&#xC131;&#xC774; &#xB41C;&#xB2E4;. &#xC774;&#xAC74; API&#xB97C; &#xC5B4;&#xB5BB;&#xAC8C; &#xAD6C;&#xC0C1;&#xD558;&#xB0D0;&#xB294; &#xAC83;&#xC5D0; &#xB300;&#xD55C; &#xAC83;&#xC774;&#xACE0; &#xC7A5;&#xC560;&#xB300;&#xC751;&#xC5D0; &#xB300;&#xD55C;&#xAC74; &#xC544;&#xC9C1; &#xACE0;&#xB824;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xD615;&#xD0DC;&#xC774;&#xB2E4;. &#xC7A5;&#xC560;&#xB300;&#xC751; &#xC55E;&#xC5D0;&#xC11C; &#xC598;&#xAE30;&#xD588;&#xB4EF;&#xC774; API&#xAC00; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xB3D9;&#xC791;&#xD558;&#xC9C0; &#xC54A;&#xC544;&#xC11C; &#xC7A5;&#xC560;&#xAC00; &#xB0AC;&#xC744; &#xB54C;&#xB294; &#xD574;&#xB2F9; API &#xB300;&#xC2E0; &#xADF8;&#xB0E5; &#xAE30;&#xC874;&#xC758; EC2(api-origin.luna.com)&#xC744; &#xBC14;&#xB77C;&#xBCF4;&#xAC8C;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. &#xC544;&#xC8FC; &#xC2EC;&#xD50C;&#xD558;&#xB2E4;. &#xADF8;&#xB7FC; &#xC774; &#xC2EC;&#xD50C;&#xD568;&#xC744; &#xC5B4;&#xB5BB;&#xAC8C; &#xAD6C;&#xC131;&#xD574;&#xC57C; &#xD560;&#xAE4C;. &#xCCAB;&#xBC88;&#xC9F8; &#xC0DD;&#xAC01; : CloudFront&#xC5D0;&#xC11C; Behavior &#xC0AD;&#xC81C; CloudFront&#xC5D0;&#xC11C; &#xB78C;&#xB2E4;&#xB85C; &#xD5A5;&#xD558;&#xB294; Behavior&#xB97C; &#xC0AD;&#xC81C;&#xD55C;&#xB2E4;. &#xADF8;&#xB7EC;&#xBA74; api-origin&#xC744; &#xBC14;&#xB77C;&#xBCFC; &#xAC83;&#xC774;&#xB2E4;. &#xB05D; ? &#xD558;&#xC9C0;&#xB9CC;&#x2026; CloudFront&#xB294; &#xD2B9;&#xC815; &#xC9C0;&#xC5ED;(region)&#xBCC4;&#xB85C; &#xC11C;&#xBE44;&#xC2A4;&#xB418;&#xB294;&#xAC8C; &#xC544;&#xB2C8;&#xB77C; &#xAE00;&#xB85C;&#xBC8C;&#xB85C; &#xC11C;&#xBE44;&#xC2A4;&#xB41C;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xC124;&#xC815;&#xC744; &#xBCC0;&#xACBD;&#xD558;&#xBA74; &#xC804;&#xCCB4;&#xC801;&#xC73C;&#xB85C; &#xBC18;&#xC601;&#xB418;&#xB294;&#xB370; 40&#xBD84; &#xC815;&#xB3C4;&#xC758; &#xC2DC;&#xAC04;&#xC774; &#xAC78;&#xB9B0;&#xB2E4;. 40&#xBD84;&#xB3D9;&#xC548; &#xC7A5;&#xC560;&#xB09C; &#xC0C1;&#xD669;&#xC744; &#xBA40;&#xB6B1;&#xBA40;&#xB6B1; &#xC9C0;&#xCF1C;&#xB9CC; &#xBD10;&#xB3C4; &#xB420;&#xAE4C; ? &#xB2F9;&#xC5F0;&#xD788; &#xB09C;&#xB9AC;&#xB09C;&#xB2E4;. &#xC77C;&#xB2E8; &#xC774; &#xBC29;&#xBC95;&#xC740; &#xC548;&#xB41C;&#xB2E4;. &#xD14C;&#xC2A4;&#xD2B8; &#xD574;&#xBCFC; &#xAC00;&#xCE58;&#xB3C4; &#xC5C6;&#xB2E4;. &#xADF8;&#xB0E5; &#xD328;&#xC2A4;&#xD558;&#xC790;. &#xB450;&#xBC88;&#xC9F8; &#xC0DD;&#xAC01; : DNS&#xB9CC; &#xC0B4;&#xC9DD; &#xBC14;&#xAFD4;&#xC11C; &#xB2E4;&#xB978; CloudFront&#xB97C; &#xBC14;&#xB77C;&#xBCF4;&#xAC8C; &#xC124;&#xC815; CloudFront&#xB97C; 2&#xAC1C;&#xB97C; &#xB9CC;&#xB4E0;&#xB2E4;. &#xC704;&#xC5D0;&#xC11C; &#xC124;&#xC815;&#xD55C; cf1 &#xACFC; api-origin&#xB9CC; &#xBC14;&#xB77C;&#xBCF4;&#xB294; cf2. api.luna.com&#xC740; cf1&#xC744; &#xD5A5;&#xD558;&#xAC8C; &#xD558;&#xB2E4;&#xAC00; &#xC7A5;&#xC560; &#xBC1C;&#xC0DD;&#xC2DC; cf2&#xB97C; &#xBC14;&#xB77C;&#xBCF4;&#xAC8C; &#xC124;&#xC815;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. DNS &#xBC14;&#xAFB8;&#xB294;&#xAC74; &#xBC14;&#xB85C; &#xBC18;&#xC601;&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC7A5;&#xC560; &#xB300;&#xC751; &#xC2DC;&#xAC04;&#xC744; 2&#xBD84; &#xC815;&#xB3C4;&#xB85C; &#xC904;&#xC77C; &#xC218; &#xC788;&#xB2E4;. &#xC77C;&#xC815; &#xAE30;&#xAC04;&#xB3D9;&#xC548; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xC11C;&#xBE44;&#xC2A4;&#xB418;&#xC5C8;&#xB2E4;&#xACE0; &#xD310;&#xB2E8;&#xC774; &#xB418;&#xB294; api&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; cf2&#xC758; behavior&#xC5D0;&#xB3C4; &#xCD94;&#xAC00;&#xB97C; &#xD574;&#xB193;&#xC73C;&#xBA74; &#xB41C;&#xB2E4;. &#xADF8;&#xB7EC;&#xBA74; &#xC7A5;&#xC560; &#xBC1C;&#xC0DD;&#xC2DC; cf2&#xB85C; &#xB418;&#xB3CC;&#xB9AC;&#xB354;&#xB77C;&#xB3C4; &#xC0C8;&#xB85C; &#xCD94;&#xAC00;&#xD55C; api&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB9CC; &#xB864;&#xBC31;&#xC774; &#xB41C;&#xB2E4;. 1234ELB(api-luna.elasticbeanstalk.com) &lt;- DNS(api-origin.luna.com) &lt;- CloudFront(cf1.cloudfront.net) &lt;- DNS(api.luna.com)Lambda(api-user-id) &lt;- API Gateway(exec-api.amazonaws.com/service) &lt;-ELB(api-luna.elasticbeanstalk.com) &lt;- DNS(api-origin.luna.com) &lt;- CloudFront(cf2.cloudfront.net) &#xC704; &#xADF8;&#xB9BC;&#xACFC; &#xAC19;&#xC774; &#xC11C;&#xBE44;&#xC2A4;&#xD558;&#xB2E4;&#xAC00; &#xC7A5;&#xC560; &#xBC1C;&#xC0DD;&#xC2DC; api.luna.com&#xC758; &#xC8FC;&#xC18C;&#xB9CC; cf2&#xB85C; &#xBCC0;&#xACBD;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. &#xC77C;&#xB2E8; cf2&#xB97C; &#xB9CC;&#xB4E4;&#xC5B4; &#xBCF4;&#xC558;&#xB2E4;. &#xC548;&#xB9CC;&#xB4E4;&#xC5B4;&#xC9C4;&#xB2E4;. CloudFront&#xC5D0;&#xC11C; DNS&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; CNAMEs&#xB97C; &#xC124;&#xC815;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. &#xADF8;&#xB7F0;&#xB370; &#xC11C;&#xB85C; &#xB2E4;&#xB978; CloudFront&#xAC00; &#xAC19;&#xC740; CNAME&#xC744; &#xAC00;&#xC9C0;&#xB3C4;&#xB85D; &#xC124;&#xC815;&#xC774; &#xC548;&#xB41C;&#xB2E4;. &#xC65C; &#xC548;&#xB41C;&#xB2E4;&#xB294; &#xAC74;&#xC9C0; &#xC774;&#xD574;&#xAC00; &#xC548;&#xB41C;&#xB2E4;. &#xC5B4;&#xCC28;&#xD53C; &#xC2E4;&#xC81C;&#xB85C; &#xAC19;&#xC740; DNS&#xAC00; &#xB3D9;&#xC2DC;&#xC5D0; 2&#xAC1C;&#xC758; CloudFront&#xB97C; &#xBC14;&#xB77C;&#xBCF4;&#xACE0; &#xC788;&#xB2E4;&#xB294;&#xAC70; &#xC790;&#xCCB4;&#xAC00; &#xB9D0;&#xC774; &#xC548;&#xB418;&#xB294;&#xB370; &#xADF8;&#xB807;&#xAC8C; &#xC124;&#xC815;&#xD558;&#xAC8C; &#xC880; &#xD574;&#xC918;&#xB3C4; &#xC0C1;&#xAD00;&#xC5C6;&#xC9C0; &#xC54A;&#xB098; ? &#xC77C;&#xB2E8; &#xC548;&#xB41C;&#xB2E4;&#xB2C8;&#xAE50; &#xC774; &#xBC29;&#xBC95;&#xC740; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC5C6;&#xB2E4;. &#xC138;&#xBC88;&#xC9F8; &#xC0DD;&#xAC01; : &#xADF8;&#xB7FC; DNS&#xB97C; &#xC5EC;&#xB7EC;&#xAC1C; &#xC124;&#xC815; CloudFront&#xAC00; &#xAC19;&#xC740; CNAME&#xC73C;&#xB85C; &#xC124;&#xC815;&#xC774; &#xC548;&#xB418;&#xB2C8; DNS&#xB97C; &#xC5EC;&#xB7EC;&#xAC1C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC11C; DNS&#xB2E8;&#xC5D0;&#xC11C; &#xC2A4;&#xC640;&#xD551;&#xC744; &#xD558;&#xBA74; &#xD574;&#xACB0;&#xB418;&#xC9C0; &#xC54A;&#xC744;&#xAE4C; ? 123456ELB(api-luna.elasticbeanstalk.com) &lt;- DNS(api-origin.luna.com) &lt;- CloudFront(cf1.cloudfront.net) &lt;- DNS(api1.luna.com)Lambda(api-user-id) &lt;- API Gateway(exec-api.amazonaws.com/service) &lt;-ELB(api-luna.elasticbeanstalk.com) &lt;- DNS(api-origin.luna.com) &lt;- CloudFront(cf2.cloudfront.net) &lt;- DNS(api2.luna.com)DNS(api1.luna.com) &lt;- DNS(api.luna.com) &#xC774;&#xB807;&#xAC8C; DNS &#xB07C;&#xB9AC; &#xC5F0;&#xACB0;&#xD574;&#xB450;&#xACE0; &#xC7A5;&#xC560; &#xBC1C;&#xC0DD;&#xC2DC; api.luna.com &#xC774; api2.luna.com &#xC744; &#xBC14;&#xB77C;&#xBCF4;&#xAC8C; &#xC124;&#xC815;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. &#xB108;&#xBB34; &#xC27D;&#xB2E4;. &#xADF8;&#xB7F0;&#xB370;&#x2026; CloudFront&#xC758; CNAME&#xC5D0; api1.luna.com &#xC774;&#xB77C; &#xC124;&#xC815;&#xD574;&#xB450;&#xACE0;, api1.luna.com &lt;- api.luna.com&#xC73C;&#xB85C; &#xC124;&#xC815;&#xC744; &#xD558;&#xBA74; api.luna.com&#xC740; CNAME&#xC73C;&#xB85C; &#xC124;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xC9C0; &#xC54A;&#xB2E4;&#xACE0; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD55C;&#xB2E4;. &#xC74C;&#x2026; &#xC5B4;&#xCA0C;&#xB4E0; &#xC548;&#xB41C;&#xB2E8;&#xB2E4;. &#xB2E4;&#xB978; &#xBC29;&#xBC95;&#xC744; &#xB610; &#xC0DD;&#xAC01;&#xD574; &#xBD10;&#xC57C;&#xC9C0;. &#xB124;&#xBC88;&#xC9F8; &#xC0DD;&#xAC01; : API Gateway&#xC5D0;&#xC11C; EC2&#xB97C; &#xBC14;&#xB77C;&#xBCF4;&#xAC8C; &#xC124;&#xC815; &#xC774; &#xBC29;&#xBC95;&#xB9CC;&#xC740; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xC73C;&#xB824; &#xD588;&#xB294;&#xB370;&#x2026; &#xC774; &#xBC29;&#xBC95; &#xBC16;&#xC5D0; &#xC5C6;&#xB294;&#xAC83; &#xAC19;&#xB2E4;. 12ELB(api-luna.elasticbeanstalk.com) &lt;- DNS(api-origin.luna.com) &lt;- CloudFront(cf1.cloudfront.net) &lt;- DNS(api1.luna.com)Lambda(api-user-id) &lt;- API Gateway(exec-api.amazonaws.com/service) &lt;- &#xC704;&#xC758; &#xD615;&#xD0DC;&#xB85C; &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xD558;&#xB2E4;&#xAC00; api-user-id&#xC5D0; &#xC7A5;&#xC560;&#xAC00; &#xBC1C;&#xC0DD;&#xD55C; &#xACBD;&#xC6B0; 12ELB(api-luna.elasticbeanstalk.com) &lt;- DNS(api-origin.luna.com) &lt;- CloudFront(cf1.cloudfront.net) &lt;- DNS(api1.luna.com)ELB(api-luna.elasticbeanstalk.com) &lt;- API Gateway(exec-api.ama...) &lt;- &#xC774;&#xB807;&#xAC8C; API Gateway&#xC5D0;&#xC11C; &#xB78C;&#xB2E4; &#xB300;&#xC2E0;&#xC5D0; api-origin&#xC744; &#xBC14;&#xB77C;&#xBCF4;&#xAC8C; &#xC124;&#xC815;&#xC744; &#xBCC0;&#xACBD;&#xD55C;&#xB2E4;. &#xBA3C;&#xC800; &#xC774;&#xB807;&#xAC8C; &#xD574;&#xC11C; &#xC7A5;&#xC560; &#xC0C1;&#xD669;&#xC744; &#xC77C;&#xB2E8; &#xD574;&#xACB0;&#xD55C; &#xD6C4; CloudFront&#xC5D0;&#xC11C; behavior&#xB97C; &#xC0AD;&#xC81C;&#xD558;&#xACE0; 40&#xBD84;&#xB4A4;&#xC5D0; &#xC801;&#xC6A9;&#xB418;&#xBA74; &#xB2E4;&#xC2DC; API Gateway&#xB97C; &#xB78C;&#xB2E4;&#xB97C; &#xBC14;&#xB77C;&#xBCF4;&#xB3C4;&#xB85D; &#xC218;&#xC815;&#xD558;&#xACE0; API&#xB97C; &#xC218;&#xC815;&#xD558;&#xB294; &#xC2DD;&#xC73C;&#xB85C; &#xC791;&#xC5C5;&#xC744; &#xC9C4;&#xD589;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. &#xB124;&#xBC88;&#xC9F8; &#xC0DD;&#xAC01;&#xC758; &#xBCF4;&#xC644;&#xC810;&#xB4E4; &#xD14C;&#xC2A4;&#xD2B8;&#xD574;&#xBCF4;&#xB2C8; &#xC6D0;&#xD558;&#xB294;&#xB300;&#xB85C; &#xB3D9;&#xC791;&#xD55C;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xBB54;&#xAC00; &#xCC1C;&#xCC1C;&#xD55C;&#xAC8C; &#xBA87; &#xAC00;&#xC9C0; &#xC788;&#xB2E4;. &#xADF8; &#xC911; &#xCCAB;&#xBC88;&#xC9F8;&#xB294; &#xC7A5;&#xC560; &#xBC1C;&#xC0DD;&#xC2DC; &#xB9C8;&#xC6B0;&#xC2A4; &#xD074;&#xB9AD;&#xC774;&#xB098; &#xBBF8;&#xB9AC; &#xC124;&#xC815;&#xD574;&#xB193;&#xC740; &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8; &#xC2E4;&#xD589; &#xAC19;&#xC740; &#xBC29;&#xBC95;&#xC774; &#xC544;&#xB2C8;&#xB77C; AWS &#xCF58;&#xC194;&#xB85C; &#xC811;&#xC18D;&#xD574;&#xC11C; &#xC124;&#xC815;&#xC744; &#xD558;&#xB098;&#xD558;&#xB098; &#xBC14;&#xAFD4;&#xC8FC;&#xBA74;&#xC11C; api-luna.elasticbeanstalk.com/user/{proxy} &#xB610;&#xB294; api-origin.luna.com/user/{proxy} &#xC774;&#xB807;&#xAC8C; &#xC785;&#xB825;&#xD574;&#xC918;&#xC57C; &#xD55C;&#xB2E4;. &#xC644;&#xBCBD;&#xD55C; &#xD574;&#xACB0;&#xBC29;&#xBC95;&#xC740; &#xC544;&#xB2C8;&#xC9C0;&#xB9CC;, API Gateway&#xB97C; &#xBC1C;&#xD589;&#xD560;&#xB54C; &#xBA3C;&#xC800; api-origin&#xC744; &#xBC14;&#xB77C;&#xBCF4;&#xAC8C; &#xBC30;&#xD3EC;&#xD558;&#xACE0;, &#xB2E4;&#xC2DC; &#xC218;&#xC815;&#xD574;&#xC11C; &#xB78C;&#xB2E4;&#xB97C; &#xBC14;&#xB77C;&#xBCF4;&#xAC8C; &#xBC30;&#xD3EC;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. &#xADF8;&#xB7FC; &#xD574;&#xB2F9; &#xC2A4;&#xD14C;&#xC774;&#xC9D5;&#xC5D0; &#xAC00;&#xBCF4;&#xBA74; 2&#xAC00;&#xC9C0; &#xACBD;&#xC6B0;&#xAC00; &#xBAA8;&#xB450; Deployment History&#xC5D0; &#xB0A8;&#xC544;&#xC788;&#xC5B4;&#xC11C; &#xACFC;&#xAC70; &#xBC84;&#xC804;&#xC744; &#xC120;&#xD0DD;&#xD55C; &#xD6C4; Change Deployment &#xBC84;&#xD2BC;&#xC744; &#xB204;&#xB974;&#xBA74; &#xB41C;&#xB2E4;. &#xB450;&#xBC88;&#xC9F8;&#xB294; API Gateway url&#xB05D;&#xC5D0; &#xC2A4;&#xD14C;&#xC774;&#xC9C0;&#xBA85;&#xC744; &#xD56D;&#xC0C1; &#xBD99;&#xC5EC;&#xC918;&#xC57C; &#xD55C;&#xB2E4;. &#xB9CC;&#xC57D; &#xC2A4;&#xD14C;&#xC774;&#xC9C0;&#xB97C; service&#xB85C; &#xC124;&#xC815;&#xD588;&#xB2E4;&#xBA74; exec-api.amazonaws.com/service&#xC774;&#xB7F0;&#xC2DD;&#xC758; url&#xC744; &#xAC00;&#xC9C0;&#xAC8C; &#xB41C;&#xB2E4;. url&#xC744; &#xC904;&#xC5EC;&#xC8FC;&#xAE30; &#xC704;&#xD574;&#xC11C; DNS&#xB97C; &#xC124;&#xC815;&#xD558;&#xB824;&#xACE0; &#xD574;&#xB3C4; /service &#xB54C;&#xBB38;&#xC5D0; &#xC6D0;&#xD558;&#xB294;&#xB300;&#xB85C; &#xC124;&#xC815;&#xC774; &#xC548;&#xB41C;&#xB2E4;. &#xADF8;&#xB807;&#xB2E4;&#xACE0; DNS&#xC5D0;&#xC11C; &#xC8FC;&#xB294; &#xC774;&#xB984; &#xB4A4;&#xC5D0; /service&#xB97C; &#xBD99;&#xC774;&#xB294; &#xAC83;&#xC73C;&#xB85C; CloudFront&#xC5D0;&#xC11C; behavior&#xB97C; &#xC124;&#xC815;&#xD558;&#xB824;&#xB294; &#xC21C;&#xAC04; &#xB9C9;&#xB9C9;&#xD574;&#xC9C4;&#xB2E4;. API Gateway&#xC5D0; Custom Domain Names &#xD0ED;&#xC73C;&#xB85C; &#xAC00;&#xBA74; &#xC774;&#xB984;&#xC744; &#xC774;&#xC058;&#xAC8C; &#xC9C0;&#xC5B4;&#xC904;&#xC218; &#xC788;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; SSL&#xC6A9; &#xC778;&#xC99D;&#xC11C;&#xB97C; &#xB4F1;&#xB85D;&#xD574;&#xC57C; &#xD558;&#xB294;&#xB370;, AWS&#xC758; &#xC778;&#xC99D;&#xC11C;&#xB294; &#xB610; &#xC9C0;&#xC6D0;&#xC744; &#xD574;&#xC8FC;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xBB34;&#xB8CC; &#xC778;&#xC99D;&#xC11C;&#xC778; Lets&#x2019; Encrypt&#xC5D0;&#xC11C; &#xBC1C;&#xAE09;&#xBC1B;&#xC73C;&#xBA74; &#xB41C;&#xB2E4;. &#xBC1C;&#xAE09;&#xBC1B;&#xB294;&#xAC83;&#xB3C4; &#xC27D;&#xC9C0;&#xB294; &#xC54A;&#xB2E4;. &#xC778;&#xC99D;&#xC11C; &#xBC1C;&#xAE09;&#xC744; &#xC704;&#xD574;&#xC11C; &#xD604;&#xC7AC; &#xD574;&#xB2F9; &#xC8FC;&#xC18C;&#xC758; &#xC11C;&#xBC84;&#xB97C; &#xC0AC;&#xC6A9;&#xC911;&#xC774;&#xB77C; &#xAC83;&#xC744; &#xC99D;&#xBA85;&#xD574;&#xC57C;&#xD558;&#xB294;&#xB370; API Gateway&#xC5D0;&#xC11C; &#xADF8; &#xC778;&#xC99D;&#xC744; &#xD574;&#xC904;&#xC218;&#xAC00; &#xC788;&#xB098; ? &#xBC1C;&#xAE09;&#xBC1B;&#xC740; &#xBC29;&#xBC95;&#xC774; &#xC5EC;&#xB7EC;&#xAC00;&#xC9C0; &#xC788;&#xB294;&#xB370;&#x2026; &#xADF8; &#xC911; &#xD558;&#xB098;&#xB97C; &#xB300;&#xCDA9; &#xC124;&#xBA85;&#xD558;&#xC790;&#xBA74; nginx&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xC784;&#xC2DC;&#xB85C; &#xC11C;&#xBC84;&#xB97C; &#xD558;&#xB098; &#xB744;&#xC6CC;&#xC11C; DNS&#xC5D0;&#xC11C; &#xADF8; &#xC11C;&#xBC84;&#xB97C; &#xBC14;&#xB77C;&#xBCF4;&#xAC8C; &#xC124;&#xC815;&#xD55C; &#xD6C4; &#xC778;&#xC99D;&#xC11C;&#xB97C; &#xBC1C;&#xAE09;&#xBC1B;&#xC544;&#xC11C; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. &#xAD6C;&#xAE00;&#xC5D0;&#xC11C; &#xAC80;&#xC0C9;&#xD574;&#xBCF4;&#xBA74; &#xAD00;&#xB828; &#xBC29;&#xBC95; &#xBC0F; &#xCF54;&#xB4DC;&#xB4E4;&#xC774; &#xCB49; &#xB098;&#xC628;&#xB2E4;. &#xD68C;&#xC0AC; &#xB3D9;&#xB8CC;&#xBD84;&#xC911; &#xC774;&#xBBF8; &#xD574;&#xB2F9; &#xC791;&#xC5C5;&#xC744; &#xC704;&#xD55C; &#xCF54;&#xB4DC;&#xB97C; &#xB9CC;&#xB4E4;&#xC5B4;&#xB450;&#xACE0; &#xBC1C;&#xAE09;&#xBC1B;&#xACE0; &#xACC4;&#xC2E0;&#xBD84;&#xC774; &#xC788;&#xC5B4;&#xC11C; &#xADF8; &#xBD84; &#xB3C4;&#xC6C0;&#xC744; &#xBC1B;&#xC544;&#xC11C; &#xC27D;&#xAC8C; &#xBC1C;&#xAE09; &#xBC1B;&#xC744; &#xC218; &#xC788;&#xC5C8;&#xB2E4;. &#xCC98;&#xC74C;&#xC5D4; SSL &#xC778;&#xC99D;&#xC11C; &#xBC1C;&#xAE09;&#xBC1B;&#xB294;&#xAC8C; &#xADC0;&#xCC2E;&#xC544;&#xC11C;, Custom Domain Name&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xC744;&#xB824;&#xACE0; &#xADF8; &#xACFC;&#xC815; &#xC790;&#xCCB4;&#xB97C; API Gateway &lt;- CloudFront &lt;- DNS &#xC2DD;&#xC73C;&#xB85C; &#xBA87; &#xB2E8;&#xACC4;&#xB97C; &#xB354; &#xAC70;&#xCE58;&#xAC8C; &#xD588;&#xC5C8;&#xB294;&#xB370; &#xADF8; &#xACFC;&#xC815;&#xC5D0;&#xC11C;&#xB3C4; CloudFront&#xC5D0;&#xC11C; SSL &#xC778;&#xC99D;&#xC11C;&#xB97C; &#xC368;&#xC57C;&#xD558;&#xACE0;&#x2026; (&#xAE30;&#xC874; &#xC11C;&#xBE44;&#xC2A4;&#xC5D0; &#xC4F0;&#xB358;&#xAC78; &#xAC19;&#xC774;&#xC4F0;&#xBA74; &#xB418;&#xAE34; &#xD588;&#xB2E4;.) &#xC124;&#xC815; &#xC790;&#xCCB4;&#xB3C4; &#xB108;&#xBB34; &#xBCF5;&#xC7A1;&#xD574;&#xC838;&#xC11C; &#xB2E4;&#xC2DC; Custom Domain Name&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xAE30;&#xB85C; &#xACB0;&#xC815;&#xD588;&#xB2E4;. &#xC2E4;&#xC81C;&#xB85C; &#xC801;&#xC6A9; &#xCC98;&#xC74C; API&#xB97C; &#xBC30;&#xD3EC;&#xD560;&#xB54C;&#xB294; &#xB124;&#xBC88;&#xC9F8; &#xBC29;&#xBC95;(&#xC7A5;&#xC560;&#xBC1C;&#xC0DD;&#xC2DC; API Gateway&#xC5D0;&#xC11C; EC2&#xB97C; &#xBC14;&#xB77C;&#xBCF4;&#xAC8C; &#xC124;&#xC815;)&#xC744; &#xC0AC;&#xC6A9;&#xD588;&#xC9C0;&#xB9CC;, &#xC9C0;&#xAE08;&#xC740; &#xADF8;&#xB0E5; &#xCCAB;&#xBC88;&#xC9F8; &#xBC29;&#xBC95;(CloudFront&#xC5D0;&#xC11C; behavior&#xB97C; &#xC0AD;&#xC81C;)&#xC744; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;. &#xC0AC;&#xC2E4; &#xC0AD;&#xC81C;&#xB3C4; &#xC544;&#xB2C8;&#xACE0; &#xADF8;&#xB0E5; url &#xC55E;&#xC5D0; /test &#xC774;&#xB7F0;&#xAC78; &#xBD99;&#xC5EC;&#xC11C; &#xC8FC;&#xC18C;&#xB9CC; &#xBC14;&#xAFD4;&#xBC84;&#xB9B0;&#xB2E4;. 40&#xBD84;&#xB3D9;&#xC548; &#xC7A5;&#xC560;&#xAC00; &#xB098;&#xB3C4;&#xB85D; &#xADF8;&#xB0E5; &#xB0B4;&#xBC84;&#xB824; &#xB450;&#xACE0; &#xC788;&#xB0D0;&#xACE0; ? &#xADF8;&#xAC74; &#xB2F9;&#xC5F0;&#xD788; &#xC544;&#xB2C8;&#xB2E4;. CloudFront&#xC758; &#xC124;&#xC815;&#xC744; &#xC218;&#xC815;&#xD558;&#xBA74; &#xADF8;&#xAC8C; &#xC644;&#xBCBD;&#xD558;&#xAC8C; &#xC801;&#xC6A9;&#xB418;&#xC5C8;&#xB2E4;&#xACE0; &#xCF58;&#xC194;&#xC0C1;&#xC5D0; &#xD45C;&#xC2DC;&#xB418;&#xB294;&#xAC74; 40&#xBD84; &#xC815;&#xB3C4;&#xAC00; &#xAC78;&#xB9AC;&#xC9C0;&#xB9CC;, &#xC2E4;&#xC81C;&#xB85C; &#xC801;&#xC6A9;&#xB418;&#xB294;&#xAC74; &#xD3C9;&#xADE0; 1&#xBD84; &#xC815;&#xB3C4;, &#xC544;&#xBB34;&#xB9AC; &#xAE38;&#xC5B4;&#xB3C4; 3&#xBD84; &#xC774;&#xB0B4;&#xC5D0;&#xB294; &#xBC14;&#xB00C;&#xB294;&#xAC8C; &#xD655;&#xC778;&#xB418;&#xC5C8;&#xB2E4;. &#xB0B4;&#xBD80;&#xC801;&#xC73C;&#xB85C; &#xC5B4;&#xB5BB;&#xAC8C; &#xB3D9;&#xC791;&#xD558;&#xB294;&#xC9C0; &#xC54C; &#xC218;&#xB294; &#xC5C6;&#xC9C0;&#xB9CC; &#xD604;&#xC7AC; AWS &#xB3C4;&#xCFC4; &#xB9AC;&#xC804;&#xB9CC; &#xC0AC;&#xC6A9;&#xC744; &#xD558;&#xB2E4;&#xBCF4;&#xB2C8; CloudFront&#xC5D0;&#xC11C;&#xB3C4; &#xC77C;&#xB2E8; &#xAC00;&#xC7A5; &#xB9CE;&#xC774; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xB3C4;&#xCFC4; &#xB9AC;&#xC804;&#xBD80;&#xD130; &#xC801;&#xC6A9;&#xD574;&#xC8FC;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xBCF4;&#xC778;&#xB2E4;. &#xC5B4;&#xB5BB;&#xAC8C; &#xC774; &#xC0AC;&#xC2E4;&#xC744; &#xC54C;&#xC218;&#xAC00; &#xC788;&#xC5C8;&#xB0D0;&#xBA74; &#xC0C8;&#xB85C;&#xC6B4; API &#xBC30;&#xD3EC;&#xC2DC; &#xD574;&#xB2F9; &#xB78C;&#xB2E4;, API Gateway&#xC5D0; &#xB300;&#xD55C; &#xC8FC;&#xC694; &#xC218;&#xCE58;&#xB4E4;&#xC5D0; &#xB300;&#xD574;&#xC11C; CloudWatch Metrics&#xC5D0; &#xBBF8;&#xB9AC; &#xB4F1;&#xB85D;&#xD574;&#xB450;&#xACE0; &#xBAA8;&#xB2C8;&#xD130;&#xB9C1;&#xC744; &#xD588;&#xB2E4;. &#xBC30;&#xD3EC;&#xC804;&#xC5D0; &#xBA3C;&#xC800; CloudWatch&#xBD80;&#xD130; &#xB744;&#xC6CC;&#xB454;&#xCCB4;&#xB85C; &#xBC30;&#xD3EC;&#xB97C; &#xD558;&#xACE0; &#xACC4;&#xC18D; &#xC218;&#xCE58; &#xBC0F; &#xADF8;&#xB798;&#xD504;&#xB97C; &#xD655;&#xC778;&#xD558;&#xACE0; &#xC788;&#xC73C;&#xB2C8;&#xAE50; &#xAC70;&#xC758; &#xBC14;&#xB85C; &#xB78C;&#xB2E4;&#xB85C; &#xD638;&#xCD9C;&#xC774; &#xB4E4;&#xC5B4;&#xC624;&#xB294; &#xAC83;&#xC774; &#xD655;&#xC778;&#xB418;&#xC5C8;&#xB2E4;. API &#xBC30;&#xD3EC; &#xCD08;&#xBC18;&#xC5D0;&#xB294; &#xAC70;&#xC758; &#xBC30;&#xD3EC;&#xD558;&#xC790;&#xB9C8;&#xC790; &#xBC14;&#xB85C; &#xC7A5;&#xC560;&#xAC00; &#xB0AC;&#xC5C8;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; 2&#xC8FC; &#xB3D9;&#xC548;&#xC740; &#xBC30;&#xD3EC;, &#xB864;&#xBC31;&#xC744; &#xBA87; &#xBC88;&#xC529; &#xACAA;&#xC5C8;&#xB2E4;. &#xADF8;&#xB7EC;&#xBA74;&#xC11C; CloudWatch &#xC0C1;&#xC758; &#xAC01;&#xC885; &#xC218;&#xCE58;&#xB4E4;&#xC744; &#xBCF4;&#xACE0; &#xC5B4;&#xB5BB;&#xAC8C; &#xD574;&#xC11D;&#xD574;&#xC57C;&#xD558;&#xB294;&#xC9C0;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC790;&#xC5F0;&#xC2A4;&#xB7FD;&#xAC8C; &#xC798; &#xC54C;&#xAC8C; &#xB418;&#xC5C8;&#xB2E4;. &#xB124;&#xBC88;&#xC9F8; &#xBC29;&#xBC95;&#xC774; &#xC544;&#xBB34;&#xB798;&#xB3C4; &#xCCAB;&#xBC88;&#xC9F8; &#xBC29;&#xBC95;&#xBCF4;&#xB2E4;&#xB294; &#xC190;&#xC774; &#xB9CE;&#xC774; &#xAC04;&#xB2E4;. &#xADF8;&#xB807;&#xAC8C; &#xD574;&#xC11C; &#xB418;&#xB3CC;&#xB9AC;&#xB294; &#xC2DC;&#xAC04;&#xACFC; &#xADF8;&#xB0E5; &#xCCAB;&#xBC88;&#xC9F8; &#xBC29;&#xBC95;&#xC73C;&#xB85C; behavior&#xB9CC; &#xC0AD;&#xC81C;&#xD55C; &#xD6C4; &#xC801;&#xC6A9;&#xB418;&#xB294; &#xC2DC;&#xAC04;&#xC758; &#xCC28;&#xC774;&#xAC00; &#xAC70;&#xC758; &#xC5C6;&#xC5C8;&#xB2E4;. &#xC624;&#xD788;&#xB824; &#xCCAB;&#xBC88;&#xC9F8; &#xBC29;&#xBC95;&#xC774; &#xB354; &#xBE60;&#xB974;&#xAC8C; &#xC801;&#xC6A9;&#xB418; &#xB418;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xD310;&#xB2E8;&#xB418;&#xC5C8;&#xB2E4;. &#xB2E4;&#xC74C; &#xAE00;&#xC5D0; &#xACC4;&#xC18D;&#x2026; &#xB2E4;&#xC74C; &#xAE00;&#xC5D0;&#xB294; &#xB78C;&#xB2E4; &#xBC30;&#xD3EC; &#xD6C4; &#xB4E4;&#xC774;&#xB2E5;&#xCE58;&#xAC8C; &#xB418;&#xB294; &#xAC01;&#xC885; &#xB9AC;&#xBBF8;&#xD2B8;&#xB4E4;&#x2026; &#xB9AC;&#xBBF8;&#xD2B8; &#xB4A4;&#xC5D0; &#xC228;&#xC5B4;&#xC788;&#xB294; &#xB610; &#xB2E4;&#xB978; &#xB9AC;&#xBBF8;&#xD2B8;&#xB4E4;&#xC5D0; &#xB300;&#xD55C; &#xC774;&#xC57C;&#xAE30;&#xB97C; &#xC4F8; &#xC608;&#xC815;&#xC774;&#xB2E4;. &#xB2E4;&#xC74C;&#xAE00; : 3&#xD3B8;. Lambda &#xBC30;&#xD3EC; &#xD6C4; &#xACAA;&#xAC8C;&#xB418;&#xB294; &#xC77C;&#xB4E4;","categories":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/categories/AWS/"},{"name":"Lambda","slug":"AWS/Lambda","permalink":"http://DevStarSJ.github.io/categories/AWS/Lambda/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/tags/AWS/"},{"name":"Lambda","slug":"Lambda","permalink":"http://DevStarSJ.github.io/tags/Lambda/"},{"name":"Serverless","slug":"Serverless","permalink":"http://DevStarSJ.github.io/tags/Serverless/"}]},{"title":"Monolith to Serverless using AWS Lambda (1)","slug":"MonolithToServerless.01","date":"2017-02-22T15:00:00.000Z","updated":"2017-04-23T09:28:24.000Z","comments":true,"path":"2017/02/23/MonolithToServerless.01/","link":"","permalink":"http://DevStarSJ.github.io/2017/02/23/MonolithToServerless.01/","excerpt":"","text":"Monolith to Serverless using AWS Lambda &#xAE30;&#xC874; &#xBAA8;&#xB178;&#xB9AC;&#xC2A4; API &#xC11C;&#xBC84;&#xB97C; AWS Lambda&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;&#xB85C; &#xBCC0;&#xACBD;&#xD558;&#xAE30; 1&#xD3B8;. &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;&#xB97C; &#xD558;&#xB824;&#xB294; &#xC774;&#xC720; &#xCD5C;&#xADFC; &#xC0C8;&#xB85C; &#xC785;&#xC0AC;&#xD55C; &#xACF3;&#xC5D0;&#xC11C; &#xD558;&#xACE0; &#xC788;&#xB294; &#xC791;&#xC5C5;&#xC774; &#xAE30;&#xC874;&#xC758; &#xBAA8;&#xB178;&#xB9AC;&#xC2A4;&#xB85C; &#xC6B4;&#xC601;&#xC911;&#xC774;&#xB358; API Server&#xB97C; &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;&#xB85C; &#xC62E;&#xACA8;&#xAC00;&#xB294; &#xC791;&#xC5C5;&#xC744; &#xD558;&#xACE0; &#xC788;&#xB2E4;. &#xADF8; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xACAA;&#xC5C8;&#xB358; &#xC5EC;&#xB7EC;&#xAC00;&#xC9C0; &#xC77C;&#xB4E4;&#xACFC; &#xB098;&#xC758; &#xC0DD;&#xAC01;&#xB4E4;&#xC744; &#xACF5;&#xC720;&#xD558;&#xACE0;&#xC790; &#xD558;&#xB294; &#xCC28;&#xC6D0;&#xC5D0;&#xC11C; &#xD3EC;&#xC2A4;&#xD305;&#xC744; &#xACB0;&#xC2EC;&#xD588;&#xB2E4;. &#xC694;&#xC998; &#xC720;&#xD589;&#xC911;&#xC778; &#xB2E8;&#xC5B4; &#xC911;&#xC5D0; Serverless Architecture &#xB780; &#xB9D0;&#xC774; &#xC788;&#xB2E4;. &#xC704;&#xD0A4;&#xD53C;&#xB514;&#xC544;&#xC5D0;&#xB294; Serverless computing&#xC73C;&#xB85C; &#xB4E4;&#xC5B4;&#xAC00;&#xBCF4;&#xBA74; &#xC798; &#xC124;&#xBA85;&#xB418;&#xC5B4; &#xC788;&#xB2E4;. &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;&#xAC00; &#xC5B4;&#xB5A4; &#xC7A5;&#xC810;&#xC774; &#xC788;&#xAE38;&#xB798; &#xB2E4;&#xB4E4; &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;, &#xC11C;&#xBC84;&#xB9AC;&#xC2A4; &#xB178;&#xB798;&#xB97C; &#xBD80;&#xB97C;&#xAE4C; ? &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;&#xC758; &#xC7A5;&#xC810; = &#xBAA8;&#xB178;&#xB9AC;&#xC2A4;&#xC758; &#xB2E8;&#xC810; 1. &#xC11C;&#xBC84; &#xC2A4;&#xCF00;&#xC77C;&#xB9C1;&#xC774; &#xD544;&#xC694;&#xC5C6;&#xB2E4;. &#xC694;&#xC998; &#xC11C;&#xBC84;&#xB97C; &#xC9C1;&#xC811; &#xC6B4;&#xC601;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xB294; &#xC798; &#xC5C6;&#xACE0; &#xB300;&#xBD80;&#xBD84; &#xD074;&#xB77C;&#xC6B0;&#xB4DC; &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xC774;&#xC6A9;&#xD55C;&#xB2E4;. (ex. AWS&#xC758; EC2) &#xC11C;&#xBC84;&#xAC00; &#xC8FD;&#xB294; &#xB300;&#xBD80;&#xBD84;&#xC758; &#xACBD;&#xC6B0;&#xB294; &#xC11C;&#xBC84;&#xAC00; &#xAC10;&#xB2F9;&#xAC00;&#xB2A5;&#xD55C; &#xD1B5;&#xC2E0; &#xB300;&#xC5ED;&#xD3ED;, &#xBA54;&#xBAA8;&#xB9AC; &#xC6A9;&#xB7C9;, &#xCEF4;&#xD4E8;&#xD305; &#xB2A5;&#xB825;&#xC744; &#xB118;&#xC5B4;&#xC11C;&#xB294; &#xC694;&#xCCAD;&#xC774; &#xB4E4;&#xC5B4;&#xC624;&#xB294; &#xACBD;&#xC6B0;&#xC774;&#xB2E4;. &#xB300;&#xBD80;&#xBD84;&#xC758; &#xACBD;&#xC6B0;&#xB294; &#xADF8;&#xB807;&#xAC8C; &#xC694;&#xCCAD;&#xC774; &#xB9CE;&#xC774; &#xB4E4;&#xC5B4;&#xC624;&#xB294; &#xAC83;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC5B4;&#xB290; &#xC815;&#xB3C4; &#xC54C; &#xC218; &#xC788;&#xC73C;&#xBBC0;&#xB85C;, &#xBBF8;&#xB9AC; &#xC11C;&#xBC84;&#xB97C; &#xB9CE;&#xC774; &#xB298;&#xB824;&#xB193;&#xC73C;&#xBA74; &#xB41C;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xC694;&#xC998;&#xC740; &#xD074;&#xB77C;&#xC6B0;&#xB4DC; &#xC11C;&#xBE44;&#xC2A4; &#xC0C1;&#xC5D0; &#xCEE8;&#xD14C;&#xC774;&#xB108;&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xC2A4;&#xCF00;&#xC77C;&#xB9C1;&#xD574;&#xC8FC;&#xB294; &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xB300;&#xBD80;&#xBD84; &#xC81C;&#xACF5;&#xD574;&#xC8FC;&#xBBC0;&#xB85C;, &#xC624;&#xD1A0; &#xC2A4;&#xCF00;&#xC77C;&#xB9C1;&#xC744; &#xC124;&#xC815;&#xD574; &#xB193;&#xC73C;&#xBA74; &#xD574;&#xACB0;&#xB41C;&#xB2E4;. &#xADF8;&#xB807;&#xAC8C; &#xD558;&#xB354;&#xB77C;&#xB3C4; &#xC7A5;&#xC560;&#xAC00; &#xBC1C;&#xC0DD;&#xD55C;&#xB2E4;. &#xADF8;&#xB7FC; &#xC5B8;&#xC81C; &#xC5C4;&#xCCAD;&#xB09C; &#xC591;&#xC758; &#xC694;&#xCCAD;&#xC774; &#xAC11;&#xC790;&#xAE30; &#xB4E4;&#xC5B4;&#xC62C;&#xAE4C; ? &#xB300;&#xBD80;&#xBD84;&#xC758; &#xACBD;&#xC6B0;&#xB294; &#xC911;&#xC694;&#xD55C; &#xC2DC;&#xC810;&#xC774;&#xB2E4;. &#xC5EC;&#xAE30;&#xC11C; &#xB9D0;&#xD558;&#xB294; &#xC911;&#xC694;&#xD55C; &#xC2DC;&#xC810;&#xC740; &#xC11C;&#xBE44;&#xC2A4;&#xC5D0; &#xB300;&#xD55C; &#xD64D;&#xBCF4;&#xAC00; &#xB098;&#xAC14;&#xC744; &#xACBD;&#xC6B0;&#xB97C; &#xB9D0;&#xD55C;&#xB2E4;. &#xC9C0;&#xAE08; &#xC811;&#xC18D;&#xD558;&#xBA74; &#xC120;&#xCC29;&#xC21C; &#xBA87;&#xBA85;&#xC5D0;&#xAC8C; &#xCFE0;&#xD3F0; &#xC99D;&#xC815;, PPL&#xC744; &#xD1B5;&#xD574; &#xD574;&#xB2F9; &#xC11C;&#xBE44;&#xC2A4;&#xC5D0; &#xB300;&#xD55C; &#xD64D;&#xBCF4;&#xAC00; &#xBC29;&#xC1A1;&#xC5D0; &#xB098;&#xAC04; &#xACBD;&#xC6B0;, &#xC571;&#xC5D0; &#xD478;&#xC2DC;&#xB97C; &#xBC1C;&#xC1A1;&#xD55C; &#xACBD;&#xC6B0; &#xB4F1;&#xC774; &#xC788;&#xC744; &#xAC83;&#xC774;&#xB2E4;. &#xB9CC;&#xC57D; &#xC624;&#xB298; &#xBC24;&#xC5D0; &#xD558;&#xB294; &#xB4DC;&#xB77C;&#xB9C8;&#xC5D0; PPL&#xB85C; &#xC6B0;&#xB9AC; &#xC11C;&#xBE44;&#xC2A4;&#xAC00; &#xC18C;&#xAC1C;&#xB420; &#xC608;&#xC815;&#xC774;&#xB2E4;. &#xB4DC;&#xB77C;&#xB9C8;&#xAC00; 10&#xC2DC;&#xC5D0; &#xC2DC;&#xC791;&#xD558;&#xACE0;, PPL&#xC774; &#xB098;&#xAC08; &#xC2DC;&#xAC04;&#xC774; &#xB300;&#xB7B5; 10&#xC2DC; 40&#xBD84;&#xCBE4; &#xB420;&#xAC83; &#xAC19;&#xB2E4;&#xACE0; &#xD55C;&#xB2E4;&#xBA74; ??? &#xAD00;&#xB828;&#xC790;&#xB4E4;&#xC740; &#xD1F4;&#xADFC;&#xC744; &#xBABB;&#xD55C;&#xB2E4;. &#xADF8; &#xC2DC;&#xAC04; &#xC774;&#xC804;&#xC5D0; &#xC11C;&#xBC84;&#xB97C; &#xCDA9;&#xBD84;&#xD788; &#xB298;&#xB824;&#xB193;&#xACE0;, &#xACC4;&#xC18D; &#xC11C;&#xBC84; &#xC0C1;&#xD0DC;&#xB97C; &#xBAA8;&#xB2C8;&#xD130;&#xB9C1; &#xD558;&#xACE0; &#xC788;&#xB2E4;&#xAC00;, &#xC694;&#xCCAD;&#xC218;&#xAC00; &#xC904;&#xC5B4;&#xB4E4;&#xBA74; &#xC11C;&#xBC84;&#xB97C; &#xB2E4;&#xC2DC; &#xC904;&#xC774;&#xB358;&#xC9C0; &#xC544;&#xB2C8;&#xBA74; &#xC624;&#xD1A0; &#xC2A4;&#xCF00;&#xC77C;&#xB9C1; &#xC124;&#xC815;&#xC744; &#xC870;&#xC815;&#xD574;&#xC918;&#xC57C; &#xD55C;&#xB2E4;. &#xC624;&#xD1A0; &#xC2A4;&#xCF00;&#xC77C;&#xB9C1; ? &#xADF8;&#xB7FC; &#xC790;&#xB3D9;&#xC73C;&#xB85C; &#xB418;&#xC5B4;&#xC57C; &#xD558;&#xB294;&#xAC83; &#xC544;&#xB2CC;&#xAC00; ? &#xD558;&#xC9C0;&#xB9CC; &#xCEE8;&#xD14C;&#xC774;&#xB108;&#xC5D0; &#xC11C;&#xBC84; &#xC774;&#xBBF8;&#xC9C0;&#xB97C; &#xBCF5;&#xC0AC;&#xD574;&#xC11C; &#xAC00;&#xB3D9;&#xD558;&#xB294;&#xB370; &#xB300;&#xB7B5; 15&#xBD84;&#xC758; &#xC2DC;&#xAC04;&#xC774; &#xAC78;&#xB9B0;&#xB2E4;&#xACE0; &#xAC00;&#xC815;&#xD588;&#xC744; &#xB54C;, 15&#xBD84;&#xB3D9;&#xC548; &#xAE30;&#xC874;&#xC5D0; &#xC2E4;&#xD589;&#xD558;&#xACE0; &#xC788;&#xB358; &#xC11C;&#xBC84;&#xB4E4;&#xC774; &#xC8FD;&#xC9C0;&#xC54A;&#xACE0; &#xC694;&#xCCAD;&#xB4E4;&#xC744; &#xC798; &#xCC98;&#xB9AC;&#xD574; &#xC900;&#xB2E4;&#xBA74; &#xBB38;&#xC81C;&#xAC00; &#xB418;&#xC9C0; &#xC54A;&#xC9C0;&#xB9CC; &#xADF8;&#xB7EC;&#xC9C0; &#xBABB;&#xD560; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xBC14;&#xB85C; &#xC7A5;&#xC560;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294;&#xAC70;&#xB2E4;. &#xADF8;&#xB7FC; &#xADF8;&#xAC8C; &#xBB34;&#xC2A8; &#xC624;&#xD1A0; &#xC2A4;&#xCF00;&#xC77C;&#xB9C1;&#xC774;&#xB0D0; ? &#xB77C;&#xACE0; &#xC0DD;&#xAC01;&#xD560; &#xC218; &#xC788;&#xC9C0;&#xB9CC;, &#xADF8;&#xB7FC; &#xD604;&#xC7AC; &#xC11C;&#xBE44;&#xC2A4;&#xB418;&#xACE0; &#xC788;&#xB294; &#xC11C;&#xBC84;&#xC218;&#xB97C; &#xC5B4;&#xB5BB;&#xAC8C; &#xC124;&#xC815;&#xD560; &#xAC83;&#xC778;&#xAC00; ? &#xC5B8;&#xC81C; &#xC11C;&#xBC84;&#xB97C; &#xB354; &#xB298;&#xB9B4;&#xAC83;&#xC778;&#xAC00; ? &#xC5D0; &#xB300;&#xD55C; &#xACE0;&#xBBFC;&#xC744; &#xC11C;&#xBC84; &#xAD00;&#xB9AC;&#xC790;&#xB294; &#xD56D;&#xC0C1;&#xD574;&#xC57C;&#xD558;&#xB294;&#xB370;, &#xADF8; &#xACE0;&#xBBFC;&#xC5D0;&#xC11C; &#xC5B4;&#xCA4C;&#xBA74; &#xAC00;&#xC7A5; &#xC911;&#xC694;&#xD55C; &#xD3EC;&#xC778;&#xD2B8;&#xB294; &#xBE44;&#xC6A9;&#xC774;&#xB2E4;. &#xC11C;&#xBC84;&#xAC00; &#xC8FD;&#xC9C0; &#xC54A;&#xC73C;&#xBA74;&#xC11C; &#xCD5C;&#xC801;&#xC758; &#xBE44;&#xC6A9;&#xC73C;&#xB85C; &#xC6B4;&#xC601;&#xC744; &#xD558;&#xB294;&#xAC8C; &#xCD5C;&#xB300;&#xD55C;&#xC758; &#xC774;&#xC775;&#xC774; &#xB098;&#xB294; &#xAC83;&#xC774;&#xAE30;&#xC5D0; &#xADF8; &#xC124;&#xC815;&#xC744; &#xCD5C;&#xB300;&#xD55C; &#xD0C0;&#xC774;&#xD2B8;&#xD558;&#xAC8C; &#xD558;&#xB294;&#xAC8C; &#xC88B;&#xB2E4;. &#xB9CC;&#xC57D; &#xC124;&#xC815;&#xC744; &#xC7A5;&#xC560;&#xC5D0; &#xC8FD;&#xC9C0; &#xC54A;&#xB294;&#xAC83;&#xC774; &#xCD5C;&#xACE0;&#xB77C;&#xACE0; &#xC0DD;&#xAC01;&#xD558;&#xACE0; &#xB298; &#xB9CE;&#xC774; &#xB744;&#xC6CC;&#xB193;&#xC73C;&#xBA74; &#xADF8;&#xB9CC;&#xD07C; &#xACFC;&#xAE08;&#xC740; &#xB9CE;&#xC774;&#xB418;&#xACE0; &#xC11C;&#xBC84;&#xB294; &#xB9CE;&#xC740; &#xC2DC;&#xAC04;&#xC744; &#xB180;&#xACE0; &#xC788;&#xAC8C; &#xB41C;&#xB2E4;. &#xC694;&#xCCAD;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC2A4;&#xCF00;&#xC77C;&#xB9C1;&#xD558;&#xB294; &#xC815;&#xCC45; &#xC790;&#xCCB4;&#xB97C; &#xB290;&#xC2A8;&#xD558;&#xAC8C; &#xD558;&#xBA74; &#xD3C9;&#xC18C;&#xB77C;&#xB3C4; &#xD55C;&#xC21C;&#xAC04; &#xC694;&#xCCAD;&#xC774; &#xBAB0;&#xB9B4; &#xACBD;&#xC6B0; &#xBC14;&#xB85C; &#xC11C;&#xBC84;&#xB97C; &#xC0C8;&#xB85C; &#xC62C;&#xB9AC;&#xAC8C; &#xB418;&#xACE0;, &#xC62C;&#xB9AC;&#xB294;&#xB370; 15&#xBD84;&#xC774; &#xAC78;&#xB9AC;&#xB294;&#xB370; &#xB9C9;&#xC0C1; 15&#xBD84; &#xB4A4;&#xC5D0;&#xB294; &#xADF8; &#xC11C;&#xBC84;&#xAC00; &#xD544;&#xC694;&#xC5C6;&#xAC8C; &#xB418;&#xB294; &#xACBD;&#xC6B0;&#xAC00; &#xB9CE;&#xC774; &#xBC1C;&#xC0DD;&#xD560; &#xAC83;&#xC774;&#xB2E4;. &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;&#xB85C; &#xAC04;&#xB2E4;&#xBA74; &#xC2E4;&#xC9C8;&#xC801;&#xC778; &#xC11C;&#xBC84; &#xC6B4;&#xC601;&#xC744; &#xD074;&#xB77C;&#xC6B0;&#xB4DC; &#xC11C;&#xBE44;&#xC2A4; &#xC5C5;&#xCCB4;&#xC5D0;&#xAC8C; &#xC644;&#xC804; &#xB118;&#xAE38;&#xC218; &#xC788;&#xC73C;&#xBBC0;&#xB85C;, &#xC774;&#xB7F0; &#xACE0;&#xD1B5;&#xC5D0;&#xC11C; &#xBC97;&#xC5B4;&#xB0A0; &#xC218; &#xC788;&#xB2E4;. (&#xD558;&#xC9C0;&#xB9CC;, &#xC2E4;&#xC81C;&#xB85C;&#xB294; &#xC774;&#xAC83;&#xB3C4; &#xBAA8;&#xB2C8;&#xD130;&#xB9C1;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. &#xADF8; &#xC774;&#xC720;&#xB294; &#xB4A4;&#xC5D0; &#xB530;&#xB85C; &#xC124;&#xBA85;&#xD558;&#xACA0;&#xB2E4;. &#xC544;&#xC8FC; &#xAC04;&#xB7B5;&#xD558;&#xAC8C;&#xB9CC; &#xC598;&#xAE30;&#xD558;&#xC790;&#xBA74; &#xD074;&#xB77C;&#xC6B0;&#xB4DC; &#xC11C;&#xBE44;&#xC2A4;&#xC5D0;&#xAC8C; &#xC0AC;&#xC6A9;&#xC790;&#xC5D0;&#xAC8C; &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB420; &#xC790;&#xC6D0;&#xC744; &#xBB34;&#xD55C;&#xD788; &#xC8FC;&#xC9C0;&#xC54A;&#xACE0; &#xC81C;&#xD55C;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC774;&#xB2E4;.) 2. &#xBE44;&#xC6A9; &#xC2F8;&#xB2E4;. &#xB2E4;&#xB978; &#xB9D0;&#xC774; &#xB354; &#xD544;&#xC694;&#xD55C;&#xAC00; ? AWS EC2 &#xC11C;&#xBC84;&#xB85C; &#xC6B4;&#xC601;&#xD558;&#xB294;&#xAC83; &#xBCF4;&#xB2E4; Lambda + API Gateway&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; API&#xB97C; &#xC11C;&#xBE44;&#xC2A4; &#xD574;&#xBCF4;&#xB2C8; &#xD6E8;&#xC52C; &#xB354; &#xC2F8;&#xB2E4;. EC2&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC6B4;&#xC601;&#xC911;&#xC778; &#xC11C;&#xBC84;&#xC218; x &#xC11C;&#xBC84; &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xC758; &#xBE44;&#xC6A9; x &#xC11C;&#xBC84;&#xAC00; &#xC6B4;&#xC601;&#xC911;&#xC778; &#xAE30;&#xAC04; (1&#xC2DC;&#xAC04; &#xB2E8;&#xC704;)&#xB85C; &#xACFC;&#xAE08;&#xC774; &#xC774;&#xB8E8;&#xC5B4; &#xC9C4;&#xB2E4;. Lambda&#xC758; &#xACBD;&#xC6B0;&#xB294; &#xCF54;&#xB4DC;&#xAC00; &#xC218;&#xD589;&#xB41C; &#xC2DC;&#xAC04;&#xC744; 100ms &#xB2E8;&#xC704;&#xB85C; &#xC62C;&#xB9BC;&#xD558;&#xC5EC; &#xACFC;&#xAE08;&#xD55C;&#xB2E4;. API Gateway&#xC758; &#xACBD;&#xC6B0; 100&#xB9CC; &#xC694;&#xCCAD; &#xB2F9; 3.5 USD&#xAC00; &#xACFC;&#xAE08;&#xB41C;&#xB2E4;. &#xC774;&#xB807;&#xAC8C; &#xBD10;&#xC11C;&#xB294; &#xACFC;&#xC5F0; &#xB354; &#xC2FC;&#xC9C0; &#xBC14;&#xB85C; &#xD310;&#xB2E8;&#xC774; &#xC548;&#xB418;&#xACA0;&#xC9C0;&#xB9CC;, &#xC2E4;&#xC81C;&#xB85C; &#xC6B4;&#xC601;&#xD574;&#xBCF4;&#xB2C8; &#xD6E8;&#xC52C; &#xB354; &#xC2F8;&#xB2E4;. &#xBE44;&#xAD50;&#xB3C4; &#xC548;&#xB418;&#xAC8C; &#xC2F8;&#xB2E4;. &#xC77C;&#xB2E8; &#xC774; &#xB450;&#xAC00;&#xC9C0;&#xAC00; &#xC9C1;&#xC811; &#xACAA;&#xC5C8;&#xB358; &#xD070; &#xC774;&#xC720;&#xB2E4;. &#xC774;&#xAC83; &#xB9D0;&#xACE0;&#xB3C4; &#xC5EC;&#xB7EC;&#xAC00;&#xC9C0; &#xBC1C;&#xD45C;&#xC790;&#xB8CC;&#xB4E4;&#xC744; &#xCC3E;&#xC544;&#xBCF4;&#xBA74; &#xB2E4;&#xB978; &#xC7A5;&#xC810;&#xB4E4;&#xC774; &#xB9CE;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xADF8;&#xAC74; &#xC635;&#xC158; &#xC0AC;&#xD56D;&#xC778;&#xB4EF; &#xD558;&#xB2E4;. 3. &#xD3F4;&#xB9AC;&#xADF8;&#xB78F;&#xC774; &#xAC00;&#xB2A5; &#xAC01; API &#xAE30;&#xB2A5;&#xBCC4;&#xB85C; &#xB2E4;&#xB978; &#xC5B8;&#xC5B4;&#xB85C; &#xAC1C;&#xBC1C;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xB2F9;&#xC5F0;&#xD788; &#xADF8;&#xB807;&#xACA0;&#xC9C0;. &#xAC01;&#xAC01; &#xB530;&#xB85C; &#xB514;&#xD50C;&#xB85C;&#xC774; &#xB418;&#xC5B4;&#xC11C; &#xAD00;&#xB9AC;&#xB418;&#xB2C8;&#xAE50;&#x2026; &#xD558;&#xC9C0;&#xB9CC; &#xADF8;&#xB807;&#xAC8C; &#xAC01;&#xAC01;&#xC758; API&#xB97C; &#xC11C;&#xB85C; &#xB2E4;&#xB978; &#xC5B8;&#xC5B4;&#xB85C; &#xC11C;&#xB85C; &#xB2E4;&#xB978; &#xD504;&#xB808;&#xC784;&#xC6CC;&#xD06C;&#xB97C; &#xC368;&#xC11C; &#xB9CC;&#xB4E4;&#xC5B4; &#xC62C;&#xB9AC;&#xBA74; &#xAD00;&#xB9AC;&#xB294; &#xB204;&#xAC00;&#xD558;&#xB098; ? &#xC815;&#xB9D0; &#xAE09;&#xD558;&#xAC8C; &#xC11C;&#xBE44;&#xC2A4;&#xD574;&#xC57C; &#xB418;&#xC5B4;&#xC11C; &#xC544;&#xC6C3;&#xC18C;&#xC2F1;&#xC73C;&#xB85C; &#xAC00;&#xC7A5; &#xC790;&#xC2E0;&#xC788;&#xB294; &#xC5B8;&#xC5B4;&#xB85C; &#xCD5C;&#xB300;&#xD55C; &#xBE68;&#xB9AC; &#xD574;&#xC8FC;&#xC138;&#xC694;. &#xAC00; &#xC544;&#xB2CC; &#xC774;&#xC0C1; &#xD55C; &#xC870;&#xC9C1;&#xC5D0;&#xC11C; &#xC774;&#xB807;&#xAC8C; &#xD588;&#xC744;&#xB54C; &#xACFC;&#xC5F0; &#xC7A5;&#xC810;&#xC774; &#xB354; &#xD074;&#xC9C0; &#xB2E8;&#xC810;&#xC774; &#xB354; &#xD074;&#xC9C0;&#x2026; &#xC544;&#xB2C8;&#xBA74; &#xAC1C;&#xBC1C; &#xC870;&#xC9C1;&#xC774; &#xC5C4;&#xCCAD;&#xB098;&#xAC8C; &#xD06C;&#xACE0;, API &#xAC1C;&#xBC1C;&#xC790;&#xAC00; &#xC218;&#xC2ED;&#xBA85; &#xC788;&#xC744; &#xACBD;&#xC6B0;&#xB77C;&#xBA74; &#xB098;&#xB984; &#xAD1C;&#xCC2E;&#xC744;&#xAC83; &#xAC19;&#xAE30;&#xB3C4; &#xD558;&#xB2E4;. &#xB2F9;&#xC7A5; &#xB098;&#xC758; &#xACBD;&#xC6B0;&#xB9CC; &#xBCF4;&#xB354;&#xB77C;&#xB3C4; &#xAC00;&#xC7A5; &#xC790;&#xC2E0;&#xC788;&#xACE0; &#xAC00;&#xC7A5; &#xBE68;&#xB9AC; &#xAC1C;&#xBC1C;&#xC774; &#xAC00;&#xB2A5;&#xD55C; &#xC5B8;&#xC5B4;&#xB294; C# &#xC774;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; Node.JS &#xB85C; API&#xB97C; &#xAC1C;&#xBC1C; &#xC911;&#xC774;&#xB2E4;. (&#xC5EC;&#xAE30;&#xC5D0;&#xB294; &#xB2E4;&#xB978; &#xC774;&#xC720;&#xB3C4; &#xC788;&#xAE34;&#xC788;&#xB2E4;. &#xC544;&#xC9C1; AWS Lambda&#xC5D0;&#xC11C; .Net CORE &#xC9C0;&#xC6D0;&#xC774; &#xBBFF;&#xC744;&#xB9CC;&#xD55C; &#xC218;&#xC900;&#xC740; &#xC544;&#xB2C8;&#xB77C;&#xC11C;&#x2026;) &#xC774; &#xCBE4;&#xB418;&#xBA74; &#xC11C;&#xBC84;&#xB9AC;&#xC2A4;&#xB97C; &#xC548; &#xD560; &#xC774;&#xC720;&#xAC00; &#xC5C6;&#xC5B4;&#xBCF4;&#xC778;&#xB2E4;. &#xC815;&#xB9D0;&#xB85C; &#xADF8;&#xB807;&#xAC8C; &#xC0DD;&#xAC01;&#xC774; &#xB4E0;&#xB2E4;&#xBA74;&#x2026; &#xC77C;&#xB2E8; &#xC11C;&#xBC84;&#xB9AC;&#xC2A4; &#xC57D;&#xC744; &#xD30C;&#xB294;&#xB370; &#xC870;&#xAE08;&#xC740; &#xC131;&#xACF5;&#xD588;&#xB2E8; &#xC0DD;&#xAC01;&#xC774; &#xB4E0;&#xB2E4;. &#xC73C;&#xD750;&#xD750;&#x2026;. Serverless&#xB85C; &#xAC08;&#xC544;&#xD0C0;&#xAE30; &#xC704;&#xD55C; &#xC870;&#xAC74; &#xC774;&#xBBF8; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xC11C;&#xBE44;&#xC2A4;&#xB418;&#xACE0; &#xC788;&#xB294; API&#xB97C; &#xC62E;&#xACA8;&#xC57C; &#xD558;&#xB294; &#xC791;&#xC5C5;&#xC774;&#xB2E4;&#xBCF4;&#xB2C8; &#xAC00;&#xC7A5; &#xC911;&#xC694;&#xD55C; &#xAC83;&#xC740; &#xC11C;&#xBE44;&#xC2A4;&#xC5D0; &#xC9C0;&#xC7A5;&#xC744; &#xC8FC;&#xC9C0; &#xC54A;&#xC544;&#xC57C; &#xD55C;&#xB2E4;&#xB294; &#xC810;&#xC774;&#xB2E4;. &#xADF8;&#xAC78; &#xC5B4;&#xB5BB;&#xAC8C; &#xD655;&#xC2E0; &#xD560; &#xC218; &#xC788;&#xC744;&#xAE4C; ? &#xD14C;&#xC2A4;&#xD2B8;&#xB97C; &#xC644;&#xBCBD;&#xD558;&#xAC8C; &#xAF3C;&#xAF3C;&#xD558;&#xAC8C; &#xC798; &#xD574;&#xC11C; &#xAE30;&#xC874; API&#xC640; &#xB611;&#xAC19;&#xC774; &#xB3D9;&#xC791;&#xD558;&#xB294; &#xAC83;&#xC744; &#xC99D;&#xBA85;&#xD574; &#xB0B8;&#xB2E4;. &#xC0C8;&#xB85C; &#xC62C;&#xB9B0; API&#xAC00; &#xC798;&#xBABB;&#xB418;&#xC5C8;&#xC744; &#xB54C; (&#xD55C;&#xB9C8;&#xB514;&#xB85C; &#xC7A5;&#xC560;&#xAC00; &#xB0AC;&#xC744; &#xB54C;) &#xB2E4;&#xC2DC; &#xB418;&#xB3CC;&#xB9AC;&#xB294;&#xB370; &#xAC78;&#xB9AC;&#xB294; &#xC2DC;&#xAC04;&#xC744; &#xCD5C;&#xC18C;&#xD654; &#xD55C;&#xB2E4;. &#xC774; &#xB450; &#xAC00;&#xC9C0; &#xC810;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xD655;&#xC2E4;&#xD55C; &#xACC4;&#xD68D;&#xC744; &#xC138;&#xC6CC;&#xC11C; &#xACB0;&#xC815;&#xAD8C;&#xC790;&#xB97C; &#xC124;&#xB4DD;&#xC2DC;&#xCF1C;&#xC57C; &#xD55C;&#xB2E4;. &#xC644;&#xBCBD;&#xD55C; &#xD14C;&#xC2A4;&#xD2B8;&#xB294; &#xC77C;&#xB2E8; &#xD3EC;&#xAE30;&#xD588;&#xB2E4;. &#xD3EC;&#xAE30;&#xD55C; &#xAC00;&#xC7A5; &#xD070; &#xC774;&#xC720;&#xB294; &#xC77C;&#xB2E8; &#xC2DC;&#xAC04;&#xC774;&#xB2E4;. &#xC774; &#xC791;&#xC5C5;&#xC740; &#xC0AC;&#xC5C5;&#xC801;&#xC778; &#xCE21;&#xBA74;&#xC5D0;&#xC11C; &#xBD24;&#xC744;&#xB550; &#xC804;&#xD600; &#xD544;&#xC694;&#xC5C6;&#xB294; &#xC791;&#xC5C5;&#xC77C; &#xC218;&#xB3C4; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xAE34; &#xC2DC;&#xAC04;&#xC744; &#xB4E4;&#xC5EC;&#xC11C; &#xC791;&#xC5C5;&#xD558;&#xAE30; &#xD798;&#xB4E4;&#xB2E4;. &#xC0AC;&#xC2E4;&#xC0C1; &#xD68C;&#xC0AC;&#xB0B4;&#xC758; &#xAC1C;&#xBC1C;&#xD300;&#xC774; &#xC544;&#xB2CC; &#xB2E4;&#xB978; &#xC0AC;&#xB78C;&#xB4E4;&#xC774; &#xBD24;&#xC744; &#xB550; &#xADF8;&#xB0E5; &#xC0AC;&#xC5C5;&#xC801;&#xC778; &#xC601;&#xC5ED; &#xD558;&#xB098;&#xB97C; &#xB9E1;&#xC544;&#xC11C; &#xC9C4;&#xD589;&#xD558;&#xB294;&#xAC8C; &#xC544;&#xB2C8;&#xB77C;&#xC11C;, &#xADF8;&#xB0E5; &#xC544;&#xBB34;&#xAC83;&#xB3C4; &#xC548;&#xD558;&#xACE0; &#xB180;&#xACE0; &#xC788;&#xB294; &#xAC78;&#xB85C; &#xBCF4;&#xC77C; &#xC218;&#xB3C4; &#xC788;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xC544;&#xBB34;&#xB9AC; &#xD14C;&#xC2A4;&#xD2B8;&#xB97C; &#xC644;&#xBCBD;&#xD558;&#xAC8C; &#xD55C;&#xB2E4;&#xACE0; &#xD55C;&#xB4E4; &#xADF8;&#xB807;&#xB2E4;&#xACE0; &#xC7A5;&#xC560; &#xB300;&#xC751;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC804;&#xD600; &#xC0DD;&#xAC01;&#xC744; &#xC548;&#xD574;&#xB3C4; &#xB418;&#xB294;&#xAC8C; &#xC544;&#xB2C8;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC644;&#xBCBD;&#xD55C; &#xD14C;&#xC2A4;&#xD2B8;&#xB294; &#xD3EC;&#xAE30;&#xD558;&#xACE0; &#xC7A5;&#xC560; &#xB300;&#xC751; &#xC2DC;&#xAC04; &#xCD5C;&#xC18C;&#xD654;&#xC5D0; &#xC880; &#xB354; &#xCD1B;&#xC810;&#xC744; &#xB9DE;&#xCDB0;&#xC11C; &#xC900;&#xBE44;&#xB97C; &#xC2DC;&#xC791;&#xD588;&#xB2E4;. (&#xC2E4;&#xC81C; &#xC791;&#xC5C5;&#xC5D0; &#xB4E4;&#xC5B4;&#xAC04; &#xB4A4;&#xC5D0; &#xC54C;&#xAC8C;&#xB41C; &#xC810;&#xC774;&#xC9C0;&#xB9CC;, &#xC7A5;&#xC560; &#xD3EC;&#xC778;&#xD2B8;&#xAC00; API&#xB97C; &#xC798;&#xBABB; &#xC62E;&#xAE34; &#xAC83;&#xBCF4;&#xB2E4;&#xB294; AWS &#xB0B4;&#xBD80;&#xC801;&#xC778; &#xBB38;&#xC81C;&#xAC00; &#xD6E8;&#xC52C; &#xB354; &#xCEF8;&#xC5C8;&#xB2E4;. &#xB9DD;&#xD560;&#xB188;&#xC758; &#xB9AC;&#xBBF8;&#xD2B8;&#x2026; &#xB04A;&#xC784;&#xC5C6;&#xB294; &#xB9AC;&#xBBF8;&#xD2B8;&#x2026; &#xB9AC;&#xBBF8;&#xD2B8; &#xB4A4;&#xC5D0; &#xC228;&#xC5B4;&#xC788;&#xB294; &#xB2E4;&#xB978; &#xB9AC;&#xBBF8;&#xD2B8;&#x2026;) &#xC7A5;&#xC560; &#xB300;&#xC751; &#xD50C;&#xB79C;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xB2E4;&#xC74C; &#xAE00;&#xC5D0;&#xC11C; &#xC880; &#xB354; &#xC790;&#xC138;&#xD788; &#xC124;&#xBA85;&#xD558;&#xACA0;&#xB2E4;. &#xB2E4;&#xC74C;&#xAE00; : 2&#xD3B8;. &#xC7A5;&#xC560; &#xB300;&#xC751; &#xD50C;&#xB79C; &#xB2E4;&#xC74C;&#xAE00; : 3&#xD3B8;. Lambda &#xBC30;&#xD3EC; &#xD6C4; &#xACAA;&#xAC8C;&#xB418;&#xB294; &#xC77C;&#xB4E4;","categories":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/categories/AWS/"},{"name":"Lambda","slug":"AWS/Lambda","permalink":"http://DevStarSJ.github.io/categories/AWS/Lambda/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/tags/AWS/"},{"name":"Lambda","slug":"Lambda","permalink":"http://DevStarSJ.github.io/tags/Lambda/"},{"name":"Serverless","slug":"Serverless","permalink":"http://DevStarSJ.github.io/tags/Serverless/"}]},{"title":"Get Request Body in Action Method","slug":"CSharp.Aspnet.RequestBodyLog","date":"2017-01-22T15:00:00.000Z","updated":"2017-04-23T10:21:54.000Z","comments":true,"path":"2017/01/23/CSharp.Aspnet.RequestBodyLog/","link":"","permalink":"http://DevStarSJ.github.io/2017/01/23/CSharp.Aspnet.RequestBodyLog/","excerpt":"","text":"Get Request Body in Action Method 123456string body = &quot;&quot;;Request.InputStream.Seek(0, SeekOrigin.Begin);using (StreamReader reader = new StreamReader(Request.InputStream)){ body = reader.ReadToEnd();}","categories":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/categories/C/"},{"name":"ASP.NET","slug":"C/ASP-NET","permalink":"http://DevStarSJ.github.io/categories/C/ASP-NET/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"},{"name":"ASP.NET","slug":"ASP-NET","permalink":"http://DevStarSJ.github.io/tags/ASP-NET/"}]},{"title":"AWS Lambda에 C# Handler 만들기","slug":"Lambda.CSharp","date":"2016-12-02T15:00:00.000Z","updated":"2017-04-23T08:21:19.000Z","comments":true,"path":"2016/12/03/Lambda.CSharp/","link":"","permalink":"http://DevStarSJ.github.io/2016/12/03/Lambda.CSharp/","excerpt":"","text":"AWS Lambda&#xC5D0; C# Handler &#xB9CC;&#xB4E4;&#xAE30; AWS Lambda&#xC5D0; &#xB300;&#xD574; &#xB2E4;&#xB8E8;&#xB294; 7&#xBC88;&#xC9F8; &#xAE00;&#xC785;&#xB2C8;&#xB2E4;. Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #1 (GET, POST) Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #2 (ANY, Deploy Staging, Node.JS Route) Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #3 (Proxy Resource) Lambda Node.JS Packaging AWS Lambda&#xC5D0; Python Handler &#xB9CC;&#xB4E4;&#xAE30; Lambda Python Packaging 2016&#xB144; 12&#xC6D4; 1&#xC77C;&#xBD80;&#xD130; (&#xAE00;&#xC4F4; &#xB0A0; &#xAE30;&#xC900;&#xC73C;&#xB85C; &#xC774;&#xD2C0; &#xC804;) AWS Lambda&#xC5D0;&#xC11C; C#&#xC744; &#xC9C0;&#xC6D0;&#xD574; &#xC90D;&#xB2C8;&#xB2E4;. (&#xAD00;&#xB828;&#xAE00; : https://aws.amazon.com/about-aws/whats-new/2016/12/aws-lambda-supports-c-sharp) .NET Framework&#xB97C; &#xC0AC;&#xC6A9;&#xD560;&#xB9AC;&#xB294; &#xC5C6;&#xACA0;&#xAD6C;&#xC694;.(&#xADF8; &#xBB34;&#xAC70;&#xC6B4; &#xD504;&#xB808;&#xC784;&#xC6CC;&#xD06C; &#xC704;&#xC5D0;&#xC11C; &#xB3CC;&#xB9AC;&#xB294; &#xBC84;&#xC804;&#xC740; &#xB2F9;&#xC5F0;&#xD788; &#xC544;&#xB2C8;&#xACA0;&#xC8E0;.) .NET Core 1.0 runtime &#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; C# &#xCF54;&#xB4DC;&#xB97C; &#xCEF4;&#xD30C;&#xC77C;&#xD558;&#xACE0; &#xC2E4;&#xD589;&#xD574; &#xC90D;&#xB2C8;&#xB2E4;. AWS&#xC5D0;&#xC11C; &#xC9C0;&#xC6D0;&#xD574;&#xC900;&#xB2E4;&#xB2C8;&#xAE50; &#xC798;&#xB418;&#xB294;&#xC9C0; &#xC9C1;&#xC811; &#xD55C; &#xBC88; &#xD574;&#xBD24;&#xC2B5;&#xB2C8;&#xB2E4;. &#xAC1C;&#xBC1C; &#xD658;&#xACBD; &#xD604;&#xC7AC; macOS&#xB97C; &#xC0AC;&#xC6A9;&#xC911;&#xC774;&#xC9C0;&#xB9CC;, C# &#xAC1C;&#xBC1C; &#xD658;&#xACBD;&#xC73C;&#xB85C; &#xAC00;&#xC7A5; &#xCF8C;&#xC801;&#xD558;&#xACE0; &#xC88B;&#xC740;&#xAC74; &#xC5ED;&#xC2DC; Windows&#xC5D0;&#xC11C; &#xC2E4;&#xD589;&#xC2DC;&#xD0A4;&#xB294; Visual Studio &#xC785;&#xB2C8;&#xB2E4;. Visual Studio for Mac &#xC774; &#xCD9C;&#xC2DC;&#xB418;&#xAE34; &#xD588;&#xC73C;&#xB098;, &#xC0AC;&#xC6A9;&#xD574;&#xBCF4;&#xB2C8; &#xB108;&#xBB34;&#xB098;&#xB3C4; &#xB290;&#xB9AC;&#xACE0; &#xB2F5;&#xB2F5;&#xD558;&#xB354;&#xB77C;&#xAD6C;&#xC694;. &#xCC28;&#xB77C;&#xB9AC; Parallels Desktop&#xC5D0; Windows 10&#xC744; &#xB744;&#xC6B0;&#xACE0; &#xAC70;&#xAE30;&#xC11C; Visual Studio Community 2015&#xB85C; &#xD558;&#xB294;&#xAC8C; &#xD6E8;&#xC52C; &#xB354; &#xBE60;&#xB974;&#xACE0; &#xD3B8;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC544;&#xB798;&#xC758; &#xAC1C;&#xBC1C;&#xB3C4;&#xAD6C;&#xB4E4;&#xC744; &#xC0AC;&#xC6A9;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. Visual Studio 2015 Community with Update 3 , .NET Core 1.0.1 tools Preview 2 : https://www.microsoft.com/net/core AWS Toolkit for Visual Studio : https://aws.amazon.com/visualstudio Project &#xC0DD;&#xC131; Visual Studio &#xC2E4;&#xD589;&#xD55C; &#xB4A4; File -&gt; New -&gt; Project &#xC120;&#xD0DD; Visual C# -&gt; AWS Lambda -&gt; AWS Lambda Project (.NET Core) &#xC120;&#xD0DD; Name : AWSLambdaTest &#xB77C;&#xACE0; &#xC785;&#xB825;&#xD55C; &#xD6C4; OK &#xBC84;&#xD2BC; &#xD074;&#xB9AD; Select Blueprint &#xCC3D;&#xC5D0;&#xC11C; Empty Function&#xC744; &#xC120;&#xD0DD;&#xD55C; &#xD6C4; Finish &#xBC84;&#xD2BC; &#xD074;&#xB9AD; &#xC774;&#xC81C; &#xD14C;&#xC2A4;&#xD2B8; &#xD504;&#xB85C;&#xC81D;&#xD2B8;&#xAC00; &#xC644;&#xC131;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. AWS Explorer &#xC5D0; &#xB85C;&#xADF8;&#xC778; AWS Lambda &#xBC30;&#xD3EC;&#xB97C; &#xC880; &#xB354; &#xD3B8;&#xD558;&#xAC8C; &#xD558;&#xAE30;&#xC704;&#xD574;&#xC11C; &#xBBF8;&#xB9AC; AWS Explorer&#xC5D0; &#xB85C;&#xADF8;&#xC778;&#xD574; &#xB450;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD654;&#xBA74;&#xC5D0; AWS Explorer&#xAC00; &#xC5C6;&#xB2E4;&#xBA74;, View -&gt; AWS Explorer&#xB97C; &#xC120;&#xD0DD;&#xD558;&#xC2DC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. &#xB9CC;&#xC57D; &#xD574;&#xB2F9; &#xBA54;&#xB274;&#xAC00; &#xB098;&#xC624;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;&#xBA74; AWS Toolkit for Visual Studio&#xB97C; &#xC124;&#xCE58;&#xD558;&#xC9C0; &#xC54A;&#xC740; &#xAC83;&#xC774;&#xBBC0;&#xB85C; &#xC704; &#xB9C1;&#xD06C;&#xC5D0;&#xC11C; &#xC124;&#xCE58;&#xB97C; &#xD558;&#xC2E0; &#xB4A4; &#xC9C4;&#xD589;&#xD574; &#xC8FC;&#xC138;&#xC694;. &#xC774;&#xBBF8; &#xB85C;&#xADF8;&#xC778; &#xB41C; &#xC0C1;&#xD0DC;&#xB77C;&#xBA74; &#xC544;&#xB798; &#xACFC;&#xC815;&#xC744; &#xC9C4;&#xD589; &#xD560; &#xD544;&#xC694;&#xAC00; &#xC5C6;&#xC2B5;&#xB2C8;&#xB2E4;. New Account Profile &#xC120;&#xD0DD; Profile Name : &#xC544;&#xBB34;&#xAC70;&#xB098; &#xC785;&#xB825;. &#xD654;&#xBA74;&#xC5D0; &#xD45C;&#xC2DC;&#xB420; &#xB0B4;&#xC6A9;&#xC774;&#xBBC0;&#xB85C; &#xAD6C;&#xBD84;&#xD558;&#xAE30; &#xC27D;&#xAC8C; Access Key ID , Secret Access Key : AWS&#xC5D0;&#xC11C; &#xBC1C;&#xAE09;&#xBC1B;&#xC740; &#xAC12;&#xC73C;&#xB85C; &#xC785;&#xB825; &#xB85C;&#xADF8;&#xC778;&#xC774; &#xC81C;&#xB300;&#xB85C; &#xB418;&#xC5C8;&#xB2E4;&#xBA74; &#xC544;&#xB798; &#xADF8;&#xB9BC;&#xACFC; &#xAC19;&#xC774; AWS Service &#xBAA9;&#xB85D;&#xC774; &#xB098;&#xC635;&#xB2C8;&#xB2E4;. Projeject &#xCF54;&#xB4DC; &#xC124;&#xBA85; &#xBA3C;&#xC800; &#xBE4C;&#xB4DC;&#xB97C; &#xD55C; &#xBC88; &#xD574;&#xBCF4;&#xC138;&#xC694;. &#xB9CC;&#xC57D; &#xBE4C;&#xB4DC;&#xAC00; &#xC548;&#xB41C;&#xB2E4;&#xBA74; Solution Explorer&#xB97C; &#xC5F4;&#xC5B4;&#xC11C; Project &#xB0B4;&#xC758; References&#xB97C; &#xC5F4;&#xC5B4;&#xBD10; &#xC8FC;&#xC138;&#xC694;. &#xC124;&#xCE58;&#xB41C; &#xC5B4;&#xC148;&#xBE14;&#xB9AC; &#xC911;&#xC5D0; &#xC798;&#xBABB; &#xB41C;&#xAC8C; &#xC788;&#xC73C;&#xBA74; &#xB178;&#xB780;&#xC0C9; &#xB290;&#xB08C;&#xD45C;&#xAC00; &#xB739;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7F4; &#xACBD;&#xC6B0; &#xC6B0;&#xD074;&#xB9AD;&#xD558;&#xC5EC;&#xC11C; Restore Packages&#xB97C; &#xC120;&#xD0DD;&#xD574; &#xC8FC;&#xC138;&#xC694;. &#xC790;&#xB3D9; &#xC0DD;&#xC131;&#xB41C; Function.cs &#xD30C;&#xC77C;&#xC744; &#xC5F4;&#xC5B4;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB208;&#xC5EC;&#xACA8; &#xBCFC; &#xBD80;&#xBD84;&#xC774; &#xB450; &#xACF3; &#xC815;&#xB3C4; &#xC788;&#xB124;&#xC694;. 12// Assembly attribute to enable the Lambda function&apos;s JSON input to be converted into a .NET class.[assembly: LambdaSerializerAttribute(typeof(Amazon.Lambda.Serialization.Json.JsonSerializer))] &#xC8FC;&#xC11D;&#xC5D0; &#xC801;&#xD600;&#xC788;&#xB294; &#xB300;&#xB85C; &#xB77C;&#xBA74; JSON&#xC73C;&#xB85C; &#xC785;&#xB825;&#xB41C; &#xAC83;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC790;&#xB3D9;&#xC73C;&#xB85C; .NET class&#xB85C; &#xBCC0;&#xACBD;&#xD574;&#xC900;&#xB2E4;&#xB294; &#xB9D0;&#xC774;&#xB124;&#xC694;. AWS Lambda&#xC5D0; Java &#xCF54;&#xB4DC;&#xB97C; &#xC62C;&#xB9B4; &#xACBD;&#xC6B0;&#xC5D0;&#xB3C4; &#xC785;&#xB825;&#xC774; JSON&#xC77C; &#xACBD;&#xC6B0; &#xD574;&#xB2F9; JSON&#xB0B4;&#xC6A9;&#xC774;&#xB791; &#xB611;&#xAC19;&#xC740; class&#xB97C; &#xC0DD;&#xC131;&#xD574;&#xC57C;&#xB9CC; &#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB354;&#xAD70;&#xB2E4;&#xB098; Java&#xC5D0;&#xC11C;&#xB294; setter , getter &#xB9E4;&#xC11C;&#xB4DC; &#xB4E4;&#xB3C4; &#xB2E4; &#xB9CC;&#xB4E4;&#xC5B4; &#xC918;&#xC57C; &#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB2E4;&#xD589;&#xD788; C#&#xC5D0;&#xC11C;&#xB294; attribute&#xB85C; &#xC120;&#xC5B8;&#xC2DC; &#xC624;&#xB978;&#xCABD;&#xC5D0; { get; set; }&#xB9CC; &#xC801;&#xC5B4;&#xC8FC;&#xBA74; &#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; Java&#xBCF4;&#xB2E4;&#xB294; &#xD6E8;&#xC52C; &#xD3B8;&#xD558;&#xC9C0;&#xB9CC;, &#xADF8;&#xB798;&#xB3C4; &#xC5EC;&#xAC04; &#xADC0;&#xCC2E;&#xC740; &#xC77C;&#xC774; &#xC544;&#xB2D9;&#xB2C8;&#xB2E4;. &#xAD00;&#xB828; &#xB0B4;&#xC6A9;&#xC73C;&#xB85C; Facebook&#xC560;&#xC11C; &#xC880; &#xC7A5;&#xC7A5;&#xB314;&#xB354;&#xB2C8; &#xACE0;&#xC218;&#xC774;&#xC2E0; &#xD328;&#xCE5C;&#xBD84;&#xB4E4;&#xC774; JSON&#xC744; &#xC77D;&#xC5B4;&#xC11C; class&#xB97C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC8FC;&#xB294; &#xBC29;&#xBC95;&#xB4E4;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC18C;&#xAC1C;&#xB97C; &#xD574; &#xC8FC;&#xC168;&#xC2B5;&#xB2C8;&#xB2E4;. (&#xC5EF;&#xCD0B; &#xC774;&#xADDC;&#xC6D0;&#xB2D8;, &#xC774;&#xC885;&#xC778;&#xB2D8; &#xAC10;&#xC0AC;&#xB4DC;&#xB9BD;&#xB2C8;&#xB2E4;.) &#xBCF4;&#xB2C8;&#xAE50; Visual Studio&#xC5D0;&#xB294; &#xC774;&#xBBF8; &#xADF8;&#xB7F0; &#xAE30;&#xB2A5;&#xC774; &#xC788;&#xAD70;&#xC694;. &#xC800;&#xB807;&#xAC8C; class&#xB85C; &#xB9CC;&#xB4E4;&#xAE30; &#xC2EB;&#xB2E4;&#xBA74;, &#xADF8;&#xB0E5; Stream&#xC73C;&#xB85C; &#xC8FC;&#xACE0; &#xBC1B;&#xB294; &#xBC29;&#xBC95;&#xB3C4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC544;&#xB798; &#xB0B4;&#xC6A9;&#xC5D0;&#xC11C;&#xB294; Stream&#xC73C;&#xB85C; &#xC8FC;&#xACE0; &#xBC1B;&#xB294; &#xBC29;&#xBC95;&#xC73C;&#xB85C; &#xC9C4;&#xD589;&#xD558;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 1234public string FunctionHandler(string input, ILambdaContext context){ return input?.ToUpper();} string&#xC744; &#xC785;&#xB825;&#xBC1B;&#xC544;&#xC11C; &#xB300;&#xBB38;&#xC790;&#xB85C; &#xBCC0;&#xACBD;&#xD55C; &#xB4A4;&#xC5D0; string &#xD0C0;&#xC785;&#xC73C;&#xB85C; &#xC751;&#xB2F5;&#xD574;&#xC8FC;&#xB294; &#xD578;&#xB4E4;&#xB7EC;&#xC785;&#xB2C8;&#xB2E4;. &#xC77C;&#xB2E8;&#xC740; &#xC774; &#xCF54;&#xB4DC; &#xADF8;&#xB300;&#xB85C; &#xBC30;&#xD3EC;&#xD574; &#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. Lambda &#xBC30;&#xD3EC; &#xBC0F; &#xD14C;&#xC2A4;&#xD2B8; Visual Studio &#xB0B4;&#xC5D0;&#xC11C; &#xBC30;&#xD3EC; &#xBC0F; &#xD14C;&#xC2A4;&#xD2B8;&#xAC00; &#xBC14;&#xB85C; &#xB418;&#xAE30; &#xB584;&#xBB38;&#xC5D0; &#xD3B8;&#xB9AC;&#xD569;&#xB2C8;&#xB2E4;. Solution Explorer&#xC0C1;&#xC758; Project(AWSLambdaTest)&#xC5D0;&#xC11C; &#xB9C8;&#xC6B0;&#xC2A4; &#xC6B0; &#xD074;&#xB9AD; Publish to AWS Lambda&#x2026; &#xC120;&#xD0DD; Function Name: &#xC0C8;&#xB85C; &#xC0DD;&#xC131;&#xD560; (&#xB610;&#xB294; &#xAE30;&#xC874;&#xC5D0; &#xC0DD;&#xC131;&#xB418;&#xC5B4; &#xC788;&#xB294; &#xAC83; &#xC911; &#xB36E;&#xC5B4; &#xC4F8;) Lambda Function &#xBA85;&#xCE6D;&#xC744; &#xC785;&#xB825; Assembly Name (Project &#xBA85;), Type Name (&#xD578;&#xB4E4;&#xB7EC;&#xAC00; &#xD3EC;&#xD568;&#xB418;&#xC5B4; &#xC788;&#xB294; class&#xBA85;&#xC744; namespace &#xD3EC;&#xD568;&#xD55C; &#xAC12;), Method Name (&#xD578;&#xB4E4;&#xB7EC; &#xC774;&#xB984;)&#xC774; &#xC81C;&#xB300;&#xB85C; &#xB418;&#xC5B4; &#xC788;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD569;&#xB2C8;&#xB2E4;. Next &#xBC84;&#xD2BC; &#xD074;&#xB9AD; Role Name: &#xAE30;&#xC874;&#xC5D0; &#xB9CC;&#xB4E4;&#xC5B4; &#xB193;&#xC740; role&#xB610;&#xB294; &#xC0C8;&#xB85C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC11C; &#xC120;&#xD0DD; &#xCC38;&#xACE0;&#xB85C; role&#xC740; AWS&#xB0B4;&#xC758; &#xB2E4;&#xB978; &#xC11C;&#xBE44;&#xC2A4; &#xB4E4;&#xACFC;&#xC758; &#xC5F0;&#xACC4;&#xC5D0;&#xC11C; &#xD544;&#xC694;&#xD55C; &#xAD8C;&#xD55C; &#xB4F1;&#xC744; &#xC124;&#xC815;&#xD574; &#xB193;&#xB294; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;. Upload &#xBC84;&#xD2BC; &#xD074;&#xB9AD; &#xC774;&#xC81C; &#xAE30;&#xB2E4;&#xB9AC;&#xBA74; &#xC5C5;&#xB85C;&#xB529;&#xC774; &#xB05D;&#xB09C; &#xB4A4; &#xD574;&#xB2F9; Lambda&#xC758; &#xC124;&#xC815;&#xCC3D;&#xC774; &#xB739;&#xB2C8;&#xB2E4;. &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; Test Function &#xD0ED;&#xC774; &#xC120;&#xD0DD;&#xB41C; &#xC0C1;&#xD0DC;&#xC778;&#xB370; Sample Input&#xB780;&#xC5D0; &#xC544;&#xBB34;&#xAC70;&#xB098; &#xC785;&#xB825;&#xD55C; &#xB4A4; Invoke &#xBC84;&#xD2BC;&#xC744; &#xB204;&#xB974;&#xBA74; &#xC785;&#xB825;&#xD55C; &#xAC12;&#xB4E4;&#xC774; &#xBAA8;&#xB450; &#xB300;&#xBB38;&#xC790;&#xB85C; &#xBCC0;&#xD55C; &#xAC12;&#xC73C;&#xB85C; &#xC751;&#xB2F5;&#xC774; &#xC624;&#xB294; &#xAC83;&#xC744; &#xD655;&#xC778; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB9CC;&#xC57D; &#xC785;&#xB825;&#xD558;&#xB294; &#xBB38;&#xC790;&#xC5F4;&#xC774; JSON &#xD615;&#xC2DD;&#xC77C; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. &#xC55E;&#xC5D0;&#xC11C; &#xC0B4;&#xD3B4; &#xBCF8; &#xCF54;&#xB4DC;&#xC5D0; &#xB530;&#xB974;&#xBA74; JSON&#xC744; &#xC77D;&#xC5B4;&#xC11C; &#xC790;&#xB3D9;&#xC73C;&#xB85C; .NET class&#xB85C; &#xBCC0;&#xACBD;&#xD574;&#xC8FC;&#xB294; &#xC791;&#xC5C5;&#xC744; &#xD574;&#xC900;&#xB2E4;&#xACE0; &#xD588;&#xB294;&#xB370;, &#xC544;&#xB9C8; &#xADF8; &#xC791;&#xC5C5;&#xC744; &#xC2DC;&#xB3C4;&#xD558;&#xB294; &#xBAA8;&#xC591;&#xC785;&#xB2C8;&#xB2E4;. JSON&#xC73C;&#xB85C; &#xC785;&#xB825; &#xBC1B;&#xAE30; &#xADF8;&#xB7FC; JSON&#xC744; Stream&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xC785;&#xB825;&#xBC1B;&#xC544; &#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 2&#xAC1C;&#xC758; using&#xBB38;&#xC744; &#xC704;&#xC5D0; &#xC368;&#xC8FC;&#xC138;&#xC694;. 12using System.IO;using System.Text; FunctionHandler &#xBA54;&#xC11C;&#xB4DC;&#xB97C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC218;&#xC815;&#xD574; &#xC8FC;&#xC138;&#xC694;. 123456789101112131415public string FunctionHandler(Stream stream, ILambdaContext context){ List&lt;byte&gt; bytes = new List&lt;byte&gt;(); while (stream.CanRead) { int readByte = stream.ReadByte(); if (readByte != -1) bytes.Add((byte)readByte); else break; } string text = Encoding.UTF8.GetString(bytes.ToArray()); return text;} Stream&#xC73C;&#xB85C; &#xC785;&#xB825;&#xBC1B;&#xC544;&#xC11C; string&#xC73C;&#xB85C; &#xBCC0;&#xD658;&#xD558;&#xC5EC; &#xADF8;&#xB798;&#xB3C4; &#xC751;&#xB2F5;&#xD558;&#xB3C4;&#xB85D; &#xC218;&#xC815;&#xD558;&#xC600;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC704; &#xB2E4;&#xC2DC; &#xBC30;&#xD3EC;&#xD55C; &#xB4A4; &#xC704;&#xC5D0;&#xC11C; &#xC624;&#xB958;&#xB09C; JSON&#xC73C;&#xB85C; &#xD14C;&#xC2A4;&#xD2B8; &#xD558;&#xB2C8; &#xC785;&#xB825;&#xD55C; &#xAC12;&#xC744; &#xADF8;&#xB300;&#xB85C; &#xBB38;&#xC790;&#xC5F4;&#xB85C; &#xC751;&#xB2F5;&#xD574; &#xC90D;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xCD9C;&#xB825;&#xD55C; &#xAC12;&#xC774; string&#xB77C;&#xC11C; &#xC774;&#xC0C1;&#xD55C; \\r\\n&#xB4F1;&#xB3C4; &#xD3EC;&#xD568;&#xB418;&#xC5B4; &#xC788;&#xC73C;&#xBA70; &#xBC14;&#xB85C; JSON&#xC73C;&#xB85C; &#xD30C;&#xC2F1;&#xB3C4; &#xC548;&#xB429;&#xB2C8;&#xB2E4;. JSON&#xC73C;&#xB85C; &#xC751;&#xB2F5; &#xD558;&#xAE30;&#xC704;&#xD574;&#xC11C; &#xC774;&#xC81C; &#xC751;&#xB2F5;&#xB3C4; string&#xC774; &#xC544;&#xB2C8;&#xB77C; Stream&#xC73C;&#xB85C; &#xD574;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xBC1B;&#xC740; &#xAC12;&#xC744; &#xADF8;&#xB798;&#xB3C4; &#xC751;&#xB2F5;&#xB9CC; &#xD558;&#xB294;&#xAC74; &#xC7AC;&#xBBF8;&#xC5C6;&#xC790;&#xB098;&#xC694;. &#xADF8;&#xB798;&#xB3C4; JSON&#xC5D0; &#xD56D;&#xBAA9; &#xD55C; &#xAC1C; &#xB9CC;&#xC774;&#xB77C;&#xB3C4; &#xCD94;&#xAC00;&#xD574;&#xC11C; &#xBCF4;&#xB0B4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. C#&#xC5D0;&#xC11C; JSON Obejct&#xAD00;&#xB828; &#xC791;&#xC5C5;&#xC5D0; &#xAC00;&#xC7A5; &#xB9CE;&#xC774; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC74; Newtonsoft.Json&#xC774;&#xB77C;&#xB294; nuget package&#xC785;&#xB2C8;&#xB2E4;. Solution Explorer&#xC5D0;&#xC11C; Project &#xC120;&#xD0DD;&#xD55C; &#xB4A4; &#xC6B0;&#xD074;&#xB9AD;&#xD558;&#xC5EC; &#xB72C; &#xBA54;&#xB274;&#xC5D0;&#xC11C; Manage nuget packages&#x2026;&#xB97C; &#xB20C;&#xB7EC;&#xC90D;&#xB2C8;&#xB2E4;. json&#xB9CC; &#xC785;&#xB825;&#xD574;&#xB3C4; &#xBC14;&#xB85C; &#xAC00;&#xC7A5; &#xC704;&#xC5D0; Newtonsoft.Json&#xC774; &#xB098;&#xC635;&#xB2C8;&#xB2E4;. &#xC120;&#xD0DD;&#xD558;&#xC5EC; &#xC124;&#xCE58;&#xD574; &#xC90D;&#xB2C8;&#xB2E4;. using&#xBB38;&#xC5D0; &#xB2E4;&#xC74C;&#xC744; &#xCD94;&#xAC00;&#xD574; &#xC8FC;&#xC138;&#xC694;. 1using Newtonsoft.Json.Linq; FunctionHandler &#xBA54;&#xC11C;&#xB4DC;&#xB97C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC218;&#xC815;&#xD574; &#xC8FC;&#xC138;&#xC694;. 12345678910111213141516171819202122public Stream FunctionHandler(Stream stream, ILambdaContext context){ List&lt;byte&gt; bytes = new List&lt;byte&gt;(); while (stream.CanRead) { int readByte = stream.ReadByte(); if (readByte != -1) bytes.Add((byte)readByte); else break; } string text = Encoding.UTF8.GetString(bytes.ToArray()); var json = JObject.Parse(text); json[&quot;name&quot;] = &quot;LunaSter&quot;; text = json.ToString(); MemoryStream stream1 = new MemoryStream(Encoding.UTF8.GetBytes(text)); return stream1;} &#xC704; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C; text&#xB97C; JObject&#xB85C; &#xBCC0;&#xACBD;&#xD55C; &#xB2E4;&#xC74C; &#xD56D;&#xBAA9;&#xC744; &#xD558;&#xB098; &#xCD94;&#xAC00;&#xD574;&#xC11C; MemoryStream&#xC73C;&#xB85C; &#xC751;&#xB2F5;&#xD558;&#xB294;&#xAC8C; &#xCD94;&#xAC00;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2F9;. &#xB2E4;&#xC2DC; &#xBC30;&#xD3EC;&#xD55C; &#xB4A4; &#xD14C;&#xC2A4;&#xD2B8; &#xD574;&#xBCF4;&#xB2C8; &#xC774;&#xC058;&#xAC8C; JSON &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xC751;&#xB2F5;&#xC774; &#xC635;&#xB2C8;&#xB2E4;. &#xCD94;&#xAC00;&#xD55C; &#xD56D;&#xBAA9;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB3C4; &#xD655;&#xC778;&#xB429;&#xB2C8;&#xB2E4;. &#xB9C8;&#xCE58;&#xBA70;&#x2026; &#xC774;&#xBC88; &#xD3EC;&#xC2A4;&#xD305;&#xC5D0;&#xC11C; &#xC54C;&#xC544;&#xBCF8; &#xB0B4;&#xC6A9;&#xB4E4;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. Lambda&#xC5D0; C# &#xCF54;&#xB4DC; &#xC791;&#xC5C5;&#xC5D0; &#xD544;&#xC694;&#xD55C; &#xB3C4;&#xAD6C;&#xB4E4; (&#xC124;&#xCE58;&#xBC95;&#xC740; &#xC140;&#xD504;!) Project &#xC0DD;&#xC131; Visual Studio&#xC5D0;&#xC11C; Lambda &#xBC30;&#xD3EC; &#xBC0F; &#xD14C;&#xC2A4;&#xD2B8; JSON Object&#xB85C; &#xC785;&#xB825; &#xBC0F; &#xC751;&#xB2F5;&#xC744; &#xC8FC;&#xACE0; &#xBC1B;&#xB294; &#xBC29;&#xBC95; API Gateway&#xC640;&#xC758; &#xC5F0;&#xB3D9; &#xBC0F; path, querystring, HTTP Method&#xC5D0; &#xB530;&#xB77C; &#xB2E4;&#xB978; &#xC791;&#xC5C5; &#xBC0F; &#xC751;&#xB2F5;&#xC744; &#xBC1C;&#xC131;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xC81C;&#xAC00; &#xC55E;&#xC11C; &#xC791;&#xC131;&#xD55C; Node.JS&#xB85C; AWS Lambda &#xC62C;&#xB9AC;&#xB294; &#xACF3;&#xC758; &#xCF54;&#xB4DC;&#xC640; &#xAD6C;&#xC870;&#xAC00; &#xB611;&#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xC774; &#xBD80;&#xBD84;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xB530;&#xB85C; &#xB2E4;&#xB8E8;&#xC9C0; &#xC54A;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC798;&#xBABB;&#xB418;&#xC5C8;&#xAC70;&#xB098;, &#xBCC0;&#xACBD;&#xB41C; &#xC810;, &#xAE30;&#xD0C0; &#xCD94;&#xAC00; &#xC0AC;&#xD56D;&#xC5D0; &#xB300;&#xD55C; &#xD53C;&#xB4DC;&#xBC31;&#xC740; &#xC5B8;&#xC81C;&#xB098; &#xD658;&#xC601;&#xD569;&#xB2C8;&#xB2E4;. - seokjoon.yun@gmail.com &#xCC38;&#xACE0; AWS &#xACF5;&#xC2DD; &#xBB38;&#xC11C;&#xB4E4; https://aws.amazon.com/about-aws/whats-new/2016/12/aws-lambda-supports-c-sharp/ http://docs.aws.amazon.com/toolkit-for-visual-studio/latest/user-guide/getting-set-up.html http://docs.aws.amazon.com/lambda/latest/dg/lambda-dotnet-how-to-create-deployment-package.html http://docs.aws.amazon.com/lambda/latest/dg/lambda-dotnet-create-deployment-package-toolkit.html http://docs.aws.amazon.com/lambda/latest/dg/dotnet-programming-model.html http://docs.aws.amazon.com/lambda/latest/dg/dotnet-programming-model-handler-types.html","categories":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/categories/AWS/"},{"name":"Lambda","slug":"AWS/Lambda","permalink":"http://DevStarSJ.github.io/categories/AWS/Lambda/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/tags/AWS/"},{"name":"Lambda","slug":"Lambda","permalink":"http://DevStarSJ.github.io/tags/Lambda/"},{"name":"APIGateway","slug":"APIGateway","permalink":"http://DevStarSJ.github.io/tags/APIGateway/"},{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"}]},{"title":"Lambda Node.JS Packaging","slug":"Lambda.Packaging.Node","date":"2016-11-27T06:54:51.000Z","updated":"2017-04-23T08:21:19.000Z","comments":true,"path":"2016/11/27/Lambda.Packaging.Node/","link":"","permalink":"http://DevStarSJ.github.io/2016/11/27/Lambda.Packaging.Node/","excerpt":"","text":"Lambda Node.JS Packaging Labmda&#xC5D0; Node.JS&#xB85C; &#xAD6C;&#xD604;&#xD558;&#xB294; &#xB0B4;&#xC6A9;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xC544;&#xB798; 3&#xAC1C;&#xC758; Link&#xB97C; &#xCC38;&#xACE0;&#xD574; &#xC8FC;&#xC138;&#xC694;. Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #1 (GET, POST) Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #2 (ANY, Deploy Staging, Node.JS Route) Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #3 (Proxy Resource) &#xC774;&#xC81C;&#xAECF; 1&#xAC1C;&#xC758; Node.JS &#xD30C;&#xC77C;&#xC5D0; npm module&#xC744; &#xD558;&#xB098;&#xB3C4; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xC740; &#xC608;&#xC81C;&#xB9CC; &#xC0B4;&#xD3B4;&#xBCF4;&#xC558;&#xB294;&#xB370;, &#xC2E4;&#xC81C;&#xB85C; &#xAC1C;&#xBC1C;&#xD560; &#xC0C1;&#xD669;&#xC5D0;&#xC11C;&#xB294; &#xD30C;&#xC77C;&#xB3C4; &#xC5EC;&#xB7EC; &#xAC1C;&#xB85C; &#xB098;&#xB220;&#xC11C; &#xAC1C;&#xBC1C;&#xD558;&#xACE0; npm module&#xB3C4; &#xB9CE;&#xC774; &#xC0AC;&#xC6A9;&#xD560; &#xACBD;&#xC6B0;&#xAC00; &#xB9CE;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xB807;&#xAC8C; &#xAC1C;&#xBC1C;&#xD55C; &#xCF54;&#xB4DC;&#xB4E4;&#xC744; &#xC5B4;&#xB5BB;&#xAC8C; Lambda&#xB85C; &#xC62C;&#xB9AC;&#xB294;&#xC9C0; &#xC774;&#xBC88; &#xD3EC;&#xC2A4;&#xD305;&#xC5D0;&#xC11C; &#xC0B4;&#xD3B4;&#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #3&#xAE4C;&#xC9C0; &#xAD6C;&#xD604;&#xB418;&#xC5B4; &#xC788;&#xB2E4;&#xB294; &#xAC00;&#xC815;&#xD558;&#xC5D0;&#xC11C; &#xC9C4;&#xD589;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. Node.JS &#xCF54;&#xB4DC;&#xC5D0; npm &#xC0AC;&#xC6A9; &#xC774;&#xC804;&#xAE4C;&#xC9C0; &#xC791;&#xC5C5;&#xD55C; &#xCF54;&#xB4DC;&#xB97C; index.js&#xB780; &#xC774;&#xB984;&#xC73C;&#xB85C; &#xC791;&#xC5C5;&#xD560; &#xD3F4;&#xB354;&#xC5D0; &#xC800;&#xC7A5; npm&#xC73C;&#xB85C; lodash &#xC124;&#xCE58; : npm install lodash &#xCF54;&#xB4DC;&#xB97C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC218;&#xC815; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&apos;use strict&apos;;const _ = require(&apos;lodash&apos;);function get(userId) { return { body: { id: userId, name: &quot;test&quot; } };}function post(userId, header, body) { return { body: { id: userId, header: header, body: body } };}const routeMap = { &apos;/test&apos;: { &apos;GET&apos;: (event, context) =&gt; { const userId = _.get(event,&apos;queryStringParameters.id&apos;); return get(userId); }, &apos;POST&apos;: (event, context) =&gt; { const userId = _.get(event,&apos;queryStringParameters.id&apos;); const body = JSON.stringify(_.get(event,&apos;body&apos;)); const header = event.headers; return post(userId, header, body); } }};function router(event, context) { const controller = routeMap[event.path][event.httpMethod]; if(!controller) { return { body: { Error: &quot;Invalid Path&quot; } }; } return controller(event, context);}exports.handler = (event, context, callback) =&gt; { let result = router(event, context); callback(null, {body:JSON.stringify(result)});} routeMap &#xB0B4;&#xBD80;&#xC5D0; lodash.get &#xD568;&#xC218;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xCF54;&#xB4DC;&#xB97C; &#xBCC0;&#xACBD;&#xD558;&#xC600;&#xC2B5;&#xB2C8;&#xB2E4;. zip &#xD30C;&#xC77C;&#xB85C; &#xC555;&#xCD95; : zip -r ./sample.zip ./ Lambda&#xC5D0; zip &#xD30C;&#xC77C;&#xB85C; &#xBC30;&#xD3EC; &#xBA3C;&#xC800; &#xD574;&#xB2F9; Lambda &#xC124;&#xC815;&#xC73C;&#xB85C; &#xC774;&#xB3D9;&#xD569;&#xB2C8;&#xB2E4;. Code &#xD0ED; Code entry type : Upload a .ZIP file &#xC120;&#xD0DD; Upload &#xBC84;&#xD2BC;&#xC744; &#xB20C;&#xB7EC;&#xC11C; &#xC704;&#xC5D0;&#xC11C; &#xC0DD;&#xC131;&#xD55C; sample.zip&#xC744; &#xC62C;&#xB9BC; &#xD655;&#xC778; API Gateway&#xB294; &#xBCC0;&#xACBD;&#xC0AC;&#xD56D;&#xC774; &#xC5C6;&#xC73C;&#xBBC0;&#xB85C; &#xACB0;&#xACFC;&#xB294; 3&#xC7A5;&#xACFC; &#xB611;&#xAC19;&#xC774; &#xB098;&#xC635;&#xB2C8;&#xB2E4;. GET &#xC694;&#xCCAD; : https://.../prod/test?id=2 1{&quot;body&quot;:{&quot;id&quot;:&quot;2&quot;,&quot;name&quot;:&quot;test&quot;}} POST &#xC694;&#xCCAD; : URL&#xC740; GET&#xACFC; &#xB3D9;&#xC77C; 123456789{ &quot;body&quot;: { &quot;id&quot;: &quot;2&quot;, &quot;header&quot;: { ... }, &quot;body&quot;: &quot;\\&quot;{\\\\n \\&quot;id\\&quot;: \\&quot;123\\&quot;,\\\\n \\&quot;age\\&quot;: \\&quot;25\\&quot;\\\\n}\\&quot;&quot; }} &#xC5EC;&#xB7EC; &#xD30C;&#xC77C;&#xC744; &#xD568;&#xAED8; &#xBC30;&#xD3EC; &#xC774;&#xBBF8; npm module&#xC744; &#xD3EC;&#xD568;&#xD558;&#xC5EC; &#xBCA0;&#xD3EC;&#xD558;&#xC600;&#xC73C;&#xBBC0;&#xB85C; &#xC5EC;&#xB7EC; &#xD30C;&#xC77C;&#xC744; &#xBB36;&#xC5B4;&#xC11C; &#xBC30;&#xD3EC;&#xD558;&#xB294;&#xAC8C; &#xD655;&#xC778;&#xB418;&#xC5C8;&#xC9C0;&#xB9CC;, &#xC6B0;&#xB9AC;&#xAC00; &#xC791;&#xC131;&#xD55C; &#xC18C;&#xC2A4;&#xCF54;&#xB4DC; &#xC790;&#xCCB4;&#xB3C4; &#xB098;&#xB220;&#xC11C; &#xBC30;&#xD3EC;&#xD574; &#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC704;&#xC5D0; &#xC791;&#xC131;&#xD55C; &#xCF54;&#xB4DC;&#xB97C; 4&#xAC1C;&#xC758; &#xD30C;&#xC77C;&#xB85C; &#xB098;&#xB220;&#xC11C; &#xC62C;&#xB824;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. index.js 12345678&apos;use strict&apos;;const router = require(&apos;./router&apos;);exports.handler = (event, context, callback) =&gt; { let result = router(event, context); callback(null, {body:JSON.stringify(result)});} router.js 123456789101112131415161718192021222324252627282930&apos;use strict&apos;;const _ = require(&apos;lodash&apos;);const routeMap = { &apos;/test&apos;: { &apos;GET&apos;: (event, context) =&gt; { const userId = _.get(event,&apos;queryStringParameters.id&apos;); return require(&apos;./controllers/test/get&apos;)(userId); }, &apos;POST&apos;: (event, context) =&gt; { const userId = _.get(event,&apos;queryStringParameters.id&apos;); const body = JSON.stringify(_.get(event,&apos;body&apos;)); const header = event.headers; return require(&apos;./controllers/test/post&apos;)(userId, header, body); } }};module.exports = (event, context) =&gt; { const controller = routeMap[event.path][event.httpMethod]; if(!controller) { return { body: { Error: &quot;Invalid Path&quot; } }; } return controller(event, context);}; /controllers/test/get.js 12345module.exports = (userId) =&gt; { return { body: { id: userId, name: &quot;test&quot; } };}; /controllers/test/post.js 12345module.exports = (userId, header, body) =&gt; { return { body: { id: userId, header: header, body: body } };}; npm&#xC73C;&#xB85C; lodash &#xC124;&#xCE58; : npm install lodash zip &#xD30C;&#xC77C;&#xB85C; &#xC555;&#xCD95; : zip -r ./sample.zip ./ &#xC704;&#xC5D0;&#xC11C;&#xC640; &#xAC19;&#xC740; &#xBC29;&#xBC95;&#xC73C;&#xB85C; Lambda&#xC5D0; &#xBC30;&#xD3EC; &#xD6C4; &#xD655;&#xC778;&#xC744; &#xD574;&#xBCF4;&#xBA74; &#xAC19;&#xC740; &#xACB0;&#xACFC;&#xAC00; &#xCD9C;&#xB825;&#xB429;&#xB2C8;&#xB2E4;. Lambda&#xC5D0; zip &#xD30C;&#xC77C;&#xB85C; &#xBC30;&#xD3EC; &#xBA3C;&#xC800; &#xD574;&#xB2F9; Lambda &#xC124;&#xC815;&#xC73C;&#xB85C; &#xC774;&#xB3D9;&#xD569;&#xB2C8;&#xB2E4;. Code &#xD0ED; Code entry type : Upload a .ZIP file &#xC120;&#xD0DD; Upload &#xBC84;&#xD2BC;&#xC744; &#xB20C;&#xB7EC;&#xC11C; &#xC704;&#xC5D0;&#xC11C; &#xC0DD;&#xC131;&#xD55C; sample.zip&#xC744; &#xC62C;&#xB9BC; &#xD655;&#xC778; API Gateway&#xB294; &#xBCC0;&#xACBD;&#xC0AC;&#xD56D;&#xC774; &#xC5C6;&#xC73C;&#xBBC0;&#xB85C; &#xACB0;&#xACFC;&#xB294; 3&#xC7A5;&#xACFC; &#xB611;&#xAC19;&#xC774; &#xB098;&#xC635;&#xB2C8;&#xB2E4;. GET &#xC694;&#xCCAD; : https://.../prod/test?id=2 1{&quot;body&quot;:{&quot;id&quot;:&quot;2&quot;,&quot;name&quot;:&quot;test&quot;}} POST &#xC694;&#xCCAD; : URL&#xC740; GET&#xACFC; &#xB3D9;&#xC77C; 123456789{ &quot;body&quot;: { &quot;id&quot;: &quot;2&quot;, &quot;header&quot;: { ... }, &quot;body&quot;: &quot;\\&quot;{\\\\n \\&quot;id\\&quot;: \\&quot;123\\&quot;,\\\\n \\&quot;age\\&quot;: \\&quot;25\\&quot;\\\\n}\\&quot;&quot; }} &#xB9C8;&#xCE58;&#xBA70;&#x2026; &#xC774;&#xBC88; &#xD3EC;&#xC2A4;&#xD305;&#xC5D0;&#xC11C; &#xC54C;&#xC544;&#xBCF8; &#xB0B4;&#xC6A9;&#xB4E4;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. Lambda&#xC5D0; &#xC5EC;&#xB7EC; &#xD30C;&#xC77C;&#xC744; .zip&#xC73C;&#xB85C; &#xBB36;&#xC5B4;&#xC11C; &#xD568;&#xAED8; &#xBC30;&#xD3EC; npm module&#xC744; &#xD568;&#xAED8; &#xBC30;&#xD3EC; &#xC5EC;&#xB7EC; &#xD30C;&#xC77C;&#xB85C; &#xC791;&#xC131;&#xB41C; &#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xB4E4;&#xC744; &#xD568;&#xAED8; &#xBC30;&#xD3EC; &#xC798;&#xBABB;&#xB418;&#xC5C8;&#xAC70;&#xB098;, &#xBCC0;&#xACBD;&#xB41C; &#xC810;, &#xAE30;&#xD0C0; &#xCD94;&#xAC00; &#xC0AC;&#xD56D;&#xC5D0; &#xB300;&#xD55C; &#xD53C;&#xB4DC;&#xBC31;&#xC740; &#xC5B8;&#xC81C;&#xB098; &#xD658;&#xC601;&#xD569;&#xB2C8;&#xB2E4;. - seokjoon.yun@gmail.com &#xCC38;&#xACE0; AWS &#xACF5;&#xC2DD; &#xAC00;&#xC774;&#xB4DC; : http://docs.aws.amazon.com/lambda/latest/dg/nodejs-create-deployment-pkg.html","categories":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/categories/AWS/"},{"name":"Lambda","slug":"AWS/Lambda","permalink":"http://DevStarSJ.github.io/categories/AWS/Lambda/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/tags/AWS/"},{"name":"Lambda","slug":"Lambda","permalink":"http://DevStarSJ.github.io/tags/Lambda/"},{"name":"APIGateway","slug":"APIGateway","permalink":"http://DevStarSJ.github.io/tags/APIGateway/"},{"name":"Node.JS","slug":"Node-JS","permalink":"http://DevStarSJ.github.io/tags/Node-JS/"}]},{"title":"Lambda Python Packaging","slug":"Lambda.Packaging.Python","date":"2016-11-24T07:54:51.000Z","updated":"2017-04-23T08:21:19.000Z","comments":true,"path":"2016/11/24/Lambda.Packaging.Python/","link":"","permalink":"http://DevStarSJ.github.io/2016/11/24/Lambda.Packaging.Python/","excerpt":"","text":"Lambda Python Packaging AWS Lambda&#xC5D0; &#xB300;&#xD574; &#xB2E4;&#xB8E8;&#xB294; 6&#xBC88;&#xC9F8; &#xAE00;&#xC785;&#xB2C8;&#xB2E4;. Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #1 (GET, POST) Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #2 (ANY, Deploy Staging, Node.JS Route) Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #3 (Proxy Resource) Lambda Node.JS Packaging AWS Lambda&#xC5D0; Python Handler &#xB9CC;&#xB4E4;&#xAE30; &#xC9C0;&#xB09C;&#xBC88; &#xAE00;&#xC5D0;&#xC11C; 1&#xAC1C;&#xC758; Python &#xD30C;&#xC77C;&#xB85C; &#xAD6C;&#xD604;&#xD558;&#xC5EC; AWS Lambda&#xC5D0; &#xC62C;&#xB9AC;&#xB294; &#xBC29;&#xBC95;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xB2E4;&#xB918;&#xB294;&#xB370;, &#xC774;&#xBC88; &#xAE00;&#xC5D0;&#xC11C;&#xB294; &#xC5EC;&#xB7EC; &#xAC1C;&#xC758; &#xD30C;&#xC77C;&#xB85C; &#xB098;&#xB258;&#xC5B4;&#xC11C; &#xAD6C;&#xD604;&#xD55C; &#xACBD;&#xC6B0;&#xC640; &#xC678;&#xBD80; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;&#xB97C; pip&#xB85C; &#xC124;&#xCE58;&#xD560; &#xACBD;&#xC6B0; &#xC5B4;&#xB5BB;&#xAC8C; &#xD574;&#xC57C;&#xD558;&#xB294;&#xC9C0;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xB2E4;&#xB904;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. Previously on Lambda series Lambda&#xC758; &#xC0DD;&#xC131; &#xBC0F; API Gateway&#xC640;&#xC758; &#xC5F0;&#xACB0;&#xC740; &#xB418;&#xC5B4; &#xC788;&#xB2E4;&#xB294; &#xAC00;&#xC815;&#xD558;&#xC5D0; &#xC9C4;&#xD589;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xAD00;&#xB828; &#xB0B4;&#xC6A9;&#xB4E4;&#xC740; &#xC55E;&#xC758; &#xAE00;&#xB4E4;&#xC5D0; &#xB2E4; &#xC788;&#xC9C0;&#xB9CC; &#xC77D;&#xAE30; &#xADC0;&#xCC2E;&#xC73C;&#xC2DC;&#xB2E4;&#xB294; &#xBD84;&#xB4E4;&#xC744; &#xC704;&#xD574; &#xAC04;&#xB7B5;&#xD55C; &#xB530;&#xB77C;&#xD558;&#xAE30;&#xB97C; &#xC0B4;&#xC5C6;&#xC774; &#xBF08;&#xB9CC; &#xCD94;&#xB824;&#xC11C; &#xBA3C;&#xC800; &#xC18C;&#xAC1C;&#xD558;&#xACE0; &#xC2DC;&#xC791;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. Create Lambda AWS &#xB85C;&#xADF8;&#xC778; &#xD6C4; Lambda &#xD0ED;&#xC73C;&#xB85C; &#xC774;&#xB3D9; Create a Lambda Function &#xC120;&#xD0DD; Select blueprint&#xC5D0;&#xC11C; Blank Function &#xC120;&#xD0DD; Configure function &#xC5D0;&#xC11C; &#xC77C;&#xB2E8; &#xBC14;&#xB85C; Next &#xC120;&#xD0DD; (&#xBBF8;&#xB9AC; &#xC5F0;&#xACB0;&#xD560; API Gateway&#xAC00; &#xC788;&#xB2E4;&#xBA74; &#xC5EC;&#xAE30;&#xC11C; &#xC5F0;&#xACB0;&#xD558;&#xBA74; &#xB428;) Configure function&#xC5D0;&#xC11C; &#xD568;&#xC218; &#xC815;&#xC758; Name : testLambda-luna Runtime : Python 2.7 Code : &#xC544;&#xB798; &#xC18C;&#xAC1C;&#xB418;&#xC5B4; &#xC788;&#xB294; Python Lambda Code&#xB97C; &#xC785;&#xB825; Role &amp; Existing role : &#xC77C;&#xB2E8;&#xC740; &#xC801;&#xB2F9;&#xD788; &#xC120;&#xD0DD; (&#xB9CC;&#xC57D; Lambda&#xC5D0;&#xC11C; &#xB2E4;&#xB978; AWS &#xC11C;&#xBE44;&#xC2A4; RDS, S3 &#xB4F1;&#xC744; &#xC5F0;&#xB3D9;&#xD560;&#xB824;&#xBA74; &#xD544;&#xC694;) &#xC544;&#xB798; &#xCF54;&#xB4DC; &#xC785;&#xB825; &#xD6C4; Next &#xC120;&#xD0DD; Create Function &#xC120;&#xD0DD; Set API Gateway AWS &#xBA54;&#xC778; &#xD654;&#xBA74;&#xC73C;&#xB85C; &#xC774;&#xB3D9; &#xD6C4; API Gateway &#xD0ED;&#xC73C;&#xB85C; &#xC774;&#xB3D9; Create API &#xC120;&#xD0DD; API name : testAPI-luna Create API &#xC120;&#xD0DD; /&#xC5D0;&#xC11C; Actions -&gt; Create Resource&#xB97C; &#xC120;&#xD0DD; Configure as proxy resource &#xB97C; &#xCCB4;&#xD06C;&#xD55C; &#xD6C4; Create Resource&#xB97C; &#xB204;&#xB984; ANY &#xC120;&#xD0DD; Integration Request &#xC120;&#xD0DD; Integration type : Lambda Function Lambda Region : &#xB78C;&#xB2E4;&#xB97C; &#xC0DD;&#xC131;&#xD55C; &#xC9C0;&#xC5ED; &#xC11C;&#xBC84; &#xC120;&#xD0DD; Lambda Function : &#xB78C;&#xB2E4; &#xBA85;&#xCE6D; &#xAE30;&#xC785; Actions -&gt; Deploy API &#xC120;&#xD0DD; &#xD6C4; &#xADF8;&#xB0E5; prod&#xB85C; &#xC2A4;&#xD14C;&#xC774;&#xC9D5; Python Lambda Code 123456789101112131415161718192021222324252627282930import jsondef get(event): user_id = event[&apos;queryStringParameters&apos;][&apos;id&apos;] return { &apos;body&apos;: { &apos;id&apos;: user_id, &apos;name&apos;: &quot;test&quot; } }def post(event): user_id = event[&apos;queryStringParameters&apos;][&apos;id&apos;] body = event[&apos;body&apos;] header = event[&apos;headers&apos;] return { &apos;body&apos;: { &apos;id&apos;: user_id, &apos;header&apos;: header, &apos;body&apos;: body } }route_map = { &apos;/test&apos;: { &apos;GET&apos;: get, &apos;POST&apos;: post }};def router(event): controller = route_map[event[&apos;path&apos;]][event[&apos;httpMethod&apos;]]; if not controller: return { &apos;body&apos;: { &apos;Error&apos;: &quot;Invalid Path&quot; } } return controller(event);def handler(event, context): result = router(event); return { &apos;body&apos; : json.dumps(result) } Python Code &#xD328;&#xD0A4;&#xC9D5; &#xC5F0;&#xC2B5; &#xC0C8;&#xB85C;&#xC6B4; &#xCF54;&#xB4DC;&#xB97C; &#xB9CC;&#xB4DC;&#xB294;&#xAC83; &#xBCF4;&#xB2E4;&#xB294; &#xC77C;&#xB2E8; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xB3D9;&#xC791;&#xD558;&#xB294; &#xAC83;&#xC774; &#xD655;&#xC778;&#xB41C; &#xCF54;&#xB4DC;&#xB97C; &#xD30C;&#xC77C;&#xB85C; &#xB098;&#xB220;&#xAC00;&#xBA74;&#xC11C; &#xC9C4;&#xD589;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. Step 1. &#xD1B5;&#xD30C;&#xC77C;&#xC744; &#xADF8;&#xB0E5; .zip&#xC73C;&#xB85C; &#xC555;&#xCD95;&#xD558;&#xC5EC; &#xC62C;&#xB9AC;&#xAE30; &#xC791;&#xC5C5;&#xD560; &#xD3F4;&#xB354;&#xB97C; &#xD558;&#xB098; &#xB9CC;&#xB4ED;&#xB2C8;&#xB2E4;. &#xC77C;&#xB2E8; packaging.test &#xB77C;&#xB294; &#xC774;&#xB984;&#xC73C;&#xB85C; &#xB9CC;&#xB4E4;&#xC5B4; &#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 12mkdir packaging.testcd packaging.test &#xADF8; &#xC548;&#xC5D0; &#xC6D0;&#xB798; Lambda&#xC5D0; &#xC62C;&#xB824;&#xB193;&#xC740; &#xCF54;&#xB4DC;&#xB97C; &#xADF8;&#xB300;&#xB85C; &#xBCF5;&#xC0AC;&#xD558;&#xC5EC; index.py&#xB85C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. index.py 123456789101112131415161718192021222324252627282930import jsondef get(event): user_id = event[&apos;queryStringParameters&apos;][&apos;id&apos;] return { &apos;body&apos;: { &apos;id&apos;: user_id, &apos;name&apos;: &quot;test&quot; } }def post(event): user_id = event[&apos;queryStringParameters&apos;][&apos;id&apos;] body = event[&apos;body&apos;] header = event[&apos;headers&apos;] return { &apos;body&apos;: { &apos;id&apos;: user_id, &apos;header&apos;: header, &apos;body&apos;: body } }route_map = { &apos;/test&apos;: { &apos;GET&apos;: get, &apos;POST&apos;: post }};def router(event): controller = route_map[event[&apos;path&apos;]][event[&apos;httpMethod&apos;]]; if not controller: return { &apos;body&apos;: { &apos;Error&apos;: &quot;Invalid Path&quot; } } return controller(event);def handler(event, context): result = router(event); return { &apos;body&apos; : json.dumps(result) } .zip&#xD30C;&#xC77C;&#xB85C; &#xC555;&#xCD95;&#xD560; &#xB54C; &#xD574;&#xB2F9; index.py &#xD30C;&#xC77C;&#xC774; &#xB8E8;&#xD2B8;&#xC5D0; &#xC704;&#xCE58;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xC989;, packaging.test &#xD3F4;&#xB354;&#xB97C; &#xC555;&#xCD95;&#xD558;&#xB294;&#xAC8C; &#xC544;&#xB2C8;&#xB77C; &#xADF8; &#xC548;&#xC5D0; &#xB4E4;&#xC5B4;&#xC640;&#xC11C; &#xC555;&#xCD95;&#xC744; &#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. 1zip sample.zip index.py &#xC774;&#xC81C; Lambda&#xC5D0; &#xC62C;&#xB9AC;&#xC2E0; &#xD6C4; &#xD14C;&#xC2A4;&#xD2B8; &#xD574;&#xBCF4;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. &#xC62C;&#xB9AC;&#xB294; &#xBC29;&#xBC95;&#xACFC; &#xD14C;&#xC2A4;&#xD2B8; &#xBC29;&#xBC95;&#xC740; &#xACC4;&#xC18D; &#xB3D9;&#xC77C;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC5EC;&#xAE30;&#xC11C; &#xD55C; &#xBC88;&#xB9CC; &#xC18C;&#xAC1C;&#xD558;&#xACE0; &#xBC11;&#xC5D0;&#xC11C;&#xB294; &#xB530;&#xB85C; &#xC18C;&#xAC1C;&#xD558;&#xC9C0; &#xC54A;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xBA3C;&#xC800; &#xD574;&#xB2F9; Lambda &#xC124;&#xC815;&#xC73C;&#xB85C; &#xC774;&#xB3D9;&#xD569;&#xB2C8;&#xB2E4;. Code &#xD0ED; Code entry type : Upload a .ZIP file &#xC120;&#xD0DD; Upload &#xBC84;&#xD2BC;&#xC744; &#xB20C;&#xB7EC;&#xC11C; &#xC704;&#xC5D0;&#xC11C; &#xC0DD;&#xC131;&#xD55C; sample.zip&#xC744; &#xC62C;&#xB9BC; GET &#xC694;&#xCCAD; (&#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xC5D0;&#xC11C; &#xC8FC;&#xC18C; &#xC785;&#xB825;) : https://.../prod/test?id=2 1{&quot;body&quot;:{&quot;id&quot;:&quot;2&quot;,&quot;name&quot;:&quot;test&quot;}} POST &#xC694;&#xCCAD; (POSTMAN&#xC774;&#xB098; curl&#xB4F1;&#xC744; &#xD65C;&#xC6A9;) : URL&#xC740; GET&#xACFC; &#xB3D9;&#xC77C; 123456789{ &quot;body&quot;: { &quot;id&quot;: &quot;2&quot;, &quot;header&quot;: { ... }, &quot;body&quot;: &quot;\\&quot;{\\\\n \\&quot;id\\&quot;: \\&quot;123\\&quot;,\\\\n \\&quot;age\\&quot;: \\&quot;25\\&quot;\\\\n}\\&quot;&quot; }} Step 2. &#xD30C;&#xC77C; &#xB098;&#xB204;&#xAE30; &#xC704;&#xC758; &#xD30C;&#xC77C;&#xC744; 2&#xAC1C;&#xB85C; &#xB098;&#xB204;&#xC5B4;&#xC11C; &#xC62C;&#xB824;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xAC19;&#xC740; &#xD3F4;&#xB354;&#xC5D0; router.py&#xD30C;&#xC77C;&#xC744; &#xD558;&#xB098; &#xC0DD;&#xC131; &#xD55C; &#xD6C4; &#xD30C;&#xC77C; &#xB0B4;&#xC6A9;&#xC744; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC218;&#xC815;&#xD574; &#xC8FC;&#xC138;&#xC694;. index.py 123456import jsonfrom router import routerdef handler(event, context): result = router(event); return { &apos;body&apos; : json.dumps(result) } router.py 123456789101112131415161718192021222324def get(event): user_id = event[&apos;queryStringParameters&apos;][&apos;id&apos;] return { &apos;body&apos;: { &apos;id&apos;: user_id, &apos;name&apos;: &quot;test&quot; } }def post(event): user_id = event[&apos;queryStringParameters&apos;][&apos;id&apos;] body = event[&apos;body&apos;] header = event[&apos;headers&apos;] return { &apos;body&apos;: { &apos;id&apos;: user_id, &apos;header&apos;: header, &apos;body&apos;: body } }route_map = { &apos;/test&apos;: { &apos;GET&apos;: get, &apos;POST&apos;: post }};def router(event): controller = route_map[event[&apos;path&apos;]][event[&apos;httpMethod&apos;]]; if not controller: return { &apos;body&apos;: { &apos;Error&apos;: &quot;Invalid Path&quot; } } return controller(event); .zip &#xD30C;&#xC77C;&#xB85C; &#xC555;&#xCD95;&#xD569;&#xB2C8;&#xB2E4;. 1zip sample.zip . &#xCF54;&#xB4DC;&#xB97C; &#xC62C;&#xB9B0; &#xD6C4; &#xD14C;&#xC2A4;&#xD2B8; &#xD588;&#xC744; &#xB54C; &#xB611;&#xAC19;&#xC740; &#xACB0;&#xACFC;&#xAC00; &#xB098;&#xC640;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. Step 3. &#xD3F4;&#xB354;&#xB85C; &#xB098;&#xB204;&#xAE30; &#xC791;&#xC5C5; &#xC911;&#xC778; &#xD3F4;&#xB354;&#xC5D0; /controllers/test&#xC758; 2&#xB2E8;&#xACC4;&#xC758; &#xD3F4;&#xB354;&#xB97C; &#xCD94;&#xAC00; &#xD569;&#xB2C8;&#xB2E4;. 123mkdir controllerscd controllersmkdir test &#xADF8;&#xB7F0; &#xB2E4;&#xC74C; 2&#xAC1C;&#xC758; &#xD3F4;&#xB354;&#xC5D0; &#xAC01;&#xAC01; __init__.py&#xB77C;&#xB294; &#xD30C;&#xC77C;&#xC744; &#xB9CC;&#xB4ED;&#xB2C8;&#xB2E4;. &#xB0B4;&#xC6A9;&#xC740; &#xC544;&#xBB34;&#xAC83;&#xB3C4; &#xC5C6;&#xB294; &#xBE48; &#xD30C;&#xC77C;&#xB85C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. &#xC55E;&#xC73C;&#xB85C; &#xC791;&#xC131;&#xD560; 2&#xAC1C;&#xC758; &#xD30C;&#xC77C;&#xB3C4; &#xBBF8;&#xB9AC; &#xC0DD;&#xC131;&#xD574; &#xB193;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 12345touch __init__.pycd testtouch __init__.pytouch post.pytouch get.py /controllers/test/&#xC548;&#xC5D0; post.py, get.py&#xC5D0; &#xAE30;&#xC874;&#xC5D0; &#xC788;&#xB358; router.py&#xC758; &#xB0B4;&#xC6A9;&#xC744; &#xB098;&#xB220;&#xC11C; &#xC218;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. index.py 123456import jsonfrom router import routerdef handler(event, context): result = router(event); return { &apos;body&apos; : json.dumps(result) } router.py 1234567891011121314151617import controllers.test.getimport controllers.test.postroute_map = { &apos;/test&apos;: { &apos;GET&apos;: controllers.test.get.handler, &apos;POST&apos;: controllers.test.post.handler }};def router(event): controller = route_map[event[&apos;path&apos;]][event[&apos;httpMethod&apos;]]; if not controller: return { &apos;body&apos;: { &apos;Error&apos;: &quot;Invalid Path&quot; } } return controller(event); controllers/test/post.py 12345def handler(event): user_id = event[&apos;queryStringParameters&apos;][&apos;id&apos;] body = event[&apos;body&apos;] header = event[&apos;headers&apos;] return { &apos;body&apos;: { &apos;id&apos;: user_id, &apos;header&apos;: header, &apos;body&apos;: body } } controllers/test/get.py 123def handler(event): user_id = event[&apos;queryStringParameters&apos;][&apos;id&apos;] return { &apos;body&apos;: { &apos;id&apos;: user_id, &apos;name&apos;: &quot;test&quot; } } index.py&#xAC00; &#xC704;&#xCE58;&#xD55C; &#xD3F4;&#xB354;&#xB85C; &#xC774;&#xB3D9;&#xD558;&#xC5EC; &#xC555;&#xCD95;&#xC744; &#xD569;&#xB2C8;&#xB2E4;. 1zip -r sample.zip . &#xCF54;&#xB4DC;&#xB97C; &#xC62C;&#xB9B0; &#xD6C4; &#xD14C;&#xC2A4;&#xD2B8; &#xD588;&#xC744; &#xB54C; &#xB611;&#xAC19;&#xC740; &#xACB0;&#xACFC;&#xAC00; &#xB098;&#xC640;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. Step 4. &#xC678;&#xBD80; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;&#xB97C; pip&#xB85C; &#xC124;&#xCE58;&#xD558;&#xC5EC; &#xAC19;&#xC774; &#xC62C;&#xB9AC;&#xAE30; &#xC678;&#xBD80; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC; &#xC124;&#xCE58;&#xB97C; &#xD558;&#xAE30;&#xC704;&#xD574;&#xC11C;&#xB294; &#xC8FC;&#xC758;&#xD574;&#xC57C; &#xD560; &#xC0AC;&#xD56D;&#xB4E4;&#xC774; &#xBA87;&#xAC00;&#xC9C0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC678;&#xBD80; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;&#xB97C; &#xD574;&#xB2F9; &#xD3F4;&#xB354; &#xB0B4;&#xC5D0; &#xC124;&#xCE58;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; virtualenv&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xAC00;&#xC0C1;&#xD658;&#xACBD;&#xC744; &#xAD6C;&#xC131;&#xD574;&#xC8FC;&#xB294;&#xAC8C; &#xD3B8;&#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB807;&#xC9C0; &#xC54A;&#xC73C;&#xBA74; &#xC774;&#xBBF8; &#xD574;&#xB2F9; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;&#xAC00; &#xC124;&#xCE58;&#xB41C; &#xACBD;&#xC6B0; &#xCDA9;&#xB3CC;&#xC774; &#xC77C;&#xC5B4; &#xB0A0;&#xC218;&#xAC00; &#xC788;&#xC5B4;&#xC11C; &#xC124;&#xCE58; &#xC790;&#xCCB4;&#xAC00; &#xC27D;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xD604;&#xC7AC; &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; &#xC2E4;&#xD589;&#xB418;&#xB294; Python&#xC758; &#xBC84;&#xC804;&#xC774; 3.x.x &#xBC84;&#xC804;&#xC77C; &#xACBD;&#xC6B0;&#xC5D0;&#xB3C4; &#xBB38;&#xC81C;&#xAC00; &#xB429;&#xB2C8;&#xB2E4;. &#xD604;&#xC7AC; AWS Lambda&#xC5D0;&#xC11C; &#xC9C0;&#xC6D0;&#xD558;&#xB294; Python&#xC774; 2.7&#xBC84;&#xC804;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC785;&#xB2C8;&#xB2E4;. Python 3&#xC5D0;&#xC11C;&#xB3C4; virtualenv &#xD658;&#xACBD;&#xC73C;&#xB85C; Python 2.7&#xB85C; &#xC0DD;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;&#xB9CC;, &#xD544;&#xC790;&#xB294; &#xAD6C;&#xAE00;&#xC5D0;&#xC11C; &#xCC3E;&#xC544;&#xBD10;&#xC11C; &#xBA87; &#xBC88; &#xC2DC;&#xB3C4;&#xB97C; &#xD574;&#xBD24;&#xB294;&#xB370; &#xACC4;&#xC18D; &#xC2E4;&#xD328;&#xD558;&#xB354;&#xB77C;&#xAD6C;&#xC694;. &#xADF8;&#xB798;&#xC11C; &#xADF8;&#xB0E5; &#xACFC;&#xAC10;&#xD558;&#xAC8C; &#xADF8; &#xB2F9;&#xC2DC; &#xAE30;&#xBCF8;&#xC73C;&#xB85C; &#xC124;&#xCE58;&#xB41C; Python 3.5.12 (Conda)&#xB97C; &#xB0A0;&#xB824;&#xBC84;&#xB838;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xB530;&#xB85C; Python &#xACF5;&#xC2DD; &#xD398;&#xC774;&#xC9C0;&#xC5D0; &#xB4E4;&#xC5B4;&#xAC00;&#xC11C; 2.7.12&#xC640; 3.5.12&#xB97C; &#xC124;&#xCE58;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. Python &#xC124;&#xCE58;&#xB294; homebrew &#xAC19;&#xC740;&#xAC83;&#xC73C;&#xB85C; &#xC124;&#xCE58;&#xD558;&#xB294; &#xAC83;&#xBCF4;&#xB2E4;&#xB294; &#xADF8;&#xB0E5; &#xACF5;&#xD648;&#xC5D0;&#xC11C; .pkg &#xAC19;&#xC740;&#xAC78;&#xB85C; &#xB2E4;&#xC6B4;&#xBC1B;&#xC544;&#xC11C; &#xC124;&#xCE58;&#xD558;&#xB294;&#xAC8C; &#xC815;&#xC2E0; &#xAC74;&#xAC15;&#xC5D0; &#xC88B;&#xC2B5;&#xB2C8;&#xB2E4;. 12$ python -VPython 2.7.12 &#xAE30;&#xBCF8; &#xBC84;&#xC804;&#xC774; 2.7.12 &#xB77C;&#xB294; &#xAC83;&#xC774; &#xD655;&#xC778;&#xB418;&#xC5C8;&#xC73C;&#xB2C8; &#xADF8;&#xB0E5; virtualenv&#xB85C; &#xAC00;&#xC0C1;&#xD658;&#xACBD;&#xC744; &#xB9CC;&#xB4E4;&#xBA74; &#xB418;&#xACA0;&#xB124;&#xC694;. &#xBA3C;&#xC800; index.py&#xAC00; &#xC704;&#xCE58;&#xD55C; &#xACF3;&#xC73C;&#xB85C; &#xC774;&#xB3D9; &#xD6C4; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; &#xC785;&#xB825;&#xD558;&#xC5EC; &#xC2E4;&#xD589;&#xD574;&#xC8FC;&#xC138;&#xC694;. 1virtualenv myvenv &#xC774;&#xC81C; &#xAC00;&#xC0C1; &#xD658;&#xACBD;&#xC73C;&#xB85C; &#xD65C;&#xC131;&#xD654; &#xD569;&#xB2C8;&#xB2E4;. 1source myvenv/bin/activate &#xC774;&#xC81C; &#xC6D0;&#xD558;&#xB294; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;&#xB97C; &#xB85C;&#xCEEC;&#xB85C; &#xD574;&#xB2F9; &#xD3F4;&#xB354;&#xC5D0; &#xC124;&#xCE58;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. &#xC608;&#xC81C;&#xB85C; &#xC791;&#xC131;&#xD560; &#xCF54;&#xB4DC;&#xB77C; &#xAC00;&#xBCCD;&#xACE0; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xC26C;&#xC6B4; requests&#xB97C; &#xC124;&#xCE58;&#xD574; &#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 1pip install requests -t . &#xC77C;&#xB2E8;&#xC740; &#xB2E8;&#xC21C;&#xD558;&#xAC8C; &#xADF8;&#xB0E5; index.py&#xB9CC; &#xC218;&#xC815;&#xD574;&#xC11C; requests&#xAC00; &#xB3D9;&#xC791;&#xD558;&#xB294; &#xCF54;&#xB4DC;&#xB85C; &#xC218;&#xC815; &#xD6C4; &#xC62C;&#xB824;&#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xC8E0;. index.py 1234567891011121314import jsonimport requestsfrom router import routerdef handler(event, context): result = router(event); URL = &apos;http://www.tistory.com&apos; response = requests.get(URL) result[&apos;request_data&apos;] = response.text return { &apos;body&apos; : json.dumps(result) } &#xD574;&#xB2F9; &#xD3F4;&#xB354; &#xC774;&#xD558;&#xB97C; &#xBABD;&#xB545; &#xC555;&#xCD95;&#xD558;&#xC5EC; &#xC62C;&#xB9BD;&#xB2C8;&#xB2E4;. (myvenv &#xB294; &#xC81C;&#xC678;&#xD558;&#xACE0; &#xC2F6;&#xC740;&#xB370;&#x2026; &#xC5B4;&#xB5BB;&#xAC8C; &#xD558;&#xB294;&#xC9C0; &#xC798; &#xBAA8;&#xB974;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;.) 1zip -r sample.zip . &#xD14C;&#xC2A4;&#xD2B8;&#xB97C; &#xD558;&#xBA74; request_data&#xC548;&#xC5D0; &#xB370;&#xC774;&#xD130;&#xB4E4;&#xC774; &#xCD94;&#xAC00;&#xB41C; &#xAC83;&#xC744; &#xD655;&#xC778; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. Step 5. &#xC880; &#xB354; &#xC0C8;&#xB828;&#xB41C; &#xD328;&#xD0A4;&#xC9D5; &#xCC98;&#xB9AC; Step 4&#xC5D0;&#xC11C; &#xC0B4;&#xD3B4;&#xBCF8; &#xB0B4;&#xC6A9;&#xB9CC;&#xC73C;&#xB85C;&#xB294; &#xC2E4;&#xC81C; &#xC11C;&#xBE44;&#xC2A4; &#xAC00;&#xB2A5;&#xD55C; &#xC218;&#xC900;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xB9CC;&#xB4DC;&#xB294;&#xB370;&#xB294; &#xBA87;&#xAC00;&#xC9C0; &#xBB38;&#xC81C;&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC555;&#xCD95;&#xD30C;&#xC77C;&#xC758; &#xD06C;&#xAE30;&#xAC00; &#xB108;&#xBB34; &#xD06C;&#xB2E4;. virtualenv&#xC6A9; &#xD30C;&#xC77C;&#xC740; &#xC81C;&#xC678;&#xD558;&#xACE0; &#xC555;&#xCD95;&#xD558;&#xACE0; &#xC2F6;&#xB2E4;. pip&#xB97C; &#xC774;&#xC6A9;&#xD55C; &#xBAA8;&#xB4C8;&#xC744; &#xB85C;&#xCEEC;&#xC5D0; &#xC124;&#xCE58;&#xD588;&#xB294;&#xB370;, &#xADF8;&#xB7FC; index.py&#xC640; router.py&#xAC19;&#xC774; &#xB8E8;&#xD2B8;&#xD3F4;&#xB354;&#xC5D0; &#xC788;&#xB294; &#xD30C;&#xC77C;&#xB4E4;&#xB9D0;&#xACE0; get.py&#xB098; post.py&#xAC19;&#xC774; &#xC11C;&#xBE0C;&#xD3F4;&#xB354;&#xC5D0; &#xC788;&#xB294; &#xD30C;&#xC77C;&#xC5D0;&#xC11C;&#xB294; &#xC5B4;&#xB5BB;&#xAC8C; &#xBAA8;&#xB4C8;&#xB4E4;&#xC744; &#xC0AC;&#xC6A9;&#xD574;&#xC57C; &#xD560;&#xAE4C; ? &#xCCAB;&#xBC88;&#xC9F8; &#xBB38;&#xC81C;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xC800;&#xB3C4; &#xB9E5;&#xC5D0;&#xC11C; zip&#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; &#xC5B4;&#xB5BB;&#xAC8C; &#xD2B9;&#xC815; &#xD30C;&#xC77C;/&#xD3F4;&#xB354;&#xB97C; &#xBE7C;&#xACE0; &#xC555;&#xCD95;&#xC744; &#xD560;&#xC218; &#xC788;&#xB294;&#xC9C0;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xBABB;&#xCC3E;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xADF8;&#xB0E5; src&#xB77C;&#xB294; &#xD3F4;&#xB354;&#xB97C; &#xD558;&#xB098; &#xB9CC;&#xB4E4;&#xC5B4; &#xADF8; &#xC548;&#xC5D0;&#xC11C; &#xC791;&#xC5C5;&#xC744; &#xD558;&#xACE0; &#xD574;&#xB2F9; &#xD3F4;&#xB354; &#xC548;&#xC5D0;&#xC11C; .zip&#xD30C;&#xC77C;&#xB85C; &#xD328;&#xD0A4;&#xC9D5;&#xD574;&#xC11C; &#xC62C;&#xB9AC;&#xB2C8; virtualenv&#xAD00;&#xB828; &#xD30C;&#xC77C;&#xB4E4;&#xC740; &#xC790;&#xC5F0;&#xC2A4;&#xB7FD;&#xAC8C; &#xBE60;&#xC9C0;&#xAC8C; &#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB450;&#xBC88;&#xC9F8; &#xBB38;&#xC81C;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xBD80;&#xBAA8;&#xB514;&#xB809;&#xD1A0;&#xB9AC;&#xC758; &#xBAA8;&#xB4C8;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC811;&#xADFC;&#xD558;&#xB294; &#xC5EC;&#xB7EC;&#xAC00;&#xC9C0; &#xBC29;&#xBC95;&#xC744; &#xC2DC;&#xB3C4;&#xD574; &#xBD24;&#xB294;&#xB370; &#xCF54;&#xB4DC;&#xAC00; &#xB9CE;&#xC774; &#xC9C0;&#xC800;&#xBD84;&#xD574;&#xB354;&#xAD70;&#xC694;. &#xCF54;&#xB4DC;&#xB97C; &#xAE54;&#xB054;&#xD558;&#xAC8C; &#xC720;&#xC9C0;&#xD558;&#xBA74;&#xC11C; &#xD574;&#xACB0;&#xAC00;&#xB2A5;&#xD55C; &#xBC29;&#xBC95;&#xC73C;&#xB85C;&#xB294; 2&#xAC00;&#xC9C0; &#xC815;&#xB3C4;&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xBAA8;&#xB4C8;&#xC774; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xCD5C;&#xD558;&#xC704; &#xD3F4;&#xB354;&#xC5D0; &#xC124;&#xCE58;&#xD55C;&#xB2E4;. &#xC774; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xD574;&#xB2F9; &#xD3F4;&#xB354;&#xC758; &#xC0C1;&#xC704;&#xC5D0;&#xC11C;&#xB294; &#xBAA8;&#xB450; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xADF8; &#xC0C1;&#xC704; &#xD3F4;&#xB354;&#xC640; &#xAC19;&#xC740; &#xB808;&#xBCA8;&#xC758; &#xB2E4;&#xB978; &#xD3F4;&#xB354;&#xC5D0;&#xC11C;&#xC758; &#xC811;&#xADFC;&#xC740; &#xD798;&#xB4ED;&#xB2C8;&#xB2E4;. &#xADF8; &#xD3F4;&#xB354;&#xC5D0;&#xC11C;&#xB3C4; &#xC0AC;&#xC6A9;&#xD558;&#xB824;&#xBA74; &#xADF8; &#xD3F4;&#xB354;&#xB0B4;&#xC758; &#xC5B4;&#xB518;&#xAC00;&#xC5D0; &#xB610; &#xC124;&#xCE58;&#xB97C; &#xD558;&#xB294; &#xBC29;&#xBC95;&#xC73C;&#xB85C; &#xD574;&#xACB0;&#xC744; &#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xC774; &#xBC29;&#xBC95;&#xC740; &#xBCC4;&#xB85C; &#xC88B;&#xC740; &#xBC29;&#xBC95; &#xAC19;&#xC9C0; &#xC54A;&#xC73C;&#xB2C8; &#xD328;&#xC2A4;&#xD558;&#xAE30;&#xB85C; &#xD569;&#xB2C8;&#xB2E4;. &#xCD5C;&#xC0C1;&#xC704; &#xBAA8;&#xB4C8;&#xC5D0;&#xC11C; &#xD558;&#xC704; &#xD3F4;&#xB354;&#xB0B4; &#xBAA8;&#xB4C8;&#xC5D0;&#xAC8C; &#xC804;&#xB2EC;&#xD55C;&#xB2E4;. &#xAC1C;&#xC778;&#xC801;&#xC73C;&#xB85C; &#xCD94;&#xCC9C;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xC785;&#xB2C8;&#xB2E4;. index.py &#xAC19;&#xC774; &#xD504;&#xB85C;&#xADF8;&#xB7A8; &#xB0B4;&#xC758; &#xC2DC;&#xC791;&#xC810;&#xC5D0; &#xD574;&#xB2F9;&#xB418;&#xB294; &#xACF3;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xBAA8;&#xB4E0; &#xBAA8;&#xB4C8;&#xB4E4;&#xC758; &#xAC1D;&#xCCB4;&#xB97C; &#xC120;&#xC5B8;&#xD558;&#xC5EC; &#xC774;&#xAC83;&#xC744; &#xD558;&#xC704; &#xD3F4;&#xB354;&#xB0B4;&#xC758; &#xBAA8;&#xB4C8;&#xC744; &#xD638;&#xCD9C;&#xD560; &#xB54C; &#xAC19;&#xC774; &#xC804;&#xB2EC;&#xD558;&#xB294; &#xBC29;&#xC2DD;&#xC785;&#xB2C8;&#xB2E4;. &#xC124;&#xBA85;&#xC73C;&#xB85C;&#xB9CC; &#xB290;&#xB08C;&#xC774; &#xC798; &#xC548;&#xC624;&#xC2E4;&#xC218; &#xC788;&#xC73C;&#xB2C8; &#xC608;&#xC81C; &#xCF54;&#xB4DC;&#xB85C; &#xC0B4;&#xD3B4;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC704; Step 4 &#xC608;&#xC81C;&#xB97C; &#xC870;&#xAE08; &#xBCC0;&#xACBD;&#xD558;&#xC5EC; /test&#xACBD;&#xB85C;&#xB85C; GET&#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xC694;&#xCCAD;&#xD55C; &#xACBD;&#xC6B0; &#xCFFC;&#xB9AC; &#xC2A4;&#xD2B8;&#xB9C1;&#xC73C;&#xB85C; url&#xAC12;&#xC744; &#xBC1B;&#xC544;&#xC11C; &#xD574;&#xB2F9; &#xC0AC;&#xC774;&#xD2B8;&#xC758; &#xB0B4;&#xC6A9;&#xC744; requests &#xBAA8;&#xB4C8;&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xAC00;&#xC838;&#xC624;&#xB294; &#xCF54;&#xB4DC;&#xB85C; &#xBCC0;&#xACBD;&#xD574; &#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. Step 4&#xAE4C;&#xC9C0; &#xC9C4;&#xD589;&#xB418;&#xC5C8;&#xB2E4;&#xB294; &#xAC00;&#xC815;&#xD558;&#xC5D0; &#xC9C4;&#xD589;&#xD560; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xBC14;&#xB85C; &#xD558;&#xBA74; &#xB418;&#xC9C0;&#xB9CC; &#xC0C8;&#xB85C;&#xC6B4; &#xD3F4;&#xB354;&#xC5D0; &#xC791;&#xC5C5;&#xC744; &#xD558;&#xB294; &#xACBD;&#xC6B0;&#xB77C;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; virtualenv&#xB97C; &#xC774;&#xC6A9;&#xD55C; &#xAC00;&#xC0C1;&#xD658;&#xACBD;&#xC73C;&#xB85C; &#xB4E4;&#xC5B4;&#xAC00;&#xC11C; pip&#xB97C; &#xB85C;&#xCEEC;&#xB85C; &#xC124;&#xCE58;&#xD574; &#xC8FC;&#xC2E0;&#xB4A4; &#xCF54;&#xB4DC;&#xB97C; &#xC791;&#xC131;&#xD574; &#xC8FC;&#xC138;&#xC694;. 1234virtualenv myvenvsource myvenv/bin/activatemkdir srccd src &#xC555;&#xCD95;&#xD560; &#xB54C; myvenv&#xB0B4;&#xC758; &#xD30C;&#xC77C;&#xB4E4;&#xC774; &#xAC19;&#xC774; &#xC555;&#xCD95;&#xB418;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; &#xC791;&#xC5C5;&#xC744; src&#xD3F4;&#xB354; &#xB0B4;&#xC5D0;&#xC11C; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 123mkdir modulestouch modules/__init__.pypip install requests -t modules/ modules&#xC744; &#xB2E4;&#xB978; &#xD3F4;&#xB354;&#xC5D0;&#xC11C; &#xBD88;&#xB7EC;&#xC624;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; &#xD574;&#xB2F9; &#xD3F4;&#xB354;&#xB0B4;&#xC5D0; __init__.py &#xD30C;&#xC77C;&#xC774; &#xC788;&#xC5B4;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. 12345678mkdir controllerscd controllersmkdir testtouch __init__.pycd testtouch __init__.pycd ..cd .. index.py&#xC5D0;&#xC11C; requests &#xBAA8;&#xB4C8;&#xC5D0; &#xB300;&#xD55C; &#xAC1D;&#xCCB4;&#xB97C; &#xC120;&#xC5B8;&#xD558;&#xC5EC; &#xADF8;&#xAC83;&#xC744; /controllers/test/get.py&#xAE4C;&#xC9C0; &#xC804;&#xB2EC;&#xD558;&#xB294; &#xCF54;&#xB4DC;&#xB97C; &#xC791;&#xC131;&#xD574; &#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. index.py 12345678910111213import jsonimport modules.requestsfrom router import routerdef handler(event, context): packages = {} packages[&apos;requests&apos;] = modules.requests result = router(packages, event); return { &apos;body&apos; : json.dumps(result) } router.py&#xC5D0;&#xC11C;&#xB294; &#xC804;&#xB2EC;&#xBC1B;&#xC740; packages&#xB97C; &#xADF8;&#xB300;&#xB85C; &#xC804;&#xB2EC;&#xD574;&#xC8FC;&#xB294; &#xCF54;&#xB4DC;&#xB9CC; &#xCD94;&#xAC00;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. router.py 1234567891011121314151617import controllers.test.getimport controllers.test.postroute_map = { &apos;/test&apos;: { &apos;GET&apos;: controllers.test.get.handler, &apos;POST&apos;: controllers.test.post.handler }};def router(packages, event): controller = route_map[event[&apos;path&apos;]][event[&apos;httpMethod&apos;]]; if not controller: return { &apos;body&apos;: { &apos;Error&apos;: &quot;Invalid Path&quot; } } return controller(packages, event); post.py&#xC5D0;&#xC11C; &#xC678;&#xBD80; &#xBAA8;&#xB4C8;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0;&#xB294; &#xC54A;&#xC9C0;&#xB9CC;, &#xC77C;&#xB2E8; &#xBC1B;&#xC544;&#xC90D;&#xC2DC;&#xB2E4;. &#xACF5;&#xC9E0;&#xB370;&#xC694;. controllers/test/post.py 12345def handler(packages, event): user_id = event[&apos;queryStringParameters&apos;][&apos;id&apos;] body = event[&apos;body&apos;] header = event[&apos;headers&apos;] return { &apos;body&apos;: { &apos;id&apos;: user_id, &apos;header&apos;: header, &apos;body&apos;: body } } get.py&#xC5D0;&#xC11C;&#xB294; &#xC804;&#xB2EC;&#xBC1B;&#xC740; packages&#xC5D0;&#xC11C; requests &#xAC1D;&#xCCB4;&#xB97C; &#xAC00;&#xC838;&#xC640;&#xC11C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xCF54;&#xB4DC;&#xAC00; &#xCD94;&#xAC00;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. controllers/test/get.py 1234567def handler(packages, event): requests = packages[&apos;requests&apos;] request_url = event[&apos;queryStringParameters&apos;][&apos;url&apos;] response = requests.get(&apos;http://&apos; + request_url) return { &apos;body&apos;: { &apos;url&apos;: request_url, &apos;text&apos;: response.text } } &#xC774;&#xC81C; index.py&#xAC00; &#xC788;&#xB294; &#xC704;&#xCE58;&#xB85C; &#xC640;&#xC11C; &#xC555;&#xCD95;&#xD55C; &#xB4A4;&#xC5D0; Lambda&#xC5D0; &#xC62C;&#xB824; &#xB193;&#xACE0; &#xD14C;&#xC2A4;&#xD2B8; &#xD574; &#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 1zip -r sample.zip . https://&#xBCF8;&#xC778; Lambda &#xC8FC;&#xC18C;.../prod/test?url=www.naver.com &#xC2DD;&#xC73C;&#xB85C; &#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xC5D0;&#xC11C; &#xC785;&#xB825;&#xD558;&#xC5EC; &#xACB0;&#xACFC;&#xAC00; &#xC81C;&#xB300;&#xB85C; &#xC624;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xC2DC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. &#xB9C8;&#xCE58;&#xBA70;&#x2026; &#xC774;&#xBC88; &#xD3EC;&#xC2A4;&#xD305;&#xC5D0;&#xC11C; &#xC54C;&#xC544;&#xBCF8; &#xB0B4;&#xC6A9;&#xB4E4;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. Lambda&#xC5D0; Python &#xCF54;&#xB4DC;&#xB97C; &#xD328;&#xD0A4;&#xC9D5;&#xD574;&#xC11C; &#xC62C;&#xB9AC;&#xB294; &#xBC29;&#xBC95; vitrualenv&#xB97C; &#xD65C;&#xC6A9;&#xD574;&#xC11C; &#xC6D0;&#xD558;&#xB294; &#xD3F4;&#xB354;&#xC5D0; pip&#xB85C; &#xBAA8;&#xB4C8;&#xC744; &#xC124;&#xCE58;&#xD558;&#xB294; &#xBC29;&#xBC95; &#xB85C;&#xCEEC;&#xC5D0; pip&#xB85C; &#xC124;&#xCE58;&#xD55C; &#xBAA8;&#xB4C8;&#xB4E4;&#xC744; &#xC11C;&#xBE0C; &#xD3F4;&#xB354;&#xB0B4;&#xC5D0;&#xC11C;&#xB3C4; &#xD65C;&#xC6A9;&#xD558;&#xB294; &#xBC29;&#xBC95; &#xC798;&#xBABB;&#xB418;&#xC5C8;&#xAC70;&#xB098;, &#xBCC0;&#xACBD;&#xB41C; &#xC810;, &#xAE30;&#xD0C0; &#xCD94;&#xAC00; &#xC0AC;&#xD56D;&#xC5D0; &#xB300;&#xD55C; &#xD53C;&#xB4DC;&#xBC31;&#xC740; &#xC5B8;&#xC81C;&#xB098; &#xD658;&#xC601;&#xD569;&#xB2C8;&#xB2E4;. - seokjoon.yun@gmail.com &#xCC38;&#xACE0; AWS &#xACF5;&#xC2DD; &#xAC00;&#xC774;&#xB4DC; : http://docs.aws.amazon.com/lambda/latest/dg/lambda-python-how-to-create-deployment-package.html","categories":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/categories/AWS/"},{"name":"Lambda","slug":"AWS/Lambda","permalink":"http://DevStarSJ.github.io/categories/AWS/Lambda/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/tags/AWS/"},{"name":"Lambda","slug":"Lambda","permalink":"http://DevStarSJ.github.io/tags/Lambda/"},{"name":"APIGateway","slug":"APIGateway","permalink":"http://DevStarSJ.github.io/tags/APIGateway/"},{"name":"Python","slug":"Python","permalink":"http://DevStarSJ.github.io/tags/Python/"}]},{"title":"AWS Lambda에 Python Handler 만들기","slug":"Lambda.Python","date":"2016-11-24T06:54:51.000Z","updated":"2017-04-23T08:21:19.000Z","comments":true,"path":"2016/11/24/Lambda.Python/","link":"","permalink":"http://DevStarSJ.github.io/2016/11/24/Lambda.Python/","excerpt":"","text":"AWS Lambda&#xC5D0; Python Handler &#xB9CC;&#xB4E4;&#xAE30; AWS Lambda &#xAD00;&#xB828; 5&#xBC88;&#xC9F8; &#xD3EC;&#xC2A4;&#xD2B8; &#xC785;&#xB2C8;&#xB2E4;. &#xC9C0;&#xB09C; &#xAE00;&#xB4E4;&#xC758; &#xBAA9;&#xB85D;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #1 (GET, POST) Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #2 (ANY, Deploy Staging, Node.JS Route) Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #3 (Proxy Resource) Lambda Node.JS Packaging &#xC774;&#xBC88;&#xC5D0;&#xB294; Python&#xC73C;&#xB85C; &#xAD6C;&#xD604;&#xD574; &#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. Previously on Lambda series Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #3 (Proxy Resource)&#xAE4C;&#xC9C0; &#xC9C4;&#xD589;&#xB418;&#xC5C8;&#xB2E4;&#xB294; &#xAC00;&#xC815;&#xD558;&#xC5D0; &#xC9C4;&#xD589;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC544;&#xC9C1; &#xC704; &#xB0B4;&#xC6A9;&#xB4E4;&#xC744; &#xBCF4;&#xC9C0; &#xC54A;&#xC73C;&#xC168;&#xB358; &#xBD84;&#xC740; &#xC544;&#xB798;&#xB300;&#xB85C; &#xB530;&#xB77C;&#xD558;&#xC2DC;&#xBA74; &#xC900;&#xBE44;&#xAC00; &#xB05D;&#xB0A9;&#xB2C8;&#xB2E4;. &#xADF8; &#xACFC;&#xC815;&#xC744; &#xAC04;&#xB7B5;&#xD558;&#xAC8C; &#xC0B4;&#xC5C6;&#xC774; &#xBF08;&#xB9CC; &#xAC04;&#xCD94;&#xB9AC;&#xBA74; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. &#xAD00;&#xB828; &#xB0B4;&#xC6A9;&#xC740; &#xC704; &#xD3EC;&#xC2A4;&#xD2B8; &#xB4E4;&#xC744; &#xCC38;&#xC870;&#xD574;&#xC8FC;&#xC138;&#xC694;. &#xADF8;&#xB0E5; &#xC77D;&#xC5B4;&#xBD10;&#xC11C; &#xC774;&#xD574;&#xAC00; &#xC548;&#xB418;&#xC2E0;&#xB2E4;&#xBA74; &#xD55C; &#xBC88; &#xC544;&#xBB34;&#xC0DD;&#xAC01;&#xC5C6;&#xC774; &#xB530;&#xB77C;&#xD574; &#xBCF4;&#xC2DC;&#xBA74; &#xC774;&#xD574;&#xAC00; &#xB418;&#xC2E4;&#xAC81;&#xB2C8;&#xB2E4;. Create Lambda AWS &#xB85C;&#xADF8;&#xC778; &#xD6C4; Lambda &#xD0ED;&#xC73C;&#xB85C; &#xC774;&#xB3D9; Create a Lambda Function &#xC120;&#xD0DD; Select blueprint&#xC5D0;&#xC11C; Blank Function &#xC120;&#xD0DD; Configure function &#xC5D0;&#xC11C; &#xC77C;&#xB2E8; &#xBC14;&#xB85C; Next &#xC120;&#xD0DD; (&#xBBF8;&#xB9AC; &#xC5F0;&#xACB0;&#xD560; API Gateway&#xAC00; &#xC788;&#xB2E4;&#xBA74; &#xC5EC;&#xAE30;&#xC11C; &#xC5F0;&#xACB0;&#xD558;&#xBA74; &#xB428;) Configure function&#xC5D0;&#xC11C; &#xD568;&#xC218; &#xC815;&#xC758; Name : testLambda-luna Runtime : Node.js 4.3 Code : &#xC77C;&#xB2E8; &#xC544;&#xBB34;&#xAC70;&#xB098; &#xC785;&#xB825; Role &amp; Existing role : &#xC77C;&#xB2E8;&#xC740; &#xC801;&#xB2F9;&#xD788; &#xC120;&#xD0DD; (&#xB9CC;&#xC57D; Lambda&#xC5D0;&#xC11C; &#xB2E4;&#xB978; AWS &#xC11C;&#xBE44;&#xC2A4; RDS, S3 &#xB4F1;&#xC744; &#xC5F0;&#xB3D9;&#xD560;&#xB824;&#xBA74; &#xD544;&#xC694;) &#xC544;&#xB798; &#xCF54;&#xB4DC; &#xC785;&#xB825; &#xD6C4; Next &#xC120;&#xD0DD; Create Function &#xC120;&#xD0DD; Set API Gateway AWS &#xBA54;&#xC778; &#xD654;&#xBA74;&#xC73C;&#xB85C; &#xC774;&#xB3D9; &#xD6C4; API Gateway &#xD0ED;&#xC73C;&#xB85C; &#xC774;&#xB3D9; Create API &#xC120;&#xD0DD; API name : testAPI-luna Create API &#xC120;&#xD0DD; /&#xC5D0;&#xC11C; Actions -&gt; Create Resource&#xB97C; &#xC120;&#xD0DD; Configure as proxy resource &#xB97C; &#xCCB4;&#xD06C;&#xD55C; &#xD6C4; Create Resource&#xB97C; &#xB204;&#xB984; ANY &#xC120;&#xD0DD; Integration Request &#xC120;&#xD0DD; Integration type : Lambda Function Lambda Region : &#xB78C;&#xB2E4;&#xB97C; &#xC0DD;&#xC131;&#xD55C; &#xC9C0;&#xC5ED; &#xC11C;&#xBC84; &#xC120;&#xD0DD; Lambda Function : &#xB78C;&#xB2E4; &#xBA85;&#xCE6D; &#xAE30;&#xC785; Actions -&gt; Deploy API &#xC120;&#xD0DD; &#xD6C4; &#xADF8;&#xB0E5; prod&#xB85C; &#xC2A4;&#xD14C;&#xC774;&#xC9D5; Hello Python Lambda Handler &#xBA3C;&#xC800; &#xAC00;&#xC7A5; &#xAE30;&#xCD08;&#xC801;&#xC778; &#xD578;&#xB4E4;&#xB7EC;&#xB97C; &#xC791;&#xC131;&#xD574;&#xBCF4;&#xB85D; &#xD558;&#xC8E0;. &#xC55E;&#xC11C; &#xC0DD;&#xC131;&#xD55C; Lambda &#xC124;&#xC815;&#xC5D0; &#xB4E4;&#xC5B4;&#xAC00;&#xC154;&#xC11C; Configuration &#xD0ED; Runtime : Python 2.7 &#xC120;&#xD0DD; Handler : index.handler&#xB77C;&#xACE0; &#xB418;&#xC5B4; &#xC788;&#xB294;&#xC9C0; &#xD655;&#xC778; Code &#xD0ED; &#xC73C;&#xB85C; &#xC640;&#xC11C; &#xC544;&#xB798; &#xCF54;&#xB4DC; &#xC785;&#xB825; 12def handler(event, context): return { &apos;event&apos;: str(event), &apos;context&apos;: str(context) } &#xADF8;&#xB7F0; &#xB2E4;&#xC74C; API Gateway&#xC758; &#xC8FC;&#xC18C;&#xB97C; &#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xC5D0;&#xC11C; &#xC785;&#xB825;&#xD558;&#xBA74; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. &#xC8FC;&#xC18C; &#xD655;&#xC778;&#xD558;&#xB294; &#xBC95;&#xC740; API Gateway &#xC124;&#xC815;&#xC5D0;&#xC11C; Stages&#xB97C; &#xB20C;&#xB7EC;&#xC11C; &#xD574;&#xB2F9; &#xC2A4;&#xD14C;&#xC774;&#xC9D5;(prod)&#xB97C; &#xC120;&#xD0DD;&#xD558;&#xBA74; Invoke URL&#xC5D0; &#xD45C;&#xC2DC;&#xB429;&#xB2C8;&#xB2E4; &#xADF8; &#xC774;&#xC720;&#xB294; &#xD604;&#xC7AC; {proxy+} &#xC774;&#xD558;&#xB85C;&#xB294; ANY&#xB85C; &#xC124;&#xC815;&#xB41C;&#xAC8C; &#xC788;&#xB294;&#xB370; /&#xC5D0;&#xB294; &#xC544;&#xBB34;&#xAC83;&#xB3C4; &#xC124;&#xC815;&#xB41C;&#xAC8C; &#xC5C6;&#xAE30; &#xB54C;&#xBB38;&#xC785;&#xB2C8;&#xB2E4;. &#xC88C;&#xCE21; &#xD574;&#xB2F9; &#xD56D;&#xBAA9;&#xC5D0;&#xC11C; Resources&#xB85C; &#xC774;&#xB3D9; /&#xC5D0;&#xC11C; Actions -&gt; Create Method&#xB97C; &#xB20C;&#xB7EC;&#xC11C; ANY&#xB97C; &#xC0DD;&#xC131; &#xC0DD;&#xC131;&#xB41C; ANY&#xB97C; &#xB20C;&#xB7EC;&#xC11C; Integration type : Lambda Function Lambda Region : &#xB78C;&#xB2E4;&#xB97C; &#xC0DD;&#xC131;&#xD55C; &#xC9C0;&#xC5ED; &#xC11C;&#xBC84; &#xC120;&#xD0DD; Lambda Function : &#xB78C;&#xB2E4; &#xBA85;&#xCE6D; &#xAE30;&#xC785; Save&#xB97C; &#xB204;&#xB978; &#xB4A4; &#xD654;&#xBA74;&#xC774; &#xBC14;&#xB00C;&#xBA74; Integration Request &#xC120;&#xD0DD; Body Mapping Templates &#xC120;&#xD0DD; Add mapping template &#xC120;&#xD0DD; application/json&#xC774;&#xB77C;&#xACE0; &#xC785;&#xB825;&#xD55C; &#xB4A4; &#xC801;&#xC6A9; Generate template : Method Request passthrough &#xC120;&#xD0DD; Save &#xC120;&#xD0DD; API Gateway&#xB294; &#xC124;&#xC815; &#xBCC0;&#xACBD; &#xD6C4; &#xBC18;&#xB4DC;&#xC2DC; Deploy&#xD574;&#xC918;&#xC57C;&#xB9CC; &#xC801;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;. Actions -&gt; Deploy API &#xC120;&#xD0DD; &#xD6C4; &#xADF8;&#xB0E5; prod&#xB85C; &#xC2A4;&#xD14C;&#xC774;&#xC9D5; &#xC774;&#xC81C; &#xB2E4;&#xC2DC; Invoke URL&#xB85C; &#xC811;&#xC18D;&#xD558;&#xBA74; &#xBB54;&#xAC00; &#xD654;&#xBA74;&#xC5D0; &#xACB0;&#xACFC;&#xAC00; &#xB098;&#xD0C0;&#xB098;&#xB294; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. {&quot;event&quot;: &quot;{u&apos;body-json&apos;: {}, u&apos;params&apos;: {u&apos;path&apos;: {}, u&apos;querystring&apos;: {}, ...} &#xBB54;&#xAC00; &#xC774;&#xB7F0; &#xC9C0;&#xC800;&#xBD84;&#xD55C; &#xBAA8;&#xC591;&#xC785;&#xB2C8;&#xB2E4;. u&#xB77C;&#xACE0; &#xB530;&#xC634;&#xD45C; &#xC55E;&#xC5D0; &#xBD99;&#xC740;&#xAC83;&#xC744; &#xB2E4; &#xC9C0;&#xC6B0;&#xACE0; &#xD640;&#xB530;&#xC634;&#xD45C;(&apos;)&#xB97C; &#xC30D;&#xB530;&#xC634;&#xD45C;(&quot;)&#xB85C; &#xC218;&#xC815;&#xD55C; &#xB4A4; JSON &#xBAA8;&#xC591;&#xC73C;&#xB85C; &#xB098;&#xD0C0;&#xB0B4; &#xBCF4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xB429;&#xB2C8;&#xB2E4;. &#xC6B0;&#xB9AC;&#xAC00; &#xD544;&#xC694;&#xD55C; &#xD56D;&#xBAA9;&#xB4E4;&#xB9CC; &#xC801;&#xC5B4;&#xBD24;&#xC2B5;&#xB2C8;&#xB2E4;. 12345678910111213141516171819{ &quot;event&quot;: { &quot;body-json&quot;: {}, &quot;params&quot;: { &quot;path&quot;: {}, &quot;querystring&quot;: {}, &quot;header&quot;: { &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36&quot;, } }, &quot;stage-variables&quot;: {}, &quot;context&quot;: { &quot;http-method&quot;: &quot;GET&quot;, &quot;resource-path&quot;: &quot;/&quot;, &quot;source-ip&quot;: &quot;112.217.228.202&quot;, } }, &quot;context&quot;: &quot;&lt;__main__.LambdaContext object at 0x7f629a39aa10&gt;&quot;} Node.JS&#xC640; &#xB611;&#xAC19;&#xC740; &#xBAA8;&#xC591;&#xC73C;&#xB85C; &#xB098;&#xC635;&#xB2C8;&#xB2E4;. context&#xB294; &#xBB54;&#xAC00; dict&#xD0C0;&#xC785;&#xC774; &#xC544;&#xB2C8;&#xB77C;&#xC11C; &#xADF8;&#xB300;&#xB85C; &#xCD9C;&#xB825;&#xC774; &#xB418;&#xC9C0; &#xC54A;&#xB294;&#xAD70;&#xC694;. &#xACF5;&#xC2DD;&#xBB38;&#xC11C; (http://docs.aws.amazon.com/lambda/latest/dg/python-context-object.html)&#xB97C; &#xBCF4;&#xC2DC;&#xBA74; context &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC5D0; &#xB300;&#xD55C; &#xC790;&#xC138;&#xD55C; &#xB0B4;&#xC6A9;&#xC774; &#xB098;&#xC635;&#xB2C8;&#xB2E4;. &#xC774;&#xC81C; &#xAE30;&#xBCF8; Invoke URL &#xB4A4;&#xC5D0; /test?id=2&#xB77C;&#xACE0; &#xC801;&#xC740; &#xB4A4; &#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xB85C; &#xC694;&#xCCAD;&#xC744; &#xD574;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB2F9;&#xC5F0;&#xD788; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. {proxy+}&#xB85C; &#xC694;&#xCCAD;&#xD558;&#xB294; &#xB370;&#xC774;&#xD130;&#xC758; &#xD615;&#xC2DD;&#xB3C4; &#xB2E4;&#xB974;&#xBA70; &#xC5EC;&#xAE30;&#xC5D0; &#xB300;&#xD55C; &#xC751;&#xB2F5;&#xC740; JSON &#xC624;&#xBE0C;&#xC81D;&#xD2B8; body&#xC5D0; JSON &#xD615;&#xC2DD;&#xC758; &#xBB38;&#xC790;&#xC5F4;&#xB85C; &#xC804;&#xB2EC;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. Lambda&#xCABD; &#xCF54;&#xB4DC;&#xB97C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC218;&#xC815; &#xD6C4; &#xB2E4;&#xC2DC; &#xC694;&#xCCAD;&#xD574;&#xBCF4;&#xBA74; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xB2F5;&#xBCC0;&#xC774; &#xC624;&#xB294; &#xAC83;&#xC774; &#xD655;&#xC778; &#xB429;&#xB2C8;&#xB2E4;. POSTMAN&#xC744; &#xD1B5;&#xD574;&#xC11C; POST&#xB85C; &#xC694;&#xCCAD;&#xC744; &#xD574;&#xB3C4; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xB2F5;&#xBCC0;&#xC774; &#xC624;&#xB294; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. (JSON &#xAC1D;&#xCCB4;&#xD615;&#xD0DC;&#xAC00; &#xC544;&#xB2C8;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xCD9C;&#xB825; &#xD615;&#xC2DD;&#xC744; Text&#xB85C; &#xD574;&#xC57C; &#xBCF4;&#xC785;&#xB2C8;&#xB2E4;.) &#xADF8;&#xB798;&#xC11C; JSON &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xC751;&#xB2F5;&#xD558;&#xB3C4;&#xB85D; &#xCF54;&#xB4DC;&#xB97C; &#xC870;&#xAE08; &#xC218;&#xC815;&#xD574; &#xBD24;&#xC2B5;&#xB2C8;&#xB2E4;. 1234import jsondef handler(event, context): return { &apos;body&apos; : json.dumps(event) } &#xC774;&#xC81C;&#xB294; JSON &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB85C; &#xC751;&#xB2F5;&#xD558;&#xBBC0;&#xB85C; POSTMAN&#xC5D0;&#xC11C;&#xB3C4; &#xBC14;&#xB85C; &#xACB0;&#xACFC;&#xB97C; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. Python Routing Example &#xC870;&#xAE08; &#xB354; &#xBCF5;&#xC7A1;&#xD55C; &#xC608;&#xC81C;&#xB97C; &#xC791;&#xC131;&#xD574; &#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC608;&#xC81C;&#xC758; &#xB0B4;&#xC6A9;&#xC740; Node.JS&#xB85C; &#xC9C4;&#xD589;&#xD55C; &#xC608;&#xC81C;&#xC640; &#xAC19;&#xC740; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;. /test?id=? &#xB77C;&#xB294; &#xC8FC;&#xC18C;&#xB85C; GET, POST&#xC694;&#xCCAD;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xAC01;&#xAC01; &#xB2E4;&#xB978; &#xC791;&#xC5C5;&#xC744; &#xD558;&#xB294; &#xCF54;&#xB4DC;&#xB97C; &#xC791;&#xC131;&#xD574; &#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xAC01;&#xAC01; &#xD568;&#xC218;&#xC5D0; &#xB300;&#xD55C; &#xC124;&#xBA85;&#xC740; Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #2 (ANY, Deploy Staging, Node.JS Route) &#xD3EC;&#xC2A4;&#xD305;&#xC744; &#xCC38;&#xACE0;&#xD574; &#xC8FC;&#xC138;&#xC694;. &#xBC14;&#xB85C; &#xCF54;&#xB4DC; &#xB4E4;&#xC5B4;&#xAC11;&#xB2C8;&#xB2E4;. 123456789101112131415161718192021222324252627282930import jsondef get(event): user_id = event[&apos;queryStringParameters&apos;][&apos;id&apos;] return { &apos;body&apos;: { &apos;id&apos;: user_id, &apos;name&apos;: &quot;test&quot; } }def post(event): user_id = event[&apos;queryStringParameters&apos;][&apos;id&apos;] body = event[&apos;body&apos;] header = event[&apos;headers&apos;] return { &apos;body&apos;: { &apos;id&apos;: user_id, &apos;header&apos;: header, &apos;body&apos;: body } }route_map = { &apos;/test&apos;: { &apos;GET&apos;: get, &apos;POST&apos;: post }};def router(event): controller = route_map[event[&apos;path&apos;]][event[&apos;httpMethod&apos;]]; if not controller: return { &apos;body&apos;: { &apos;Error&apos;: &quot;Invalid Path&quot; } } return controller(event);def handler(event, context): result = router(event); return { &apos;body&apos; : json.dumps(result) } &#xACB0;&#xACFC; &#xD655;&#xC778; GET &#xC694;&#xCCAD; : https://.../prod/test?id=2 1{&quot;body&quot;:{&quot;id&quot;:&quot;2&quot;,&quot;name&quot;:&quot;test&quot;}} POST &#xC694;&#xCCAD; : URL&#xC740; GET&#xACFC; &#xB3D9;&#xC77C; 123456789{ &quot;body&quot;: { &quot;id&quot;: &quot;2&quot;, &quot;header&quot;: { ... }, &quot;body&quot;: &quot;\\&quot;{\\\\n \\&quot;id\\&quot;: \\&quot;123\\&quot;,\\\\n \\&quot;age\\&quot;: \\&quot;25\\&quot;\\\\n}\\&quot;&quot; }} Node.JS &#xC640; &#xB611;&#xAC19;&#xC740; &#xACB0;&#xACFC;&#xB85C; &#xCD9C;&#xB825;&#xB418;&#xB294; &#xAC83;&#xC774; &#xD655;&#xC778; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xB9C8;&#xCE58;&#xBA70;&#x2026; Python Packaging&#xB294; &#xB098;&#xB204;&#xC5B4;&#xC11C; &#xB2E4;&#xC74C; &#xD3EC;&#xC2A4;&#xD305;&#xC5D0; &#xC791;&#xC131;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xAC04;&#xB7B5;&#xD558;&#xAC8C; &#xBC29;&#xBC95;&#xC744; &#xC124;&#xBA85;&#xB4DC;&#xB9AC;&#xC9C0;&#xB9CC; virtualenv&#xB85C; &#xC791;&#xC5C5; &#xD658;&#xACBD;&#xC744; &#xB9CC;&#xB4E0; &#xB4A4; pip install &#xBAA8;&#xB4C8;&#xBA85; -t &#xD504;&#xB85C;&#xC81D;&#xD2B8;&#xD3F4;&#xB354;&#xB85C; &#xC791;&#xC5C5;&#xD3F4;&#xB354;&#xC5D0; &#xBAA8;&#xB4C8;&#xC744; &#xC124;&#xCE58;&#xD55C; &#xB4A4; .zip&#xD30C;&#xC77C;&#xB85C; &#xC555;&#xCD95;&#xD558;&#xC5EC; &#xC62C;&#xB9AC;&#xC2DC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. (Node.JS Packaging&#xACFC; &#xD06C;&#xAC8C; &#xB2E4;&#xB974;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;.) &#xC774;&#xBC88; &#xD3EC;&#xC2A4;&#xD305;&#xC5D0;&#xC11C; &#xC54C;&#xC544;&#xBCF8; &#xB0B4;&#xC6A9;&#xB4E4;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. Lambda&#xC5D0; Python &#xCF54;&#xB4DC;&#xB85C; &#xD578;&#xB4E4;&#xB7EC; &#xC791;&#xC131; Python&#xC5D0;&#xC11C; API Gateway&#xC758; {proxy+}&#xC694;&#xCCAD;&#xC5D0; &#xB300;&#xD558;&#xC5EC; &#xAD6C;&#xBD84;&#xD574;&#xC11C; &#xC791;&#xC5C5;&#xD558;&#xB294; &#xBC29;&#xBC95; &#xC798;&#xBABB;&#xB418;&#xC5C8;&#xAC70;&#xB098;, &#xBCC0;&#xACBD;&#xB41C; &#xC810;, &#xAE30;&#xD0C0; &#xCD94;&#xAC00; &#xC0AC;&#xD56D;&#xC5D0; &#xB300;&#xD55C; &#xD53C;&#xB4DC;&#xBC31;&#xC740; &#xC5B8;&#xC81C;&#xB098; &#xD658;&#xC601;&#xD569;&#xB2C8;&#xB2E4;. - seokjoon.yun@gmail.com &#xCC38;&#xACE0; AWS &#xACF5;&#xC2DD; &#xAC00;&#xC774;&#xB4DC; : http://docs.aws.amazon.com/lambda/latest/dg/python-programming-model-handler-types.html &#xB2E4;&#xC74C;&#xAE00; Lambda Python Packaging","categories":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/categories/AWS/"},{"name":"Lambda","slug":"AWS/Lambda","permalink":"http://DevStarSJ.github.io/categories/AWS/Lambda/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/tags/AWS/"},{"name":"Lambda","slug":"Lambda","permalink":"http://DevStarSJ.github.io/tags/Lambda/"},{"name":"APIGateway","slug":"APIGateway","permalink":"http://DevStarSJ.github.io/tags/APIGateway/"},{"name":"Python","slug":"Python","permalink":"http://DevStarSJ.github.io/tags/Python/"}]},{"title":"AWS Lambda와 API Gateway를 이용해서 Serverless Web API 만들기 (3) - Proxy","slug":"Lambda+APIGateway.03.Proxy","date":"2016-11-22T07:54:51.000Z","updated":"2017-04-23T08:21:19.000Z","comments":true,"path":"2016/11/22/Lambda+APIGateway.03.Proxy/","link":"","permalink":"http://DevStarSJ.github.io/2016/11/22/Lambda+APIGateway.03.Proxy/","excerpt":"","text":"AWS Lambda&#xC640; API Gateway&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; Serverless Web API &#xB9CC;&#xB4E4;&#xAE30; (3) API Gateway Proxy Resource &#xD65C;&#xC6A9; API Gateway&#xC5D0;&#xC11C; &#xAC01;&#xAC01;&#xC758; route path(API Gateway&#xC5D0;&#xC11C;&#xB294; Resource&#xB85C; &#xBD88;&#xB9BC;) &#xBC0F; http-method(API Gateway&#xC5D0;&#xC11C;&#xB294; Method&#xB85C; &#xBD88;&#xB9BC;)&#xC5D0; &#xB300;&#xD574;&#xC11C; Lambda&#xB97C; &#xC124;&#xC815;&#xD558;&#xB294; &#xAC83;&#xC740; &#xC5EC;&#xAC04; &#xBC88;&#xAC70;&#xB7EC;&#xC6B4; &#xC791;&#xC5C5;&#xC774; &#xC544;&#xB2D9;&#xB2C8;&#xB2E4;. &#xADF8; &#xACBD;&#xC6B0;&#xC5D0; &#xB530;&#xB77C; &#xAC01;&#xAC01; &#xB2E4;&#xB978; Lambda&#xB85C; &#xC5F0;&#xACB0;&#xC774; &#xB418;&#xB294; &#xACBD;&#xC6B0;&#xB77C;&#xBA74; &#xB2F9;&#xC5F0;&#xD788; &#xB530;&#xB85C; &#xC124;&#xC815;&#xC744; &#xD574;&#xC57C;&#xD558;&#xC9C0;&#xB9CC;, &#xD558;&#xB098;&#xC758; Lambda&#xB85C; &#xC5F0;&#xACB0;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB77C;&#xBA74; &#xD544;&#xC694;&#xC5C6;&#xB294; &#xBC88;&#xAC70;&#xB85C;&#xC6B4; &#xC791;&#xC5C5;&#xC774; &#xB420; &#xC218;&#xB3C4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC55E; &#xC7A5;&#xC5D0;&#xC11C; http-method&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; ANY&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xAC19;&#xC740; Lambda&#xB85C; &#xBAA8;&#xB450; &#xC5F0;&#xACB0;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB3C4;&#xB85D; &#xC791;&#xC131;&#xD558;&#xC600;&#xB294;&#xB370;, &#xC774;&#xBC88; &#xC7A5;&#xC5D0;&#xC11C;&#xB294; Proxy Resource&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xBAA8;&#xB4E0; Resource &#xBC0F; Method&#xB97C; &#xAC19;&#xC740; Lambda&#xB85C; &#xC5F0;&#xACB0;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC775;&#xD600;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC804;&#xD3B8;&#xC758; &#xB0B4;&#xC6A9;&#xC744; &#xC548;&#xB2E4;&#xB294; &#xAC00;&#xC815;&#xD558;&#xC5D0; &#xC9C4;&#xD589;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xCC98;&#xC74C; &#xC774; &#xAE00;&#xBD80;&#xD130; &#xBCF4;&#xC2DC;&#xB294; &#xBD84;&#xB4E4;&#xC740; &#xC544;&#xB798; Link&#xC5D0;&#xC11C; &#xB0B4;&#xC6A9;&#xC744; &#xC219;&#xC9C0;&#xD55C; &#xD6C4;&#xC5D0; &#xC9C4;&#xD589;&#xD574; &#xC8FC;&#xC138;&#xC694;. Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #1 (GET, POST) : https://github.com/DevStarSJ/Study/blob/master/Blog/Cloud/AWS/Lambda%2BAPIGateWay.01.md Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #2 (ANY, Deploy Staging, Node.JS Route) : https://github.com/DevStarSJ/Study/blob/master/Blog/Cloud/AWS/Lambda%2BAPIGateway.02.Route.md API Gateway &#xC5D0; Proxy Resource &#xB4F1;&#xB85D; &#xBA3C;&#xC800; API Gateway&#xC5D0; &#xB4F1;&#xB85D;&#xB41C; &#xBAA8;&#xB4E0; Resource &#xBC0F; Method&#xB97C; &#xC0AD;&#xC81C;&#xD55C; &#xB4A4; &#xB2E4;&#xC74C; &#xB2E8;&#xACC4;&#xB85C; &#xC9C4;&#xD589;&#xD574;&#xC8FC;&#xC138;&#xC694;. /&#xC5D0;&#xC11C; Actions -&gt; Create Resource&#xB97C; &#xC120;&#xD0DD; Configure as proxy resource &#xB97C; &#xCCB4;&#xD06C;&#xD55C; &#xD6C4; Create Resource&#xB97C; &#xB204;&#xB984; &#xADF8;&#xB7FC; &#xB2E4;&#xC74C; &#xADF8;&#xB9BC;&#xACFC; &#xAC19;&#xC774; &#xC124;&#xC815; &#xB429;&#xB2C8;&#xB2E4;. ANY &#xC120;&#xD0DD; Integration Request &#xC120;&#xD0DD; Integration type : Lambda Function Lambda Region : &#xB78C;&#xB2E4;&#xB97C; &#xC0DD;&#xC131;&#xD55C; &#xC9C0;&#xC5ED; &#xC11C;&#xBC84; &#xC120;&#xD0DD; Lambda Function : &#xB78C;&#xB2E4; &#xBA85;&#xCE6D; &#xAE30;&#xC785; &#xBAA8;&#xB4E0; &#xC124;&#xC815;&#xC774; &#xB05D;&#xB0AC;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC55E;&#xC5D0;&#xC11C; &#xD574;&#xC654;&#xB358; &#xC124;&#xC815; &#xC911; mapping template&#xB97C; &#xC124;&#xC815;&#xD558;&#xC9C0; &#xC54A;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xC124;&#xC815;&#xC744; &#xD558;&#xB294; &#xACF3;&#xC744; &#xCC3E;&#xC9C0; &#xBABB;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xAC8C; &#xC5C6;&#xC73C;&#xBA74; &#xC694;&#xCCAD;&#xC774; &#xC5B4;&#xB5A4; &#xBAA8;&#xC591;&#xC73C;&#xB85C; &#xC624;&#xB294;&#xC9C0; &#xC54C;&#xAE30; &#xD798;&#xB4E0;&#xB370;&#x2026; &#xADF8;&#xB0E5; Lambda&#xC5D0;&#xC11C; &#xCD9C;&#xB825;&#xD574; &#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. API Gateway&#xB97C; &#xC218;&#xC815;&#xD588;&#xC73C;&#xBA74; ??? &#xC78A;&#xC9C0;&#xB9D0;&#xACE0; Deploy&#xB97C; &#xD574;&#xC918;&#xC57C; &#xC801;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;. Actions -&gt; Deploy API &#xC120;&#xD0DD; &#xD6C4; &#xADF8;&#xB0E5; prod&#xB85C; &#xC2A4;&#xD14C;&#xC774;&#xC9D5; Lambda&#xC5D0;&#xC11C; &#xC694;&#xCCAD;&#xC744; &#xADF8;&#xB300;&#xB85C; &#xCD9C;&#xB825; 2&#xD3B8;&#xC5D0;&#xC11C; &#xC791;&#xC131;&#xD55C; &#xCF54;&#xB4DC;&#xB97C; &#xADF8;&#xB300;&#xB85C; &#xB450;&#xACE0; &#xC6B0;&#xC120; &#xC2E4;&#xD589;&#xD574;&#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. API Gateway&#xC758; Invoke URL&#xC744; &#xADF8;&#xB300;&#xB85C; &#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xC5D0;&#xC11C; &#xC785;&#xB825;&#xD558;&#xB2C8; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. 1{&quot;message&quot;:&quot;Missing Authentication Token&quot;} &#xC5B4;&#xB77C;&#x2026; &#xC548;&#xB418;&#xB124;&#xC694;. &#xB2E4;&#xB978; &#xBD84;&#xC5D0;&#xAC8C; &#xB3C4;&#xC6C0;&#xC744; &#xC694;&#xCCAD;&#xD558;&#xC600;&#xB354;&#xB2C8;, body&#xC5D0; JSON &#xD615;&#xC2DD;&#xC758; string&#xC744; &#xB2F4;&#xC544;&#xC11C; &#xC751;&#xB2F5;&#xC744; &#xBCF4;&#xB0B4;&#xC57C; &#xD55C;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;. &#xB124;. &#xADF8;&#xB807;&#xB2F5;&#xB2C8;&#xB2E4;&#x2026; http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-set-up-simple-proxy.html &#xC704; &#xACF5;&#xC2DD;&#xBB38;&#xC11C;&#xC5D0; &#xAC00;&#xBA74; &#xC790;&#xC138;&#xD55C; &#xB0B4;&#xC6A9;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; hander&#xB97C; &#xC218;&#xC815; &#xD6C4; &#xC2E4;&#xD589;&#xD574; &#xBCF4;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;. 12345exports.handler = (event, context, callback) =&gt; { let result = router(event, context); //let result = {&quot;event&quot; : event, &quot;context&quot; : context} callback(null, {body:JSON.stringify(result)});} &#xACB0;&#xACFC;&#xB294; &#xB611;&#xAC19;&#xC774; &#xC548;&#xB429;&#xB2C8;&#xB2E4;. ;;; &#xC74C;&#x2026; &#xADF8;&#xB0E5; &#xC694;&#xCCAD;&#xC744; &#xADF8;&#xB300;&#xB85C; &#xCD9C;&#xB825;&#xD574; &#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 12345exports.handler = (event, context, callback) =&gt; { //let result = router(event, context); let result = {&quot;event&quot; : event, &quot;context&quot; : context} callback(null, {body:JSON.stringify(result)});} &#xC65C; &#xC548;&#xB420;&#xAE4C; &#xC0DD;&#xAC01;&#xC744; &#xD574;&#xBCF4;&#xB2C8;&#x2026; API Gateway&#xC0C1;&#xC5D0; &#xC124;&#xC815;&#xC744; &#xBCF4;&#xBA74; /&#xC5D0;&#xB294; &#xC544;&#xBB34;&#xB7F0; method&#xAC00; &#xCD94;&#xAC00;&#xB418;&#xC5B4; &#xC788;&#xC9C0; &#xC54A;&#xACE0; /{proxy+}&#xC5D0; ANY&#xAC00; &#xB4F1;&#xB85D;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. Invoke URL&#xC5D0; &#xBB50;&#xB77C;&#xB3C4; &#xB354; &#xBD99;&#xC5EC;&#xC11C; &#xBCF4;&#xB0B4;&#xB2C8;&#xAE50; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xB3D9;&#xC791;&#xD569;&#xB2C8;&#xB2E4;. 1https://..../prod/test &#xBB54;&#xAC00; &#xB2F5;&#xBCC0;&#xC774; &#xB098;&#xC635;&#xB2C8;&#xB2E4;. &#xC880; &#xB354; &#xB2E4;&#xC591;&#xD55C; &#xC815;&#xBCF4;&#xB97C; &#xBCF4;&#xAE30; &#xC704;&#xD574;&#xC11C; &#xCFFC;&#xB9AC;&#xC2A4;&#xD2B8;&#xB9C1;&#xB3C4; &#xD3EC;&#xD568;&#xD558;&#xC5EC; &#xBCF4;&#xB0B8; &#xB2E4;&#xC74C; JSON&#xC744; &#xC0B4;&#xD3B4;&#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 1https://..../prod/test?id=123;name=Luna 123456789101112131415161718192021222324252627282930{ &quot;event&quot;: { &quot;resource&quot;: &quot;/{proxy+}&quot;, &quot;path&quot;: &quot;/test&quot;, &quot;httpMethod&quot;: &quot;GET&quot;, &quot;headers&quot;: { ... &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36&quot;, }, &quot;queryStringParameters&quot;: { &quot;name&quot;: &quot;Luna&quot;, &quot;id&quot;: &quot;123&quot; }, &quot;pathParameters&quot;: { &quot;proxy&quot;: &quot;test&quot; }, &quot;stageVariables&quot;: null, &quot;requestContext&quot;: { ... }, &quot;resourcePath&quot;: &quot;/{proxy+}&quot;, &quot;httpMethod&quot;: &quot;GET&quot;, }, &quot;body&quot;: null, &quot;isBase64Encoded&quot;: false }, &quot;context&quot;: { ... }} 2&#xC7A5; &#xB77C;&#xC6B0;&#xD305;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD55C; &#xBCC0;&#xC218;&#xB4E4;&#xC758; &#xC774;&#xB984;&#xC774; &#xBC14;&#xB00C;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC704; &#xBAA8;&#xC591;&#xC744; &#xBCF4;&#xACE0; &#xADF8;&#xB300;&#xB85C; &#xC218;&#xC815;&#xC744; &#xD574;&#xC8FC;&#xBA74; &#xB418;&#xACA0;&#xB124;&#xC694;. POST&#xB85C; body&#xAC12;&#xC744; &#xCD94;&#xAC00;&#xD558;&#xC5EC; &#xBCF4;&#xB0B4;&#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 12345678910111213141516171819{ &quot;event&quot;: { &quot;resource&quot;: &quot;/{proxy+}&quot;, &quot;path&quot;: &quot;/test&quot;, &quot;httpMethod&quot;: &quot;POST&quot;, ... &quot;queryStringParameters&quot;: { &quot;name&quot;: &quot;Luna&quot;, &quot;id&quot;: &quot;123&quot; }, &quot;pathParameters&quot;: { &quot;proxy&quot;: &quot;test&quot; }, ... &quot;body&quot;: &quot;{\\n \\&quot;id\\&quot;: \\&quot;123\\&quot;,\\n \\&quot;age\\&quot;: \\&quot;25\\&quot;\\n}&quot;, ... } ...} Lambda &#xCF54;&#xB4DC; &#xC218;&#xC815; &#xC704; &#xACB0;&#xACFC;&#xB97C; &#xBCF4;&#xACE0; 2&#xC7A5;&#xACFC; &#xB611;&#xAC19;&#xC740; &#xAE30;&#xB2A5;&#xC744; &#xD558;&#xB3C4;&#xB85D; Lambda &#xCABD;&#xC758; Node.JS&#xCF54;&#xB4DC;&#xB97C; &#xC218;&#xC815;&#xD558;&#xB824;&#xACE0; &#xC0DD;&#xAC01;&#xD574;&#xBCF4;&#xB2C8; /test/{userId}&#xC640; &#xAC19;&#xC774; path parameter&#xB97C; &#xAC10;&#xC548;&#xD558;&#xC5EC; path&#xB97C; &#xC0DD;&#xC131;&#xD574;&#xC8FC;&#xC9C0; &#xC54A;&#xC73C;&#xBBC0;&#xB85C; &#xADF8;&#xB300;&#xB85C;&#xB294; &#xC0AC;&#xC6A9;&#xC744; &#xBABB;&#xD558;&#xACA0;&#xACE0; &#xB2E4;&#xB974;&#xAC8C; &#xCC98;&#xB9AC;&#xB97C; &#xD574;&#xC918;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. path parameter&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xACE0; query string&#xC744; &#xC774;&#xC6A9;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xB3C4; &#xC788;&#xACA0;&#xAD6C;&#xC694;. &#xC544;&#xB2C8;&#xBA74; &#xD574;&#xB2F9; &#xD328;&#xD134;&#xC774; &#xB418;&#xB3C4;&#xB85D; &#xBE44;&#xAD50;&#xBB38;&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xB77C;&#xC6B0;&#xD305;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xD3B8;&#xC758;&#xC0C1; query string&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xB3C4;&#xB85D; &#xC218;&#xC815;&#xD558;&#xC600;&#xC73C;&#xBA70; /&#xB85C; &#xC811;&#xADFC;&#xD558;&#xB358; &#xBD80;&#xBD84;&#xC740; &#xC0AD;&#xC81C;&#xD558;&#xC600;&#xC2B5;&#xB2C8;&#xB2E4;. &#xCF54;&#xB4DC;&#xC5D0; &#xB300;&#xD55C; &#xC790;&#xC138;&#xD55C; &#xC124;&#xBA85;&#xC740; 2&#xC7A5; &#xD3EC;&#xC2A4;&#xD305;&#xC744; &#xCC38;&#xC870;&#xD574; &#xC8FC;&#xC138;&#xC694;. 123456789101112131415161718192021222324252627282930313233343536373839404142434445&apos;use strict&apos;;function get(userId) { return { body: { id: userId, name: &quot;test&quot; } };}function post(userId, header, body) { return { body: { id: userId, header: header, body: body } };}const routeMap = { &apos;/test&apos;: { &apos;GET&apos;: (event, context) =&gt; { const userId = event.queryStringParameters.id; return get(userId); }, &apos;POST&apos;: (event, context) =&gt; { const userId = event.queryStringParameters.id; const body = JSON.stringify(event.body); const header = event.headers; return post(userId, header, body); } }};function router(event, context) { const controller = routeMap[event.path][event.httpMethod]; if(!controller) { return { body: { Error: &quot;Invalid Path&quot; } }; } return controller(event, context);}exports.handler = (event, context, callback) =&gt; { let result = router(event, context); callback(null, {body:JSON.stringify(result)});} &#xACB0;&#xACFC; &#xD655;&#xC778; GET &#xC694;&#xCCAD; : https://.../prod/test?id=2 1{&quot;body&quot;:{&quot;id&quot;:&quot;2&quot;,&quot;name&quot;:&quot;test&quot;}} POST &#xC694;&#xCCAD; : URL&#xC740; GET&#xACFC; &#xB3D9;&#xC77C; 123456789{ &quot;body&quot;: { &quot;id&quot;: &quot;2&quot;, &quot;header&quot;: { ... }, &quot;body&quot;: &quot;\\&quot;{\\\\n \\&quot;id\\&quot;: \\&quot;123\\&quot;,\\\\n \\&quot;age\\&quot;: \\&quot;25\\&quot;\\\\n}\\&quot;&quot; }} &#xB9C8;&#xCE58;&#xBA70;&#x2026; &#xC774;&#xBC88; &#xD3EC;&#xC2A4;&#xD305;&#xC5D0;&#xC11C; &#xC54C;&#xC544;&#xBCF8; &#xB0B4;&#xC6A9;&#xB4E4;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. API Gateway&#xC5D0;&#xC11C; {proxy+}&#xB97C; &#xC5EC;&#xB7EC;&#xAC00;&#xC9C0; path&#xC640; http-method &#xC694;&#xCCAD;&#xC744; &#xD558;&#xB098;&#xC758; Lambda&#xB85C; &#xC694;&#xCCAD;&#xD558;&#xB294; &#xBC29;&#xBC95; {proxy+}&#xB85C; &#xC811;&#xADFC;&#xD560; &#xACBD;&#xC6B0; Lambda&#xC5D0;&#xC11C; &#xD544;&#xC694;&#xD55C; &#xC694;&#xCCAD;&#xAC12;&#xB4E4;&#xC758; &#xBCC0;&#xC218;&#xBA85; &#xC798;&#xBABB;&#xB418;&#xC5C8;&#xAC70;&#xB098;, &#xBCC0;&#xACBD;&#xB41C; &#xC810;, &#xAE30;&#xD0C0; &#xCD94;&#xAC00; &#xC0AC;&#xD56D;&#xC5D0; &#xB300;&#xD55C; &#xD53C;&#xB4DC;&#xBC31;&#xC740; &#xC5B8;&#xC81C;&#xB098; &#xD658;&#xC601;&#xD569;&#xB2C8;&#xB2E4;. - seokjoon.yun@gmail.com &#xB2E4;&#xC74C;&#xAE00; Lambda Node.JS Packaging : https://github.com/DevStarSJ/Study/blob/master/Blog/Cloud/AWS/Lambda.Packaging.Node.md","categories":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/categories/AWS/"},{"name":"Lambda","slug":"AWS/Lambda","permalink":"http://DevStarSJ.github.io/categories/AWS/Lambda/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/tags/AWS/"},{"name":"Lambda","slug":"Lambda","permalink":"http://DevStarSJ.github.io/tags/Lambda/"},{"name":"APIGateway","slug":"APIGateway","permalink":"http://DevStarSJ.github.io/tags/APIGateway/"},{"name":"Node.JS","slug":"Node-JS","permalink":"http://DevStarSJ.github.io/tags/Node-JS/"}]},{"title":"AWS Lambda와 API Gateway를 이용해서 Serverless Web API 만들기 (2) - Route","slug":"Lambda+APIGateway.02.Route","date":"2016-11-22T06:54:51.000Z","updated":"2017-04-23T08:21:19.000Z","comments":true,"path":"2016/11/22/Lambda+APIGateway.02.Route/","link":"","permalink":"http://DevStarSJ.github.io/2016/11/22/Lambda+APIGateway.02.Route/","excerpt":"","text":"AWS Lambda&#xC640; API Gateway&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; Serverless Web API &#xB9CC;&#xB4E4;&#xAE30; (2) Routing &#xC608;&#xC81C; Web API&#xB97C; &#xAD6C;&#xD604;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; &#xC5EC;&#xB7EC;&#xAC00;&#xC9C0; URL&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xAC01;&#xAC01; &#xB2E4;&#xB978; &#xAE30;&#xB2A5;&#xC744; &#xAD6C;&#xD604;&#xD558;&#xB294;&#xAC83;&#xC740; &#xD544;&#xC218;&#xC801;&#xC785;&#xB2C8;&#xB2E4;. &#xAC01;&#xAC01;&#xC758; URL&#xC744; &#xBCC4;&#xB3C4;&#xC758; Lambda&#xB85C; &#xAD6C;&#xD604;&#xD558;&#xC5EC; API Gateway&#xC5D0;&#xC11C; &#xC5F0;&#xACB0;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xB3C4; &#xC788;&#xC9C0;&#xB9CC; &#xD558;&#xB098;&#xC758; Lambda&#xC5D0;&#xC11C; &#xCC98;&#xB9AC;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC54C;&#xC544; &#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xBC88;&#xC5D0;&#xB294; &#xC804;&#xD3B8;&#xACFC;&#xB294; &#xB2E4;&#xB974;&#xAC8C; &#xC57D;&#xAC04;&#xC758; &#xC124;&#xBA85;&#xC744; &#xD558;&#xBA74;&#xC11C; &#xC9C4;&#xD589;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC804;&#xD3B8;&#xC758; &#xB0B4;&#xC6A9;&#xC744; &#xC548;&#xB2E4;&#xB294; &#xAC00;&#xC815;&#xD558;&#xC5D0; &#xC9C4;&#xD589;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xCC98;&#xC74C; &#xC774; &#xAE00;&#xBD80;&#xD130; &#xBCF4;&#xC2DC;&#xB294; &#xBD84;&#xB4E4;&#xC740; &#xC544;&#xB798; Link&#xC5D0;&#xC11C; &#xB0B4;&#xC6A9;&#xC744; &#xC219;&#xC9C0;&#xD55C; &#xD6C4;&#xC5D0; &#xC9C4;&#xD589;&#xD574; &#xC8FC;&#xC138;&#xC694;. https://github.com/DevStarSJ/Study/blob/master/Blog/Cloud/AWS/Lambda%2BAPIGateWay.01.md API Gateway &#xC124;&#xC815; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; API Gateway&#xB97C; &#xC124;&#xC815;&#xD574; &#xC8FC;&#xC138;&#xC694;. 1&#xD3B8;&#xC5D0;&#xC11C; &#xC124;&#xC815;&#xD55C; Path&#xB97C; &#xADF8;&#xB300;&#xB85C; &#xB450;&#xC154;&#xB3C4; &#xB418;&#xC9C0;&#xB9CC;, ANY &#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC5F0;&#xC2B5;&#xD560;&#xACB8; &#xBAA8;&#xB4E0; Resource, Method&#xB97C; &#xC0AD;&#xC81C;&#xD55C; &#xD6C4; &#xB2E4;&#xC74C; &#xB2E8;&#xACC4;&#xB300;&#xB85C; &#xCD94;&#xAC00;&#xD574; &#xC8FC;&#xC138;&#xC694;. ANY&#xB294; &#xBAA8;&#xB4E0; http-method (GET, POST, PUT, DELETE, &#x2026;) &#xB97C; &#xBAA8;&#xB450; &#xAC19;&#xC740; Lambda&#xB85C; &#xC5F0;&#xACB0;&#xD558;&#xAC8C; &#xD574;&#xC8FC;&#xB294; &#xC5ED;&#xD560;&#xC744; &#xD569;&#xB2C8;&#xB2E4;. ANY&#xC640; &#xAC19;&#xC740; &#xC704;&#xCE58;&#xC5D0; &#xB2E4;&#xB978; method&#xB97C; &#xCD94;&#xAC00;&#xD558;&#xBA74; &#xADF8;&#xAC83;&#xC744; &#xC81C;&#xC678;&#xD55C; &#xB098;&#xBA38;&#xC9C0;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB9CC; ANY&#xB85C; &#xC5F0;&#xACB0;&#xD569;&#xB2C8;&#xB2E4;. (ex. ANY, GET&#xC744; &#xAC19;&#xC740; &#xC704;&#xCE58;&#xC5D0; &#xC120;&#xC5B8;&#xD558;&#xBA74; GET&#xC744; &#xC81C;&#xC678;&#xD55C; &#xB098;&#xBA38;&#xC9C0; &#xC5F0;&#xACB0;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; ANY&#xAC00; &#xCC98;&#xB9AC;) /&#xC5D0;&#xC11C; Actions -&gt; Create Method&#xB97C; &#xB20C;&#xB7EC;&#xC11C; ANY&#xB97C; &#xC0DD;&#xC131; /&#xC5D0;&#xC11C; Actions -&gt; Create Resource&#xB97C; &#xB20C;&#xB7EC;&#xC11C; test&#xB97C; &#xCD94;&#xAC00; /test&#xC5D0;&#xC11C; Actions -&gt; Create Resource&#xB97C; &#xB20C;&#xB7EC;&#xC11C; {userId}&#xB97C; &#xCD94;&#xAC00; /{userId}&#xC5D0;&#xC11C; Actions -&gt; Create Method&#xB97C; &#xB20C;&#xB7EC;&#xC11C; ANY&#xB97C; &#xC0DD;&#xC131; &#xC704;&#xAE4C;&#xC9C0; &#xD55C; &#xB2E4;&#xC74C;&#xC5D0; ANY&#xB85C; &#xB41C; 2 &#xACF3;&#xC744; &#xAC01;&#xAC01; &#xB20C;&#xB7EC;&#xC11C; Integration type : Lambda Function Lambda Region : &#xB78C;&#xB2E4;&#xB97C; &#xC0DD;&#xC131;&#xD55C; &#xC9C0;&#xC5ED; &#xC11C;&#xBC84; &#xC120;&#xD0DD; Lambda Function : &#xB78C;&#xB2E4; &#xBA85;&#xCE6D; &#xAE30;&#xC785; Save&#xB97C; &#xB204;&#xB978; &#xB4A4; &#xD654;&#xBA74;&#xC774; &#xBC14;&#xB00C;&#xBA74; Integration Request &#xC120;&#xD0DD; Body Mapping Templates &#xC120;&#xD0DD; Add mapping template &#xC120;&#xD0DD; application/json&#xC774;&#xB77C;&#xACE0; &#xC785;&#xB825;&#xD55C; &#xB4A4; &#xC801;&#xC6A9; Generate template : Method Request passthrough &#xC120;&#xD0DD; Save &#xC120;&#xD0DD; API Gateway&#xB294; &#xC218;&#xC815;&#xD55C; &#xD6C4; &#xBC18;&#xB4DC;&#xC2DC; Deploy&#xB97C; &#xD574;&#xC8FC;&#xC5B4;&#xC57C;&#xB9CC; &#xC801;&#xC6A9;&#xC774; &#xB429;&#xB2C8;&#xB2E4;. Actions -&gt; Deploy API&#xB97C; &#xC120;&#xD0DD;&#xD558;&#xBA74; Deployment stage&#xB97C; &#xC785;&#xB825;&#xD558;&#xC5EC;&#xC57C;&#xD558;&#xB294;&#xB370; &#xAE30;&#xC874;&#xC5D0; &#xB3D9;&#xC77C;&#xD55C; &#xC774;&#xB984;&#xC73C;&#xB85C; &#xD558;&#xBA74; &#xD574;&#xB2F9; &#xC124;&#xC815;&#xC744; &#xB36E;&#xC5B4;&#xC4F0;&#xAC8C; &#xB418;&#xBA70;, [New Stage]&#xB97C; &#xC120;&#xD0DD;&#xD55C; &#xD6C4; &#xB2E4;&#xB978; &#xC774;&#xB984;&#xC744; &#xC785;&#xB825;&#xD558;&#xBA74; &#xAE30;&#xC874;&#xC758; &#xC124;&#xC815;&#xC0C1;&#xD0DC;&#xB97C; &#xB0A8;&#xACA8;&#xB454;&#xCCB4; &#xC0C8;&#xB85C;&#xC6B4; &#xC774;&#xB984;&#xC73C;&#xB85C; &#xC0DD;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC55E;&#xC5D0;&#xC11C;&#xC758; &#xC608;&#xC81C;&#xC5D0;&#xC11C; prod&#xB85C; &#xC0DD;&#xC131;&#xC744; &#xD558;&#xC600;&#xB294;&#xB370; &#xC774;&#xBC88;&#xC5D0;&#xB294; test&#xB85C; &#xC0DD;&#xC131;&#xD574; &#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. [New Stage]&#xB97C; &#xC120;&#xD0DD;&#xD55C; &#xD6C4; test&#xB97C; &#xC785;&#xB825;&#xD558;&#xACE0; Deploy &#xBC84;&#xD2BC;&#xC744; &#xB204;&#xB985;&#xB2C8;&#xB2E4;. Invoke URL&#xC5D0; &#xC5F0;&#xACB0;&#xAC00;&#xB2A5;&#xD55C; &#xC8FC;&#xC18C;&#xAC00; &#xB098;&#xC624;&#xB294;&#xB370;, &#xAE30;&#xC874;&#xACFC; &#xB2EC;&#xB77C;&#xC9C4; &#xC810;&#xC774; &#xB9C8;&#xC9C0;&#xB9C9;&#xC5D0; /prod &#xB300;&#xC2E0;&#xC5D0; /test&#xAC00; &#xBD99;&#xC5C8;&#xB2E4;&#xB294;&#xAC83; &#xBC16;&#xC5D0; &#xC5C6;&#xC2B5;&#xB2C8;&#xB2E4;. &#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xC5D0;&#xC11C; &#xD574;&#xB2F9; &#xC8FC;&#xC18C;&#xB85C; &#xC811;&#xC18D;&#xC744; &#xD558;&#xBA74; 2&#xAC00;&#xC9C0; &#xC8FC;&#xC18C;&#xAC00; &#xB2E4; &#xB3D9;&#xC791;&#xD55C;&#xB2E4;&#xB294; &#xAC83;&#xC774; &#xD655;&#xC778;&#xB429;&#xB2C8;&#xB2E4;. API Gateway &#xC0C1;&#xC5D0;&#xC11C;&#xB3C4; Stages &#xBA54;&#xB274;&#xB85C; &#xB4E4;&#xC5B4;&#xAC00;&#xC11C; &#xAC01;&#xAC01;&#xC758; &#xC2A4;&#xD14C;&#xC774;&#xC9D5; &#xBA85;&#xCE6D;&#xC744; &#xB204;&#xB974;&#xBA74; &#xC124;&#xC815;&#xB41C; &#xB0B4;&#xC6A9;&#xB4E4;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. Lambda &#xC758; Node.JS &#xCF54;&#xB4DC; &#xC218;&#xC815; API Gateway&#xC5D0;&#xC11C; &#xC5EC;&#xB7EC; &#xACBD;&#xB85C;&#xB85C; &#xB4E4;&#xC5B4;&#xC624;&#xBA74; &#xC694;&#xCCAD;&#xB4E4;&#xC744; &#xBAA8;&#xB450; &#xD558;&#xB098;&#xC758; Lambda&#xB85C; &#xC5F0;&#xACB0;&#xD558;&#xC600;&#xC73C;&#xB2C8;, &#xC774;&#xC820; Lambda &#xC0C1;&#xC5D0;&#xC11C; &#xC5EC;&#xB7EC; &#xACBD;&#xB85C;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xAC01;&#xAC01; &#xB2E4;&#xB978; &#xAE30;&#xB2A5;&#xC744; &#xD558;&#xB3C4;&#xB85D; &#xAD6C;&#xD604;&#xD574;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xAC00;&#xC7A5; &#xC911;&#xC694;&#xD55C; &#xAC83;&#xC774; &#xC5B4;&#xB5A4; &#xACBD;&#xB85C;(resource-path)&#xB85C; &#xB4E4;&#xC5B4;&#xC654;&#xB294;&#xC9C0; &#xC5B4;&#xB5A4; &#xBA54;&#xC11C;&#xB4DC;(http-method)&#xB85C; &#xC694;&#xCCAD;&#xD588;&#xB294;&#xC9C0;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC54C;&#xC544;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. JSON object&#xB85C; &#xC804;&#xB2EC;&#xB41C; event &#xC548;&#xC5D0; 2&#xAC00;&#xC9C0; &#xC815;&#xBCF4;&#xAC00; &#xBAA8;&#xB450; &#xC788;&#xB294;&#xB370; &#xAC01;&#xAC01;&#xC758; &#xC704;&#xCE58;&#xAC00; event.context.resource-path &#xC640; event.context.http-method&#xC5D0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7F0;&#xB370; -(dash)&#xAC00; &#xD3EC;&#xD568;&#xB41C; &#xBA85;&#xCE6D;&#xC774; &#xC788;&#xC5B4;&#xC11C; .(dot)&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xC77D;&#xC73C;&#xB824;&#xBA74; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xBBC0;&#xB85C; event.context[&quot;resource-path&quot;] , event.context[&quot;http-method&quot;] &#xC2DD;&#xC73C;&#xB85C; &#xC811;&#xADFC;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. API Gateway&#xC5D0;&#xC11C;&#xC758; template&#xC5D0;&#xC11C; -(dash)&#xAC00; &#xC5C6;&#xB294; &#xBA85;&#xCE6D;&#xC73C;&#xB85C; &#xC218;&#xC815;&#xD55C; &#xB4A4; .(dot)&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xC77D;&#xC5B4;&#xB3C4; &#xB429;&#xB2C8;&#xB2E4;&#xB9CC; &#xC77C;&#xB2E8; &#xC5EC;&#xAE30;&#xC11C;&#xB294; &#xAE30;&#xBCF8;&#xC124;&#xC815; &#xADF8;&#xB300;&#xB85C; &#xC9C4;&#xD589;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 3&#xAC00;&#xC9C0; &#xACBD;&#xB85C;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xAC01;&#xAC01; &#xAE30;&#xB2A5;&#xC744; &#xAD6C;&#xD604;&#xD574;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. /&#xB85C; GET &#xC694;&#xCCAD; : &#xC694;&#xCCAD;&#xD55C; JSON Object&#xB97C; &#xADF8;&#xB300;&#xB85C; &#xC751;&#xB2F5; /test/{userId}&#xB85C; GET &#xC694;&#xCCAD; : { id: userId, name: &#x201C;test&#x201D; }&#xB85C; &#xC751;&#xB2F5; /test/{userId}&#xB85C; POST &#xC694;&#xCCAD; : { id: userId, header: header, body: body }&#xB85C; &#xC751;&#xB2F5; &#xBA3C;&#xC800; &#xC704; 3&#xAC00;&#xC9C0; &#xAE30;&#xB2A5;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xAC01;&#xAC01; &#xAD6C;&#xD604;&#xC744; &#xD574;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. /&#xB85C; GET &#xC694;&#xCCAD;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xC55E; &#xC7A5;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD588;&#xB358; &#xCF54;&#xB4DC; &#xADF8;&#xB300;&#xB85C; &#xC804;&#xB2EC;&#xC744; &#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 1return {&quot;event&quot; : event, &quot;context&quot; : context}; /test/{userId}&#xB85C; GET, POST &#xC694;&#xCCAD;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xAC01;&#xAC01; get, post&#xB77C;&#xB294; &#xC774;&#xB984;&#xC758; &#xD568;&#xC218;&#xB85C; &#xC0DD;&#xC131;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 1234567891011function get(userId) { return { body: { id: userId, name: &quot;test&quot; } };}function post(userId, header, body) { return { body: { id: userId, header: header, body: body } };} &#xB2E4;&#xC74C; &#xC21C;&#xC11C;&#xB85C; &#xC704; 3&#xAC00;&#xC9C0; &#xAE30;&#xB2A5;&#xC744; &#xB2F4;&#xC740; Map&#xC744; &#xC0DD;&#xC131;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. JavaScript&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xADF8;&#xB0E5; &#xAC04;&#xB2E8;&#xD558;&#xAC8C; JSON Object&#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xC0DD;&#xC131;&#xC744; &#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. event.context[&quot;resource-path&quot;] -&gt; event.context[&quot;http-method&quot;] -&gt; &#xAC01;&#xAC01;&#xC758; &#xAE30;&#xB2A5; &#xC21C;&#xC11C;&#xB300;&#xB85C; &#xC811;&#xADFC;&#xD558;&#xBA74; &#xB418;&#xB3C4;&#xB85D; &#xC0DD;&#xC131;&#xD558;&#xC600;&#xC2B5;&#xB2C8;&#xB2E4;. 1234567891011121314151617181920const routeMap = { &apos;/&apos;: { &apos;GET&apos;: (event, context) =&gt; { let result = {&quot;event&quot; : event, &quot;context&quot; : context} return result; } }, &apos;/test/{userId}&apos;: { &apos;GET&apos;: (event, context) =&gt; { const userId = event.params.path.userId; return get(userId); }, &apos;POST&apos;: (event, context) =&gt; { const userId = event.params.path.userId; const body = JSON.stringify(event[&quot;body-json&quot;]); const header = event.params.header; return post(userId, header, body); } }}; &#xC774;&#xC81C; &#xC2E4;&#xC9C8;&#xC801;&#xC73C;&#xB85C; Router&#xAE30;&#xB2A5;&#xC744; &#xC218;&#xD589;&#xD558;&#xB294; &#xD568;&#xC218;&#xB97C; &#xC0DD;&#xC131;&#xD574; &#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. event&#xC640; context&#xB97C; &#xC804;&#xB2EC;&#xBC1B;&#xC544; routeMap&#xC5D0;&#xC11C; &#xD574;&#xB2F9; &#xAE30;&#xB2A5;&#xB4E4;&#xC744; &#xC218;&#xD589;&#xD558;&#xACE0; &#xADF8; &#xACB0;&#xACFC;&#xB97C; &#xB2E4;&#xC2DC; &#xC804;&#xB2EC;&#xD558;&#xB294;&#xAC8C; &#xC774; &#xD568;&#xC218; &#xAE30;&#xB2A5;&#xC758; &#xC804;&#xBD80;&#xC785;&#xB2C8;&#xB2E4;. 1234567891011function router(event, context) { const controller = routeMap[event.context[&quot;resource-path&quot;]][event.context[&quot;http-method&quot;]]; if(!controller) { return { body: { Error: &quot;Invalid Path&quot; } }; } return controller(event, context);} &#xC774;&#xC81C; &#xBAA8;&#xB4E0; &#xAE30;&#xB2A5; &#xAD6C;&#xD604;&#xC740; &#xB05D;&#xB0AC;&#xC2B5;&#xB2C8;&#xB2E4;. Lambda&#xC758; &#xC9C4;&#xC785;&#xC810;&#xC778; exports.handler&#xC5D0;&#xC11C; router &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD574;&#xC8FC;&#xAE30;&#xB9CC; &#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 1234exports.handler = (event, context, callback) =&gt; { let result = router(event, context); callback(null, result);} &#xC804;&#xCCB4; &#xCF54;&#xB4DC; &#xC55E;&#xC5D0; &#xC124;&#xBA85;&#xD55C; &#xB0B4;&#xC6A9;&#xB4E4;&#xC744; &#xC2E4;&#xC81C; &#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xB85C; &#xC791;&#xC131;&#xD558;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xB429;&#xB2C8;&#xB2E4;. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051&apos;use strict&apos;;function get(userId) { return { body: { id: userId, name: &quot;test&quot; } };}function post(userId, header, body) { return { body: { id: userId, header: header, body: body } };}const routeMap = { &apos;/&apos;: { &apos;GET&apos;: (event, context) =&gt; { let result = {&quot;event&quot; : event, &quot;context&quot; : context} return result; } }, &apos;/test/{userId}&apos;: { &apos;GET&apos;: (event, context) =&gt; { const userId = event.params.path.userId; return get(userId); }, &apos;POST&apos;: (event, context) =&gt; { const userId = event.params.path.userId; const body = JSON.stringify(event[&quot;body-json&quot;]); const header = event.params.header; return post(userId, header, body); } }};function router(event, context) { const controller = routeMap[event.context[&quot;resource-path&quot;]][event.context[&quot;http-method&quot;]]; if(!controller) { return { body: { Error: &quot;Invalid Path&quot; } }; } return controller(event, context);}exports.handler = (event, context, callback) =&gt; { let result = router(event, context); callback(null, result);} Lambda&#xC5D0; &#xC704; &#xCF54;&#xB4DC;&#xB97C; &#xC785;&#xB825;&#xD55C; &#xD6C4; &#xC800;&#xC7A5;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. &#xACB0;&#xACFC; &#xD655;&#xC778; API Gateway&#xC758; Invoke URL&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xD638;&#xCD9C;&#xD558;&#xC5EC; &#xADF8; &#xACB0;&#xACFC;&#xAC12;&#xC744; &#xD655;&#xC778;&#xD574; &#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. /&#xB85C; GET &#xC694;&#xCCAD; : Invoke URL &#xC744; &#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xC5D0; &#xC785;&#xB825; &#xC694;&#xCCAD; JSON&#xC744; &#xADF8;&#xB300;&#xB85C; &#xC751;&#xB2F5;&#xD55C; &#xAC83;&#xC73C;&#xB85C;, &#xC55E;&#xC7A5;&#xC5D0;&#xC11C; &#xC0B4;&#xD3B4;&#xBCF8; &#xC608;&#xC81C;&#xC758; &#xACB0;&#xACFC;&#xC640; &#xB3D9;&#xC77C;&#xD558;&#xAC8C; &#xB098;&#xC635;&#xB2C8;&#xB2E4;. /test/{userId}&#xB85C; GET &#xC694;&#xCCAD; : Invoke URL&#xC5D0; /test/LunaStar&#xB97C; &#xBD99;&#xC5EC;&#xC11C; &#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xC5D0; &#xC785;&#xB825; 123456{ &quot;body&quot;: { &quot;id&quot;: &quot;LunaStar&quot;, &quot;name&quot;: &quot;test&quot; }} /test/{userId}&#xB85C; POST &#xC694;&#xCCAD; : POSTMAN&#xC5D0;&#xC11C; Invoke URL&#xC5D0; /test/LunaStar&#xB97C; &#xBD99;&#xC774;&#xACE0; &#xC801;&#xB2F9;&#xD788; header, body&#xB97C; &#xC785;&#xB825;&#xD558;&#xC5EC; &#xC694;&#xCCAD; 123456789{ &quot;body&quot;: { &quot;id&quot;: &quot;LunaStar&quot;, &quot;header&quot;: { ... }, &quot;body&quot;: &quot;{\\&quot;id\\&quot;:\\&quot;123\\&quot;,\\&quot;age\\&quot;:\\&quot;25\\&quot;}&quot; }} &#xB9C8;&#xCE58;&#xBA70;&#x2026; &#xC774;&#xBC88; &#xD3EC;&#xC2A4;&#xD305;&#xC5D0;&#xC11C; &#xC54C;&#xC544;&#xBCF8; &#xB0B4;&#xC6A9;&#xB4E4;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. API Gateway&#xC5D0;&#xC11C; ANY&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xC5EC;&#xB7EC;&#xAC00;&#xC9C0; http-method &#xC694;&#xCCAD;&#xC744; &#xD558;&#xB098;&#xC758; Lambda&#xB85C; &#xC694;&#xCCAD;&#xD558;&#xB294; &#xBC29;&#xBC95; API Gateway&#xC5D0;&#xC11C; Staging&#xC744; &#xB098;&#xB204;&#xC5B4; Deploy&#xD558;&#xC5EC; &#xAC01;&#xAC01;&#xC758; Staging&#xC73C;&#xB85C; &#xC811;&#xADFC;&#xD558;&#xB294; &#xBC29;&#xBC95; Lambda&#xB0B4;&#xC5D0;&#xC11C; &#xC694;&#xCCAD;&#xD55C; URL &#xBC0F; http-method &#xBCC4;&#xB85C; &#xB2E4;&#xB978; &#xC791;&#xC5C5;&#xC744; &#xD558;&#xB294; Node.JS &#xCF54;&#xB4DC; &#xC791;&#xC131;&#xBC95; &#xC798;&#xBABB;&#xB418;&#xC5C8;&#xAC70;&#xB098;, &#xBCC0;&#xACBD;&#xB41C; &#xC810;, &#xAE30;&#xD0C0; &#xCD94;&#xAC00; &#xC0AC;&#xD56D;&#xC5D0; &#xB300;&#xD55C; &#xD53C;&#xB4DC;&#xBC31;&#xC740; &#xC5B8;&#xC81C;&#xB098; &#xD658;&#xC601;&#xD569;&#xB2C8;&#xB2E4;. - seokjoon.yun@gmail.com &#xB2E4;&#xC74C;&#xAE00; Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #3 (Proxy Resource) : https://github.com/DevStarSJ/Study/blob/master/Blog/Cloud/AWS/Lambda%2BAPIGateway.03.Proxy.md","categories":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/categories/AWS/"},{"name":"Lambda","slug":"AWS/Lambda","permalink":"http://DevStarSJ.github.io/categories/AWS/Lambda/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/tags/AWS/"},{"name":"Lambda","slug":"Lambda","permalink":"http://DevStarSJ.github.io/tags/Lambda/"},{"name":"APIGateway","slug":"APIGateway","permalink":"http://DevStarSJ.github.io/tags/APIGateway/"},{"name":"Node.JS","slug":"Node-JS","permalink":"http://DevStarSJ.github.io/tags/Node-JS/"}]},{"title":"AWS Lambda와 API Gateway를 이용해서 Serverless Web API 만들기","slug":"Lambda+APIGateWay.01","date":"2016-11-22T05:54:51.000Z","updated":"2017-04-23T08:21:19.000Z","comments":true,"path":"2016/11/22/Lambda+APIGateWay.01/","link":"","permalink":"http://DevStarSJ.github.io/2016/11/22/Lambda+APIGateWay.01/","excerpt":"","text":"AWS Lambda&#xC640; API Gateway&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; Serverless Web API &#xB9CC;&#xB4E4;&#xAE30; AWS Lambda &#xB780; &#xCF54;&#xB4DC;&#xB97C; AWS &#xB0B4;&#xC5D0; &#xC62C;&#xB824;&#xB450;&#xACE0; &#xD544;&#xC694;&#xD560; &#xB54C;&#xC5D0;&#xB9CC; &#xD574;&#xB2F9; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD574;&#xC8FC;&#xB294; &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xB9D0;&#xD569;&#xB2C8;&#xB2E4;. &#xC11C;&#xBC84;&#xB97C; 24&#xC2DC;&#xAC04; &#xAC00;&#xB3D9;&#xC2DC;&#xD0A4;&#xAC8C; &#xC544;&#xB2C8;&#xB77C;, &#xADF8;&#xB0E5; &#xD574;&#xB2F9; &#xCF54;&#xB4DC;&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xBA74;&#xC11C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xCEF4;&#xD4E8;&#xD305; &#xC2DC;&#xAC04;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB9CC; &#xACFC;&#xAE08;&#xC744; &#xD558;&#xB294; &#xBC29;&#xC2DD;&#xC785;&#xB2C8;&#xB2E4;. &#xC989;, &#xC11C;&#xBC84;&#xC5C6;&#xC774; &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xD560; &#xC218; &#xC788;&#xB294; &#xD3B8;&#xB9AC;&#xD55C; &#xAD6C;&#xC870;&#xBA74;&#xC11C;&#xB3C4; &#xC2E4;&#xC81C;&#xB85C; &#xCF54;&#xB4DC;&#xAC00; &#xB3D9;&#xC791;&#xD558;&#xB294; &#xB9CC;&#xD07C;&#xB9CC; &#xACFC;&#xAE08;&#xC774; &#xB418;&#xB2E4;&#xBCF4;&#xB2C8; &#xBCF4;&#xD1B5;&#xC758; &#xACBD;&#xC6B0; &#xC11C;&#xBC84;&#xB97C; &#xB744;&#xC6CC;&#xB193;&#xB294;&#xAC70;&#xBCF4;&#xB2E4; &#xD6E8;&#xC52C; &#xC800;&#xB834;&#xD55C; &#xBE44;&#xC6A9;&#xC73C;&#xB85C; &#xC11C;&#xBE44;&#xAC00; &#xAC00;&#xB2A5;&#xD558;&#xBA70; &#xC2A4;&#xCF00;&#xC77C;&#xB9C1;&#xC5D0; &#xB300;&#xD55C; &#xAD00;&#xB9AC;&#xB97C; &#xD574;&#xC904; &#xD544;&#xC694;&#xAC00; &#xC5C6;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB78C;&#xB2E4;&#xC5D0; &#xC62C;&#xB824;&#xB454; &#xCF54;&#xB4DC;&#xB294; AWS &#xB0B4;&#xC758; &#xB2E4;&#xB978; &#xC11C;&#xBE44;&#xC2A4;&#xC5D0;&#xC11C; &#xC774;&#xBCA4;&#xD2B8; &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xD574;&#xB2F9; &#xCF54;&#xB4DC;&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xAC8C; &#xD560; &#xC218; &#xC788;&#xB294;&#xB370;, API Gateway &#xB97C; &#xBD99;&#xC774;&#xBA74; &#xC6F9;&#xC11C;&#xBE44;&#xC2A4;&#xB85C; &#xD65C;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC774; &#xB450;&#xAC00;&#xC9C0; AWS&#xC758; &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xC11C;&#xBC84;&#xC5C6;&#xC774; API &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xAD6C;&#xCD95;&#xD558;&#xB294; &#xD29C;&#xD1A0;&#xB9AC;&#xC5BC;&#xC744; &#xC9C4;&#xD589;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC544;&#xBB34; &#xC0DD;&#xAC01;&#xC5C6;&#xC774; &#xADF8;&#xB0E5; &#xB530;&#xB77C;&#xD558;&#xC2DC;&#xB2E4; &#xBCF4;&#xBA74; &#xADF8; &#xACFC;&#xC815;&#xACFC; &#xC6D0;&#xD558;&#xB294; &#xAC12;&#xC744; &#xC804;&#xB2EC;&#xD558;&#xACE0; &#xBC1B;&#xB294; &#xAC83;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC774;&#xD574;&#xAC00; &#xB418;&#xC2E4; &#xAC81;&#xB2C8;&#xB2E4;. Lambda &#xC0DD;&#xC131; AWS &#xB85C;&#xADF8;&#xC778; &#xD6C4; Lambda &#xD0ED;&#xC73C;&#xB85C; &#xC774;&#xB3D9; Create a Lambda Function &#xC120;&#xD0DD; Select blueprint&#xC5D0;&#xC11C; Blank Function &#xC120;&#xD0DD; Configure function &#xC5D0;&#xC11C; &#xC77C;&#xB2E8; &#xBC14;&#xB85C; Next &#xC120;&#xD0DD; (&#xBBF8;&#xB9AC; &#xC5F0;&#xACB0;&#xD560; API Gateway&#xAC00; &#xC788;&#xB2E4;&#xBA74; &#xC5EC;&#xAE30;&#xC11C; &#xC5F0;&#xACB0;&#xD558;&#xBA74; &#xB428;) Configure function&#xC5D0;&#xC11C; &#xD568;&#xC218; &#xC815;&#xC758; Name : testLambda-luna Runtime : Node.js 4.3 Code : &#xC544;&#xB798; &#xCF54;&#xB4DC;&#xB97C; &#xC785;&#xB825; &#xCC38;&#xACE0;&#xB85C; callback(null, result);&#xC640; context.succeed(result);&#xB294; &#xB458; &#xB2E4; &#xACB0;&#xACFC;&#xB97C; return &#xD574;&#xC8FC;&#xB294; &#xCF54;&#xB4DC;&#xB85C; &#xC544;&#xBB34;&#xAC70;&#xB098; &#xC0AC;&#xC6A9;&#xD574;&#xB3C4; &#xB428; Role &amp; Existing role : &#xC77C;&#xB2E8;&#xC740; &#xC801;&#xB2F9;&#xD788; &#xC120;&#xD0DD; (&#xB9CC;&#xC57D; Lambda&#xC5D0;&#xC11C; &#xB2E4;&#xB978; AWS &#xC11C;&#xBE44;&#xC2A4; RDS, S3 &#xB4F1;&#xC744; &#xC5F0;&#xB3D9;&#xD560;&#xB824;&#xBA74; &#xD544;&#xC694;) &#xC544;&#xB798; &#xCF54;&#xB4DC; &#xC785;&#xB825; &#xD6C4; Next &#xC120;&#xD0DD; 1234567&apos;use strict&apos;;exports.handler = (event, context, callback) =&gt; { let result = {&quot;event&quot; : event, &quot;context&quot; : context} context.succeed(result); //callback(null, result);}; Create Function &#xC120;&#xD0DD; Action -&gt; Configure test event &#xC120;&#xD0DD; &#xC6D0;&#xD558;&#xB294; &#xAC12;&#xC73C;&#xB85C; &#xC218;&#xC815; &#xD6C4; Save and test &#xC120;&#xD0DD;&#xD558;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xB098;&#xC634;. 123456789101112131415161718{ &quot;event&quot;: { &quot;key3&quot;: &quot;value3&quot;, &quot;key2&quot;: &quot;value2&quot;, &quot;key1&quot;: &quot;value1&quot; }, &quot;context&quot;: { &quot;callbackWaitsForEmptyEventLoop&quot;: false, &quot;logGroupName&quot;: &quot;/aws/lambda/testLambda-luna&quot;, &quot;logStreamName&quot;: &quot;2016/11/16/[$LATEST]3906ef41b5df4f1d89c6501dda78253c&quot;, &quot;functionName&quot;: &quot;testLambda-luna&quot;, &quot;memoryLimitInMB&quot;: &quot;128&quot;, &quot;functionVersion&quot;: &quot;$LATEST&quot;, &quot;invokeid&quot;: &quot;be8f2961-aba7-11e6-8ffb-6d91b83819cf&quot;, &quot;awsRequestId&quot;: &quot;be8f2961-aba7-11e6-8ffb-6d91b83819cf&quot;, &quot;invokedFunctionArn&quot;: &quot;arn:aws:lambda:ap-northeast-1:768556645518:function:testLambda-luna&quot; }} &#xB9CC;&#xC57D; name&#xC774;&#xB780; &#xAC12;&#xC744; event&#xB85C; &#xB118;&#xACA8;&#xC11C; Hello + name &#xC744; &#xCD9C;&#xB825;&#xD558;&#xACE0; &#xC2F6;&#xB2E4;&#xBA74; &#xC704; Lambda Code&#xB97C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC218;&#xC815; 1234567&apos;use strict&apos;;exports.handler = (event, context, callback) =&gt; { let result = {&quot;event&quot; : event, &quot;context&quot; : context} let name = event.name || &apos;no name&apos;; context.succeed(&apos;Hello &apos; + name);}; &#xADF8;&#xB7F0; &#xB2E4;&#xC74C; Configure test event&#xC5D0; name&#xC744; &#xB123;&#xC5B4;&#xC8FC;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xCD9C;&#xB825;&#xB428;. 123{ &quot;name&quot; : &quot;Luna&quot;} 1&quot;Hello Luna&quot; API Gateway &#xC0DD;&#xC131; &amp; Lambda &#xC5F0;&#xACB0; AWS &#xBA54;&#xC778; &#xD654;&#xBA74;&#xC73C;&#xB85C; &#xC774;&#xB3D9; &#xD6C4; API Gateway &#xD0ED;&#xC73C;&#xB85C; &#xC774;&#xB3D9; Create API &#xC120;&#xD0DD; API name : testAPI-luna Create API &#xC120;&#xD0DD; Actions -&gt; Create Resource &#xC120;&#xD0DD; (API Path&#xB97C; &#xCD94;&#xAC00;) Resource name : test Resource Path : test Create Resource &#xC120;&#xD0DD; /test&#xAC00; &#xC120;&#xD0DD;&#xB41C; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; Actions -&gt; Create Resource &#xC120;&#xD0DD; Resource name : name Resource Path : {name} (Path Variable &#xCD94;&#xAC00;) Create Resource &#xC120;&#xD0DD; /{name}&#xC774; &#xC120;&#xD0DD;&#xB41C; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; Actions -&gt; Create Method &#xC120;&#xD0DD; GET &#xC120;&#xD0DD; &#xD6C4; &#xD655;&#xC778; Lambda Region : &#xB78C;&#xB2E4;&#xB97C; &#xC0DD;&#xC131;&#xD55C; region &#xC120;&#xD0DD; Lambda Function : testLambda-luna (&#xC880; &#xC804;&#xC5D0; &#xC0DD;&#xC131;&#xD55C; &#xB78C;&#xB2E4;&#xBA85; &#xC785;&#xB825;) Integration Request &#xC120;&#xD0DD; Body Mapping Templates &#xC120;&#xD0DD; Add mapping template &#xC120;&#xD0DD; application/json &#xC785;&#xB825; No, use current settings &#xC120;&#xD0DD; Generate template: Method Request passthrough &#xC120;&#xD0DD; Save &#xC120;&#xD0DD; /test/{name} [GET] &#xC120;&#xD0DD; TEST &#xC120;&#xD0DD; Path {name} : &#xC6D0;&#xD558;&#xB294; &#xAC12; &#xC785;&#xB825; Test &#xBC84;&#xD2BC; &#xC120;&#xD0DD; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xCD9C;&#xB825;&#xB418;&#xBA74; &#xC131;&#xACF5; 123456789101112131415161718192021{ &quot;event&quot;: { &quot;body-json&quot;: {}, &quot;params&quot;: { &quot;path&quot;: { &quot;name&quot;: &quot;Luna&quot; }, &quot;querystring&quot;: {}, &quot;header&quot;: {} }, &quot;stage-variables&quot;: {}, &quot;context&quot;: { ... } }, &quot;context&quot;: { &quot;callbackWaitsForEmptyEventLoop&quot;: true, &quot;logGroupName&quot;: &quot;/aws/lambda/testLambda-luna&quot;, ... }} &#xBC30;&#xD3EC; Actions -&gt; Deploy API &#xC120;&#xD0DD; Deployment Stage : [New Stage] &#xC120;&#xD0DD; Stage name : prod &#xC785;&#xB825; Deploy &#xBC84;&#xD2BC; &#xC120;&#xD0DD; Invoke URL &#xBCF5;&#xC0AC; &#xD14C;&#xC2A4;&#xD2B8; Invoke URL + /test/luna &#xB85C; Web Browser&#xC5D0;&#xC11C; &#xC8FC;&#xC18C; &#xC785;&#xB825; &#xC704; JSON &#xAC19;&#xC740; &#xBAA8;&#xC591;&#xC73C;&#xB85C; &#xCD9C;&#xB825;&#xB418;&#xBA74; &#xC131;&#xACF5; Invoke URL + /test/luna?id=345;dept=&#xAC1C;&#xBC1C;&#xD300;&#xACFC; &#xAC19;&#xC774; QueryString &#xC744; &#xD3EC;&#xD568;&#xD558;&#xC5EC; &#xD638;&#xCD9C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; querystring &#xC5D0;&#xC11C; &#xD655;&#xC778;&#xB418;&#xBA74; &#xC131;&#xACF5; 12345678910111213141516{ &quot;event&quot;: { &quot;body-json&quot;: {}, &quot;params&quot;: { &quot;path&quot;: { &quot;name&quot;: &quot;Luna&quot; }, &quot;querystring&quot;: { &quot;dept&quot;: &quot;&#xAC1C;&#xBC1C;&#xD300;&quot;, &quot;id&quot;: &quot;345&quot; }, ... } }} POST&#xB85C; &#xBC30;&#xD3EC; API Gateway&#xC5D0; testAPI-luna&#xB85C; &#xC774;&#xB3D9; /{name}&#xC774; &#xC120;&#xD0DD;&#xB41C; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; Actions -&gt; Create Method &#xC120;&#xD0DD; POST &#xC120;&#xD0DD; &#xD6C4; &#xD655;&#xC778; Lambda Region : &#xB78C;&#xB2E4;&#xB97C; &#xC0DD;&#xC131;&#xD55C; region &#xC120;&#xD0DD; Lambda Function : testLambda-luna &#xBC14;&#xB85C; Test &#xBC84;&#xD2BC;&#xC744; &#xB20C;&#xB7EC;&#xC11C; &#xD655;&#xC778; Path {name} : &#xC6D0;&#xD558;&#xB294; &#xAC12; &#xC785;&#xB825; Request Body&#xC5D0; &#xC544;&#xB798; JSON &#xAC12; &#xC785;&#xB825; 1234{ &quot;id&quot;: &quot;123&quot;, &quot;age&quot;: &quot;25&quot;} &#xACB0;&#xACFC; 123456789{ &quot;event&quot;: { &quot;id&quot;: &quot;123&quot;, &quot;age&quot;: &quot;25&quot; }, &quot;context&quot;: { ... }} name &#xAC12;&#xC774; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xC804;&#xB2EC;&#xB418;&#xC9C0; &#xC54A;&#xC558;&#xC73C;&#xBBC0;&#xB85C; GET &#xC791;&#xC5C5;&#xD55C;&#xAC83; &#xCC98;&#xB7FC; template &#xC124;&#xC815; Integration Request &#xC120;&#xD0DD; Body Mapping Templates &#xC120;&#xD0DD; Add mapping template &#xC120;&#xD0DD; application/json &#xC785;&#xB825; No, use current settings &#xC120;&#xD0DD; Generate template: Method Request passthrough &#xC120;&#xD0DD; Save &#xC120;&#xD0DD; Test &#xB85C; &#xB4E4;&#xC5B4;&#xAC00;&#xC11C; &#xC704;&#xC640; &#xAC19;&#xC740; JSON &#xC785;&#xB825; 12345678910111213141516{ &quot;event&quot;: { &quot;body-json&quot;: { &quot;id&quot;: &quot;123&quot;, &quot;age&quot;: &quot;25&quot; }, &quot;params&quot;: { &quot;path&quot;: { &quot;name&quot;: &quot;Luna&quot; }, &quot;querystring&quot;: {}, &quot;header&quot;: {} }, ... }} &#xB2E4;&#xC2DC; &#xBC30;&#xD3EC; Actions -&gt; Deploy API &#xC120;&#xD0DD; Deployment Stage : [New Stage] &#xC120;&#xD0DD; Stage name : prod &#xC785;&#xB825; Deploy &#xBC84;&#xD2BC; &#xC120;&#xD0DD; Invoke URL &#xBCF5;&#xC0AC; Postman &#xC744; &#xD1B5;&#xD574;&#xC11C; &#xD14C;&#xC2A4;&#xD2B8; &#xB9CC;&#xC57D; &#xC124;&#xCE58;&#xB418;&#xC9C0; &#xC54A;&#xC558;&#xB2E4;&#xBA74;, Chrome App Postman &#xC124;&#xCE58; &#xD6C4; &#xC2E4;&#xD589; POST &#xBA54;&#xC11C;&#xB4DC;&#xB85C; &#xC120;&#xD0DD; &#xC8FC;&#xC18C;&#xC5D0; Invoke URL + /test/luna?id=345 &#xC785;&#xB825; Headers &#xD0ED; &#xC120;&#xD0DD; headerValue1 : 123 &#xC785;&#xB825; Body &#xD0ED; &#xC120;&#xD0DD; &#xC704; &#xC608;&#xC81C;&#xC758; JSON &#xC785;&#xB825; Send &#xC120;&#xD0DD; &#xACB0;&#xACFC; 12345678910111213141516171819202122232425262728293031323334353637383940{ &quot;event&quot;: { &quot;body-json&quot;: { &quot;id&quot;: &quot;123&quot;, &quot;age&quot;: &quot;25&quot; }, &quot;params&quot;: { &quot;path&quot;: { &quot;name&quot;: &quot;luna&quot; }, &quot;querystring&quot;: { &quot;id&quot;: &quot;345&quot; }, &quot;header&quot;: { &quot;Accept&quot;: &quot;*/*&quot;, &quot;Accept-Encoding&quot;: &quot;gzip, deflate, br&quot;, &quot;Accept-Language&quot;: &quot;ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4&quot;, ... &quot;Content-Type&quot;: &quot;application/json&quot;, &quot;headerValue1&quot;: &quot;123&quot;, ... } }, &quot;stage-variables&quot;: {}, &quot;context&quot;: { ... &quot;http-method&quot;: &quot;POST&quot;, ... &quot;source-ip&quot;: &quot;112.217.228.202&quot;, &quot;user&quot;: &quot;&quot;, &quot;user-agent&quot;: &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36&quot;, ... &quot;resource-path&quot;: &quot;/test/{name}&quot; } } }, &quot;context&quot;: { ... }} &#xD65C;&#xC6A9; Lambda&#xC5D0;&#xC11C; &#xC804;&#xB2EC;&#xBC1B;&#xC740; &#xAC12; &#xD65C;&#xC6A9; event body-json : BODY&#xC5D0;&#xC11C; &#xC804;&#xB2EC;&#xD574;&#xC628; &#xAC12; params path : URL &#xC0C1;&#xC5D0;&#xC11C; &#xACBD;&#xB85C;&#xB85C; &#xC5BB;&#xC5B4;&#xC624;&#xB294; &#xBCC0;&#xC218;&#xB4E4; header : HEADER&#xC5D0;&#xC11C; &#xC804;&#xB2EC;&#xD574;&#xC628; &#xAC12; querystring : URL &#xC0C1;&#xC758; QueryString&#xB85C; &#xC804;&#xB2EC;&#xB41C; &#xBCC0;&#xC218;&#xB4E4; context http-method : &#xD638;&#xCD9C;&#xD55C; METHOD (GET, POST, &#x2026;) resource-path : &#xD558;&#xB098;&#xC758; Lambda&#xC5D0;&#xC11C; &#xC5EC;&#xB7EC; URL&#xC744; &#xCC98;&#xB9AC;&#xD560; &#xACBD;&#xC6B0; &#xACBD;&#xB85C; &#xC815;&#xBCF4; &#xCC38;&#xACE0; &#xC544;&#xC6C3;&#xC0AC;&#xC774;&#xB354;&#xB2D8; Blog : https://blog.outsider.ne.kr/1205 , https://blog.outsider.ne.kr/1206 AWS : http://docs.aws.amazon.com/ko_kr/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html &#xC6D0;&#xBB38; : https://github.com/DevStarSJ/Study/blob/master/Blog/Cloud/AWS/Lambda%2BAPIGateWay.01.md &#xC798;&#xBABB;&#xB418;&#xC5C8;&#xAC70;&#xB098;, &#xBCC0;&#xACBD;&#xB41C; &#xC810;, &#xAE30;&#xD0C0; &#xCD94;&#xAC00; &#xC0AC;&#xD56D;&#xC5D0; &#xB300;&#xD55C; &#xD53C;&#xB4DC;&#xBC31;&#xC740; &#xC5B8;&#xC81C;&#xB098; &#xD658;&#xC601;&#xD569;&#xB2C8;&#xB2E4;. - seokjoon.yun@gmail.com &#xB2E4;&#xC74C;&#xAE00; Lambda &#xC640; API Gateway &#xC5F0;&#xB3D9; #2 (ANY, Deploy Staging, Node.JS Route) : https://github.com/DevStarSJ/Study/blob/master/Blog/Cloud/AWS/Lambda%2BAPIGateway.02.Route.md","categories":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/categories/AWS/"},{"name":"Lambda","slug":"AWS/Lambda","permalink":"http://DevStarSJ.github.io/categories/AWS/Lambda/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://DevStarSJ.github.io/tags/AWS/"},{"name":"Lambda","slug":"Lambda","permalink":"http://DevStarSJ.github.io/tags/Lambda/"},{"name":"APIGateway","slug":"APIGateway","permalink":"http://DevStarSJ.github.io/tags/APIGateway/"},{"name":"Node.JS","slug":"Node-JS","permalink":"http://DevStarSJ.github.io/tags/Node-JS/"}]},{"title":"Squel.js","slug":"JavaScript.Squel","date":"2016-11-07T15:00:00.000Z","updated":"2017-04-23T09:39:53.000Z","comments":true,"path":"2016/11/08/JavaScript.Squel/","link":"","permalink":"http://DevStarSJ.github.io/2016/11/08/JavaScript.Squel/","excerpt":"","text":"Squel.js JavaScript &#xC758; SQL query string&#xC758; &#xC791;&#xC131;&#xC744; &#xB3C4;&#xC640;&#xC8FC;&#xB294; package &#xC785;&#xB2C8;&#xB2E4;. C# &#xC758; LINQ&#xC640; &#xBE44;&#xC2B7;&#xD55C; &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xD568;&#xC218;&#xB4E4;&#xC758; &#xCCB4;&#xC778;&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xC815;&#xC758;&#xD558;&#xBA74; &#xD574;&#xB2F9; &#xAE30;&#xB2A5;&#xC744; &#xB3D9;&#xC791;&#xD558;&#xB294; query string&#xC744; &#xC791;&#xC131;&#xD574; &#xC90D;&#xB2C8;&#xB2E4;. &#xB2E8;&#xC21C;&#xD788; query string&#xB9CC;&#xC744; &#xB9CC;&#xB4E4;&#xC5B4; &#xC8FC;&#xB294; &#xC5ED;&#xD560;&#xB9CC;&#xC744; &#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xAC8C; &#xC7A5;&#xC810;&#xC77C;&#xC218;&#xB3C4; &#xB2E8;&#xC810;&#xC77C;&#xC218;&#xB3C4; &#xC788;&#xB294;&#xB370;, C# &#xC758; LINQ&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; Inline View&#xB098; Subquery, JOIN&#xC744; &#xD45C;&#xD604;&#xD558;&#xAE30;&#xAC00; &#xC0C1;&#xB2F9;&#xD788; &#xBCF5;&#xC7A1;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xB2E8;&#xC21C;&#xD55C; &#xBB38;&#xC7A5;&#xC774; &#xC544;&#xB2CC; &#xACBD;&#xC6B0;&#xB294; &#xADF8;&#xB0E5; raw query&#xB85C; &#xC791;&#xC131;&#xD558;&#xB294;&#xAC8C; &#xB354; &#xD3B8;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; squel&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC5B4;&#xCC28;&#xD53C; &#xACB0;&#xACFC;&#xBB3C;&#xC740; String&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC774;&#xAC83;&#xB4E4;&#xC744; &#xC798; &#xC870;&#xD569;&#xD558;&#xBA74; &#xC5BC;&#xB9C8;&#xB4E0;&#xC9C0; &#xBCF5;&#xC7A1;&#xD55C; &#xBB38;&#xC7A5;&#xB3C4; &#xD45C;&#xD604;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC5EC;&#xAE30;&#xC5D0;&#xC11C;&#xB294; &#xC790;&#xC8FC; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xAC04;&#xB2E8;&#xD55C; &#xC608;&#xC81C;&#xB4E4;&#xC744; &#xC911;&#xC2EC;&#xC73C;&#xB85C; &#xC18C;&#xAC1C;&#xB97C; &#xB4DC;&#xB9B4; &#xC608;&#xC815;&#xC774;&#xBA70;, &#xC790;&#xC138;&#xD55C; &#xB0B4;&#xC6A9;&#xC740; &#xACF5;&#xC2DD; &#xC0AC;&#xC774;&#xD2B8; https://hiddentao.com/squel &#xB97C; &#xCC38;&#xC870;&#xD574;&#xC8FC;&#xC138;&#xC694;. &#xC124;&#xCE58; Node.js 1npm install squel 1var squel = require(&quot;squel&quot;); Browser 1234&lt;script type=&quot;text/javascript&quot; src=&quot;/your/path/to/squel.min.js&quot;&gt;&lt;/script&gt;&lt;script&gt; console.log( squel.VERSION ); /** version string **/&lt;/script&gt; &#xC0AC;&#xC6A9;&#xBC95; SELECT &#xBB38;&#xC7A5; select() : SELECT &#xC5D0; &#xB300;&#xD55C; query builder &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xB97C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. from(&quot;table&quot;, alias = null) : FROM &#xC808;&#xC5D0; &#xD574;&#xB2F9;&#xD558;&#xB294; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. alias &#xC0DD;&#xB7B5; &#xAC00;&#xB2A5; field(&quot;column&quot;) : &#xC77D;&#xC5B4;&#xC62C; &#xCEEC;&#xB7FC;&#xB4E4;&#xC744; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. field&#xC808;&#xC744; &#xC2E4;&#xD589;&#xD55C; &#xC21C;&#xC11C;&#xB300;&#xB85C; &#xC67C;&#xCABD;&#xBD80;&#xD130; &#xCD9C;&#xB825;&#xB429;&#xB2C8;&#xB2E4;. where(&quot;condition&quot;) : WHERE &#xC808; &#xC870;&#xAC74;&#xC744; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. distinct() : DISTINCT &#xD55C; &#xACB0;&#xACFC;&#xB85C; &#xCD9C;&#xB825;&#xD569;&#xB2C8;&#xB2E4;. (&#xC911;&#xBCF5;&#xC81C;&#xAC70;) order(&quot;column&quot;, ASC = true) : ORDER BY &#xC808;&#xC5D0; &#xD574;&#xB2F9;&#xD558;&#xB294; sorting&#xC5F0;&#xC0B0;&#xC744; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. order&#xC808;&#xC744; &#xC218;&#xD589;&#xD55C; &#xC21C;&#xC11C;&#xB300;&#xB85C; &#xC67C;&#xCABD;&#xBD80;&#xD130; &#xAE30;&#xC220;&#xB418;&#xBA70; ASC, DESC &#xC5EC;&#xBD80;&#xB97C; 2&#xBC88;&#xC9F8; &#xC778;&#xC790;&#xC5D0; true,false&#xB85C; &#xC804;&#xB2EC;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. group() : GROUP BY &#xC808;&#xC5D0; &#xD574;&#xB2F9;&#xD558;&#xB294; &#xADF8;&#xB8F9;&#xD654; &#xAE30;&#xB2A5;&#xC744; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. having(&quot;condition&quot;) : HAVING &#xC808;&#xC5D0; &#xD574;&#xB2F9;&#xD558;&#xB294; &#xC870;&#xAC74;&#xC744; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. limit(number) : TOP-N query&#xB97C; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. &#xC55E;&#xC11C; &#xC9C0;&#xC815;&#xD55C; limit&#xAE30;&#xB2A5;&#xC744; &#xC81C;&#xAC70;&#xD558;&#xACE0; &#xC2F6;&#xC73C;&#xBA74; .limit(0)&#xC744; &#xC218;&#xD589;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. offset(number) : SKIP &#xC5F0;&#xC0B0;&#xC744; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. limit&#xC640; &#xB9C8;&#xCC2C;&#xAC00;&#xC9C0;&#xB85C; .offset(0)&#xC744; &#xC218;&#xD589;&#xD558;&#xBA74; &#xC55E;&#xC11C; &#xC9C0;&#xC815;&#xD55C; offset&#xAE30;&#xB2A5;&#xC744; &#xC81C;&#xAC70;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. function(&apos;string&apos;) : Scalar &#xAC12;&#xC774;&#xB098; DB Function &#xC218;&#xD589;&#xC2DC; &#xD65C;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. JOIN join(&quot;table&quot;, alias = null, onCondition = null) : INNER JOIN&#xC744; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. alias&#xC640; ON&#xC808;&#xC740; &#xD544;&#xC694; &#xC5C6;&#xC744;&#xC2DC; &#xC0DD;&#xB7B5;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. outer_join(...) : &#xD574;&#xB2F9; &#xD558;&#xC218;&#xC5D0;&#xC11C; &#xC9C0;&#xC815;&#xD55C; &#xD14C;&#xC774;&#xBE14;&#xC744; OUTER JOIN&#xC73C;&#xB85C; &#xC9C0;&#xC815; left_join(...) : LEFT OUTER JOIN right_join(...) : RIGHT OUTER JOIN union(&apos;squel select instance&apos;) : UNION &#xC5F0;&#xC0B0;&#xC744; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. &#xBAA8;&#xB4E0; &#xD544;&#xC694;&#xD55C; &#xAE30;&#xB2A5;&#xC744; &#xB2E4; &#xC218;&#xD589;&#xD55C; &#xD6C4; toString()&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xBA74; query string&#xC774; &#xC0DD;&#xC131;&#xB429;&#xB2C8;&#xB2E4;. UNION ALL &#xC5F0;&#xC0B0;&#xC5D0; &#xB300;&#xD55C; &#xB300;&#xD574;&#xC11C;&#xB294; &#xD604;&#xC7AC; &#xC81C;&#xACF5;&#xB418;&#xACE0; &#xC788;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD544;&#xC694;&#xD560; &#xACBD;&#xC6B0; &#xADF8;&#xB0E5; string concatenation&#xC744; &#xD574;&#xC57C;&#xD569;&#xB2C8;&#xB2E4;. &#xBAA8;&#xB4E0; &#xC870;&#xAC74;(condition)&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; string format&#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xC785;&#xB825;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. (ex. where(&apos;id = ?&apos;, 1)) &#xAD00;&#xB828; &#xC608;&#xC81C;&#xB4E4; 123456var squel = require(&quot;squel&quot;);var q = squel.select() .from(&quot;emp&quot;, &quot;e&quot;) .field(&quot;**&quot;) .toString(); 1SELECT ** FROM emp `e` 12345678var s = squel.select() .from(&apos;emp&apos;, &apos;e&apos;) .where(&apos;e.id IN ?&apos;, idList) .where(&apos;e.sal &gt; ?&apos;, 2000) .join(&apos;dept&apos;, &apos;d&apos;, &apos;e.deptno = d.id&apos;) .field(&apos;e.name&apos;) .field(&apos;d.name&apos;) .toString(); 1234SELECT e.name, d.name FROM emp `e` INNER JOIN dept `d` ON (e.deptno = d.id) WHERE (e.id IN (1, 2, 3)) AND (e.sal &gt; 2000) UPDATE / INSERT / DELETE UPDATE &#xC640; INSERT, DELETE &#xBB38;&#xC7A5; &#xC791;&#xC131;&#xC5D0; &#xB300;&#xD55C; &#xD568;&#xC218;&#xB294; &#xAC70;&#xC758; &#xBE44;&#xC2B7;&#xD558;&#xBBC0;&#xB85C; &#xAC19;&#xC774; &#xB2E4;&#xB8E8;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. SELECT &#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB41C; &#xD568;&#xC218;&#xB4E4;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xC911;&#xBCF5;&#xC73C;&#xB85C; &#xC124;&#xBA85; &#xB4DC;&#xB9AC;&#xC9C0; &#xC54A;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. update() : UPDATE &#xC5D0; &#xB300;&#xD55C; query builder &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xB97C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. table(&quot;table&quot;, alias = null) : &#xC218;&#xD589;&#xD560; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. insert() : INSERT &#xC5D0; &#xB300;&#xD55C; query builder &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xB97C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. into(&quot;table&quot;, alias = null) : &#xC218;&#xD589;&#xD560; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. delete() : DELETE &#xC5D0; &#xB300;&#xD55C; query builder &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xB97C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. from(&quot;table&quot;, alias = null) : &#xC218;&#xD589;&#xD560; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. set(&apos;field&apos;, value, options = null) : UPDATE, INSERT&#xC5D0;&#xC11C; &#xD574;&#xB2F9; &#xCEEC;&#xB7FC;&#xC5D0; &#xC800;&#xC7A5;&#xD560; &#xAC12;&#xC744; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. value&#xC5D0; &#xD568;&#xC218;&#xB97C; &#xC9C0;&#xC815;&#xD560; &#xACBD;&#xC6B0; &#xBB38;&#xC790;&#xC5F4;&#xB85C; &#xC778;&#xC2DD;&#xD558;&#xC5EC; &#xB530;&#xC634;&#xD45C;&#xB97C; &#xC50C;&#xC6B0;&#xAC8C; &#xB418;&#xB294;&#xB370; &#xADF8;&#xB7FC; &#xD568;&#xC218;&#xB85C; &#xB3D9;&#xC791;&#xD558;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7F4; &#xACBD;&#xC6B0; options &#xB780;&#xC5D0; { dontQuote: true}&#xB97C; &#xC785;&#xB825;&#xD574;&#xC8FC;&#xBA74; value&#xC5D0; &#xB530;&#xC634;&#xD45C; &#xD45C;&#xC2DC;&#xB97C; &#xD558;&#xC9C0; &#xC54A;&#xC544;&#xC11C; &#xD568;&#xC218;&#xB85C; &#xB3D9;&#xC791;&#xD558;&#xAC8C; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. 12345var uf = squel.update() .table(&apos;emp&apos;) .set(&apos;hire_date&apos;, &apos;GETDATE()&apos;, { dontQuote: true }) .where(&apos;dept = ?&apos;, 10) .toString(); 1UPDATE emp SET hire_date = GETDATE() WHERE (dept = 10) setFields({JSON}) : &#xC785;&#xB825;&#xB41C; JSON&#xC758; key&#xC640; value&#xB85C; set()&#xD568;&#xC218;&#xB97C; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. setFieldsRows([JSON LIST]) : INSERT &#xC5D0;&#xC11C;&#xB9CC; &#xC218;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xBA70; &#xC5EC;&#xB7EC; &#xC904; &#xC785;&#xB825;&#xC73C;&#xB85C; setFields() &#xD568;&#xC218;&#xB97C; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. 1234var im = squel.insert() .into(&apos;emp&apos;) .setFieldsRows([{id:1, name:&quot;Luna&quot;}, {id:2, name:&quot;Star&quot;}]) .toString(); 1INSERT INTO emp (id, name) VALUES (1, &apos;Luna&apos;), (2, &apos;Star&apos;) fromQuery : SELECT &#xC218;&#xD589; &#xACB0;&#xACFC;&#xB97C; INSERT &#xD569;&#xB2C8;&#xB2E4;. 1234567891011var is = squel.insert() .into(&apos;emp&apos;) .fromQuery( [&apos;id&apos;, &apos;name&apos;], squel .select() .from(&apos;candidates&apos;) .field(&apos;id&apos;) .field(&apos;name&apos;) ) .toString(); 1INSERT INTO emp (id, name) (SELECT id, name FROM candidates) &#xB098;&#xBA38;&#xC9C0; &#xD568;&#xC218;&#xB4E4; where(), limit(), order(), JOIN &#xC5F0;&#xC0B0; &#xB4F1;&#xC740; SELECT &#xC640; &#xB3D9;&#xC77C;&#xD569;&#xB2C8;&#xB2E4;. Parameters &#xC704;&#xC5D0;&#xC11C; &#xC0B4;&#xD3B4;&#xBCF8; &#xC608;&#xC81C;&#xB4E4;&#xC740; &#xBAA8;&#xB450; Binding Parameters &#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xACE0; query&#xC5D0; &#xD558;&#xB4DC;&#xCF54;&#xB529; &#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. parameterized query &#xB85C; &#xC0DD;&#xC131;&#xD558;&#xB824;&#xBA74; .toString() &#xB300;&#xC2E0;&#xC5D0; .toParam()&#xC744; &#xC2E4;&#xD589;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 123456var pq = squel.select() .from(`emp`) .where(&apos;id = ?&apos;, 10) .where(&apos;dept = ?&apos;, 20) .field(&apos;*&apos;) .toParam(); 12{ text: &apos;SELECT * FROM emp WHERE (id = ?) AND (dept = ?)&apos;, values: [ 10, 20 ] } ?&#xAC00; &#xC544;&#xB2C8;&#xB77C; numbered parameter ($1, $2, &#x2026;)&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB824;&#xBA74; toParam()&#xC758; &#xC778;&#xC790;&#xB85C; { numberedParameters: true, numberedParametersStartAt: 1 } &#xC744; &#xC804;&#xB2EC;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;.","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://DevStarSJ.github.io/categories/JavaScript/"},{"name":"Node.JS","slug":"JavaScript/Node-JS","permalink":"http://DevStarSJ.github.io/categories/JavaScript/Node-JS/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://DevStarSJ.github.io/tags/JavaScript/"},{"name":"Node.JS","slug":"Node-JS","permalink":"http://DevStarSJ.github.io/tags/Node-JS/"}]},{"title":"Client WebSocket Example without ASP.NET","slug":"CSharp.ClientWebSocketExample","date":"2016-08-30T17:00:00.000Z","updated":"2017-04-23T10:51:07.000Z","comments":true,"path":"2016/08/31/CSharp.ClientWebSocketExample/","link":"","permalink":"http://DevStarSJ.github.io/2016/08/31/CSharp.ClientWebSocketExample/","excerpt":"","text":"Client WebSocket Example without ASP.NET ASP.NET&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xC77C;&#xBC18;&#xC801;&#xC778; C# (Console, Winform) &#xC5D0;&#xC11C; WebSocket Server&#xC5D0; &#xC811;&#xC18D;&#xD558;&#xB294; &#xCF54;&#xB4DC; &#xC608;&#xC81C; &#xC785;&#xB2C8;&#xB2E4;. &#xACB0;&#xB860;&#xB9CC; &#xB9D0;&#xC500;&#xB4DC;&#xB9AC;&#xC790;&#xBA74;&#x2026; WebSocketSharp &#xB9CC; &#xC0AC;&#xC6A9;&#xD558;&#xC138;&#xC694;. https://github.com/sta/websocket-sharp &#xADF8;&#xB798;&#xB3C4; &#xB098;&#xBA38;&#xC9C0;&#xC758; &#xC0AC;&#xC6A9;&#xBC95;&#xB3C4; &#xC124;&#xBA85;&#xD574; &#xB4DC;&#xB9AC;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 1. WebSocketSharp Nuget Manager&#xC5D0;&#xC11C; WebSocketSharp&#xB97C; include prerelease&#xB97C; &#xCCB4;&#xD06C;&#xD55C; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; &#xAC80;&#xC0C9;&#xD574;&#xC11C; &#xC124;&#xCE58;&#xD558;&#xC138;&#xC694;. 12345678910111213using WebSocketSharp;WebSocket ws = new WebSocket(url: &quot;ws://localhost:5000&quot;);ws.Connect();ws.Send(new byte[] { 0x01, 0x02, 0x03 });ws.OnMessage += (sender, e) =&gt;{ Console.WriteLine(e.Data); // string byte[] data = e.RawData // byte []}; 2. WebSocketSharp-clone &#xC0AC;&#xC6A9; nuget manager&#xC5D0;&#xC11C; websocket-sharp.clone &#xB85C; &#xAC80;&#xC0C9;&#xD558;&#xBA74; &#xB098;&#xC635;&#xB2C8;&#xB2E4;. WebSocketSharp&#xC5D0; &#xBE44;&#xD574; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xC870;&#xAE08; &#xB354; &#xAE4C;&#xB2E4;&#xB86D;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC;, &#xBE44;&#xB3D9;&#xAE30;(async)&#xCC98;&#xB9AC;&#xB97C; &#xC9C0;&#xC6D0;&#xD574; &#xC90D;&#xB2C8;&#xB2E4;. OnMessage &#xC774;&#xBCA4;&#xD2B8;&#xB97C; &#xC0DD;&#xC131;&#xC790;&#xC5D0;&#xAC8C; &#xC785;&#xB825;&#xD574;&#xC918;&#xC57C; &#xD558;&#xB294;&#xB370;, &#xD0C0;&#xC785;&#xC774; &#xAE4C;&#xB2E4;&#xB85C;&#xC6CC;&#xC11C; &#xC27D;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. (&#xC800;&#xB3C4; &#xAD6C;&#xD604;&#xD574;&#xBCF4;&#xB824;&#xACE0; &#xC2DC;&#xB3C4;&#xD558;&#xB2E4;&#xAC00; &#xADC0;&#xCC2E;&#xC544;&#xC11C; &#xAD00;&#xB480;&#xC2B5;&#xB2C8;&#xB2E4;.) 1234567891011using WebSocketSharp;WebSocket ws = new WebSocket(url: &quot;ws://localhost:5000&quot;);await ws.Connect();Console.WriteLine(ws.ReadyState); // Openbool result = await ws.Send(new byte[] { 0x03, 0x01, 0x10, 0xFF });Console.WriteLine(result.ToString()); // true 3. System.Net.WebSockets &#xC0AC;&#xC6A9; &#xBCC4;&#xB3C4;&#xC758; nuget &#xC124;&#xCE58; &#xD544;&#xC694;&#xC5C6;&#xC774; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. SendAsync()&#xAC00; &#xC2E4;&#xD589; &#xC911; &#xB2E4;&#xC2DC; &#xC2E4;&#xD589;&#xD558;&#xBA74; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7EC;&#xB2C8; &#xBCC4;&#xB3C4;&#xC758; Lock&#xC791;&#xC5C5;&#xC744; &#xD574;&#xC8FC;&#xB358;&#xC9C0; &#xBA54;&#xC138;&#xC9C0; &#xC804;&#xC1A1;&#xC744; Queue&#xCC98;&#xB9AC;&#xD574;&#xC11C; &#xD55C; &#xACF3;&#xC5D0;&#xC11C;&#xB9CC; &#xB3D9;&#xC791;&#xD558;&#xAC8C; &#xAD6C;&#xD604;&#xC744; &#xD574;&#xC918;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. ReceiveAsync()&#xB97C; &#xD638;&#xCD9C;&#xD574;&#xC11C; &#xAC12;&#xC744; &#xC77D;&#xC5B4;&#xC57C; &#xD558;&#xBBC0;&#xB85C;, &#xAD6C;&#xD604;&#xD558;&#xAE30;&#xC5D0; &#xBD88;&#xD3B8;&#xD568;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xD568;&#xC218;&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; Event&#xB97C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC11C; &#xAD6C;&#xD604;&#xC744; &#xD574;&#xC8FC;&#xBA74; &#xD3B8;&#xB9AC;&#xD558;&#xAC8C; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD560;&#xAC70;&#xB77C; &#xC0DD;&#xAC01;&#xB429;&#xB2C8;&#xB2E4;. &#xADC0;&#xCC2E;&#xC544;&#xC11C; &#xC800;&#xB3C4; &#xADF8;&#xB807;&#xAC8C; &#xAD6C;&#xD604;&#xD574; &#xBCF4;&#xB824;&#xB2E4; &#xB9D0;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;. 1234567891011using System.Net.WebSockets;ClientWebSocket ws = new ClientWebSocket();Uri uri = new Uri(&quot;ws://localhost:5000&quot;);await ws.ConnectAsync(uri, CancellationToken.None);Console.WriteLine(ws.State); // openvar segment = new ArraySegment&lt;byte&gt;(new byte[] { 0x03, 0x01, 0x10, 0xFF });await ws.SendAsync(segment, WebSocketMessageType.Binary, true, CancellationToken.None);","categories":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/categories/C/"},{"name":"C#","slug":"C/C","permalink":"http://DevStarSJ.github.io/categories/C/C/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"}]},{"title":"Chapter 7 Exceptions, Memory, and Performance","slug":"TypeScript.07.Exceptions, Memory, and Performance","date":"2016-08-15T15:00:00.000Z","updated":"2017-04-23T09:46:06.000Z","comments":true,"path":"2016/08/16/TypeScript.07.Exceptions, Memory, and Performance/","link":"","permalink":"http://DevStarSJ.github.io/2016/08/16/TypeScript.07.Exceptions, Memory, and Performance/","excerpt":"","text":"Chapter 7 Exceptions, Memory, and Performance &#xC608;&#xC678;(Exception) &#xBC0F; &#xBA54;&#xBAA8;&#xB9AC; &#xAD00;&#xB9AC;(MM : Memory Management)&#xB97C; &#xC798; &#xC54C;&#xBA74; &#xD504;&#xB85C;&#xADF8;&#xB7A8; &#xC791;&#xC131;&#xC5D0; &#xB3C4;&#xC6C0;&#xC774; &#xB428; TypeScript, JavaScript&#xC758; &#xC608;&#xC678;&#xAC00; C#, Java, PHP &#xB4F1; &#xB2E4;&#xB978; &#xC5B8;&#xC5B4;&#xB97C; &#xB2E4;&#xB904;&#xBCF8; &#xAC1C;&#xBC1C;&#xC790;&#xB4E4;&#xC5D0;&#xAC8C;&#xB294; &#xCE5C;&#xC219;&#xD574; &#xBCF4;&#xC774;&#xACA0;&#xC9C0;&#xB9CC;, &#xBBF8;&#xBB18;&#xD55C; &#xCC28;&#xC774;&#xAC00; &#xC788;&#xC74C; 7&#xC7A5;&#xC5D0;&#xC11C; MM &#xACFC; GC(Garbage Collection) &#xC758; &#xCD5C;&#xC801;&#xD654; &#xD14C;&#xC2A4;&#xD2B8;&#xB97C; &#xC704;&#xD55C; &#xCE21;&#xC815; &#xBC29;&#xBC95;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xB2E4;&#xB8F0; &#xC608;&#xC815; 1. &#xC608;&#xC678; (Exceptions) &#xC608;&#xC678;&#xB294; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC774;&#xB098; &#xBAA8;&#xB4C8;&#xC774; &#xACC4;&#xC18D;&#xD574;&#xC11C; &#xCC98;&#xB9AC;&#xD558;&#xB294;&#xAC8C; &#xBD88;&#xAC00;&#xB2A5;&#xD568;&#xC744; &#xB098;&#xD0C0;&#xB0B4;&#xAE30; &#xC704;&#xD574; &#xC0AC;&#xC6A9;&#xB428; &#xD558;&#xC9C0;&#xB9CC;, Program Logic &#xC0C1;&#xC758; &#xBB38;&#xC81C;&#xB97C; &#xC608;&#xC678;&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xCC98;&#xB9AC;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xAC00; &#xC885;&#xC885; &#xC788;&#xB294;&#xB370;, &#xC774; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC608;&#xC678;&#xCC98;&#xB9AC; &#xC5C6;&#xC774; Logic&#xC73C;&#xB85C; &#xAC80;&#xC99D;&#xD558;&#xB294;&#xAC8C; &#xB354;&#xC6B1; &#xBC14;&#xB78C;&#xC9C1;&#xD568; &#xC608;&#xC678;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xBCC4;&#xB3C4;&#xC758; &#xCC98;&#xB9AC;&#xB97C; &#xD574;&#xC8FC;&#xC9C0; &#xC54A;&#xC73C;&#xBA74; JavaScript &#xCF58;&#xC194;&#xC5D0; &#xD45C;&#xC2DC;&#xB428;. (&#xCF58;&#xC194;&#xC5D0;&#xB294; &#xAC1C;&#xBC1C;&#xC790;&#xAC00; &#xBCC4;&#xB3C4;&#xC758; &#xCD9C;&#xB825;&#xC744; &#xD560; &#xC218;&#xB3C4; &#xC788;&#xC74C;) &#xCD5C;&#xC2E0; &#xBE0C;&#xB77C;&#xC6B0;&#xC800; &#xB4E4;&#xC740; &#xCF58;&#xC194; &#xAE30;&#xB2A5;&#xC744; &#xBAA8;&#xB450; &#xC81C;&#xACF5;&#xD568; Windows, Linux&#xB294; Ctrl + Shift + I &#xB610;&#xB294; F12 , Mac&#xC740; Cmd + Opt + I&#xB97C; &#xB204;&#xB974;&#xBA74; &#xAC1C;&#xBC1C;&#xC790; &#xB3C4;&#xAD6C;, &#xBE0C;&#xB77C;&#xC6B0;&#xC800; &#xCF58;&#xC194;&#xC774; &#xC5F4;&#xB9BC; 1.1 &#xC608;&#xC678; &#xBC1C;&#xC0DD; (Throwing Exceptions) throw &#xD0A4;&#xC6CC;&#xB4DC;&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xC608;&#xC678;&#xB97C; &#xBC1C;&#xC0DD;&#xC2DC;&#xD0B4; &#xC608;&#xC678;&#xB85C; &#xC5B4;&#xB5A4; &#xD0C0;&#xC785;&#xC758; &#xAC1D;&#xCCB4;&#xB77C;&#xB3C4; &#xC804;&#xB2EC;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xC9C0;&#xB9CC;, &#xAC00;&#xB2A5;&#xD558;&#xB2E4;&#xBA74; Error&#xAC1D;&#xCCB4;&#xC5D0; &#xBA54;&#xC138;&#xC9C0;&#xB97C; &#xD3EC;&#xD568;&#xC2DC;&#xD0A4;&#xB294; &#xAC83;&#xC774; &#xBC14;&#xB78C;&#xC9C1;&#xD568; Listing 7-1. Using the throw keyword 123456789function errorsOnThree(input: number) { if (input === 3) { throw new Error(&apos;Three is not allowed&apos;); } return input;}var result = errorsOnThree(3); Error &#xD0C0;&#xC785;&#xC758; &#xC608;&#xC678;&#xB97C; &#xC804;&#xB2EC;&#xD558;&#xB294; &#xC608;&#xC81C;&#xC778;&#xB370;, &#xC0AC;&#xC6A9;&#xC790; &#xC815;&#xC758; &#xC608;&#xC678;&#xB97C; &#xC9C1;&#xC811; &#xAD6C;&#xD604;&#xD558;&#xB294; &#xAC83;&#xB3C4; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. toString() &#xBA54;&#xC11C;&#xB4DC;&#xB97C; &#xAD6C;&#xD604;&#xD574;&#xC8FC;&#xBA74; &#xCF58;&#xC194;&#xC5D0; &#xCD9C;&#xB825;&#xB418;&#xB294; &#xC815;&#xBCF4;&#xB97C; &#xBCF4;&#xAE30; &#xC88B;&#xAC8C; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. Listing 7-2. Custom error 1234567891011121314class ApplicationError implements Error { public name = &apos;ApplicationError&apos;; constructor(public message: string) { if (typeof console != &apos;undefined&apos;) { console.log(&apos;Creating &apos; + this.name + &apos; &quot;&apos; + message + &apos;&quot;&apos;); } } toString() { return this.name + &apos;: &apos; + this.message; }} InputError &#xB294; ApplicationError&#xB97C; &#xC0C1;&#xC18D;&#xBC1B;&#xC544;&#xC11C; &#xC544;&#xBB34;&#xB7F0; &#xAD6C;&#xD604;&#xB3C4; &#xD558;&#xC9C0; &#xC54A;&#xC74C; errorsOnThree &#xD568;&#xC218;&#xC5D0;&#xC11C; &#xC798;&#xBABB;&#xB41C; &#xC785;&#xB825;&#xC5D0; &#xB300;&#xD574;&#xC11C; InputError&#xB97C; &#xBC1C;&#xC0DD; Listing 7-3. Using inheritance to create special exception types 123456789101112131415161718192021class ApplicationError implements Error { public name = &apos;ApplicationError&apos;; constructor(public message: string) { } toString() { return this.name + &apos;: &apos; + this.message; }}class InputError extends ApplicationError {}function errorsOnThree(input: number) { if (input == 3) { throw new InputError(&apos;Three is not allowed&apos;); } return input;} ApplicationError&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xACE0; Error&#xB97C; &#xBC14;&#xB85C; &#xBC1C;&#xC0DD;&#xC2DC;&#xCF1C;&#xB3C4; &#xB418;&#xC9C0;&#xB9CC;, &#xC6B0;&#xB9AC;&#xAC00; &#xC791;&#xC131;&#xD55C; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C;&#xC758; &#xC624;&#xB958;&#xB97C; &#xBAA8;&#xB450; ApplicationError &#xB610;&#xB294; &#xC774;&#xAC83;&#xC744; &#xC0C1;&#xC18D;&#xBC1B;&#xC740; &#xC624;&#xB958;&#xB9CC; &#xBC1C;&#xC0DD;&#xC2DC;&#xD0AC; &#xACBD;&#xC6B0; &#xC6B0;&#xB9AC;&#xAC00; &#xC791;&#xC131;&#xD55C; &#xCF54;&#xB4DC; &#xC774;&#xC678;&#xC758; &#xACF3;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD55C; &#xC624;&#xB958;&#xC640; &#xAD6C;&#xBD84;&#xC774; &#xC26C;&#xC6CC;&#xC9D0; 1.2 &#xC608;&#xC678; &#xCC98;&#xB9AC; (Exception Handling) &#xC608;&#xC678;&#xBC1C;&#xC0DD;&#xC2DC; &#xBCC4;&#xB3C4;&#xC758; &#xCC98;&#xB9AC;&#xB97C; &#xD558;&#xC9C0; &#xC54A;&#xC73C;&#xBA74; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC774; &#xC885;&#xB8CC;&#xB428; &#xC608;&#xC678;&#xB97C; &#xCC98;&#xB9AC;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; &#xC608;&#xC678;&#xAC00; &#xBC1C;&#xC0DD;&#xD55C; &#xACF3;&#xC744; try-catch-finally &#xBE14;&#xB85D;&#xC73C;&#xB85C; &#xAC10;&#xC2F8;&#xC918;&#xC57C; &#xD568; Listing 7-4. Unconditional catch block 12345try { var result = errorsOnThree(3);} catch (err) { console.log(&apos;Error caught, no action taken&apos;);} &#xC704; &#xC608;&#xC81C;&#xB294; &#xBAA8;&#xB4E0; &#xC885;&#xB958;&#xC758; &#xC608;&#xC678;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xCC98;&#xB9AC;&#xB97C; &#xD558;&#xB294; &#xCF54;&#xB4DC;&#xC778;&#xB370;, &#xC774;&#xB7F0;&#xC2DD;&#xC758; &#xCC98;&#xB9AC;&#xB294; &#xC88B;&#xC740; &#xBC29;&#xBC95;&#xC774; &#xC544;&#xB2D9;&#xB2C8;&#xB2E4;. &#xC6B0;&#xB9AC;&#xAC00; &#xC608;&#xC0C1;&#xAC00;&#xB2A5;&#xD558;&#xACE0; &#xCC98;&#xB9AC;&#xAC00;&#xB2A5;&#xD55C; &#xC608;&#xC678;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB9CC; &#xCC98;&#xB9AC;&#xB97C; &#xD558;&#xACE0; &#xB098;&#xBA38;&#xC9C0; &#xC608;&#xC678;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xB2E4;&#xC2DC; &#xBC1C;&#xC0DD;&#xC2DC;&#xD0A4;&#xB294; &#xAC83;&#xC774; &#xB354; &#xC62C;&#xBC14;&#xB978; &#xBC29;&#xBC95;&#xC785;&#xB2C8;&#xB2E4;. Listing 7-5. Checking the type of error 123456789try { var result = errorsOnThree(3);} catch (err) { if (!(err instanceof ApplicationError)) { throw err; } console.log(&apos;Error caught, no action taken&apos;);} &#xC704; &#xC608;&#xC81C;&#xB294; ApplicationError&#xC640; &#xC774; &#xAC83;&#xC744; &#xC0C1;&#xC18D;&#xBC1B;&#xC740; &#xC624;&#xB958;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB9CC; &#xCC98;&#xB9AC;&#xB97C; &#xD558;&#xACE0; &#xB098;&#xBA38;&#xC9C0;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xCC98;&#xB9AC;&#xB97C; &#xD558;&#xC9C0; &#xC54A;&#xB294; &#xCF54;&#xB4DC;&#xC785;&#xB2C8;&#xB2E4;. Figure 7-1. Error class hierarchy ApplicationError &#xB300;&#xC2E0; InputError&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xCC98;&#xB9AC;&#xD558;&#xB3C4;&#xB85D; &#xD588;&#xB2E4;&#xBA74;, &#xC544;&#xB798; &#xADF8;&#xB9BC;&#xACFC; &#xAC19;&#xC774; InputError, BelowMinError, AboveMaxError, InvalidLengthError&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xCC98;&#xB9AC;&#xB97C; &#xD574;&#xC8FC;&#xC9C0;&#xB9CC;, &#xB098;&#xBA38;&#xC9C0;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xCC98;&#xB9AC;&#xB97C; &#xD558;&#xC9C0; &#xC54A;&#xACE0; Call Stack&#xC5D0; &#xC624;&#xB958;&#xB97C; &#xC804;&#xB2EC;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. Figure 7-2. Handling InputError exceptions ApplicationError&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xC544;&#xB798; 7&#xAC00;&#xC9C0; &#xC624;&#xB958;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xCC98;&#xB9AC;&#xB97C; &#xD574;&#xC90D;&#xB2C8;&#xB2E4;. Figure 7-3. Handling ApplicationError exceptions &#xB85C;&#xC6B0;&#xB808;&#xBCA8; &#xAD00;&#xB828; &#xCF54;&#xB4DC;&#xB97C; &#xC791;&#xC5C5;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC608;&#xC678;&#xC758; &#xD0C0;&#xC785;&#xC744; &#xC815;&#xD655;&#xD558;&#xAC8C; &#xBD84;&#xB958;&#xD558;&#xC5EC; &#xC791;&#xC5C5;&#xC744; &#xD560; &#xD544;&#xC694;&#xAC00; &#xC788;&#xC9C0;&#xB9CC;, UI &#xC791;&#xC5C5;&#xACFC; &#xAC19;&#xC740; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC880;&#xB354; &#xC77C;&#xBC18;&#xC801;&#xC778; &#xC608;&#xC678; &#xC885;&#xB958;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xCC98;&#xB9AC;&#xB97C; &#xD558;&#xC5EC;&#xB3C4; &#xBB34;&#xBC29;&#xD569;&#xB2C8;&#xB2E4;. &#xC608;&#xC678;&#xB294; &#xC131;&#xB2A5; &#xBE44;&#xC6A9;&#xC774; &#xD070; &#xD3B8;&#xC5D0; &#xC18D;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xB2E8;&#xC21C;&#xD788; &#xB8E8;&#xD504;&#xB97C; &#xBE60;&#xC838;&#xB098;&#xAC00;&#xAE30; &#xC704;&#xD55C; &#xC2E0;&#xD638; &#xAC19;&#xC740; &#xC6A9;&#xB3C4;&#xB85C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xC740; &#xC801;&#xC808;&#xD558;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. 2. &#xBA54;&#xBAA8;&#xB9AC; (Memory) TypeScript &#xAC19;&#xC740; &#xACE0;&#xCC28;&#xC6D0; &#xC5B8;&#xC5B4;&#xC5D0;&#xC11C;&#xB294; &#xBA54;&#xBAA8;&#xB9AC; &#xAD00;&#xB9AC;&#xAC00; &#xC790;&#xB3D9;&#xC73C;&#xB85C; &#xB429;&#xB2C8;&#xB2E4;. &#xC6B0;&#xB9AC;&#xAC00; &#xC0DD;&#xC131;&#xD55C; &#xBCC0;&#xC218;&#xB098; &#xAC1D;&#xCCB4;&#xC758; &#xACBD;&#xC6B0; &#xBC94;&#xC704;&#xB97C; &#xB118;&#xC5B4;&#xC11C; &#xC0AC;&#xC6A9;&#xB41C;&#xB2E4;&#xB358;&#xC9C0;, &#xB315;&#xAE00;&#xB9C1; &#xD3EC;&#xC778;&#xD2B8;(dangling pointer)&#xAC00; &#xB418;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB300;&#xBD80;&#xBD84;&#xC758; &#xBA54;&#xBAA8;&#xB9AC; &#xAD00;&#xB828; &#xC624;&#xB958;&#xB294; &#xC790;&#xB3D9;&#xC73C;&#xB85C; &#xCC98;&#xB9AC;&#xB418;&#xC9C0;&#xB9CC; Out of Memory&#xAC19;&#xC774; &#xCC98;&#xB9AC;&#xAC00; &#xB418;&#xC9C0; &#xC54A;&#xB294; &#xC624;&#xB958;&#xB3C4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xBC88; &#xC7A5;&#xC5D0;&#xC11C;&#xB294; &#xC5B4;&#xB5BB;&#xAC8C; &#xD558;&#xBA74; &#xADF8;&#xB7F0; &#xC624;&#xB958;&#xB4E4;&#xC744; &#xD53C;&#xD560; &#xC218; &#xC788;&#xC744; &#xAC83;&#xC778;&#xC9C0;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xB2E4;&#xB904;&#xBCFC; &#xC608;&#xC815;&#xC785;&#xB2C8;&#xB2E4;. 2.1 &#xC790;&#xC6D0; &#xD574;&#xC81C; (Releasing Resources) &#xD0C0;&#xC785;&#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xC5D0;&#xC11C;&#xB294; &#xAD00;&#xB9AC;&#xB418;&#xC9C0; &#xC54A;&#xB294; &#xC790;&#xC6D0;&#xC744; &#xC0AC;&#xC6A9;&#xD560; &#xACBD;&#xC6B0;&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB300;&#xBD80;&#xBD84;&#xC758; API&#xB4E4;&#xC740; &#xC791;&#xC5C5;&#xC774; &#xC644;&#xB8CC;&#xB418;&#xC5C8;&#xC744; &#xACBD;&#xC6B0; &#xC778;&#xC790;&#xAC00; &#xC804;&#xB2EC;&#xB418;&#xB294; &#xBE44;&#xB3D9;&#xAE30; &#xD328;&#xD134;&#xC73C;&#xB85C; &#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC13C;&#xC11C;&#xC5D0; &#xAC00;&#xAE4C;&#xC774; &#xC788;&#xC744; &#xB54C; &#xAC80;&#xCD9C;&#xB418;&#xB294; API&#xC5D0; &#xB300;&#xD55C; &#xC0AC;&#xC6A9; &#xC608;&#xC81C;&#xB97C; &#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. Listing 7-6. Asynchronous pattern 12345678var sensorChange = function (reading) { var proximity = reading.near ? &apos;Near&apos; : &apos;Far&apos;; alert(proximity);}window.addEventListener(&apos;userproximity&apos;, sensorChange, true); &#xBE44;&#xB3D9;&#xAE30; &#xD328;&#xD134;&#xC744; &#xD1B5;&#xD574; &#xADFC;&#xC811; &#xC13C;&#xC11C;&#xB85C;&#xBD80;&#xD130; &#xC815;&#xBCF4;&#xB97C; &#xC5BB;&#xC5B4; &#xC62C;&#xC218; &#xC788;&#xC9C0;&#xB9CC;, &#xD1B5;&#xC2E0; &#xCC44;&#xB110;&#xC744; &#xD1B5;&#xD55C; &#xC751;&#xB2F5;&#xC744; &#xBCF4;&#xC7A5;&#xD574; &#xC8FC;&#xC9C0;&#xB294; &#xBABB;&#xD569;&#xB2C8;&#xB2E4;. &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD560; &#xACBD;&#xC6B0;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xB300;&#xBE44;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C; try-finally &#xBE14;&#xB85D;&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. Listing 7-7. Imaginary unmanaged proximity sensor 1234567891011121314151617181920var sensorChange = function (reading) { var proximity = reading.near ? &apos;Near&apos; : &apos;Far&apos;; alert(proximity);}var readProximity = function () { var sensor = new ProximitySensor(); try { sensor.open(); var reading = sensor.read(); sensorChange(reading); } finally { sensor.close(); }}window.setInterval(readProximity, 500); finally &#xBE14;&#xB85D;&#xC744; &#xD1B5;&#xD574;&#xC11C; sensor&#xC758; open, read, sensorChange &#xC911; &#xC5B4;&#xB514;&#xC5D0;&#xC11C; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB354;&#xB77C;&#xB3C4; close&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xB294; &#xAC83;&#xC744; &#xBCF4;&#xC7A5;&#xD574; &#xC8FC;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. 2.2 &#xAC00;&#xBE44;&#xC9C0; &#xCF5C;&#xB809;&#xC158; (Garbage Collection) &#xBA54;&#xBAA8;&#xB9AC;&#xAC00; &#xB354; &#xC774;&#xC0C1; &#xC0AC;&#xC6A9;&#xB418;&#xC9C0; &#xC54A;&#xC744; &#xACBD;&#xC6B0; GC&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xD574;&#xC81C;&#xB418;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. &#xC608;&#xC804; &#xBC29;&#xC2DD;&#xC758; &#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xC758; &#xACBD;&#xC6B0; &#xCC38;&#xC870; &#xCE74;&#xC6B4;&#xD2B8;(Reference Count)&#xAC00; 0&#xC774; &#xB418;&#xC5C8;&#xC744; &#xACBD;&#xC6B0; &#xD574;&#xC81C;&#xB97C; &#xD558;&#xAC8C; &#xB418;&#xB294;&#xB370;, &#xB9CC;&#xC57D; 2&#xAC1C;&#xC758; &#xAC1D;&#xCCB4;&#xAC00; &#xC11C;&#xB85C; &#xCC38;&#xC870;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; RC&#xAC00; 0&#xC774; &#xB418;&#xC9C0; &#xC54A;&#xC544;&#xC11C; &#xD574;&#xC81C;&#xB418;&#xC9C0; &#xC54A;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. Table 7-1. Reference counting garbage collection &#xCD5C;&#xC2E0;&#xC758; &#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xB8E8;&#xD2B8;&#xC5D0; &#xB3C4;&#xB2EC; &#xAC00;&#xB2A5;&#xD55C; &#xBAA8;&#xB4E0; &#xAC1D;&#xCCB4;&#xB97C; &#xCC3E;&#xC544;&#xB0B8; &#xB4A4;, &#xB098;&#xBA38;&#xC9C0; &#xAC1D;&#xCCB4;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xB9C8;&#xD06C;&#xC564;&#xC2A4;&#xC715;(mark-and-sweep) &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xD574;&#xACB0;&#xD569;&#xB2C8;&#xB2E4;. GC &#xC218;&#xD589; &#xC2DC;&#xAC04;&#xC740; &#xB354; &#xAC78;&#xB9B4; &#xC218; &#xC788;&#xC9C0;&#xB9CC;, &#xBA54;&#xBAA8;&#xB9AC; &#xB204;&#xC218;&#xC758; &#xBC1C;&#xC0DD; &#xAC00;&#xB2A5;&#xC131;&#xC744; &#xC904;&#xC5EC; &#xC90D;&#xB2C8;&#xB2E4;. Figure 7-4. Mark and sweep Table 7-1&#xACFC; Figure 7-4&#xAC00; &#xB3D9;&#xC77C;&#xD55C; &#xAC1D;&#xCCB4;&#xC77C; &#xACBD;&#xC6B0; RC&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xB77C;&#xBA74; E&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB9CC; &#xD574;&#xC81C;&#xB97C; &#xD558;&#xC9C0;&#xB9CC;, MAS&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xB77C;&#xBA74; &#xC11C;&#xB85C; &#xCC38;&#xC870;&#xD558;&#xACE0; &#xC788;&#xB294; A,B&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB3C4; &#xD574;&#xC81C;&#xAC00; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. 3. &#xC131;&#xB2A5; (Performance) &#xAC1C;&#xBC1C;&#xC790;&#xB4E4;&#xC774; &#xBCC4;&#xB85C; &#xC911;&#xC694;&#xD558;&#xC9C0;&#xB3C4; &#xC54A;&#xC740; &#xC131;&#xB2A5;&#xACFC; &#xD6A8;&#xC728; &#xB4F1;&#xC5D0; &#xB300;&#xD574; &#xACE0;&#xB824;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xAC00; &#xB9CE;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xB300;&#xBD80;&#xBD84;&#xC758; &#xACBD;&#xC6B0;(97%)&#xB294; &#xACE0;&#xB824;&#xD558;&#xC9C0; &#xC54A;&#xC544;&#xB3C4; &#xB420;&#xB9CC;&#xD07C; &#xD6A8;&#xC728;&#xC774; &#xC791;&#xC740; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;&#xB9CC;, &#xCE58;&#xBA85;&#xC801;&#xC778; &#xBD80;&#xBD84;(3%)&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xAC04;&#xACFC;&#xD558;&#xBA74; &#xC548;&#xB429;&#xB2C8;&#xB2E4;. &#xCE21;&#xC815; &#xAC00;&#xB2A5;&#xD55C; &#xC131;&#xB2A5; &#xBB38;&#xC81C;&#xAC00; &#xBC1C;&#xACAC;&#xB418;&#xAE30; &#xC804;&#xAE4C;&#xC9C0;&#xB294; &#xCD5C;&#xC801;&#xD654;&#xB97C; &#xD558;&#xC9C0; &#xC54A;&#xB294;&#xAC8C; &#xC88B;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC9C0;&#xC5ED; &#xBCC0;&#xC218;&#xB294; &#xAC1D;&#xCCB4;&#xC758; &#xC18D;&#xC131;&#xBCF4;&#xB2E4; &#xB290;&#xB9AC;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xB9D0;&#xC544;&#xC57C; &#xD55C;&#xB2E4;&#xB294; &#xC8FC;&#xC7A5;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774; &#xB9D0;&#xC774; &#xC0AC;&#xC2E4;&#xC77C; &#xC218;&#xB294; &#xC788;&#xC9C0;&#xB9CC;, &#xD504;&#xB85C;&#xADF8;&#xB7A8; &#xB514;&#xC790;&#xC778;&#xC744; &#xC9C0;&#xC800;&#xBD84;&#xD558;&#xAC8C; &#xD560; &#xC5EC;&#xC9C0;&#xAC00; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC870;&#xC2EC;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xCD5C;&#xC801;&#xD654;&#xC640; &#xC88B;&#xC740; &#xB514;&#xC790;&#xC778;&#xC740; &#xD2B8;&#xB808;&#xC774;&#xB4DC;-&#xC624;&#xD504; &#xAD00;&#xACC4;&#xC5D0; &#xC788;&#xB294; &#xACBD;&#xC6B0;&#xAC00; &#xB9CE;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC2E0;&#xC911;&#xD558;&#xAC8C; &#xACB0;&#xC815;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. TypeScript&#xC758; &#xC131;&#xB2A5;&#xC740; &#xC5EC;&#xB7EC; &#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xC5D0;&#xC11C; &#xCE21;&#xC815;&#xD574;&#xBD10;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB807;&#xC9C0; &#xC54A;&#xC73C;&#xBA74; &#xD2B9;&#xC815; &#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xC5D0;&#xC11C;&#xB9CC; &#xBE60;&#xB974;&#xACE0; &#xB2E4;&#xB978; &#xACF3;&#xC5D0;&#xC11C;&#xB294; &#xB290;&#xB824;&#xC9C8; &#xC218;&#xB3C4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC544;&#xB798; &#xCF54;&#xB4DC;&#xB294; &#xAC04;&#xB2E8;&#xD55C; &#xC131;&#xB2A5; &#xD14C;&#xC2A4;&#xD2B8;&#xC6A9;&#xC785;&#xB2C8;&#xB2E4;. CommunicationLines &#xD074;&#xB798;&#xC2A4;&#xB294; &#xD300; &#xAD6C;&#xC131;&#xC6D0; &#xB4E4; &#xC0AC;&#xC774;&#xC758; &#xC758;&#xC0AC; &#xC18C;&#xD1B5; &#xB77C;&#xC778; &#xC218;&#xB97C; N(N-1)/2 &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xAD6C;&#xD569;&#xB2C8;&#xB2E4;. testCommunicationLines &#xD568;&#xC218;&#xB294; &#xC0AC;&#xC774;&#xC988;&#xAC00; 4, 10 &#xC778; &#xACBD;&#xC6B0;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xACC4;&#xC0B0;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xD14C;&#xC2A4;&#xD2B8; &#xD569;&#xB2C8;&#xB2E4;. Listing 7-8. Calculating lines of communication 12345678910111213141516171819202122class CommunicationLines { calculate(teamSize: number) { return (teamSize * (teamSize - 1)) / 2 }}function testCommunicationLines() { var communicationLines = new CommunicationLines(); var result = communicationLines.calculate(4); if (result !== 6) { throw new Error(&apos;Test failed for team size of 4.&apos;); } result = communicationLines.calculate(10); if (result !== 45) { throw new Error(&apos;Test failed for team size of 10.&apos;); }}testCommunicationLines(); &#xC544;&#xB798; &#xCF54;&#xB4DC;&#xB294; &#xD568;&#xC218;&#xC640; &#xC2E4;&#xD589; &#xD69F;&#xC218;&#xB97C; &#xC778;&#xC790;&#xB85C; &#xBC1B;&#xC544;&#xC11C; &#xC131;&#xB2A5;&#xC744; &#xD14C;&#xC2A4;&#xD2B8; &#xD574;&#xC8FC;&#xB294; &#xD074;&#xB798;&#xC2A4; &#xC785;&#xB2C8;&#xB2E4;. performance.now()&#xB85C; &#xC804;&#xB2EC;&#xBC1B;&#xC740; &#xD568;&#xC218;&#xB97C; &#xAC10;&#xC2F8;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C;&#xB294; 10,000&#xBC88; &#xC2E4;&#xD589;&#xC744; &#xD574;&#xC11C; &#xCD1D; &#xC2DC;&#xAC04; &#xBC0F; &#xD3C9;&#xADE0; &#xC2DC;&#xAC04;&#xC744; &#xCD9C;&#xB825;&#xD569;&#xB2C8;&#xB2E4;. Listing 7-9. Performance.ts runner 12345678910111213141516171819202122232425262728293031323334353637383940class Performance { constructor(private func: Function, private iterations: number) { } private runTest() { if (!performance) { throw new Error(&apos;The performance.now() standard is not supported in this runtime.&apos;); } var errors: number[] = []; var testStart = performance.now(); for (var i = 0; i &lt; this.iterations; i++) { try { this.func(); } catch (err) { // Limit the number of errors logged if (errors.length &lt; 10) { errors.push(i); } } } var testTime = performance.now() - testStart; return { errors: errors, totalRunTime: testTime, iterationAverageTime: (testTime / this.iterations) }; } static run(func: Function, iterations = 10000) { var tester = new Performance(func, iterations); return tester.runTest(); }}export = Performance; &#xC55E;&#xC5D0;&#xC11C; &#xC791;&#xC131;&#xD55C; CommunicationLines &#xD074;&#xB798;&#xC2A4;&#xC5D0; &#xB300;&#xD55C; &#xC131;&#xB2A5; &#xCE21;&#xC815;&#xC744; Performance&#xB85C; &#xC131;&#xB2A5; &#xCE21;&#xC815;&#xC744; &#xD558;&#xB294; &#xAC83;&#xC5D0; &#xB300;&#xD55C; &#xC608;&#xC81C; &#xC785;&#xB2C8;&#xB2E4;. Listing 7-10. Running the performance test 12345678910111213141516171819202122232425import perf = require(&apos;./performance&apos;);class CommunicationLines { calculate(teamSize: number) { return (teamSize * (teamSize - 1)) / 2 }}function testCommunicationLines() { var communicationLines = new CommunicationLines(); var result = communicationLines.calculate(4); if (result !== 6) { throw new Error(&apos;Test failed for team size of 4.&apos;); } result = communicationLines.calculate(10); if (result !== 45) { throw new Error(&apos;Test failed for team size of 10.&apos;); }}var result = perf.run(testCommunicationLines);console.log(result.totalRunTime + &apos; ms&apos;); &#xC704; &#xD14C;&#xC2A4;&#xD2B8; &#xACB0;&#xACFC;&#xAC00; 2.73ms&#xB85C; &#xB098;&#xC654;&#xC2B5;&#xB2C8;&#xB2E4;. (communicationLines.calculate()&#xB97C; 2&#xB9CC;&#xBC88; &#xD638;&#xCD9C;) &#xC774;&#xB7F0;&#xC2DD;&#xC73C;&#xB85C; &#xD14C;&#xC2A4;&#xD2B8;&#xB294; &#xCD5C;&#xC801;&#xD654; &#xC704;&#xCE58;&#xB97C; &#xC801;&#xC808;&#xD558;&#xAC8C; &#xCC3E;&#xB294; &#xAC83;&#xC5D0; &#xB3C4;&#xC6C0;&#xC774; &#xB429;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xC544;&#xB798; &#xCF54;&#xB4DC;&#xC640; &#xAC19;&#xC774; &#xC608;&#xC678;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xAC8C; &#xB41C;&#xB2E4;&#xBA74; &#xC804;&#xD600; &#xB2E4;&#xB978; &#xACB0;&#xACFC;&#xAC00; &#xB098;&#xC635;&#xB2C8;&#xB2E4;. Listing 7-11. Running the performance test with exceptions 1234567891011121314151617181920212223242526import perf = require(&apos;./performance&apos;);class CommunicationLines { calculate(teamSize: number) { return (teamSize * (teamSize - 1)) / 2 }}function testCommunicationLines() { var communicationLines = new CommunicationLines(); var result = communicationLines.calculate(4); // This test will now fail if (result !== 7) { throw new Error(&apos;Test failed for team size of 4.&apos;); } result = communicationLines.calculate(10); if (result !== 45) { throw new Error(&apos;Test failed for team size of 10.&apos;); }}var result = perf.run(testCommunicationLines);console.log(result.totalRunTime + &apos; ms&apos;); &#xC704; &#xD14C;&#xC2A4;&#xD2B8; &#xACB0;&#xACFC;&#xB294; 214.45ms &#xC989; 78&#xBC30;&#xB098; &#xB354; &#xB290;&#xB824;&#xC84C;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB2E4;&#xC591;&#xD55C; &#xC870;&#xAC74; &#xBC0F; &#xC2E4;&#xD589;&#xD68C;&#xC218;&#xB85C; &#xD14C;&#xC2A4;&#xD2B8;&#xB97C; &#xD574; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB2E4;&#xC74C; &#xACB0;&#xACFC;&#xB294; Performance &#xD074;&#xB798;&#xC2A4;&#xB97C; &#xD1B5;&#xD574; &#xC5EC;&#xB7EC;&#xAC00;&#xC9C0; &#xB2E4;&#xB978; &#xBC29;&#xBC95;&#xC73C;&#xB85C; &#xAD6C;&#xD604;&#xD588;&#xC744; &#xB584;&#xC758; &#xC218;&#xCE58;&#xC785;&#xB2C8;&#xB2E4;. Iteration : 0.74ms Global variables: 0.80 ms (0.06 ms slower per iteration) Closures: 1.13 ms (0.39 ms slower per iteration) Properties: 1.48 ms (0.74 ms slower per iteration) &#xC774;&#xB807;&#xB4EF; &#xC5B4;&#xB5BB;&#xAC8C; &#xAD6C;&#xD604;&#xD558;&#xB0D0;&#xC5D0; &#xB530;&#xB77C; &#xC2E4;&#xD589;&#xACB0;&#xACFC;&#xAC00; &#xAC01;&#xAC01; &#xB2E4;&#xB974;&#xAC8C; &#xB098;&#xD0C0;&#xB098;&#xAE30; &#xB54C;&#xBB38;&#xC5D0;, &#xCD5C;&#xC801;&#xD654;&#xB97C; &#xD558;&#xAE30; &#xC804;&#xC5D0; &#xC774;&#xB7F0;&#xC2DD;&#xC73C;&#xB85C; &#xCE21;&#xC815;&#xC744; &#xD574;&#xBCF4;&#xACE0; &#xACB0;&#xC815;&#xC744; &#xD558;&#xB294; &#xAC83;&#xC774; &#xC88B;&#xC2B5;&#xB2C8;&#xB2E4;. Summary &#xC911;&#xC694;&#xD55C; 3&#xAC00;&#xC9C0; &#xC810;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC0B4;&#xD3B4;&#xBCF4;&#xC558;&#xB294;&#xB370;, &#xC774;&#xB7F0; &#xAC83;&#xC744; &#xC798; &#xACE0;&#xB824;&#xD558;&#xBA74; &#xC880; &#xB354; &#xC27D;&#xAC8C; &#xC9C0;&#xB984;&#xAE38;&#xB85C; &#xAC00;&#xB4EF; &#xCF54;&#xB4DC;&#xB97C; &#xC791;&#xC131; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC608;&#xC678; &#xCC98;&#xB9AC;&#xB97C; &#xC798;&#xD558;&#xBA74; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC774; &#xBE44;&#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xC885;&#xB8CC;&#xB418;&#xB294; &#xD604;&#xC0C1;&#xC744; &#xBC29;&#xC9C0;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC0AC;&#xC6A9;&#xC790; &#xC815;&#xC758; &#xC608;&#xC678;&#xB97C; &#xC791;&#xC131;&#xD558;&#xBA74; &#xAC01;&#xAC01; &#xC624;&#xB958;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xAD6C;&#xBD84;&#xC744; &#xD560; &#xC218; &#xC788;&#xC5B4;&#xC11C; &#xB3C4;&#xC6C0;&#xC774; &#xB418;&#xBA70;, &#xD574;&#xACB0; &#xAC00;&#xB2A5;&#xD55C; &#xC608;&#xC678;&#xB9CC; catch&#xC808;&#xC5D0;&#xC11C; &#xCC98;&#xB9AC;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xC694;&#xC998;&#xC758; &#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xB4E4;&#xC740; mark-and-sweep &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC744; &#xC774;&#xC6A9;&#xD558;&#xBBC0;&#xB85C; &#xC21C;&#xD658; &#xCC38;&#xC870;&#xC5D0; &#xB300;&#xD55C; &#xBA54;&#xBAA8;&#xB9AC; &#xB204;&#xC218;&#xB294; &#xC2E0;&#xACBD;&#xC744; &#xC4F8; &#xD544;&#xC694;&#xAC00; &#xC5C6;&#xC2B5;&#xB2C8;&#xB2E4;. &#xAC00;&#xBE44;&#xC9C0; &#xCEEC;&#xB809;&#xD130;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xC2E0;&#xACBD;&#xC4F0;&#xC9C0; &#xC54A;&#xACE0; &#xC791;&#xC5C5;&#xC744; &#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;&#xB9CC;, &#xC131;&#xB2A5;&#xC744; &#xCE21;&#xC815;&#xD55C;&#xB2E4;&#xB358;&#xC9C0; &#xAC00;&#xBE44;&#xC9C0; &#xCEEC;&#xB799;&#xD130;&#xC5D0; &#xBB38;&#xC81C;&#xAC00; &#xC788;&#xB294; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC880; &#xB354; &#xC791;&#xC740; &#xAC1D;&#xCCB4;&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xAC83;&#xC774; &#xC88B;&#xC2B5;&#xB2C8;&#xB2E4;. &#xCD5C;&#xC801;&#xD654; &#xC791;&#xC5C5;&#xC744; &#xD558;&#xAE30;&#xC804;&#xC5D0;&#xB294; &#xBC18;&#xB4DC;&#xC2DC; &#xC131;&#xB2A5;&#xCE21;&#xC815;&#xC744; &#xD558;&#xB294; &#xAC83;&#xC774; &#xC88B;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC5EC;&#xB7EC; &#xAC00;&#xC9C0; &#xD658;&#xACBD;&#xC5D0;&#xC11C;&#xC758; &#xC131;&#xB2A5;&#xC744; &#xCE21;&#xC815;&#xD55C; &#xB4A4;&#xC5D0; &#xBAA8;&#xB4E0; &#xC0C1;&#xD669;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xACE0;&#xB824;&#xD558;&#xC5EC; &#xCD5C;&#xC801;&#xD654; &#xC791;&#xC5C5;&#xC744; &#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. Key Points throw&#xB85C; &#xBAA8;&#xB4E0; &#xC885;&#xB958;&#xC758; &#xAC1D;&#xCCB4;&#xB97C; &#xC804;&#xB2EC;&#xD558;&#xB294;&#xAC8C; &#xAC00;&#xB2A5;&#xC740; &#xD558;&#xC9C0;&#xB9CC;, &#xB418;&#xB3C4;&#xB85D;&#xC774;&#xBA74; &#xC0AC;&#xC6A9;&#xC790; &#xC9C0;&#xC815; Error&#xC758; &#xC11C;&#xBE0C;&#xD074;&#xB798;&#xC2A4;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xC774; &#xC88B;&#xC2B5;&#xB2C8;&#xB2E4;. try-catch-finally &#xBE14;&#xB85D;&#xC73C;&#xB85C; &#xC608;&#xC678;&#xB97C; &#xC9C1;&#xC811; &#xCC98;&#xB9AC;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD2B9;&#xC815; &#xC608;&#xC678;&#xB9CC; catch &#xBE14;&#xB85D;&#xC73C;&#xB85C; &#xC7A1;&#xC744; &#xC218;&#xB294; &#xC5C6;&#xC9C0;&#xB9CC;, &#xADF8; &#xC548;&#xC5D0;&#xC11C; &#xC608;&#xC678;&#xC758; &#xD0C0;&#xC785;&#xC744; &#xCCB4;&#xD06C;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB300;&#xBD80;&#xBD84;&#xC758; API&#xAC00; &#xBE44;&#xB3D9;&#xC774; &#xD328;&#xD134;&#xC774;&#xBBC0;&#xB85C; try-finally &#xBE14;&#xB85D;&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xC790;&#xC6D0;&#xC744; &#xAD00;&#xB9AC;&#xD558;&#xB294;&#xAC8C; &#xC88B;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC131;&#xB2A5; &#xCD5C;&#xC801;&#xD654; &#xC791;&#xC5C5;&#xC744; &#xD560;&#xB54C;&#xB294; &#xCF54;&#xB4DC; &#xBCC0;&#xACBD; &#xC804;&#xD6C4;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC218;&#xCE58;&#xC801;&#xC73C;&#xB85C; &#xCE21;&#xC815;&#xC744; &#xD558;&#xB294;&#xAC8C; &#xC88B;&#xC2B5;&#xB2C8;&#xB2E4;.","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://DevStarSJ.github.io/categories/JavaScript/"},{"name":"TypeScript","slug":"JavaScript/TypeScript","permalink":"http://DevStarSJ.github.io/categories/JavaScript/TypeScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://DevStarSJ.github.io/tags/JavaScript/"},{"name":"TypeScript","slug":"TypeScript","permalink":"http://DevStarSJ.github.io/tags/TypeScript/"}]},{"title":"C# Attribute 상속 후 override 할 경우 부모 값도 잘 가져오는지 확인","slug":"CSharp.AttributeInherit","date":"2016-08-09T17:00:00.000Z","updated":"2017-04-23T10:45:18.000Z","comments":true,"path":"2016/08/10/CSharp.AttributeInherit/","link":"","permalink":"http://DevStarSJ.github.io/2016/08/10/CSharp.AttributeInherit/","excerpt":"","text":"C# Attribute &#xC0C1;&#xC18D; &#xD6C4; override &#xD560; &#xACBD;&#xC6B0; &#xBD80;&#xBAA8; &#xAC12;&#xB3C4; &#xC798; &#xAC00;&#xC838;&#xC624;&#xB294;&#xC9C0; &#xD655;&#xC778; C# Attribute class &#xC0DD;&#xC131; &#xBC0F; &#xC0AC;&#xC6A9;, &#xC0C1;&#xC18D;&#xC2DC;&#xC5D0; &#xB3D9;&#xC791; &#xB4F1;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xD655;&#xC778; &#xAC00;&#xB2A5;&#xD55C; &#xC608;&#xC81C;&#xCF54;&#xB4DC; &#xC785;&#xB2C8;&#xB2E4;. &#xCF54;&#xB4DC; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; : https://github.com/DevStarSJ/Study/tree/master/Blog/CSharp/AttributeInheritTest Step 1. Attribute &#xC874;&#xC7AC;&#xC5EC;&#xBD80; &#xAC80;&#xC0AC; AttributeInheritTest.01.cs 12345678910111213141516171819202122232425262728293031323334353637383940using System;public class Test1Attribute : Attribute{ public int t1 { get; set; } public Test1Attribute(int t) { t1 = t; }}public class Test2Attribute : Attribute{ public int t2 { get; set; } public Test2Attribute(int t) { t2 = t; }}public class Parent{ [Test1(1)] [Test2(2)] public int id { get; set; }}class Program{ static void Main(string[] args) { var propertyInfo = typeof(Parent).GetProperty(nameof(Parent.id)); var attributes = Attribute.GetCustomAttributes(propertyInfo, true); foreach (var a in attributes) { Console.WriteLine(a.GetType().ToString()); } }} 12Test2AttributeTest1Attribute Step 2. Attribute &#xB0B4;&#xBD80; &#xAC12; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; foreach &#xB0B4;&#xBD80;&#xB9CC; &#xC218;&#xC815; AttributeInheritTest.02.cs 12345678910111213foreach (var a in attributes){ Console.WriteLine(a.GetType().ToString()); if (a.GetType() == typeof(Test1Attribute)) { Console.WriteLine((a as Test1Attribute).t1); } else if (a.GetType() == typeof(Test2Attribute)) { Console.WriteLine((a as Test2Attribute).t2); }} 1234Test2Attribute2Test1Attribute1 Step 3. &#xC0C1;&#xC18D;&#xBC1B;&#xC740; &#xD6C4; Attribute &#xC874;&#xC7AC;&#xC5EC;&#xBD80; &#xAC80;&#xC0AC; &#xBC0F; &#xAC12; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; Child &#xC815;&#xC758; &#xBC0F; propertyInfo &#xC0DD;&#xC131; &#xBD80;&#xBD84;&#xB9CC; &#xC218;&#xC815; AttributeInheritTest.03.cs 12345public class Child : Parent{}var propertyInfo = typeof(Child).GetProperty(nameof(Child.id)); 1234Test2Attribute2Test1Attribute1 Step 4. &#xC0C1;&#xC18D;&#xBC1B;&#xC740; &#xD6C4; property&#xB97C; override&#xD55C; &#xD6C4; Attribute &#xC7AC;&#xC815;&#xC758; &#xC7AC;&#xC815;&#xC758;&#xD55C; Attribute&#xB9CC; &#xBC14;&#xB00C;&#xC5C8;&#xACE0;, &#xB098;&#xBA38;&#xC9C0;&#xB294; &#xBD80;&#xBAA8;&#xC758; &#xAC83;&#xC744; &#xAC00;&#xC838;&#xC624;&#xB294; &#xAC83;&#xC744; &#xD655;&#xC778; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. Parent&#xC758; id&#xB97C; virtual&#xCC98;&#xB9AC; &#xD558;&#xC600;&#xACE0;, Child&#xC758; id&#xB97C; override&#xD55C; &#xD6C4; Test2Attribute&#xB9CC; &#xC7AC;&#xC815;&#xC758; &#xD558;&#xC600;&#xC2B5;&#xB2C8;&#xB2E4;. AttributeInheritTest.04.cs 123456789101112public class Parent{ [Test1(1)] [Test2(2)] public virtual int id { get; set; }}public class Child : Parent{ [Test2(3)] public override int id { get; set; }} 1234Test2Attribute3Test1Attribute1","categories":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/categories/C/"},{"name":"C#","slug":"C/C","permalink":"http://DevStarSJ.github.io/categories/C/C/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"}]},{"title":"Doing Math with Python","slug":"Python.DoingMathWithPython","date":"2016-07-08T15:00:00.000Z","updated":"2017-04-30T02:56:32.000Z","comments":true,"path":"2016/07/09/Python.DoingMathWithPython/","link":"","permalink":"http://DevStarSJ.github.io/2016/07/09/Python.DoingMathWithPython/","excerpt":"","text":"Doing Math with Python (파이썬으로 풀어보는 수학) 원서명 : Doing Math with Python: Use Programming to Explore Algebra, Statistics, Calculus, and More! (ISBN 9781593276409) 지은이 : 아미트 사하(Amit Saha) 원서 및 관련자료 : https://www.nostarch.com/doingmathwithpython 번역서 : http://www.acornpub.co.kr/book/doing-math-with-python This posting is made in .ipynb, so the original file can be modified and executed in the Jupiter Notebook. Location : https://github.com/DevStarSJ/Study/blob/master/Blog/Python/DoingMathWithPython 01. Working with Numbers (숫자, 연산) - 2016-07-09 02. Visualizing Data with Graphs (그래프로 데이터 가시화) - 2016-07-12 03. Describing Data with Statistics (통계값을 이용한 데이터 설명) - 2016-07-16 04. Algebra and Symbolic Math with SymPy (SymPy를 이용한 대수와 부호 수학) - 2016-07-18 05. Playing with Sets and Probability (집합과 확률) - 2016-07-24 06. Drawing Geometric Shapes and Fractals (기하학적 형상과 프랙탈 그리기) - 2016-07-28 07. Solving Calculus Problems (미적분 문제 풀기) - 2016-07-31","categories":[{"name":"Python","slug":"Python","permalink":"http://DevStarSJ.github.io/categories/Python/"},{"name":"DoingMathWithPython","slug":"Python/DoingMathWithPython","permalink":"http://DevStarSJ.github.io/categories/Python/DoingMathWithPython/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://DevStarSJ.github.io/tags/Python/"},{"name":"Math","slug":"Math","permalink":"http://DevStarSJ.github.io/tags/Math/"}]},{"title":"Newtonsoft.Json 사용법","slug":"CSharp.NewtonJSON","date":"2016-06-11T17:00:00.000Z","updated":"2017-04-23T10:55:19.000Z","comments":true,"path":"2016/06/12/CSharp.NewtonJSON/","link":"","permalink":"http://DevStarSJ.github.io/2016/06/12/CSharp.NewtonJSON/","excerpt":"","text":"Newtonsoft.Json &#xC0AC;&#xC6A9;&#xBC95; C# &#xC5D0;&#xC11C; JSON document&#xB97C; &#xB2E4;&#xB8E8;&#xAE30; &#xC704;&#xD574; &#xAC00;&#xC7A5; &#xB9CE;&#xC774; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xAC83;&#xC740; Newtonsoft.Json&#xC785;&#xB2C8;&#xB2E4;. nuget manager&#xC5D0;&#xC11C; JSON&#xC73C;&#xB85C; &#xAC80;&#xC0C9;&#xC2DC; &#xAC00;&#xC7A5; &#xBA3C;&#xC800; &#xB098;&#xC635;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9CC;&#xD07C; &#xB9CE;&#xC774; &#xC0AC;&#xC6A9;&#xB418;&#xBA70;, &#xC0AC;&#xC6A9;&#xBC95; &#xB610;&#xD55C; &#xAC04;&#xB2E8;&#xD569;&#xB2C8;&#xB2E4;. 1. &#xC124;&#xCE58; &#xBC0F; namespace &#xC194;&#xB8E8;&#xC158; &#xD0D0;&#xC0C9;&#xAE30; (Solution Explorer)&#xC5D0;&#xC11C; &#xB9C8;&#xC6B0;&#xC2A4; &#xC6B0;&#xD074;&#xB9AD; &#xD558;&#xC2E0;&#xB4A4; Manage nuget packages...&#xC744; &#xB204;&#xB974;&#xC154;&#xC11C; Browse &#xD0ED;&#xC5D0;&#xC11C; Newtonsoft.Json&#xC744; &#xAC80;&#xC0C9;&#xD558;&#xC154;&#xC11C; Install&#xC744; &#xB204;&#xB974;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. &#xB2E4;&#xB978; &#xBC29;&#xBC95;&#xC73C;&#xB85C;&#xB294; &#xB3C4;&#xAD6C;(Tools) -&gt; Nuget package manager -&gt; Package Manager Console &#xB85C; &#xAC00;&#xC154;&#xC11C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC785;&#xB825;&#xD558;&#xC2DC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 1PM&gt; Install-Package Newtonsoft.Json &#xC0AC;&#xC6A9;&#xC2DC; &#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xC5D0;&#xC11C; &#xC544;&#xB798;&#xC758; namespace&#xB97C; &#xCD94;&#xAC00;&#xD574; &#xC8FC;&#xC2DC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 1using Newtonsoft.Json.Linq; 2. &#xAC04;&#xB2E8;&#xD55C; &#xD2B9;&#xC9D5; &#xC124;&#xBA85; 2&#xAC1C;&#xC758; Object&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xC0AC;&#xC6A9;&#xD558;&#xC2DC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. JObject : JSON Object &#xC785;&#xB2C8;&#xB2E4;. JObject &#xC790;&#xCCB4;&#xAC00; name&#xAC12;&#xC744; &#xAC00;&#xC9C8; &#xC218;&#xB294; &#xC5C6;&#xC2B5;&#xB2C8;&#xB2E4;. (key, value) pair &#xB4E4;&#xC744; &#xAC00;&#xC9C8; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. key : string &#xAC12;&#xC785;&#xB2C8;&#xB2E4;. value : JToken &#xD0C0;&#xC785;&#xC774;&#xBA70; &#xB300;&#xBD80;&#xBD84;&#xC758; premitive type&#xB4E4;&#xACFC; DateTime, TiemSpan, Uri &#xAC12;&#xC744; &#xC9C1;&#xC811;&#xB300;&#xC785; &#xAC00;&#xB2A5;&#xD558;&#xBA70;, &#xAE30;&#xD0C0; Object&#xB3C4; &#xC785;&#xB825;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. value&#xC5D0; &#xB2E4;&#xB978; JObject&#xB098;, JArray&#xB97C; &#xB123;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. JArray : JSON Array &#xC785;&#xB2C8;&#xB2E4;. JObject&#xC640; &#xD2B9;&#xC9D5;&#xC774; &#xAC70;&#xC758; &#xBE44;&#xC2B7;&#xD558;&#xB098; key &#xC5C6;&#xC774; value &#xB4E4;&#xC744; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC989;, JObject&#xB098; Jarray &#xC790;&#xCCB4;&#xB294; name&#xC744; &#xAC00;&#xC9C8; &#xC218; &#xC5C6;&#xC73C;&#xB098;, &#xB2E4;&#xB978; JObject&#xC5D0; value&#xB85C; &#xC18C;&#xC18D;&#xB420; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; key&#xAC12;&#xC744; &#xAC00;&#xC838;&#xC57C; &#xD558;&#xBA70;, &#xB2E4;&#xB978; JArray&#xC5D0; &#xC18C;&#xC18D;&#xB420; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; key&#xAC12; &#xC5C6;&#xC774; &#xC785;&#xB825;&#xB429;&#xB2C8;&#xB2E4; 3. JObject &#xC0AC;&#xC6A9;&#xBC95; &#xB108;&#xBB34;&#xB098; &#xAC04;&#xB2E8;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xBCC4;&#xB3C4; &#xC124;&#xBA85;&#xC740; &#xD544;&#xC694; &#xC5C6;&#xC744;&#xB4EF; &#xD569;&#xB2C8;&#xB2E4;. &#xC0DD;&#xC131; : new JObject() Element &#xCD94;&#xAC00; : .add(key, value) &#xBC14;&#xB85C; &#xC608;&#xC81C;&#xB97C; &#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 3.1 Element &#xCD94;&#xAC00; 3.1.1 &#xAE30;&#xBCF8;&#xC801;&#xC778; &#xC0AC;&#xC6A9;&#xBC95; 123456var json = new JObject();json.Add(&quot;id&quot;, &quot;Luna&quot;);json.Add(&quot;name&quot;, &quot;Silver&quot;);json.Add(&quot;age&quot;, 19);Console.WriteLine(json.ToString()); 12345{ &quot;id&quot;: &quot;Luna&quot;, &quot;name&quot;: &quot;Silver&quot;, &quot;age&quot;: 19} 3.1.2 JSON &#xD615;&#xC2DD;&#xC758; &#xBB38;&#xC790;&#xC5F4;&#xB85C; &#xC0DD;&#xC131; 1234var json2 = JObject.Parse(&quot;{ id : \\&quot;Luna\\&quot; , name : \\&quot;Silver\\&quot; , age : 19 }&quot;);json2.Add(&quot;blog&quot;, &quot;devluna.blogspot.kr&quot;);Console.WriteLine(json2.ToString()); 123456{ &quot;id&quot;: &quot;Luna&quot;, &quot;name&quot;: &quot;Silver&quot;, &quot;age&quot;: 19, &quot;blog&quot;: &quot;devluna.blogspot.kr&quot;} 3.1.3 &#xB2E4;&#xB978; class Object&#xB85C;&#xBD80;&#xD130; &#xC0DD;&#xC131; 1234User u = new User { id = &quot;SJ&quot;, name = &quot;Philip&quot;, age = 25 };var json3 = JObject.FromObject(u);Console.WriteLine(json3.ToString()); 12345{ &quot;id&quot;: &quot;SJ&quot;, &quot;name&quot;: &quot;Philip&quot;, &quot;age&quot;: 25} 3.1.4 &#xBB34;&#xBA85;&#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xC0DD;&#xC131; 123var json4 = JObject.FromObject(new { id = &quot;J01&quot;, name = &quot;June&quot;, age = 23 });Console.WriteLine(json4.ToString()); 12345{ &quot;id&quot;: &quot;J01&quot;, &quot;name&quot;: &quot;June&quot;, &quot;age&quot;: 23} 3.1.5 &#xB2E4;&#xB978; JObject&#xB97C; Element&#xB85C; &#xCD94;&#xAC00; 1234567var json5 = JObject.Parse(&quot;{ id : \\&quot;sjy\\&quot; , name : \\&quot;seok-joon\\&quot; , age : 27 }&quot;);json5.Add(&quot;friend1&quot;, json);json5.Add(&quot;friend2&quot;, json2);json5.Add(&quot;friend3&quot;, json3);json5.Add(&quot;friend4&quot;, json4);Console.WriteLine(json5.ToString()); 1234567891011121314151617181920212223242526{ &quot;id&quot;: &quot;sjy&quot;, &quot;name&quot;: &quot;seok-joon&quot;, &quot;age&quot;: 27, &quot;friend1&quot;: { &quot;id&quot;: &quot;Luna&quot;, &quot;name&quot;: &quot;Silver&quot;, &quot;age&quot;: 19 }, &quot;friend2&quot;: { &quot;id&quot;: &quot;Luna&quot;, &quot;name&quot;: &quot;Silver&quot;, &quot;age&quot;: 19, &quot;blog&quot;: &quot;devluna.blogspot.kr&quot; }, &quot;friend3&quot;: { &quot;id&quot;: &quot;SJ&quot;, &quot;name&quot;: &quot;Philip&quot;, &quot;age&quot;: 25 }, &quot;friend4&quot;: { &quot;id&quot;: &quot;J01&quot;, &quot;name&quot;: &quot;June&quot;, &quot;age&quot;: 23 }} 3.2 Element&#xAC12; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; 3.2.1 Element&#xAC12; &#xC77D;&#xAE30; [ ] &#xC5F0;&#xC0B0;&#xC790;&#xC5D0; key&#xAC12;&#xC744; &#xB123;&#xC5B4;&#xC8FC;&#xBA74; &#xD574;&#xB2F9; value&#xB97C; &#xC5BB;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. 123var json4_name = json4[&quot;name&quot;];Console.WriteLine(json4_name); 1June 3.2.2 Element&#xAC12; &#xC0AD;&#xC81C;&#xD558;&#xAE30; .Remove(key)&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xC0AD;&#xC81C;&#xAC00; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. 123json4.Remove(&quot;name&quot;);Console.WriteLine(json4.ToString()); 1234{ &quot;id&quot;: &quot;J01&quot;, &quot;age&quot;: 23} .RemoveAll()&#xB85C; &#xBAA8;&#xB4E0; Element&#xB97C; &#xB2E4; &#xC0AD;&#xC81C; &#xD560; &#xC218;&#xB3C4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. 123json5.RemoveAll();Console.WriteLine(json5.ToString()); 1{} 4. JArray &#xC0AC;&#xC6A9;&#xBC95; Element &#xC785;&#xB825;&#xC2DC; key&#xB97C; &#xAC00;&#xC9C0;&#xC9C0; &#xC54A;&#xB294; &#xB2E4;&#xB294; &#xAC83;&#xC744; &#xBE7C;&#xACE0;&#xB294; JObject&#xC640; &#xAC70;&#xC758; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. 4.1 Element &#xCD94;&#xAC00;&#xD558;&#xAE30; 4.1.1 &#xAE30;&#xBCF8;&#xC801;&#xC778; &#xC0AC;&#xC6A9;&#xBC95; 123456var jarray = new JArray();jarray.Add(1);jarray.Add(&quot;Luna&quot;);jarray.Add(DateTime.Now);Console.WriteLine(jarray.ToString()); 12345[ 1, &quot;Luna&quot;, &quot;2016-05-21T09:45:27.1049839+09:00&quot;] 4.1.2 JObject&#xB97C; Element&#xB85C; &#xCD94;&#xAC00; 1234567var jFriends = new JArray();jFriends.Add(json);jFriends.Add(json2);jFriends.Add(json3);jFriends.Add(json4);Console.WriteLine(jFriends.ToString()); 12345678910111213141516171819202122[ { &quot;id&quot;: &quot;Luna&quot;, &quot;name&quot;: &quot;Silver&quot;, &quot;age&quot;: 19 }, { &quot;id&quot;: &quot;Luna&quot;, &quot;name&quot;: &quot;Silver&quot;, &quot;age&quot;: 19, &quot;blog&quot;: &quot;devluna.blogspot.kr&quot; }, { &quot;id&quot;: &quot;SJ&quot;, &quot;name&quot;: &quot;Philip&quot;, &quot;age&quot;: 25 }, { &quot;id&quot;: &quot;J01&quot;, &quot;age&quot;: 23 }] 4.1.3 JArray&#xB97C; Element&#xB85C; &#xCD94;&#xAC00; 12345var jarray2 = new JArray();jarray2.Add(jarray);jarray2.Add(jFriends);Console.WriteLine(jarray2.ToString()); 1234567891011121314151617181920212223242526272829[ [ 1, &quot;Luna&quot;, &quot;2016-05-21T09:51:03.2882071+09:00&quot; ], [ { &quot;id&quot;: &quot;Luna&quot;, &quot;name&quot;: &quot;Silver&quot;, &quot;age&quot;: 19 }, { &quot;id&quot;: &quot;Luna&quot;, &quot;name&quot;: &quot;Silver&quot;, &quot;age&quot;: 19, &quot;blog&quot;: &quot;devluna.blogspot.kr&quot; }, { &quot;id&quot;: &quot;SJ&quot;, &quot;name&quot;: &quot;Philip&quot;, &quot;age&quot;: 25 }, { &quot;id&quot;: &quot;J01&quot;, &quot;age&quot;: 23 } ]] 4.2 Element&#xAC12; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; 4.2.1 Element&#xAC12; &#xC77D;&#xAE30; [ ] &#xC5F0;&#xC0B0;&#xC790;&#xB85C; &#xC77D;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. 123var jf0 = jFriends[0];Console.WriteLine(jf0.ToString()); 12345{ &quot;id&quot;: &quot;Luna&quot;, &quot;name&quot;: &quot;Silver&quot;, &quot;age&quot;: 19} for , foreach&#xB85C; iteration&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. 12345foreach(JObject fElement in jFriends){ var fName = fElement[&quot;name&quot;] ?? &quot;&lt;NULL&gt;&quot;; Console.WriteLine(fName);} 1234SilverSilverPhilip&lt;NULL&gt; 4.2.2 Element&#xAC12; &#xC0AD;&#xC81C;&#xD558;&#xAE30; 1234jFriends.Remove(jFriends[1]);jFriends.Remove(jFriends[2]);Console.WriteLine(jFriends.ToString()); 123456789101112[ { &quot;id&quot;: &quot;Luna&quot;, &quot;name&quot;: &quot;Silver&quot;, &quot;age&quot;: 19 }, { &quot;id&quot;: &quot;SJ&quot;, &quot;name&quot;: &quot;Philip&quot;, &quot;age&quot;: 25 }] 5. JObject&#xC5D0; JArray &#xCD94;&#xAC00;&#xD558;&#xAE30; 123json2.Add(&quot;Friends&quot;, jFriends);Console.WriteLine(json2.ToString()); 123456789101112131415161718{ &quot;id&quot;: &quot;Luna&quot;, &quot;name&quot;: &quot;Silver&quot;, &quot;age&quot;: 19, &quot;blog&quot;: &quot;devluna.blogspot.kr&quot;, &quot;Friends&quot;: [ { &quot;id&quot;: &quot;Luna&quot;, &quot;name&quot;: &quot;Silver&quot;, &quot;age&quot;: 19 }, { &quot;id&quot;: &quot;SJ&quot;, &quot;name&quot;: &quot;Philip&quot;, &quot;age&quot;: 25 } ]}","categories":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/categories/C/"},{"name":"C#","slug":"C/C","permalink":"http://DevStarSJ.github.io/categories/C/C/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"}]},{"title":"Using async method in static constructor ( C# )","slug":"CSharp.StaticConstructorAsync","date":"2016-06-11T17:00:00.000Z","updated":"2017-04-23T10:49:37.000Z","comments":true,"path":"2016/06/12/CSharp.StaticConstructorAsync/","link":"","permalink":"http://DevStarSJ.github.io/2016/06/12/CSharp.StaticConstructorAsync/","excerpt":"","text":"Using async method in static constructor ( C# ) static constructor &#xB0B4;&#xBD80;&#xC5D0;&#xC11C; async &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD560; &#xACBD;&#xC6B0; &#xC81C;&#xB300;&#xB85C; &#xB3D9;&#xC791;&#xC744; &#xD558;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. (&#xC660;&#xB9CC;&#xD574;&#xC11C;&#xB294; &#xC774;&#xB7F0;&#xC2DD;&#xC73C;&#xB85C; code&#xAC00; &#xC774;&#xB8E8;&#xC5B4;&#xC9C0;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; &#xD574;&#xC57C;&#xD558;&#xC9C0;&#xB9CC;, &#xC5B4;&#xCA54;&#xC218; &#xC5C6;&#xC774; &#xC774;&#xB807;&#xAC8C; &#xC0AC;&#xC6A9;&#xD574;&#xC57C; &#xD560; &#xACBD;&#xC6B0;&#xAC00; &#xBC1C;&#xC0DD; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.) &#xCC38;&#xACE0;&#xB85C; static constructor&#xB294; &#xD574;&#xB2F9; class&#xAC00; &#xAC00;&#xC7A5; &#xBA3C;&#xC800; &#xC0AC;&#xC6A9; &#xB420; &#xB54C; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;. CLR-internal lock static constructor&#xB294; &#xC815;&#xD655;&#xD788; 1&#xBC88;&#xB9CC; &#xC2E4;&#xD589;&#xB418;&#xC5B4;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7EC;&#xBBC0;&#xB85C; static constructor&#xAC00; &#xC2E4;&#xD589;&#xB420; &#xB54C;&#xB294; &#xB0B4;&#xBD80;&#xC801;&#xC73C;&#xB85C; CLR-internal lock&#xC73C;&#xB85C; &#xD574;&#xB2F9; code&#xB97C; 1&#xBC88;&#xB9CC; &#xC2E4;&#xD589;&#xB418;&#xB3C4;&#xB85D; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB807;&#xAC8C; lock&#xC774; &#xAC78;&#xB9B0; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; async&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xB2E4;&#xB978; thread&#xB85C; &#xC791;&#xC5C5;&#xC744; &#xC218;&#xD589;&#xD560; &#xACBD;&#xC6B0; thread-lock&#xACFC; CLR-internal lock&#xAC04;&#xC758; deadlock&#xC774; &#xBC1C;&#xC0DD;&#xD574;&#xC11C; &#xC548;&#xB41C;&#xB2E4;&#xACE0; &#xC0DD;&#xAC01; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. http://blogs.msdn.com/b/pfxteam/archive/2011/05/03/10159682.aspx &#xB9C1;&#xD06C;&#xC758; posting&#xC744; &#xBCF4;&#xBA74; &#xC124;&#xBA85;&#xC774; &#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. http://blog.stephencleary.com/2013/01/async-oop-2-constructors.html &#xB9C1;&#xD06C;&#xC758; posting&#xC5D0;&#xB3C4; &#xC808;&#xB300;&#xB85C; static constructor&#xC5D0;&#xC11C; async &#xC791;&#xC5C5;&#xC744; &#xD558;&#xB294; &#xAC74; BAD CODE!!!&#xB77C;&#xACE0; &#xACBD;&#xACE0;&#xD558;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xCC38;&#xACE0;&#xB85C; &#xC704; Link&#xC5D0; &#xC788;&#xB294; posting&#xC5D0;&#xC11C; &#xC548;&#xB41C;&#xB2E4;&#xACE0; &#xD558;&#xB294; &#xC608;&#xC81C;&#xB4E4;&#xC744; &#xB9CC;&#xB4E4;&#xC5B4;&#xC11C; &#xD574;&#xBCF4;&#xBA74; &#xC798; &#xB429;&#xB2C8;&#xB2E4;. &#xC9C4;&#xC9DC;&#xB85C; async &#xD55C; &#xC791;&#xC5C5; (DB, Network, disk I/O) &#xC744; &#xC774;&#xC6A9;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC548; &#xB420; &#xC218; &#xC788;&#xC9C0;&#xB9CC;, &#xB2E8;&#xC21C;&#xD788; async &#xD0A4;&#xC6CC;&#xB4DC;&#xB9CC; &#xBD99;&#xC600;&#xB2E4;&#xACE0; &#xD574;&#xC11C; deadlock&#xC774; &#xC7AC;&#xD604;&#xB418;&#xC9C0;&#xB294; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB0B4;&#xAC00; &#xC0C1;&#xC0C1;&#xD558;&#xB294; &#xC548;&#xB418;&#xB294; &#xC774;&#xC720;&#x2026; &#xC704; &#xB0B4;&#xC6A9;&#xB4E4;&#xC740; &#xC5B4;&#xB290;&#xC815;&#xB3C4; &#xAC80;&#xC99D;(?)&#xB41C; posting&#xC744; &#xBC14;&#xD0D5;&#xC73C;&#xB85C; &#xD55C; &#xB0B4;&#xC6A9;&#xC774;&#xAD6C;&#xC694;. &#xC81C;&#xAC00; &#xC0DD;&#xAC01;&#xD588;&#xC744; &#xB54C; &#xC548;&#xB418;&#xB294; &#xC774;&#xC720;&#xB97C; &#xB9D0;&#xC500;&#xB4DC;&#xB9AC;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC5B4;&#xB514;&#xAE4C;&#xC9C0;&#xB098; &#xD63C;&#xC790;&#xB9CC;&#xC758; &#xC0C1;&#xC0C1;&#xC758; &#xB098;&#xB798;&#xB85C; &#xAE30;&#xB85D;&#xD55C; &#xC370;(?)&#xC774;&#xC9C0;, &#xAC80;&#xC99D;&#xB41C; &#xB0B4;&#xC6A9;&#xC740; &#xC544;&#xB2D9;&#xB2C8;&#xB2E4;. constructor&#xB77C; &#xD568;&#xC740; object&#xAC00; &#xC0DD;&#xC131;&#xB420;&#xB54C; &#xAC00;&#xC7A5; &#xBA3C;&#xC800; &#xD574;&#xC918;&#xC57C; &#xD558;&#xB294; &#xC791;&#xC5C5;&#xC785;&#xB2C8;&#xB2E4;. static constructor&#xB294; &#xD574;&#xB2F9; class&#xC758; static properties, method&#xB4E4;&#xC774; &#xC0AC;&#xC6A9;&#xB418;&#xAE30; &#xC804;&#xC5D0; &#xBA3C;&#xC800; &#xC2E4;&#xD589;&#xB418;&#xC5B4;&#xC57C; &#xD560; code&#xB4E4;&#xC744; &#xBAA8;&#xC544;&#xB454; &#xACF3;&#xC774;&#xC5B4;&#xC57C; &#xACA0;&#xC8E0;. C++98&#xAE4C;&#xC9C0;&#xC758; modern&#xD558;&#xC9C0; &#xC54A;&#xC740; C++&#xC5D0;&#xC11C;&#xB294; member variable (C# &#xC758; properties) &#xB4E4;&#xC744; &#xCD08;&#xAE30;&#xD654; &#xD558;&#xB294; &#xC791;&#xC5C5;&#xC744; constructor&#xC5D0;&#xC11C; &#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. C++11 &#xC5D0;&#xC11C;&#xB294; C# &#xACFC; &#xAC19;&#xC774; &#xC120;&#xC5B8;&#xACFC; &#xB3D9;&#xC2DC;&#xC5D0; &#xCD08;&#xAE30;&#xAC12;&#xB97C; &#xBC14;&#xB85C; &#xC368; &#xC904; &#xC218; &#xC788;&#xC9C0;&#xB9CC;, &#xC544;&#xB9C8; &#xB3D9;&#xC791;&#xC740; constuctor&#xC2E4;&#xD589;&#xC2DC; &#xD560; &#xAC70;&#xB77C; &#xC0DD;&#xAC01;&#xB429;&#xB2C8;&#xB2E4;. C# &#xB3C4; &#xD3B8;&#xC758;&#xC0C1; &#xC120;&#xC5B8;&#xACFC; &#xB3D9;&#xC2DC;&#xC5D0; &#xCD08;&#xAE30;&#xAC12;&#xC744; &#xC368; &#xC904; &#xC218;&#xB294; &#xC788;&#xC9C0;&#xB9CC;, &#xC544;&#xB9C8; &#xB3D9;&#xC791;&#xC740; constuctor &#xC218;&#xD589;&#xC2DC; &#xD560; &#xAC70;&#xB77C; &#xC0DD;&#xAC01;&#xB429;&#xB2C8;&#xB2E4;. static constuctor&#xB294; &#xD574;&#xB2F9; class&#xC758; static method&#xBCF4;&#xB2E4; &#xBA3C;&#xC800; &#xC218;&#xD589;&#xB418;&#xC5B4;&#xC57C; &#xD560; code&#xB77C;&#xB294; &#xC370;&#xC744; &#xC804;&#xC81C;&#xB85C; &#xC0DD;&#xAC01;&#xD574; &#xBCF8;&#xB2E4;&#xBA74;, &#xADF8;&#xB7FC; static constructor&#xC5D0;&#xC11C; &#xB2E4;&#xB978; static method&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xBA74; &#xC5B4;&#xB5BB;&#xAC8C; &#xB420;&#xAE4C;&#xC694; ??? &#xC544;&#xB9C8; &#xADF8; &#xC2DC;&#xC810;&#xC5D0; &#xD574;&#xB2F9; static method&#xC758; code&#xB97C; &#xC2E4;&#xD589;&#xAC00;&#xB2A5; &#xD558;&#xB3C4;&#xB85D; &#xD574;&#xC8FC;&#xC9C0; &#xC54A;&#xC744;&#xAE4C; &#xC608;&#xC0C1;&#xB429;&#xB2C8;&#xB2E4;. (memory&#xC5D0; load&#xD55C;&#xB2E4;&#xB358;&#xC9C0;, &#xC544;&#xB2C8;&#xBA74; &#xB2E4;&#xB978; &#xBC29;&#xBC95;&#xC73C;&#xB85C; &#xC2E4;&#xD589;&#xAC00;&#xB2A5;&#xD558;&#xAC8C; &#xBB54;&#xAC00; &#xC870;&#xCE58;&#xB97C; &#xD574;&#xC8FC;&#xACA0;&#xC8E0;.) &#xC774;&#xAC8C; &#xB3D9;&#xC77C; thread &#xB0B4;&#xC5D0;&#xC11C;&#xB294; &#xB2F9;&#xC5F0;&#xD788; &#xD310;&#xB2E8;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xC5EC;&#xC11C; &#xC544;&#xBB34;&#xB7F0; &#xBB38;&#xC81C;&#xAC00; &#xC5C6;&#xC774; &#xB3D9;&#xC791;&#xD558;&#xC9C0;&#xB9CC;, static constructor&#xAC00; &#xC218;&#xD589;&#xC911;&#xC774;&#xACE0; &#xC544;&#xC9C1; &#xC644;&#xB8CC;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xC2DC;&#xC810;&#xC5D0;, &#xAC11;&#xC790;&#xAE30; &#xB2E4;&#xB978; thread&#xAC00; &#xD574;&#xB2F9; class&#xC758; &#xB2E4;&#xB978; static method&#xC5D0; &#xC811;&#xADFC;&#xC744; &#xD560; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC5B4;&#xB5BB;&#xAC8C; &#xD574;&#xC57C; &#xD560;&#xAE4C;&#xC694; ? &#xC544;&#xB9C8; static constructor&#xAC00; &#xC218;&#xD589;&#xC911;&#xC774;&#xB2C8; CLR-internal lock&#xC73C;&#xB85C; &#xBCF4;&#xD638;&#xB418;&#xACE0; &#xC788;&#xACA0;&#xC9C0;&#xC694; ? &#xC774; lock&#xC740; static constructor&#xAC00; &#xC218;&#xD589;&#xC744; &#xC885;&#xB8CC;&#xD574;&#xC57C; &#xD480;&#xB9AC;&#xACA0;&#xAD6C;&#xC694;. &#xADF8;&#xB7F0;&#xB370; &#xADF8; &#xB2E4;&#xB978; thread&#xAC00; static method&#xB97C; &#xC218;&#xD589;&#xC644;&#xB8CC;&#xD574;&#xC57C;&#xB9CC; static constructor&#xAC00; &#xC885;&#xB8CC;&#xB420; &#xC218; &#xC788;&#xB2E4;&#xBA74; ??? &#xC5EC;&#xAE30;&#xC11C; dead lock&#xC774; &#xBC1C;&#xC0DD;&#xD560; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;. &#xB3D9;&#xC77C; thread &#xB0B4;&#xC5D0;&#xC11C;&#xB294; CLR-internal lock &#xB0B4;&#xBD80;&#xC5D0;&#xC11C; &#xC218;&#xD589;&#xC774; &#xB418;&#xB3C4;&#xB85D; &#xC798; &#xC124;&#xACC4; &#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB2F9;&#xC5F0;&#xD788; &#xB2E4;&#xB978; thread&#xC5D0;&#xC11C; &#xC811;&#xADFC;&#xC740; lock&#xC73C;&#xB85C; &#xBCF4;&#xD638;&#xD574;&#xC57C;&#xD558;&#xB294; &#xAC74; &#xB9DE;&#xAD6C;&#xC694;. &#xD558;&#xC9C0;&#xB9CC;, &#xD574;&#xB2F9; thread&#xAC00; &#xC885;&#xB8CC;&#xB418;&#xAE38; &#xAE30;&#xB2E4;&#xB9AC;&#xB294;&#xAC8C; static constructor&#xC778; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; ??? &#xADF8;&#xB798;&#xC11C; &#xC544;&#xB798;&#xC5D0; &#xC81C;&#xAC00; &#xC801;&#xC5B4;&#xB193;&#xC740; &#xD574;&#xACB0; &#xBC29;&#xBC95; &#xC911;&#xC5D0;, static constructor&#xC5D0;&#xC11C; &#xC790;&#xC2E0;&#xC758; class&#xAC00; &#xC544;&#xB2CC; &#xB2E4;&#xB978; class&#xC758; async &#xC791;&#xC5C5;&#xC744; &#xAE30;&#xB2E4;&#xB9AC;&#xB294; &#xACBD;&#xC6B0;&#xB294; &#xC798; &#xB3D9;&#xC791;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xAC83;&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC11C; async&#xD55C; &#xC791;&#xC5C5;&#xC744; &#xBCC4;&#xB3C4; class&#xB85C; &#xB098;&#xB204;&#xBA74; &#xC5ED;&#xC2DC;&#xB098; &#xC798; &#xB3D9;&#xC791;&#xD569;&#xB2C8;&#xB2E4;. Deadlock in async method in static constuctor &#xAC15;&#xC81C;&#xB85C; deadlock&#xC744; &#xBC1C;&#xC0DD;&#xC2DC;&#xD0A4;&#xB294; code&#xB97C; &#xB9CC;&#xB4E4;&#xC5B4; &#xBCF4;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;. 123456789101112131415161718192021222324252627282930313233using System.Collections.Generic;using System.Threading.Tasks;class StaticClass{ public static IEnumerable&lt;string&gt; Names { set; get; } static StaticClass() { Names = Task.Run(async () =&gt; { return await GetNamesAsync(); }).Result; } public static async Task&lt;IEnumerable&lt;string&gt;&gt; GetNamesAsync() { List&lt;string&gt; nameList = new List&lt;string&gt; { &quot;Luna&quot;, &quot;Star&quot;, &quot;Philip&quot; }; return nameList; }}class Program{ static void Main(string[] args) { foreach (string name in StaticClass.Names) { System.Console.WriteLine(name); } }} &#xC774;&#xB7F0; code&#xB97C; &#xC5B4;&#xB5BB;&#xAC8C; &#xACE0;&#xCCD0;&#xC57C; &#xD558;&#xB294;&#xC9C0; 3&#xAC00;&#xC9C0; &#xBC29;&#xBC95;&#xC744; &#xC0B4;&#xD3B4;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 1. async&#xD55C; &#xAD6C;&#xD604;&#xC758; method&#xB97C; &#xCD94;&#xAC00; &#xC704; &#xC608;&#xC81C;&#xC758; &#xACBD;&#xC6B0; GetNamesAsync() method&#xC640; &#xAC19;&#xC740; &#xAE30;&#xB2A5;&#xC744; &#xD558;&#xB294; sync&#xD55C; method&#xC778; GetNames()&#xB97C; &#xCD94;&#xAC00;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB3D9;&#xC77C;&#xD55C; &#xAD6C;&#xD604;&#xC774; 2&#xAC1C;&#xAC00; &#xB418;&#xBBC0;&#xB85C; &#xBCC4;&#xB85C; &#xCD94;&#xCC9C;&#xB4DC;&#xB9AC;&#xB294; &#xBC29;&#xBC95;&#xC740; &#xC544;&#xB2D9;&#xB2C8;&#xB2E4;. &#xCC38;&#xACE0;&#xB85C; &#xC544;&#xB798; &#xC608;&#xC81C;&#xB3C4; &#xC369; &#xADF8;&#xB807;&#xAC8C; &#xC88B;&#xC740; &#xC608;&#xC81C;&#xCF54;&#xB4DC;&#xB294; &#xC544;&#xB2D9;&#xB2C8;&#xB2E4;. 12345678910111213141516171819202122232425262728293031323334353637383940414243using System.Collections.Generic;using System.Threading.Tasks;class StaticClass{ public static IEnumerable&lt;string&gt; Names { set; get; } static StaticClass() { Names = GetNames(); } public static async Task&lt;IEnumerable&lt;string&gt;&gt; GetNamesAsync() { List&lt;string&gt; nameList = new List&lt;string&gt; { &quot;Luna&quot;, &quot;Star&quot;, &quot;Philip&quot; }; return nameList; } public static IEnumerable&lt;string&gt; GetNames() { List&lt;string&gt; nameList = new List&lt;string&gt; { &quot;Luna&quot;, &quot;Star&quot;, &quot;Philip&quot; }; return nameList; }}class Program{ static void Main(string[] args) { foreach (string name in StaticClass.Names) { System.Console.WriteLine(name); } }} &#xD558;&#xC9C0;&#xB9CC; sync&#xD55C; &#xC791;&#xC5C5;&#xC73C;&#xB85C; &#xAD6C;&#xD604; &#xC790;&#xCCB4;&#xAC00; &#xB420; &#xAC83;&#xC744; &#xAD73;&#xC774; async&#xB85C; &#xC120;&#xC5B8;&#xD560; &#xC77C;&#xC740; &#xC798; &#xC5C6;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7EC;&#xBBC0;&#xB85C; &#xC774;&#xB807;&#xAC8C; &#xD574;&#xACB0;&#xB420; &#xC218; &#xC788;&#xB294; &#xC77C;&#xC774;&#xB77C;&#xBA74; &#xC560;&#xCD08;&#xC5D0; async&#xB85C; &#xAD6C;&#xD604;&#xD55C;&#xAC70; &#xC790;&#xCCB4;&#xAC00; &#xC81C;&#xB300;&#xB85C; &#xB41C; &#xC124;&#xACC4;&#xAC00; &#xC544;&#xB2D0; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. 2. async &#xC791;&#xC5C5;&#xC744; &#xBCC4;&#xB3C4; class&#xB85C; &#xBD84;&#xB9AC; (&#xB610;&#xB294; async &#xC791;&#xC5C5; &#xD638;&#xCD9C;&#xC744; &#xBCC4;&#xB3C4; class&#xB85C; &#xC81C;&#xD55C;) async &#xC791;&#xC5C5;&#xC744; &#xBCC4;&#xB3C4; class&#xB85C; &#xBD84;&#xB9AC;&#xD558;&#xAC70;&#xB098;, static constructor&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xD558;&#xB294; async &#xC791;&#xC5C5;&#xC744; &#xB2E4;&#xB978; class&#xC758; method&#xB85C; &#xC81C;&#xD55C;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xB807;&#xAC8C; &#xAD6C;&#xD604;&#xD560; &#xACBD;&#xC6B0; &#xC6D0;&#xB798; class&#xC5D0;&#xC11C; sync&#xD55C; &#xAD6C;&#xD604;&#xACFC; async&#xD55C; &#xAD6C;&#xD604;&#xC774; &#xBAA8;&#xB450; &#xD544;&#xC694;&#xD560; &#xACBD;&#xC6B0; 1&#xBC88;&#xACFC; &#xAC19;&#xC740; code &#xBAA8;&#xC591;&#xC774; &#xB420; &#xACBD;&#xC6B0;&#xAC00; &#xB9CE;&#xC2B5;&#xB2C8;&#xB2E4;. static constructor&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xD558;&#xB294; async method&#xAC00; &#xB2E4;&#xB978; class&#xC758; method&#xC77C; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; deadlock&#xC774; &#xAC78;&#xB9AC;&#xC9C0; &#xC54A;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;. 1234567891011121314151617181920212223242526272829303132333435363738394041using System.Collections.Generic;using System.Threading.Tasks;class StaticClass{ public static IEnumerable&lt;string&gt; Names { set; get; } static StaticClass() { Names = GetNames(); } public static IEnumerable&lt;string&gt; GetNames() { return Task.Run(async () =&gt; { return await AsyncClass.GetNamesAsync(); }).Result; ; }}class AsyncClass{ public static async Task&lt;IEnumerable&lt;string&gt;&gt; GetNamesAsync() { List&lt;string&gt; nameList = new List&lt;string&gt; { &quot;Luna&quot;, &quot;Star&quot;, &quot;Philip&quot; }; return nameList; }}class Program{ static void Main(string[] args) { foreach (string name in StaticClass.Names) { System.Console.WriteLine(name); } }} 3. &#xCD08;&#xAE30;&#xD654; &#xC791;&#xC5C5;&#xC744; &#xBCC4;&#xB3C4; Init method&#xB85C; &#xBD84;&#xB9AC; &#xAC1C;&#xC778;&#xC801;&#xC73C;&#xB85C; &#xC774; &#xBC29;&#xBC95;&#xC774; &#xAC00;&#xC7A5; &#xAE54;&#xB054;&#xD574; &#xBCF4;&#xC785;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; class&#xAC00; &#xC0AC;&#xC6A9;&#xB418;&#xAE30; &#xC804;&#xC5D0; Init()&#xC744; &#xD638;&#xCD9C;&#xD55C; &#xB4A4;&#xC5D0; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. Init()&#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xAE30; &#xC804;&#xC5D0; &#xC774;&#xBBF8; &#xD574;&#xB2F9; class&#xC758; static constructor&#xAC00; &#xC2E4;&#xD589;&#xB41C; &#xC0C1;&#xD0DC;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; CLR-internal lock&#xC740; &#xC774;&#xBBF8; unlcok&#xB41C; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; async&#xC791;&#xC5C5;&#xC744; &#xC218;&#xD589;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xC5EC;&#xB7EC; thread&#xC5D0;&#xC11C; Init() &#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB420; &#xAC00;&#xB2A5;&#xC131;&#xC774; &#xC788;&#xC744; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xBCC4;&#xB3C4;&#xB85C; lock&#xC744; &#xAC78;&#xC5B4;&#xC11C; &#xD638;&#xCD9C;&#xC744; &#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xAE30;&#xB2A5;&#xC740; clsss&#xAC00; &#xCD5C;&#xCD08;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xAE30; &#xC774;&#xC804; &#xC2DC;&#xC810;&#xC758; &#xC544;&#xBB34; &#xACF3;&#xC5D0;&#xC11C;&#xB098; &#xD638;&#xCD9C;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xBBC0;&#xB85C;, lock&#xC774; &#xD544;&#xC694;&#xC5C6;&#xB294; &#xC801;&#xB2F9;&#xD55C; &#xC2DC;&#xC810;&#xC5D0; &#xD638;&#xCD9C;&#xC2DC;&#xCF1C; &#xC8FC;&#xB294; &#xAC83;&#xC774; &#xC88B;&#xC2B5;&#xB2C8;&#xB2E4;. 123456789101112131415161718192021222324252627282930313233343536373839using System.Collections.Generic;using System.Threading.Tasks;class StaticClass{ public static IEnumerable&lt;string&gt; Names { set; get; } static StaticClass() { ... } public static void Init() { Names = Task.Run(async () =&gt; { return await GetNamesAsync(); }).Result; } public static async Task&lt;IEnumerable&lt;string&gt;&gt; GetNamesAsync() { List&lt;string&gt; nameList = new List&lt;string&gt; { &quot;Luna&quot;, &quot;Star&quot;, &quot;Philip&quot; }; return nameList; }}class Program{ static void Main(string[] args) { StaticClass.Init(); foreach (string name in StaticClass.Names) { System.Console.WriteLine(name); } }}","categories":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/categories/C/"},{"name":"C#","slug":"C/C","permalink":"http://DevStarSJ.github.io/categories/C/C/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"}]},{"title":"Entity Framework Code First (Table 생성 및 수정)","slug":"CSharp.EF.CodeFirst","date":"2016-06-11T17:00:00.000Z","updated":"2017-04-23T10:47:56.000Z","comments":true,"path":"2016/06/12/CSharp.EF.CodeFirst/","link":"","permalink":"http://DevStarSJ.github.io/2016/06/12/CSharp.EF.CodeFirst/","excerpt":"","text":"Entity Framework Code First (Table &#xC0DD;&#xC131; &#xBC0F; &#xC218;&#xC815;) Code First&#xB780; ? &#xC804;&#xD1B5;&#xC801;&#xC778; &#xBC29;&#xC2DD;&#xC758; &#xACBD;&#xC6B0; SQL&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; Database&#xC5D0; Table&#xC744; &#xC0DD;&#xC131;&#xD55C; &#xB2E4;&#xC74C; Application&#xC5D0;&#xC11C; &#xAC1C;&#xBC1C;&#xC744; &#xC2DC;&#xC791;&#xD569;&#xB2C8;&#xB2E4;. Code First&#xBC29;&#xC2DD;&#xC774;&#xB780; Domain Class&#xC758; &#xBA85;&#xC138;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; Application &#xC2E4;&#xD589; &#xC2DC; &#xD574;&#xB2F9; Table&#xC774; &#xC5C6;&#xB294; &#xACBD;&#xC6B0; &#xC790;&#xB3D9;&#xC73C;&#xB85C; &#xC0DD;&#xC131;&#xC744; &#xD574;&#xC8FC;&#xB294; &#xBC29;&#xC2DD;&#xC744; &#xB9D0;&#xD569;&#xB2C8;&#xB2E4;. Entity Framework 4.1 &#xC774;&#xD6C4;&#xBD80;&#xD130; &#xC9C0;&#xC6D0;&#xD574;&#xC8FC;&#xB294; &#xBC29;&#xC2DD;&#xC774;&#xBA70;, Domain Driven Design&#xC758; &#xACBD;&#xC6B0; &#xC720;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. http://www.entityframeworktutorial.net/code-first/what-is-code-first.aspx . Modify Models after Scaffolding Code First &#xC2E4;&#xC2B5; 1. Project &#xC0DD;&#xC131; &#xBC0F; Entity Framework &#xC124;&#xCE58; Visual Studio&#xC5D0;&#xC11C; C# Console Application Project&#xB97C; &#xD558;&#xB098; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. Nuget Package Manager&#xB97C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. (&#xC544;&#xB798; &#xBC29;&#xBC95; &#xC911; &#xD558;&#xB098;&#xB85C; &#xC2E4;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.) Solution Explorer&#xC5D0;&#xC11C; Project&#xC5D0;&#xC11C; &#xC6B0;&#xD074;&#xB9AD;&#xD558;&#xC5EC; Manage Nuget Packages... &#xC0C1;&#xB2E8; Menu&#xC5D0;&#xC11C; Tools -&gt; Nuget Package Manager -&gt; Manage Nuget Packages for Solution... EntityFramework&#xB97C; &#xAC80;&#xC0C9;&#xD558;&#xC5EC; &#xC124;&#xCE58;&#xD569;&#xB2C8;&#xB2E4;. (4.1 &#xC774;&#xD6C4; &#xBC84;&#xC804;&#xC73C;&#xB85C; &#xC124;&#xCE58;&#xD569;&#xB2C8;&#xB2E4;. &#xC774; Post&#xB97C; &#xC791;&#xC131;&#xD560; &#xB2F9;&#xC2DC; 6.1.3 &#xBC84;&#xC804;&#xC774; &#xCD5C;&#xC2E0;&#xC785;&#xB2C8;&#xB2E4;.) 2. Domain Model &#xC815;&#xC758; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; School &#xACFC; Standard&#xB77C;&#xB294; 2&#xAC1C;&#xC758; Domain Model&#xC744; &#xC815;&#xC758;&#xD569;&#xB2C8;&#xB2E4;. 12345678910111213141516171819class Student{ public int StudentID { get; set; } public string StudentName { get; set; } public DateTime? DateOfBirth { get; set; } public byte[] Photo { get; set; } public decimal Height { get; set; } public float Weight { get; set; } public Standard Standard { get; set; }}class Standard{ public int StandardID { get; set; } public string StandardName { get; set; } public ICollection&lt;Student&gt; Students { get; set; }} School&#xC740; Standard&#xC758; &#xCC38;&#xC870;&#xB97C; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xC73C;&#xBA70;, Standard&#xB294; School&#xC758; &#xC9D1;&#xD569;&#xC744; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. 3. Entity Framework Context &#xC815;&#xC758; 1using System.Data.Entity; DbContext&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; System.Data.Entity&#xB97C; using&#xD574;&#xC8FC;&#xBA74; &#xD3B8;&#xD569;&#xB2C8;&#xB2E4;. 12345class SchoolContext : DbContext{ public DbSet&lt;Student&gt; Students { get; set; } public DbSet&lt;Standard&gt; Standards { get; set; }} 2&#xAC1C;&#xC758; Domain Model&#xC744; DbSet Property&#xB85C; &#xC815;&#xC758;&#xD569;&#xB2C8;&#xB2E4;. &#xD2B9;&#xC815; Database&#xB85C;&#xC758; &#xC811;&#xADFC;&#xC744; &#xC6D0;&#xD560; &#xACBD;&#xC6B0; DbContext&#xC758; &#xC0DD;&#xC131;&#xC790;&#xB85C; Connection String&#xB97C; &#xC804;&#xB2EC;&#xD558;&#xB3C4;&#xB85D; &#xC0DD;&#xC131;&#xC790;&#xB97C; &#xC815;&#xC758;&#xD574;&#xC8FC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. Console Application Project&#xC5D0;&#xC11C; default&#xC77C; &#xACBD;&#xC6B0; Visual Studio&#xC640; &#xD568;&#xAED8; &#xC124;&#xCE58;&#xB41C; LocalDB&#xB85C; &#xC5F0;&#xACB0; &#xB429;&#xB2C8;&#xB2E4;. 4. Context &#xC2E4;&#xD589; 12345678910111213class Program{ static void Main(string[] args) { using (var context = new SchoolContext()) { Student s = new Student() { StudentName = &quot;New Student&quot; }; context.Students.Add(s); context.SaveChanges(); } }} Database&#xC5D0; &#xB530;&#xB85C; Table&#xC744; &#xC0DD;&#xC131;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xC704; Code&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xBA74; &#xC790;&#xB3D9;&#xC73C;&#xB85C; Table&#xC774; &#xC0DD;&#xC131;&#xB429;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9BC; Table Created &#xADF8;&#xB9BC;&#xC5D0;&#xC11C; &#xD655;&#xC778;&#xB418;&#xB294; &#xAC83;&#xC744; &#xBCF4;&#xBA74; Standard&#xC5D0;&#xB294; Student&#xC5D0; &#xB300;&#xD55C; &#xD56D;&#xBAA9;&#xC774; &#xC5C6;&#xC73C;&#xBA70;, Student&#xC5D0;&#xB294; Standard_StandardID&#xB77C;&#xB294; Foreign Key&#xAC00; &#xCD94;&#xAC00; &#xB41C; &#xAC83;&#xC774; &#xD655;&#xC778;&#xB429;&#xB2C8;&#xB2E4;. &#xAC1C;&#xBC1C; &#xB610;&#xB294; &#xC6B4;&#xC601; &#xC911; &#xC0C8;&#xB85C;&#xC6B4; Table&#xC774; &#xCD94;&#xAC00; &#xB420; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; Domain Model&#xC744; &#xC120;&#xC5B8;&#xD558;&#xACE0; Context&#xC758; DbSet Property&#xB97C; &#xC120;&#xC5B8;&#xD574;&#xC8FC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. Change Models after Scaffolding 1. Domain Model &#xC218;&#xC815; &#xBA3C;&#xC800; Teacher Model&#xC744; &#xCD94;&#xAC00;&#xD55C; &#xB4A4;, 12345class Teacher{ public int TeacherID { get; set; } public string TeacherName { get; set; }} Student&#xC5D0; Teacher&#xC758; &#xCC38;&#xC870;&#xB97C; &#xCD94;&#xAC00;&#xD569;&#xB2C8;&#xB2E4;. 123456789101112class Student{ public int StudentID { get; set; } public string StudentName { get; set; } public DateTime? DateOfBirth { get; set; } public byte[] Photo { get; set; } public decimal Height { get; set; } public float Weight { get; set; } public Standard Standard { get; set; } public Teacher Teacher { get; set; }} 2. Context &#xC2E4;&#xD589; F5&#xB97C; &#xB20C;&#xB7EC;&#xC11C; &#xC2E4;&#xD589;&#xC744; &#xD558;&#xBA74; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. Domain Model&#xC758; &#xC0C8;&#xB85C;&#xC6B4; Property&#xAC00; &#xCD94;&#xAC00;&#xB420; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. (Table &#xC785;&#xC7A5;&#xC5D0;&#xC11C;&#xB294; Column&#xC774; &#xCD94;&#xAC00;&#xB418;&#xC5B4;&#xC57C; &#xD560; &#xACBD;&#xC6B0;) &#xC774; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; Migration &#xC774;&#xB77C;&#xB294; &#xC791;&#xC5C5;&#xC744; &#xB530;&#xB85C; &#xD574; &#xC918;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xC5EC;&#xB7EC; &#xAC00;&#xC9C0; &#xBC29;&#xBC95;&#xC774; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. Package Manager Console&#xC5D0;&#xC11C; Enable-Migrations &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC774;&#xC6A9; Connection String&#xC5D0;&#xC11C; Database name&#xC744; &#xBCC0;&#xACBD; Entity Framework&#xC5D0;&#xC11C; Database Initializer&#xB97C; &#xC0AC;&#xC6A9; &#xC704; &#xBC29;&#xBC95; &#xC911; 3&#xBC88; &#xBC29;&#xBC95;&#xC774; &#xAC00;&#xC7A5; &#xD3B8;&#xD558;&#xBBC0;&#xB85C;, &#xD574;&#xB2F9; &#xBC29;&#xBC95;&#xB9CC; &#xC124;&#xBA85; &#xB4DC;&#xB9AC;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB098;&#xBA38;&#xC9C0; &#xBC29;&#xBC95;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xC544;&#xB798; Posting&#xC744; &#xCC38;&#xC870;&#xD558;&#xC2DC;&#xAE30; &#xBC14;&#xB78D;&#xB2C8;&#xB2E4;. https://blogs.msdn.microsoft.com/webdev/2013/11/01/tips-when-making-changes-in-entity-framework-code-first-models-after-scaffolding 3. Database Initializer &#xC120;&#xC5B8; 1234567class SchoolInitializer : DropCreateDatabaseIfModelChanges&lt;SchoolContext&gt;{ protected override void Seed(SchoolContext context) { base.Seed(context); }} &#xBCC4;&#xB3C4;&#xC758; &#xC791;&#xC5C5;&#xC774; &#xD544;&#xC694;&#xD55C; &#xACBD;&#xC6B0; Seed() &#xC548;&#xC5D0;&#xC11C; &#xC815;&#xC758;&#xB97C; &#xD574;&#xC8FC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. &#xD604;&#xC7AC;&#xB294; &#xBCC4; &#xB2E4;&#xB978; &#xC791;&#xC5C5;&#xC774; &#xD544;&#xC694; &#xC5C6;&#xC73C;&#xBBC0;&#xB85C; Seed()&#xB97C; Override&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xC0AD;&#xC81C;&#xD574;&#xB3C4; &#xB429;&#xB2C8;&#xB2E4;. 4. Database Initializer &#xC2E4;&#xD589; Application &#xC2E4;&#xD589;&#xC2DC; Database Initializer&#xB97C; &#xBA3C;&#xC800; &#xC2E4;&#xD589;&#xC2DC;&#xCF1C; &#xC8FC;&#xBA74; &#xC624;&#xB958; &#xC5C6;&#xC774; Table&#xC774; &#xC218;&#xC815;&#xB429;&#xB2C8;&#xB2E4;. &#xC2EC;&#xC9C0;&#xC5B4; DbSet Property&#xC5D0; Teacher&#xB97C; &#xCD94;&#xAC00;&#xD558;&#xC9C0; &#xC54A;&#xC558;&#xB294;&#xB370;&#xB3C4; &#xBD88;&#xAD6C;&#xD558;&#xACE0; Teacher Table&#xC774; &#xCD94;&#xAC00;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. 123456789101112131415class Program{ static void Main(string[] args) { Database.SetInitializer&lt;SchoolContext&gt;(new SchoolInitializer()); using (var context = new SchoolContext()) { Student s = new Student() { StudentName = &quot;New Student&quot; }; context.Students.Add(s); context.SaveChanges(); } }} &#xC77C;&#xB2E8; &#xC624;&#xB958;&#xC5C6;&#xC774; &#xC2E4;&#xD589;&#xC740; &#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. Database&#xB97C; &#xD655;&#xC778;&#xD574; &#xBCF4;&#xBA74; Table &#xC815;&#xBCF4;&#xAC00; &#xC218;&#xC815;&#xB41C; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9BC; Table Modified","categories":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/categories/C/"},{"name":"C#","slug":"C/C","permalink":"http://DevStarSJ.github.io/categories/C/C/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"}]},{"title":"Chapter 3 Object Orientation in TypeScript","slug":"TypeScript.03.ObjectOrientationInTypeScript","date":"2016-06-10T15:00:00.000Z","updated":"2017-04-23T09:45:30.000Z","comments":true,"path":"2016/06/11/TypeScript.03.ObjectOrientationInTypeScript/","link":"","permalink":"http://DevStarSJ.github.io/2016/06/11/TypeScript.03.ObjectOrientationInTypeScript/","excerpt":"","text":"Chapter 3 Object Orientation in TypeScript 소프트웨어를 디자인하는 방법 2가지가 있습니다.하나는 간단하게 만들어서 명백하게 결함을 없게하는 것이고,다른 방법은 복잡하게 만들어서 병백한 결함을 없게하는 것입니다.전자가 조금 더 어렵습니다. 그것은 마치 복잡한 자연의 섭리와 같은 기술, 헌신, 통찰력, 영감 등을 요구합니다. Tony Hoare 객체지향 프로그래밍은 현실 세계와 유사하게 데이터와 관련된 행위를 코드로 표현합니다.이것을 보통 변수(property)와 함수(method)를 포함하는 클래스(class)로 표현하고 있으며,해당 클래스로부터 객체(object)를 생성합니다. https://en.wikipedia.org/wiki/Object-oriented_programming https://ko.wikipedia.org/wiki/객체_지향_프로그래밍 Obejct Orientation in TypeScript타입스크립트는 다양한 OOP 개념들을 지원하고 있습니다. 클래스(Classes) 객체(Instance of classes) 함수(Methods) 상속(Inheritance) : https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming) 열린 재귀(Open recursion) : https://en.wikipedia.org/wiki/This_(computer_programming)#Open_recursion 캡슐화(Encapsulation) : https://en.wikipedia.org/wiki/Encapsulation_(computer_programming) 위임(Delegation) : https://en.wikipedia.org/wiki/Delegation_(computing) 다형성(Polymophism) : https://en.wikipedia.org/wiki/Polymorphism_(computer_science) Classes, Instace of classes, Methods, Inheritacne는 Chapter.01에서 이미 살펴보았습니다. 열린 재귀(Open Recursion)열린 재귀란 재귀의 조합과 늦은 바인딩입니다.클래스 내에서 메서드가 자기자신을 호출한 경우, 서브클래스에 정의된 함수를 호출 할 수도 있습니다.그냥 함수 override를 설명하는 개념인 것 같습니다.List 3-1은 디렉토리의 내용을 읽는 클레스입니다.FileReader 클래스는 입력받은 경로에서 내용들을 읽습니다.모든 파일은 파일트리에 추가되지만, 디렉토리에 대해서는 this.getFiles를 재귀적으로 호출합니다.이러한 재귀호출은 모든 하위 경로내의 파일들을 추가할때 까지 계속됩니다.fs.readdirSync와 fs.statSync 메서드는 NodeJS에 있는 것 입니다. List 3-1 Open Recursion1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253interface FileItem &#123; path: string; contents: string[];&#125;class FileReader &#123; getFiles(path: string, depth: number = 0) &#123; var fileTree = []; var files = fs.readdirSync(path); for (var i = 0; i &lt; files.length; i++) &#123; var file = files[i]; var stats = fs.statSync(file); var fileItem; if (stats.isDirectory()) &#123; // Add directory and contents fileItem = &#123; path: file, contents: this.getFiles(file, (depth + 1)) &#125;; &#125; else &#123; // Add file fileItem = &#123; path: file, contents: [] &#125;; &#125; fileTree.push(fileItem); &#125; return fileTree; &#125;&#125;class LimitedFileReader extends FileReader &#123; constructor(public maxDepth: number) &#123; super(); &#125; getFiles(path: string, depth = 0) &#123; if (depth &gt; this.maxDepth) &#123; return []; &#125; return super.getFiles(path, depth); &#125;&#125;// instatiating an instance of LimitedFileReadervar fileReader = new LimitedFileReader(1);// results in only the top level, and one additional level being readvar files = fileReader.getFiles('path'); 예제에서는 간단한 Sync 함수를 사용했지만,실제로 구현할때에는 readdir, stat와 같이 콜백함수를 사용하는 것이 좋습니다. LimitedFileReader는 FieReader의 서브클레스입니다.LimitedFileReader의 객체를 생성할 때 클레스에 표시되는 파일 트리의 깊이를 지정해야 합니다.이 예제에서는 this.getFiles를 열린재귀로 어떻게 호출하는가를 보여줍니다.FileReader로 객체를 생성한 경우 this.getFiles는 단순한 일반적인 재귀호출이 됩니다만,LimitedFileReader로 인스턴스를 생성한 경우 FileReader.getFiles 메서드 내에서 thid.getFiles는 LimitedFileReader.getFiles를 호출하게 됩니다. 열린재귀는 부모클래스를 변경하지 할 필요도 없고, 서브클래스에 대한 사항을 몰라도 된다는 점입니다.서브클래스는 부모클래스의 코드를 재사용하기 위해서 코드를 중복적으로 작성할 필요가 없습니다. 캡슐화(Encapsulation)타입스크립트는 캡슐화를 완벽히 지원합니다.클래스 객체는 변수과 함수를 가지고 있으며, private 제한자를 이용해 외부로부터 숨길 수 있습니다.캡슐화란 데이터를 숨겨서 외부에서 해당 데이터에 대한 접근을 방지하는 것을 말합니다. List 3-2의 예를 보면 Totalizer 클래스의 경우 private으로 total 변수를 가지고 있어서 외부에서는 수정을 할 수 없습니다.수정하기 위해서는 클래스내에 선언된 함수 호출로 가능합니다.이런 점은 다음의 위험을 제거합니다. taxRebate를 추가하지 않으면서 amount를 추가하는 외부 코드 amount가 0보다 크지 않은 경우 코드 여러곳에서 호출되는 taxRebate 계산 코드 여러곳에 나타는 taxRateFactor List 3-2 Encapsulation12345678910111213141516171819202122232425class Totalizer &#123; private total = 0; private taxRateFactor = 0.2; addDonation(amount: number) &#123; if (amount &lt;= 0) &#123; throw new Error('Donation exception'); &#125; var taxRebate = amount * this.taxRateFactor; var totalDonation = amount + taxRebate; this.total += totalDonation; &#125; getAmountRaised() &#123; return this.total; &#125;&#125;var totalizer = new Totalizer();totalizer.addDonation(100.00);var fundsRaised = totalizer.getAmountRaised();// 120console.log(fundsRaised); 캡슐화를 하면 프로그램상에서 중복 코드를 예방할 수 있는 도구로 보여지지만 사실상 그렇지 않습니다.private 키워드를 사용하여 외부에서 값을 수정하는 것을 방지할 수 있습니다.복제의 가장 일반적인 경우는 논리적 분리입니다.예를 들어서 if나 switch 문의 경우 private에 숨겨진 요소를 바탕으로 프로그램을 제어 할 수 있습니다.요소를 변경할 경우 이러한 논리적 분리 상에 있는 모든 코드들을 다 살펴봐야 할 필요가 있습니다. 위임 (Delegation)프로그램 재사용 측면에서 가장 중요한 개념중 하나는 바로 위임입니다.레퍼(Wrapper) 클래스가 위임한 클래스를 호출하기 위해 인자로 키워드를 전달해야하는 경우 위임한 클레스는 래퍼클레스의 메서드를 호출 할 수 있습니다. 이것은 레퍼와 위임한 클래스가 서브클레스와 부모클레스로 동작하는것을 가능하게 합니다.레퍼가 자기자신에게 참조를 전달하지 못할 경우, 해당 작업은 위임보다는 전달(Forwarding)로 알려져 있습니다.위임과 전달에서는 클래스의 함수를 호출할 수 있지만, 해당 클래스는 그것을 다른 클래스로 넘겨줍니다.Listing 3-3이 거기에 대한 예제입니다. 위임과 전달은 두 클래스간의 관계가 ia a 테스트에 실패하여 상속이 안되는 경우 좋은 대안입니다. Listing 3-3. Delegation1234567891011121314151617181920212223242526272829303132333435363738394041424344454647interface ControlPanel &#123; startAlarm(message: string): any;&#125;interface Sensor &#123; check(): any;&#125;class MasterControlPanel &#123; private sensors: Sensor[] = []; constructor() &#123; // Instantiating the delegate HeatSensor this.sensors.push(new HeatSensor(this)); &#125; start() &#123; for (var i= 0; i &lt; this.sensors.length; i++) &#123; // Calling the delegate this.sensors[i].check(); &#125; window.setTimeout(() =&gt; this.start(), 1000); &#125; startAlarm(message: string) &#123; console.log('Alarm! ' + message); &#125;&#125;class HeatSensor &#123; private upperLimit = 38; private sensor = &#123; read: function() &#123; return Math.floor(Math.random() * 100); &#125; &#125;; constructor(private controlPanel: ControlPanel) &#123; &#125; check() &#123; if (this.sensor.read() &gt; this.upperLimit) &#123; // Calling back to the wrapper this.controlPanel.startAlarm('Overheating!'); &#125; &#125;&#125;var cp = new MasterControlPanel();cp.start(); List 3-3은 위임의 간단한 예제입니다.HeatSensor의 생성자로 ControlPanel 객체를 전달합니다.HeatSensor 클레스가 ControlPanel의 startAlarm 메서드를 필요할때 호출할 수 있습니다. ControlPanel은 센서들의 갯수를 조정할수 있으며,각각의 센서는 ControlPanel에 콜백을 통해서 문제가 발생했을때 경보를 알릴수 있습니다. 그림 3-1은 다양한 자동차 구성 요소 사이의 관계를 설명합니다. 새시는 자동차에 내장된 일반 골격입니다.엔진, 구동샤프트, 트랜스미션이 섀시에 장착될 때, 그 결합을 롤링 섀시라고 합니다. 그림 3-1 캡슐화와 상속 다형성(Polymorphism)다형성이란 하나의 시그너쳐를 여러가지 다른 형태로 구현하는 능력을 말합니다.타입스크립트에서 다형성은 여러가지 다른 형태로 가능합니다. 많은 클래스에 의해 구현된 인터페이스 많은 개체에 의해 구현된 인터페이스 많은 함수에 의해 구현된 인터페이스 여러 서브 클래스를 가진 슈퍼 클래스 유사한 스트럭쳐를 많이 가진 스트럭쳐 리스트 중 마지막 부분에 보면 “유사한 스트럭쳐를 많이 가진 스트럭쳐”란 형태가 같은 타입스크립트 스트럭쳐 타입을 말합니다. Listing 3-4. Polymorphism123456789101112131415161718192021222324252627interface Vehicle &#123; moveTo(x: number, y: number);&#125;class Car implements Vehicle &#123; moveTo(x: number, y: number) &#123; console.log('Driving to ' + x + ' ' + y); &#125;&#125;class SportsCar extends Car &#123;&#125;class Airplane &#123; moveTo(x: number, y: number) &#123; console.log('Flying to ' + x + ' ' + y); &#125;&#125;function navigate(vehicle: Vehicle) &#123; vehicle.moveTo(59.9436499, 10.7167959);&#125;var airplane = new Airplane();navigate(airplane);var car = new SportsCar();navigate(car); navigate함수는 Vehicle인터페이스와 호환되는 어떤 타입이라도 다 받아들입니다.2개의 number타입을 인수로 받는 moveTo 메서드를 가진 어떠한 클래스나 객체라도 다 가능합니다. 예제의 모든 타입은 Vehicle의 정의와 호환됩니다.Car는 명시적으로 인터페이스를 구현한 것이며,SportsCar는 Car를 상속받았으므로 Vehicle인터페이스를 구현하였습니다.Airplane는 명시적으로 Vehicle 인터페이스를 구현하지 않았지만, moveTo 메서드 가지고 있으므로 navigate 함수에 호환됩니다. SOLID Principleshttps://en.wikipedia.org/wiki/SOLID_(object-oriented_design) 1. 단일 책임 원칙 (Single responsibility priciple)클레스는 오직 한 가지 작업만 수행하며, 단 한 가지 이유에 의해서만 변경되는 코드를 작성하도록 권장하는 원칙이다. 2. 개방/폐쇄 원칙 (Open/closed principle)클래스 내부를 수정하지 않고서도 확장할 수 있어야 한다. (여기에 대해서는 사람마다 해석하는 방법이 다르다.) 확장에 대한 개방 : 새로운 요구 사항 발생시 추가가 가능해야 한다. 수정에 대한 폐쇄 : 수정될때 그 결과 인해 모듈의 소스 혹은 바이너리 코드가 변경되어서는 안된다. 3. 리스코프 치환 원칙 (Liskov substitution principle)슈퍼 클래스가 사용되는 곳에 서브 클래스로 치환하더라도 문제를 일으키지 않고 동작해야 한다. 4. 인터페이스 분리 (Interface segregation principle)작은 인터페이스로 많이 분리하는 것이 일반적인 경우에도 다 사용가능한 하나의 인터페이스보다 더 좋다. 5, 의존성 주입 (Dependency inversion principle)직접적으로 의존하지 말고 추상화에 의존하라. 단일 책임 원칙 (Single responsibility priciple)클레스가 변경되는 이유는 딱 한가지여야 합니다.클레스 설계시 통상 관련있는 항목 들을 같이 넣어서 변경시 관련 있는 것들을 모아둡니다.이러한 프로그램은 매우 결합력이 있을수 있습니다. 여기에서의 결합력의 의미는 클래스나 모듈에서 기능의 관련성을 의미합니다.기능들이 관련성이 낮으면 클래스는 낮은 결합력을 가지는 것이며 여러가지 이유에 의해서 변경 될 수 있습니다.높은 응집력은 SRP의 결과입니다. 코드를 추가할 경우 어디에 추가할지에 대해서 결정을 해야 하는데 대부분의 명백히 맞다, 틀리다라고 말하기 애매한 경우가 많습니다.클래스는 시간이 지날수록 점점 더 원래의 목적과 멀어지는 경우가 많습니다. SRP를 클래스에 적용한다고 생각할 것이 아니라함수를 만들때도 그것은 한가지 일만 수행해야 하고, 한가지 이유에 의해서만 수정해야 합니다.모듈 또한 마찬가지고 한가지 목적을 가지고 있는 것들의 집합으로 생성해야 합니다. List 3-5는 SRP에 어긋한 사례를 보여줍니다.언뜻보면 모든 함수들이 Movie 클래스의 속성을 사용하여 작업하므로 맞게 된 것으로 보이지만,Movie 객체를 사용하는 것과 Repository로 사용하는 것 사이에서 그 경계가 애매모호 한 점이 보입니다. Listing 3-5. Single responsibility principle (SRP) violation123456789101112class Movie &#123; private db: DataBase; constructor(private title: string, private year: number) &#123; this.db = DataBase.connect('user:pw@mydb', ['movies']); &#125; getTitle() &#123; return this.title + ' (' + this.year + ')'; &#125; save() &#123; this.db.movies.save(&#123; title: this.title, year: this.year &#125;); &#125;&#125; 이 클래스가 더 커지기전에 수정하고자 한다면,Movie에 관련된 것과 MovieRepository에 관련된 것으로 구분이 가능합니다.Movie에 관련된 기능을 추가할 경우 MovieRepository는 변경할 필요가 없습니다.반대로 MovieRepository를 변경한 경우 Movie는 변경할 필요가 없습니다. Listing 3-6. Separate reasons for change12345678910111213141516171819202122232425class Movie &#123; constructor(private title: string, private year: number) &#123; &#125; getTitle() &#123; return this.title + ' (' + this.year + ')'; &#125;&#125;class MovieRepository &#123; private db: DataBase; constructor() &#123; this.db = DataBase.connect('user:pw@mydb', ['movies']); &#125; save(movie: Movie) &#123; this.db.movies.save(JSON.stringify(movie)); &#125;&#125;// Movievar movie = new Movie('The Internship', 2013);// MovieRepositoryvar movieRepository = new MovieRepository();movieRepository.save(movie); SRP를 클래스 레벨에 대해서 고려하는 것은 개념적으로 생각하기 쉽습니다.하지만 함수 레벨에 적용을 하는게 더 중요합니다.각각의 함수는 한가지 작업만을 수행하며, 함수명은 그 의도를 명확히 보여주어야 합니다.Uncle Bob (http://blog.cleancoder.com)은 당신이 떨어져 나갈때까지 분리하라.고 하였습니다.즉, 함수가 몇줄 안될때까지 한가지 작업만 할 수 있도록 리팩토링을 하라는 의미입니다.이러한 함수를 리팩토링하는 방법은 전체적인 디자인을 재구성할 경우 쉽게 가능하도록 하는데 큰 도움이 됩니다. 개방/폐쇄 원칙 (Open/closed principle)OCP는 다음 문장으로 요약됩니다. 소프트웨어는 확장에 대해서는 개방적이어야 하지만, 수정을 하는데는 폐쇄적이어야 한다. 실질적으로 아무리 설계를 잘하더라도, 수정으로부터 완벽하게 보호하는 것은 힘듭니다.그러나 아무리 사소한거라도 기존 코드를 변경하는 것은 위험합니다. OCP를 따를려면 프로그램의 변경가능성을 고려해야 합니다.예를 들어, 나중에 교체되거나 확장가능한 함수를 포함하는 클래스들을 식별해야 합니다.하지만, 미래를 예측하는 것은 가능한 일이 아니며, 나중을 위해 생성한 코드는 거의 대부분 사용되지 않습니다.무슨 일이 일어날지 예측하는 것은 까다롭습니다.이 코드가 나중에 필요없게 될수도 있고, 예측한 것과는 다른 방향으로 흘러 갈 수도 있습니다.그래서 실제로 문제가 일어났을 때만 해결하려고 노력을 한다는 것을 윈칙으로 하는것이 좋습니다. OCP를 따르는 방법중 가장 일반적인 것은 필요할 경우 클래스를 다른 클래스도 대체할 수 있도록 구현하는 것입니다.객체지향 언어로 이렇게 구현하는 것은 그렇게 어려운 일이 아닙니다.물론 타입스크립트도 예외는 아닙니다.목록 3-7은 RewardPointsCalculator라는 포인트 카드의 리워드를 계산해주는 클래스를 보여줍니다.보통의 경우 달러 당 4점의 포인트를 보상해 줍니다.VIP 손님과 같이 2배로 포인트를 보상해 주려고 할때 DoublePointsCalculator라는 서브클래스로 대체할 수 있습니다.getPoints()함수 호출하면 슈퍼클래스의 함수가 무시되고 서브클레스에서 수행합니다. Listing 3-7. Open–closed principle (OCP)1234567891011121314151617class RewardPointsCalculator &#123; getPoints(transactionValue: number) &#123; // 4 points per whole dollar spent return Math.floor(transactionValue) * 4; &#125;&#125;class DoublePointsCalculator extends RewardPointsCalculator &#123; getPoints(transactionValue: number) &#123; var standardPoints = super.getPoints(transactionValue); return standardPoints * 2; &#125;&#125;var pointsCalculator = new DoublePointsCalculator();alert(pointsCalculator.getPoints(100.99)); RewardPointsCalculator의 기능을 대체하기 위해서 해당 클래스에 대한 수정 없이 서브클래스를 생성하여 원래 기능을 대체함으로써 구현을 하였습니다.OCP를 잘 지키면 유지 보수 및 재사용 가능한 코드로 작성되는 경향이 높습니다.변화가 필요한 경우에도 기존에 잘 동작하는 코드는 수정하지 않으면서 새로운 코드를 요구 사항에 맞게 처리하도록 추가할 수 있습니다. 리스코프 치환 원칙 (The Liskov Substitution Principle) (LSP)바바라 리스코프(Barbara Liskov)가 1988년에 데이터 추상화와 계층구조(Data Abstraction and Hierarchy)라는 제목의 기조연설에서 이런말을 했습니다. S가 T의 하위속성이라면 프로그램의 변경없이 T의 객체를 S로 교체(치환)할 수 있어야 한다. 서브클레스가 슈퍼클래스를 대체할 경우 클래스를 사용하는 코드가 대체한다는 사실을 알 필요가 없다는 것입니다.개체의 타입에 대해서 테스트하는 코드가 있는 경우에는 LSP를 위반하고 있을 가능성이 높습니다. 서브타입에서의 함수 인자 호환성 :슈퍼클래스에 Cat을 입력받는 함수가 있는 경우, 서브클레스는 Cat 혹은 Animal을 인자로 받을수 있어야 합니다. 서브타입에서의 리턴 타입 호환성 :슈퍼클래스에 Animal을 리턴하는 함수가 있는 경우, 서브클레스는 Animal이나 Animal의 서브클래스 (Cat)를 반환할 수 있어야 합니다. 서브타입에서의 발생 예외 호환성 :서브클래스가 예외를 발생할 경우, 슈퍼클래스와 같은 예외이거나 그 예외의 서브타입을 발생시켜야 합니다.타입스크립스의 경우에는 예외 클래스 뿐만 아니라 단순한 예외를 문자열로 throw하게 지정할 수 있습니다.List 3-8과 같이 오류 클래스를 생성할 수도 있습니다.여기서 말하고자하는 것은 예외 처리 코드의 경우 서브클레스라고 해서 다르게 처리되어서는 안된다는 뜻입니다. Listing 3-8. Error classes123456class ApplicationError implements Error &#123; constructor(public name: string, public message: string) &#123; &#125;&#125;throw new ApplicationError('Example Error', 'An error has occurred'); LSP는 새로운 함수를 추가할 때 예전에 사용되던 함수 대신 사용이 가능하다는 것을 보장해 줌으로 OCP를 지원합니다.서브클래스가 직접 슈퍼클래스를 대체할 수 없는 경우,서브클래스를 추가하는 작업은 기존에 잘 작동하던 코드를 수정해야 한다는 뜻이며,객체 타입에 따라 실행이 나뉘게 되는 식으로 프로그램을 작성해야 할 수도 있다는 말이 됩니다. 책에서는 소개되지 않았지만 LSP를 제대로 지키기 위한 가이드 라인을 소개해 드리겠습니다. 계약 규칙 서브타입에서 더 강력한 사전 조건을 정의할 수 없다. 서브타입에서 더 완화된 사후 조건을 정의할 수 없다. 슈퍼타입의 불변식(항상 참으로 유지되는 조건들)은 서브타입에서도 반드시 유지되어야 한다. 가변성 규칙 서브타입의 메서드 인수는 반 공변성(contravariance)을 가져야 한다. (더 작은 파생형식을 사용할 수 있다.) 서브타입의 리턴 타입은 공변성(variance)을 가져야 한다. (더 많은 파생형식을 사용할 수 있다.) 서브타입은 슈퍼타입이 발생시키는 것과 동일한 타입 예외나 그 보무 타입의 예외 혹은 자식 타입의 예외만 사용해야 한다. 인터페이스 분리 (The Interface Segregation Principle) (ISP)인터페이스를 통해 클래스가 어떤 역할을 하는지를 알 수 있습니다.통상적으로 클래스를 먼저 생성한 후에 인터페이스를 작성합니다.List 3-9는 복사,출력, 분류 작업을 하는 Printer 인터페이스입니다.이 인터페이스는 프린터 동작을 단순히 포함하는 식이기 때문에 폴딩, 봉투 입력, 팩스, 스캔, 이메일 전송 등의 작업을 추가하는 식으로 점점 더 커질 수 있습니다. Listing 3-9. Printer interface12345interface Printer &#123; copyDocument(); printDocument(document: Document); stapleDocument(document: Document, tray: number);&#125; ISP는 큰 인터페이스를 만드는 대신 더 작고 구체적인 인터페이스로 분리하는 것을 권장합니다.각각의 인터페이스는 필요한 함수만을 제공하도록 정의합니다.이렇게 함으로써 클래스 내에 인터페이스를 구현할 때 필요없는 기능에 대해서 구현할 필요가 없게 할 수 있습니다. List 3-9의 Printer 인터페이스를 구현할때 인쇄, 복사는 구현이 가능한데 분류가 불가능할 경우 해당 함수에 대해서는 오류를 발생시키도록 해야 할 수도 있습니다.추후에 Printer 인터페이스에 새로운 함수를 추가할 경우 이미 구현된 클래스들에 영향을 주기 때문에 추가 자체가 어려워 집니다.List 3-10은 기존의 Printer 인터페이스를 나눠서 SimplePrinter와 SuperPrinter에서 구현을 다르게 한 것을 보여줍니다. Listing 3-10. Segregated interfaces1234567891011121314151617181920212223242526272829interface Printer &#123; printDocument(document: Document);&#125;interface Stapler &#123; stapleDocument(document: Document, tray: number);&#125;interface Copier &#123; copyDocument();&#125;class SimplePrinter implements Printer &#123; printDocument(document: Document) &#123; //... &#125;&#125;class SuperPrinter implements Printer, Stapler, Copier &#123; printDocument(document: Document) &#123; //... &#125; copyDocument() &#123; //... &#125; stapleDocument(document: Document, tray: number) &#123; //... &#125;&#125; ISP를 잘 지키면 클라이언트 코드는 사용하지 않는 함수에 대해서 구현할 필요가 없습니다. 의존성 주입 (The Dependency Inversion Principle) (DIP)전통적인 OOP에서는 상위 컴퍼넌트는 계층구조 상의 하위 컴퍼넌트들에게 의존적입니다.컴퍼넌트간의 결합으로 인해 시스템을 수정하기 힘들게 됩니다.또한 해당 모듈을 재사용하기 위해서는 의존 관계에 있는 모든 컴퍼넌트들을 다 신경써야 하므로, 결과적으로 재사용성을 떨어트립니다. List 3-11은 전통적인 종속성을 보여주는 예제입니다.LightSwitch 클래스는 Light 클래스에 의존성을 가지고 있습니다. Listing 3-11. High-level dependency on low-level class12345678910111213141516171819202122232425262728interface LightSource &#123; switchOn(); switchOff();&#125;class Light &#123; switchOn() &#123; //... &#125; switchOff() &#123; //... &#125;&#125;class LightSwitch &#123; private isOn = false; constructor(private light: Light) &#123; &#125; onPress() &#123; if (this.isOn) &#123; this.light.switchOff(); this.isOn = false; &#125; else &#123; this.light.switchOn(); this.isOn = true; &#125; &#125;&#125; DIP는 OCP와 LSP를 확장한 개념입니다.추상화에 의존하게 함으로써, 구체적인 클래스와의 결합성을 낮출수 있습니다.이 원리를 따르는 가장 간단한 방법은 클래스가 아닌 인터페이스에 의존적으로 구현하는 것입니다. 디자인 패턴 (Design Patterns)디자인 패턴이란 이미 알려진 문제점들에 대해서 그 해결책을 디자인을 통해서 제공해주는 것을 의미합니다.하지만 패턴이 과도하게 사용되어서는 안됩니다.디자인 패턴에 관해 가장 알려진 것은 Gang of Four의 Design Patterns: Elements of Reusable Object-Oriented Software (Gamma, Helm, Johnson, &amp; Vlissides, Addison Wesley, 1995)가 있습니다. 디자인 패턴들을 자바스크립트에서도 적용이 가능합니다.Diaz and Harmes의 Pro JavaScript Design Patterns, Apress, 2007란 책도 나와 있습니다.자바스크립트에서 가능한 것은 타입스크립트에서도 물론 가능합니다.타입스크립트는 클래스 기반의 객체 지향을 사용하기 때문에 전통적인 디자인 패턴 예제를 타입스크립트로 적용하는 것이 가능합니다.몇 가지 디자인 패턴 샘플들에 대해서 소개해 드리겠습니다.(전략 패턴, 추상 팩토리 패턴)GOF의 디자인패턴에는 총 23가지 패턴이 있습니다. 전략 패턴 (The Strategy Pattern)전략패턴은 알고리즘을 캡슐화하는 방법을 제공합니다.그림 3-2에서 Context 클래스는 인터페이스의 구체적인 구현을 제공하는 Strategy에 의존적입니다.인터페이스를 구현하는 클래스는 런타임에 Context에 제공되어 집니다. 그림 3-2 전략 패턴 추상 팩토리 패턴 (The Abstract Factory Pattern)추상 팩토리 패턴은 창조적인 디자인 패턴입니다.개체 생성을 위해서 구체적인 클래스를 지정하지 않고 인터페이스로 지정할 수 있습니다.그래서 런타임시 구체적인 클래스를 전달하는 것입니다. 그림 3-3 추상 팩토리 패턴 예제새차 시스템에 전략 패턴과 추상 팩토리 패턴을 이용한 예를 살펴보겠습니다.가격에 따라 다른 서비스를 제공하는 시스템입니다.List 3-13은 휠청소 클래스에 대한 인터페이스와 2가지 기본, 고급의 2가지 전략을 보여줍니다. Listing 3-13. Wheel cleaning123456789101112131415161718interface WheelCleaning &#123; cleanWheels(): void;&#125;class BasicWheelCleaning implements WheelCleaning &#123; cleanWheels() &#123; console.log('Soaping Wheel'); console.log('Brushing wheel'); &#125;&#125;class ExecutiveWheelCleaning extends BasicWheelCleaning &#123; cleanWheels() &#123; super.cleanWheels(); console.log('Waxing Wheel'); console.log('Rinsing Wheel'); &#125;&#125; List 3-14는 차체 청소를 위한 전략을 보여줍니다. Listing 3-14. Body cleaning123456789101112131415161718interface BodyCleaning &#123; cleanBody(): void;&#125;class BasicBodyCleaning implements BodyCleaning &#123; cleanBody() &#123; console.log('Soaping car'); console.log('Rinsing Car'); &#125;&#125;class ExecutiveBodyCleaning extends BasicBodyCleaning &#123; cleanBody() &#123; super.cleanBody(); console.log('Waxing car'); console.log('Blow drying car'); &#125;&#125; List 3-15는 추상 팩토리 패턴이 사용되기 전의 CarWashProgram입니다.세척 클래스들과 강력한 결합을 가지고 있으며, 선택된 것에 대하여 클래스를 생성합니다. Listing 3-15. CarWashProgram class before the abstract factory pattern12345678910111213141516171819202122232425262728class CarWashProgram &#123; constructor(private washLevel: number) &#123; &#125; runWash() &#123; var wheelWash: WheelCleaning; var bodyWash: BodyCleaning; switch (this.washLevel) &#123; case 1: wheelWash = new BasicWheelCleaning(); wheelWash.cleanWheels(); bodyWash = new BasicBodyCleaning(); bodyWash.cleanBody(); break; case 2: wheelWash = new BasicWheelCleaning(); wheelWash.cleanWheels(); bodyWash = new ExecutiveBodyCleaning(); bodyWash.cleanBody(); break; case 3: wheelWash = new ExecutiveWheelCleaning(); wheelWash.cleanWheels(); bodyWash = new ExecutiveBodyCleaning(); bodyWash.cleanBody(); break; &#125; &#125;&#125; 추상 팩토리란 구체적인 팩토리들이 수행가능한 인터페이스 입니다.List 3-16에서 ValetFactory 인터페이스는 WheelCleaning와 BodyCleaning를 얻을 수 있는 기능을 제공합니다.휠청소와 차체청소를 필요로하는 클래스는 이 인터페이스에 의존적일 수 있습니다.또한 각각의 청소를 클래스로 부터 해제하는 일이 필요할 수도 있습니다. Listing 3-16. Abstract factory1234interface ValetFactory &#123; getWheelCleaning() : WheelCleaning; getBodyCleaning() : BodyCleaning;&#125; List 3-17에서 금,은,동 등급의 3개의 팩토리를 선언합니다.각각의 팩토리는 해당 등급에 맞는 청소클래스를 제공합니다. Listing 3-17. Concrete factories1234567891011121314151617181920212223242526class BronzeWashFactory implements ValetFactory &#123; getWheelCleaning() &#123; return new BasicWheelCleaning(); &#125; getBodyCleaning() &#123; return new BasicBodyCleaning(); &#125;&#125;class SilverWashFactory implements ValetFactory &#123; getWheelCleaning() &#123; return new BasicWheelCleaning(); &#125; getBodyCleaning() &#123; return new ExecutiveBodyCleaning(); &#125;&#125;class GoldWashFactory implements ValetFactory &#123; getWheelCleaning() &#123; return new ExecutiveWheelCleaning(); &#125; getBodyCleaning() &#123; return new ExecutiveBodyCleaning(); &#125;&#125; List 3-18은 추상 팩토리 패턴이 사용된 예제입니다.CarWashProgram 플래스는 더이상 구체적인 클래스에 대해서 알 필요가 없습니다.이제는 각각의 청소 클래스를 제공하는 팩토리로 구성되어 있습니다.이것은 컴파일 타임이나 런타임에 수행됩니다. Listing 3-18. Abstract factory pattern in use12345678910class CarWashProgram &#123; constructor(private cleaningFactory: ValetFactory) &#123; &#125; runWash() &#123; var wheelWash = this.cleaningFactory.getWheelCleaning(); wheelWash.cleanWheels(); var bodyWash = this.cleaningFactory.getBodyCleaning(); bodyWash.cleanBody(); &#125;&#125; Mixinshttps://en.wikipedia.org/wiki/Mixin Mix-in은 디자인 패턴에서는 다루지 않는 응용 프로그램을 구성하는 다른 방법입니다.믹스인은 미사추세츠, 소머빌에 있는 시트브 아이스크림이란 가게에서 고객이 고를수 있는 아이스크림 디저트의 이름을 따왔습니다.아이스 크림을 고른 뒤 막대 사탕 같은 다른 기호에 맞는 것들을 추가할 수가 있습니다. 프로그래밍의 믹스인도 이와 유사합니다.인자로 재사용 가능한 클래스들을 받아서 그것들을 조합하여 사용합니다.믹스인 클래스의 일부는 인터페이스이며 일부는 구현입니다. TypeScript Mixins아직 타입스크립트에서 믹스인이 완벽하게 지원되지는 않습니다만, 간단한 정도는 구현이 가능합니다.List 3-19에 믹스인을 적용한 함수가 있습니다.이 함수는 각각의 증강 클래스(augumented class) 배열을 baseCtors로 전달하고 구현할 클래스를 derivedCtor로 전달합니다.이 함수를 통해서 믹스인을 적용하고 싶을 때는 언제든지 적용이 가능합니다. Listing 3-19. Mixin enabler function123456789function applyMixins(derivedCtor: any, baseCtors: any[]) &#123; baseCtors.forEach(baseCtor =&gt; &#123; Object.getOwnPropertyNames(baseCtor.prototype).forEach(name =&gt; &#123; if (name !== 'constructor') &#123; derivedCtor.prototype[name] = baseCtor.prototype[name]; &#125; &#125;) &#125;);&#125; Listing 3-20에는 재사용 가능한 증강 클래스가 정의 되어 있습니다.구체적인 구분은 없지만, Sings, Dances, Acts에 대해서 정의했습니다.이러한 클래스는 서로 다른 조합으로 구성되어 실행이 가능합니다. Listing 3-20. Reusable classes1234567891011121314151617class Sings &#123; sing() &#123; console.log('Singing'); &#125;&#125;class Dances &#123; dance() &#123; console.log('Dancing'); &#125;&#125;class Acts &#123; act() &#123; console.log('Acting'); &#125;&#125; 이 클래스들은 SRP를 매우 잘 지키고 있습니다.타입스크립트에서는 implements 키워드 뒤에 믹스인 리스트(증강 클래스)를 콤마로 나열해서 클래스를 구성할 수 있습니다. Listing 3-21. Composing classes12345678910111213class Actor implements Acts &#123; act: () =&gt; void;&#125;applyMixins(Actor, [Acts]);class AllRounder implements Acts, Dances, Sings &#123; act: () =&gt; void; dance: () =&gt; void; sing: () =&gt; void;&#125;applyMixins(AllRounder, [Acts, Dances, Sings]); Actor와 AllRounder 클래스에는 구현되어 있는게 아무것도 없습니다.증강 클래스에서 제공받을 수 있는 공간만을 할당해놓고 있습니다.이 클래스를 사용하는 것은 다른 클래스를 사용하는 것과 다르지 않습니다. Listing 3-22. Using the classes1234567var actor = new Actor();actor.act();var allRounder = new AllRounder();allRounder.act();allRounder.dance();allRounder.sing(); 타입스크립트에서 다중 상속은 허용되지 않습니다.마치 다중 상속처럼 보이겠지만, extends를 사용한 것이 아닌 impliments를 사용했다는 것이 중요합니다. 언제 믹스인을 써야 하는가믹스인을 타입스크립트에서 일부 지원하지만, 사용할때 무엇을 염두해 두어야 할까요 ?무엇보다도, 구현이 클래스에 주입되었는지에 대해서 확인하는 방법이 없으므로 applyMixins 함수를 정확한 클래스 명의 리스트로 호출하는것을 신경써야 합니다.그렇지 않으면 테스트 할때 제대로 잘 안되더라도 원인을 찾기 힘들 것입니다. 믹스인을 사용할지 일반적인 클래스를 사용할지는 클래스간의 관계를 보고 결정을 해야 합니다.상속에는 통상 is a를 사용하고 위임에서는 has a를 사용합니다. A car has a chassis. A rolling chassis is a chassis. 믹스인에서는 can do를 사용하는 것으로 그 관계를 설명할 수 있습니다. An actor can do actingor An actor acts. Acting과 Acts와 같이 이름 지정으로서 믹스인 관계를 식별하도록 할 수 있습니다.그렇게 하면 클래스 선언이 마치 문장 처럼 보일 수 있습니다. (Actor implements Acting)믹스인은 작은 단위가 합쳐서 큰 것으로 되는 것이 가능하기 때문에, 다음에 열거한 시나리오들은 믹스인으로 구성되기 좋은 것들입니다. 추가적인 옵션을 갖는 클래스 (믹스인 함수를 옵션으로 구현) 여러 클래스에서 동일한 함수를 재사용 비슷한 기능들의 조합으로 여러 가지 클래스를 만들어야 할 경우 제한점믹스인 함수를 private 멤버로 사용하면 안됩니다.왜냐면 컴파일러가 증강 클래스가 구현이 안되었을 경우 오류를 발생합니다.또한 믹스인 함수와 증강 클래스가 둘 다 동일한 이름의 private 멤버를 가지고 있는 경우에도 오류를 발생합니다. 믹스인의 또다른 제한점은 함수는 증강 클래스로 매핑되지만, 속성은 안됩니다. (List 3-23)증강 클래스 안에 속성을 구현한 경우 믹스인 함수에서 초기화해줘야 합니다.실수를 방지하기 위해서는 증강 클래스 안에 있는 속성에 대해서는 디폴트값을 정의하지 않는 것이 좋습니다. Listing 3-23. Properties not mapped123456789101112131415161718class Acts &#123; public message = 'Acting'; act() &#123; console.log(this.message); &#125;&#125;class Actor implements Acts &#123; public message: string; act: () =&gt; void;&#125;applyMixins(Actor, [Acts]);var actor = new Actor();// Logs 'undefined', not 'Acting'actor.act(); 속성이 특정 개체에 종속되지 않는다면 static으로 선언하는 방법도 있습니다.List 3-24는 List 3-23의 문제점을 static 요소로 선언하는 것으로 해결한 것입니다.객체마다 다른 값이 필요한 경우 해당 요소는 믹스인 함수에서 초기화해줘야 합니다. Listing 3-24. Static properties are available123456class Acts &#123; public static message = 'Acting'; act() &#123; alert(Acts.message); &#125;&#125; Summary 타입스크립트에는 객체 지향적인 요소들을 대부분 포함하고 있습니다. SOLID 이론은 코드가 계속 유지될 수 있도록 해주는 것을 그 목표로 하고 있습니다. 디자인 패턴은 일반적으로 알려준 문제들에 대한 해법이 될 수 있습니다. 디자인 패턴에서 설명한 그대로 구현할 필요는 없습니다. 믹스인은 각 가수어품들을 대체 할수 있는 방법을 제공합니다.","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://DevStarSJ.github.io/categories/JavaScript/"},{"name":"TypeScript","slug":"JavaScript/TypeScript","permalink":"http://DevStarSJ.github.io/categories/JavaScript/TypeScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://DevStarSJ.github.io/tags/JavaScript/"},{"name":"TypeScript","slug":"TypeScript","permalink":"http://DevStarSJ.github.io/tags/TypeScript/"}]},{"title":"ASP.NET MVC 05. View","slug":"CSharp.Aspnet.05.View ","date":"2016-05-23T19:00:00.000Z","updated":"2017-04-23T10:31:17.000Z","comments":true,"path":"2016/05/24/CSharp.Aspnet.05.View /","link":"","permalink":"http://DevStarSJ.github.io/2016/05/24/CSharp.Aspnet.05.View /","excerpt":"","text":"View View &#xB780;? MVC Framework&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xC790;&#xC5D0;&#xAC8C; &#xACB0;&#xACFC;&#xB97C; &#xBCF4;&#xC5EC;&#xC8FC;&#xB294; &#xC5ED;&#xD560;&#xC744; &#xD569;&#xB2C8;&#xB2E4;. https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller ASP.NET&#xC5D0;&#xC11C;&#xB294; Razor Engine&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; View&#xB97C; &#xC870;&#xAE08; &#xB354; &#xD3B8;&#xD558;&#xAC8C; &#xC791;&#xC131; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. (.cshtml) Razor Engine&#xC774; &#xBB34;&#xC5C7;&#xC778;&#xC9C0; &#xAC04;&#xB2E8;&#xD558;&#xAC8C; &#xC598;&#xAE30;&#xD558;&#xC790;&#xBA74; View (HTML page) &#xC791;&#xC131;&#xC2DC; C# &#xBB38;&#xBC95;&#xACFC; .NET Framework&#xB97C; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. Layout, Partial View&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xD2B9;&#xC815; &#xC601;&#xC5ED;&#xB9CC; &#xB530;&#xB85C; rendering &#xD558;&#xB294; &#xAC83;&#xB3C4; &#xAC00;&#xB2A5;&#xD558;&#xBA70;, &#xAC01;&#xC885; Helper method&#xB97C; &#xC81C;&#xACF5;&#xD558;&#xC5EC;&#xC11C; &#xBC18;&#xBCF5;&#xC801;&#xC778; HTML TAG &#xC791;&#xC131; &#xC791;&#xC5C5;&#xC744; &#xC904;&#xC5EC;&#xC8FC;&#xBA70;, &#xC9C1;&#xC811; Helper method&#xB97C; &#xC791;&#xC131;&#xD558;&#xC5EC;&#xC11C;&#xB3C4; &#xD65C;&#xC6A9; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. View&#xC758; &#xAE30;&#xBCF8;&#xC801;&#xC778; &#xC0AC;&#xC6A9;&#xBC95;&#xC740; Controller and Action &#xC808;&#xC5D0;&#xC11C; &#xC608;&#xC81C; &#xC791;&#xC131;&#xC2DC; &#xAC04;&#xB2E8;&#xD788; &#xC5B8;&#xAE09;&#xD588;&#xC73C;&#xBBC0;&#xB85C; &#xC0DD;&#xB7B5;&#xD558;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. https://github.com/DevStarSJ/Study/blob/master/Blog/MVC/04.ControllerAndAction.md View&#xB97C; &#xD3B8;&#xB9AC;&#xD558;&#xAC8C; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xC704;&#xD55C; &#xBC29;&#xBC95;(&#xC8FC;&#xB85C; &#xC7AC;&#xD65C;&#xC6A9; &#xBC29;&#xC548;) &#xC704;&#xC8FC;&#xB85C; &#xC9C4;&#xD589;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 1. Layout section Layout (&#xC8FC;&#xB85C; _Layout.cshtml &#xC2DD;&#xC758; &#xBA85;&#xCE6D;) &#xB0B4;&#xBD80;&#xC5D0;&#xB294; section&#xC744; &#xC81C;&#xACF5;&#xD574; &#xC90D;&#xB2C8;&#xB2E4;. @RenderBody() : &#xD574;&#xB2F9; Layout&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xB294; View&#xC758; &#xB0B4;&#xC6A9;&#xC774; &#xC774; &#xC704;&#xCE58;&#xC5D0; &#xC0BD;&#xC785;&#xB429;&#xB2C8;&#xB2E4;. @RenderSection(&quot;Name&quot;) : View &#xC5D0;&#xC11C; @section Name { ... } &#xC758; &#xB0B4;&#xC6A9;&#xC774; &#xD574;&#xB2F9; section&#xC5D0; &#xC0BD;&#xC785;&#xB429;&#xB2C8;&#xB2E4;. Layout&#xC5D0;&#xC11C; &#xC120;&#xC5B8;&#xD55C; @RenderSection(&quot;...&quot;)&#xC774; View&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xC73C;&#xBA74; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; section&#xC5D0; &#xC120;&#xD0DD;&#xC801;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xC744; &#xD558;&#xB824;&#xBA74; (View&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xC544;&#xB3C4; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xAC8C; &#xD558;&#xB824;&#xBA74;) @RenderSection(&quot;...&quot;, false)&#xB85C; &#xC120;&#xC5B8;&#xC744; &#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. *_Layout.cshtml 123456789101112131415// _Layout.cshtml...&lt;body&gt; @RanderSection(&quot;Header&quot;) ... @RanderBody() ... @RanderSection(&quot;Footer&quot;, required = false)&lt;/body&gt; Index.cshtml 123456789101112@{ Layout = &quot;_Layout&quot;;}@section Header {&lt;div&gt;This is Header&lt;/div&gt;}&lt;div&gt; RenderBody contains every contents in this document, except @section ...&lt;/div&gt; 2. Partial View Razor Tag, HTML Markup &#xC73C;&#xB85C; &#xC774;&#xB8E8;&#xC5B4;&#xC9C4; &#xB3D9;&#xC77C;&#xD55C; &#xCF54;&#xB4DC;&#xB97C; &#xBC18;&#xBCF5;&#xC801;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xD560; &#xACBD;&#xC6B0; &#xC720;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. Partial.cshtml 1234&lt;div&gt; This is Partial View. @Html.ActionLink(&quot;The Link of Index on this Controller&quot;, &quot;Index&quot;)&lt;/div&gt; List.cshtml 12345678@{ ViewBag.Title = &quot;List&quot;; Layout = null;}&lt;h3&gt;List&lt;/h3&gt;@Html.Partial(&quot;Partial&quot;) &#xC704;&#xC758; &#xACBD;&#xC6B0; List.cshtml&#xC5D0;&#xC11C; Partial.cshtml&#xC758; Partial view&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC600;&#xB294;&#xB370;, Partial view &#xB0B4;&#xBD80;&#xB97C; &#xBCF4;&#xBA74; ActionLink&#xB97C; Controller &#xC774;&#xB984;&#xC744; &#xBA85;&#xC2DC;&#xD558;&#xC9C0; &#xC54A;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;. Partial View&#xB97C; Rednering&#xD558;&#xB294; &#xACF3;&#xC774; List.cshtml &#xB0B4;&#xBD80;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xD574;&#xB2F9; Controller&#xB97C; &#xAE30;&#xC900;&#xC73C;&#xB85C; &#xB3D9;&#xC791;&#xD569;&#xB2C8;&#xB2E4;. Partial View&#xB3C4; ViewModel&#xC744; &#xAC00;&#xC9C8; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. (Strongly Typed Partial View) &#xADF8;&#xB7F4; &#xACBD;&#xC6B0; @Html.Partial(...) &#xC758; &#xB450;&#xBC88;&#xC9F8; &#xC778;&#xC790;&#xB85C; ViewModel&#xC744; &#xC804;&#xB2EC;&#xD574; &#xC918;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. Partial2.cshtml 12@model IEnumerable&lt;string&gt;... List.cshtml 12...@Html.Partial(&quot;Partial2&quot;, new [] { &quot;Luna&quot; , &quot;Star&quot; } ) 3. Child Action View &#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xB418;&#xB294; Action Method&#xB97C; &#xC758;&#xBBF8;&#xD569;&#xB2C8;&#xB2E4;. @Html.Action(...) helper method&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xBAA8;&#xB4E0; Action method&#xB97C; View&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xC9C0;&#xB9CC;, [ChileActionOnly] &#xC774;&#xB780; attribute&#xB97C; &#xBD99;&#xC774;&#xBA74; Routing System&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB418;&#xC9C0; &#xC54A;&#xACE0; &#xC21C;&#xC218;&#xD788; View&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xD560; &#xACBD;&#xC6B0;&#xC5D0;&#xB9CC; &#xB3D9;&#xC791;&#xD558;&#xB294; &#xAC83;&#xC744; &#xC758;&#xBBF8;&#xD569;&#xB2C8;&#xB2E4;. HomeController.cs 123456...[ChildActionOnly]public ActionResult Time(){ return PartialView(DateTime.Now);} Time.cshtml 1234@model DateTime&lt;div&gt; @Model.ToShortTimeString()&lt;/div&gt; List.cshtml 12...@Html.Action(&quot;Time&quot;) Child Action&#xC5D0; &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xAC00; &#xD544;&#xC694;&#xD55C; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xBB34;&#xBA85;&#xD615;&#xC2DD;&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xC804;&#xB2EC;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xB2E8; &#xD30C;&#xB77C;&#xBA54;&#xD130;&#xC758; &#xC774;&#xB984;&#xC774; &#xAC19;&#xC544;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. HomeController.cs 123456...[ChildActionOnly]public ActionResult Time(DateTime time){ return PartialView(DateTime.Now);} List.cshtml 12...@Html.Action(&quot;Time&quot;, new { time = DateTime.Now })","categories":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/categories/C/"},{"name":"ASP.NET","slug":"C/ASP-NET","permalink":"http://DevStarSJ.github.io/categories/C/ASP-NET/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"},{"name":"ASP.NET","slug":"ASP-NET","permalink":"http://DevStarSJ.github.io/tags/ASP-NET/"}]},{"title":"ASP.NET MVC 04. Controller and Action","slug":"CSharp.Aspnet.04.ControllerAndAction","date":"2016-05-11T18:00:00.000Z","updated":"2017-04-23T10:34:01.000Z","comments":true,"path":"2016/05/12/CSharp.Aspnet.04.ControllerAndAction/","link":"","permalink":"http://DevStarSJ.github.io/2016/05/12/CSharp.Aspnet.04.ControllerAndAction/","excerpt":"","text":"Controller and Action 1. Controlleer &#xC640; Action&#xC774;&#xB780; ? 1.1 Controller MVC Framework&#xC5D0;&#xC11C; &#xAC00;&#xC7A5; &#xD575;&#xC2EC;&#xC774;&#xB418;&#xB294; &#xC5ED;&#xD560;&#xC744; &#xC218;&#xD589;&#xD558;&#xB294; Component&#xC785;&#xB2C8;&#xB2E4;. Model&#xC744; &#xC870;&#xC791; User&#xC758; &#xC694;&#xCCAD;&#xC744; &#xCC98;&#xB9AC; UI&#xC5D0; &#xCD9C;&#xB825;&#xD560; View&#xB97C; &#xACB0;&#xC815; MVC Framework&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xC790;, View, Model&#xC740; &#xC11C;&#xB85C; &#xC544;&#xBB34;&#xB7F0; &#xC5F0;&#xACB0;&#xACE0;&#xB9AC;&#xAC00; &#xC5C6;&#xC774; &#xC774;&#xB8E8;&#xC5B4;&#xC9D1;&#xB2C8;&#xB2E4;. Controller&#xAC00; &#xADF8; &#xC911;&#xC2EC;&#xC5D0;&#xC11C; &#xCC98;&#xB9AC;&#xB97C; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. https://ko.wikipedia.org/wiki/&#xBAA8;&#xB378;-&#xBDF0;-&#xCEE8;&#xD2B8;&#xB864;&#xB7EC; 1.2 Action &#xD55C;&#xB9C8;&#xB514;&#xB85C; &#xC124;&#xBA85;&#xB4DC;&#xB9AC;&#xC790;&#xBA74; Controller&#xAC00; &#xC218;&#xD589;&#xD558;&#xB294; &#xAC01;&#xAC01;&#xC758; method&#xB4E4;&#xC744; Action&#xC774;&#xB77C;&#xACE0; &#xBD80;&#xB985;&#xB2C8;&#xB2E4;. &#xD558;&#xB098;&#xC758; Controller&#xB294; &#xC5EC;&#xB7EC;&#xAC00;&#xC9C0; &#xC77C;&#xC744; &#xC218;&#xD589; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. Action&#xC5D0;&#xC11C;&#xB294; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xC694;&#xCCAD;&#xD558;&#xB294; &#xC791;&#xC5C5;&#xC744; &#xC815;&#xC758;&#xD569;&#xB2C8;&#xB2E4;. &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; Action&#xC758; &#xC774;&#xB984;&#xACFC; &#xADF8; &#xACB0;&#xACFC;&#xB97C; &#xCD9C;&#xB825;&#xD558;&#xB294; View&#xC758; &#xC774;&#xB984;&#xC740; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. 123456789101112public class HomeController : Controller{ public ActionResult Index() { return View(); } public ActionResult Hello() { return View(); }} &#xC704;&#xC640; &#xAC19;&#xC774; &#xC815;&#xC758;&#xB41C; Home Controller&#xAC00; &#xC788;&#xB294; &#xACBD;&#xC6B0;, http://mySite.com/Home/Index &#xB77C;&#xB294; &#xC694;&#xCCAD;&#xC744; &#xD558;&#xBA74; Index()&#xB77C;&#xB294; Action method&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xC5B4; /Views/Home/Index.cshtml&#xC744; &#xCD9C;&#xB825;&#xD558;&#xBA70;, http://mySite.com/Home/Hello &#xB77C;&#xB294; &#xC694;&#xCCAD;&#xC744; &#xD558;&#xBA74; Hello()&#xB77C;&#xB294; Action method&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xC5B4; /Views/Home/Hello.cshtml&#xC744; &#xCD9C;&#xB825;&#xD569;&#xB2C8;&#xB2E4;. 2. Controller &#xAD6C;&#xD604; &#xBC29;&#xBC95; 2.1 IController interface&#xB85C; &#xAD6C;&#xD604; &#xC9C0;&#xAE08;&#xC740; &#xC798; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xB294; &#xBC29;&#xBC95;&#xC785;&#xB2C8;&#xB2E4;. 12345//System.Web.Mvc.IController Interfacepublic interface IController{ void Execute(RequestContext requestContext);} Execute()&#xB77C;&#xB294; &#xD558;&#xB098;&#xC758; &#xAD6C;&#xD604;&#xC744; &#xC81C;&#xACF5;&#xD574;&#xC8FC;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xD574;&#xB2F9; method &#xC548;&#xC5D0;&#xC11C; RequestContext&#xB97C; &#xBD84;&#xC11D;&#xD558;&#xC5EC; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. 123456789101112131415161718public BasicController : IController{ public void Execute (RequestContext requestContext) { string controller = (string)requestContext.RouteData.Values[&quot;controller&quot;]; string action = (string)requestContext.RouteData.Values[&quot;action&quot;]; switch (action) { case &quot;Index&quot;: ... break; case &quot;Hello&quot;: ... break; } }} 2.2 Controller&#xB97C; &#xC0C1;&#xC18D;&#xBC1B;&#xC544; &#xAD6C;&#xD604; &#xB9CE;&#xC774; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xC785;&#xB2C8;&#xB2E4;. Controller&#xB294; 3&#xAC00;&#xC9C0; &#xD575;&#xC2EC; &#xAE30;&#xB2A5;&#xC744; &#xC81C;&#xACF5;&#xD569;&#xB2C8;&#xB2E4;. Action Method : &#xC791;&#xC5C5;&#xB4E4;&#xC744; &#xC5EC;&#xB7EC; method&#xB85C; &#xB098;&#xB20C; &#xC218; &#xC788;&#xC73C;&#xBA70;, &#xC11C;&#xB85C; &#xB2E4;&#xB978; URL&#xB85C; &#xB178;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;. Action Result : Action method&#xC758; &#xACB0;&#xACFC;&#xB97C; &#xC0AC;&#xC6A9;&#xC790;&#xC5D0;&#xAC8C; return &#xD569;&#xB2C8;&#xB2E4;. Rendering&#xD55C; View JSON, XML &#xB4F1;&#xC758; document &#xB2E4;&#xB978; URL&#xB85C; Indirect Filter : Reusable&#xD55C; &#xAE30;&#xB2A5;&#xB4E4;&#xC744; Filter&#xB85C; Capsulation&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC608;&#xC81C; Code&#xB294; 1.2 Action&#xC758; &#xC608;&#xC81C;&#xB97C; &#xCC38;&#xACE0;&#xD558;&#xC2DC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 3. &#xC694;&#xCCAD; &#xB370;&#xC774;&#xD130; &#xBC1B;&#xAE30; Action method&#xC5D0;&#xC11C; &#xC694;&#xCCAD; &#xB370;&#xC774;&#xD130;&#xB97C; &#xAC00;&#xC838;&#xC624;&#xB294; &#xBC29;&#xBC95;&#xB4E4;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC54C;&#xC544;&#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 3.1 Context&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xB370;&#xC774;&#xD130; &#xAC00;&#xC838;&#xC624;&#xAE30; ASP.NET Platform&#xC5D0;&#xC11C; &#xC81C;&#xACF5;&#xD574;&#xC8FC;&#xB294; Context &#xAC1C;&#xCCB4;&#xB4E4;&#xC774; &#xB9CE;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8; &#xC911; &#xC790;&#xC8FC; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xAC12;&#xB4E4;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xBA87;&#xAC00;&#xC9C0; &#xC18C;&#xAC1C; &#xB4DC;&#xB9AC;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. Request. QueryString(NameValueCollection) : Request&#xC640; &#xD568;&#xAED8; &#xC804;&#xC1A1;&#xB41C; GET &#xBCC0;&#xC218;&#xB4E4; Form (NameValueCollection) : Request&#xC640; &#xD568;&#xAED8; &#xC804;&#xC1A1;&#xB418;&#xC5B4; &#xC624;&#xB294; POST &#xBCC0;&#xC218;&#xB4E4; e.g. Request.Form[&quot;newName&quot;] (string) Cookies (HttpCookieCollection) : Browser&#xAC00; Request&#xC640; &#xD568;&#xAED8; &#xC804;&#xB2EC;&#xD55C; Cookie HttpMethod (string) : Request&#xC5D0; &#xC0AC;&#xC6A9;&#xB41C; HTTP method (GET, POST, DELETE &#x2026;) Headers (NameValueCollection) : Request&#xC640; &#xD568;&#xAED8; &#xC804;&#xC1A1;&#xB41C; HTTP Header Url (Uri) : Request URL UserHostAddress (string) : Request&#xD55C; User&#xC758; IP Address RouteData. Route (RouteBase) : Request&#xC5D0; &#xB300;&#xD574; &#xC120;&#xD0DD;&#xB41C; RouteTable.Routes Entry Values (RouteValueDictionary) : Route parameters (URL&#xB85C;&#xBD80;&#xD130; &#xCD94;&#xCD9C;&#xB41C; &#xAC12;&#xC774;&#xB098; &#xAE30;&#xBCF8;&#xAC12;) HttpContext. Application (HttpApplicationStateBase) : Applcation &#xC0C1;&#xD0DC; Repository Cache (Cache) : Application Cache Repository Items (IDictionary) : &#xD604;&#xC7AC; Request&#xC5D0; &#xB300;&#xD55C; &#xC0C1;&#xD0DC; Repository Session (HttpSessionStateBase) : &#xBC29;&#xBB38;&#xC790; Session&#xC5D0; &#xB300;&#xD55C; &#xC0C1;&#xD0DC; Repository Timestamp (DateTime) : Request&#xD55C; &#xC2DC;&#xAC04; User (IPrincipal) : Login&#xB41C; &#xC0AC;&#xC6A9;&#xC790;&#xC758; &#xC778;&#xC99D;&#xC815;&#xBCF4; .Identity.Name (string) : &#xC0AC;&#xC6A9;&#xC790; &#xBA85;&#xCE6D; TempData (TempDataDictionary) : &#xD604;&#xC7AC; &#xC0AC;&#xC6A9;&#xC790;&#xC5D0; &#xB300;&#xD55C; &#xC784;&#xC2DC; &#xB370;&#xC774;&#xD130; &#xD56D;&#xBAA9;&#xB4E4; Server.MachineName (string) : Server &#xBA85;&#xCE6D; &#xC790;&#xC138;&#xD55C; &#xC815;&#xBCF4;&#xB294; MSDN&#xC5D0;&#xC11C; System.Web.Mvc.Controller , System.web.Mvc.ControllerContext&#xB97C; &#xC0B4;&#xD3B4;&#xBCF4;&#xC2DC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 3.2 &#xB9E4;&#xAC1C;&#xBCC0;&#xC218; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xC704;&#xC5D0;&#xC11C; &#xC0B4;&#xD3B4;&#xBCF8; &#xAC83;&#xCC98;&#xB7FC; Context&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xAC12;&#xC744; &#xC77D;&#xC5B4; &#xC62C; &#xC218; &#xC788;&#xC9C0;&#xB9CC;, Action Method&#xC5D0;&#xC11C; &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xB97C; &#xC120;&#xC5B8;&#xD560; &#xACBD;&#xC6B0; &#xD574;&#xB2F9; &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xB85C; &#xAC12;&#xC774; &#xC804;&#xB2EC;&#xB418;&#xC5B4;&#xC11C; &#xD3B8;&#xB9AC;&#xD558;&#xAC8C; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. Request.Form, Request.QueryString, Request.Files, RouteData.Values&#xC5D0;&#xC11C; &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xC640; &#xD0C0;&#xC785;, &#xBA85;&#xCE6D;&#xC744; &#xBE44;&#xAD50;&#xD574;&#xC11C; &#xB9E4;&#xCE6D;&#xC774; &#xB418;&#xB294; &#xACBD;&#xC6B0; &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xC5D0; &#xAC12;&#xC73C;&#xB85C; &#xC804;&#xB2EC;&#xC744; &#xD574; &#xC90D;&#xB2C8;&#xB2E4;. &#xC880; &#xB354; &#xC790;&#xC138;&#xD788; &#xB9D0;&#xC500;&#xB4DC;&#xB9AC;&#xC790;&#xBA74; Value Provider&#xAC00; &#xC704; Context&#xB4E4;&#xC5D0;&#xC11C; &#xAC12;&#xC744; &#xAC00;&#xC838;&#xC624;&#xBA74; Model Binder&#xAC00; &#xD574;&#xB2F9; Value&#xB4E4;&#xC744; Action Method&#xC5D0;&#xC11C; &#xC694;&#xAD6C;&#xD558;&#xB294; &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xC81C;&#xACF5;&#xD569;&#xB2C8;&#xB2E4;. &#xB2E8; Action Method&#xC5D0;&#xC11C;&#xB294; Reference Parameter(ref)&#xB294; &#xC81C;&#xACF5;&#xD558;&#xC9C0; &#xC54A;&#xC73C;&#xBA70;, Value Type (premitive type, struct)&#xC5D0; default value&#xAC00; &#xC124;&#xC815;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xACBD;&#xC6B0; &#xD574;&#xB2F9; &#xAC12;&#xC774; &#xC624;&#xC9C0; &#xC54A;&#xC73C;&#xBA74; Exception&#xC774; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. nullable (int?, DateTime? &#x2026;)&#xB85C; &#xC120;&#xC5B8;&#xC744; &#xD558;&#xBA74; &#xD574;&#xB2F9; &#xAC12;&#xC774; &#xC5C6;&#xB354;&#xB77C;&#xB3C4; null&#xB85C; &#xD574;&#xB2F9; Action Method&#xAC00; &#xC218;&#xD589;&#xB429;&#xB2C8;&#xB2E4;. Reference Type (class)&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; default value&#xAC00; &#xC5C6;&#xB354;&#xB77C;&#xB3C4; &#xAC12;&#xC774; &#xC5C6;&#xB294; &#xACBD;&#xC6B0; null&#xB85C; &#xC804;&#xB2EC;&#xB418;&#xBBC0;&#xB85C; Exception&#xC774; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. 4. &#xCD9C;&#xB825; (return) Action Method&#xC758; &#xCC98;&#xB9AC; &#xACB0;&#xACFC;&#xB97C; &#xC0AC;&#xC6A9;&#xC790;&#xC5D0;&#xAC8C; &#xC804;&#xB2EC;(return)&#xD574;&#xC918;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. 4.1 &#xC9C1;&#xC811; &#xAD6C;&#xD604;&#xD558;&#xAE30; &#xC9C0;&#xAE08;&#xC740; &#xC798; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xB294; &#xBC29;&#xBC95;&#xC774;&#xC9C0;&#xB9CC; IController&#xB97C; &#xAD6C;&#xD604;&#xD588;&#xC744; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC9C1;&#xC811; &#xAD6C;&#xD604;&#xC744; &#xD574;&#xC918;&#xC57C;&#xB9CC; &#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. 123456789101112131415public class BaseController : IController{ public void Execute(RequestContext requestContext) { string action = (string)requestContext.RouteData.Value[&quot;action&quot;]; if (action.ToLower() == &quot;redirect&quot;) { requestContext.HttpContext.Response.Redirect(&quot;Derived/Index&quot;); } else { requestContext.HttpContext.Response.Write($&quot;Action : {action}&quot;); } }} &#xBB3C;&#xB860; Controller&#xB97C; &#xC0C1;&#xC18D; &#xBC1B;&#xC558;&#xC744; &#xACBD;&#xC6B0;&#xC5D0;&#xB3C4; &#xC9C1;&#xC811; &#xAD6C;&#xD604;&#xC740; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. 1234567public class HomeController : Controller{ public void Index() { Reponse.Write(&quot;Hello from the Index Action Method&quot;); }} 4.2 ActionResult&#xB85C; return 4.2.1 ActionResult &#xB780; ? Response &#xAC1C;&#xCCB4;&#xB97C; &#xC9C1;&#xC811; &#xB2E4;&#xB8E8;&#xB294;&#xAC8C; &#xC544;&#xB2C8;&#xB77C;, MVC Framework&#xC5D0;&#xAC8C; &#xC6B0;&#xB9AC;&#xB97C; &#xB300;&#xC2E0;&#xD574;&#xC11C; &#xB9CC;&#xB4E4;&#xC5B4;&#xB0B4;&#xB3C4;&#xB85D; &#xC804;&#xB2EC;&#xD558;&#xAC8C; &#xD574;&#xC8FC;&#xB294; &#xC5ED;&#xD560;&#xC744; &#xD569;&#xB2C8;&#xB2E4;. MVC Framework&#xB294; &#xC804;&#xB2EC;&#xBC1B;&#xC740; ActionResult&#xC5D0; &#xD574;&#xB2F9;&#xD558;&#xB294; ExecuteResult() &#xB97C; &#xD638;&#xCD9C;&#xD558;&#xC5EC; &#xCD9C;&#xB825;&#xC744; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. 4.2.2 ActionResult &#xD0C0;&#xC785; ViewResult (View()) : View template&#xC744; rendering PartialViewResult (PartialView()) : Partial view template&#xC744; rendering RedirectToRouteResult : Route System&#xB97C; &#xD1B5;&#xD574; URL&#xC744; &#xC0DD;&#xC131;&#xD558;&#xAC70;&#xB098; Action Method&#xB098; Route Entry&#xB85C; HTTP 301 or 302 redirect&#xB97C; &#xC218;&#xD589; (RedirectToAction(), RedirectToActionPermanent(), RedirectToRoute(), RedirectToRoutePermanent()) RedirectResult (Redirect()) : &#xD2B9;&#xC815; URL&#xB85C; HTTP 301 or 302 redirect &#xC218;&#xD589; ContentResult (RedirectPermanent(), Content()) : Text &#xD0C0;&#xC785;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; Browser&#xB85C; return. content-text header &#xC124;&#xC815; (optional) FileResult (File()) : Binary File&#xC744; Browser&#xB85C; &#xC9C1;&#xC811; &#xC804;&#xC1A1; JsonResult (Json()) : .NET object&#xB97C; JSON&#xC73C;&#xB85C; Serialization&#xD558;&#xC5EC; &#xC804;&#xC1A1;. Web API&#xC5D0;&#xC11C; &#xBCF4;&#xD3B8;&#xC801;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9; JavaScriptResult (JavaScript()) : JavaScript source&#xB97C; Browser&#xB85C; &#xC804;&#xC1A1; HttpUnauthorizedResult : HTTP 401 (&#xC778;&#xC99D;&#xB418;&#xC9C0; &#xC54A;&#xC74C;)&#xC73C;&#xB85C; &#xCC98;&#xB9AC; HttpNotFoundResult (HttpNotFound()) : HTTP 404 (&#xCC3E;&#xC744; &#xC218; &#xC5C6;&#xC74C;) &#xC73C;&#xB85C; &#xCC98;&#xB9AC; HttpStatusCodeResult : &#xD2B9;&#xC815; HTTP code&#xB85C; &#xCC98;&#xB9AC; EmptyResult : &#xC544;&#xBB34;&#xAC83;&#xB3C4; &#xC548;&#xD568; 4.2.3 Returning HTML for View Rendering ActionResult &#xC911; &#xAC00;&#xC7A5; &#xAE30;&#xBCF8;&#xC778; ViewResult&#xC5D0; &#xB300;&#xD55C; &#xAC04;&#xB2E8;&#xD55C; &#xC0AC;&#xC6A9;&#xBC95; &#xC785;&#xB2C8;&#xB2E4;. 12345678public ViewResult Index(){ return View(&quot;Homepage&quot;); // Route System&#xC5D0;&#xAC8C; Homepage&#xB77C;&#xB294; segment&#xC5D0; &#xD574;&#xB2F9;&#xD558;&#xB294; View&#xB97C; rendering&#xD558;&#xB3C4;&#xB85D; &#xC804;&#xB2EC; return View(&quot;Index&quot;, &quot;_AlternateLayoutPage&quot;); // &#xD2B9;&#xC815; Layout&#xC744; &#xC9C0;&#xC815;&#xD558;&#xC5EC; rendering&#xD558;&#xB3C4;&#xB85D; &#xC804;&#xB2EC; return View(&quot;~/Views/Home/Index.cshtml&quot;); // Route System&#xC744; &#xD1B5;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xC9C1;&#xC811; &#xD2B9;&#xC815; View&#xB97C; &#xC9C0;&#xC815;} 4.3 Action Method&#xC5D0;&#xC11C; View&#xB85C; Data &#xC804;&#xB2EC; 4.3.1 ViewModel ViewModel(View&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD560; Model)&#xC744; parameter&#xB85C; &#xC804;&#xB2EC;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 12345678public class HomeController : Controller{ public ViewResult Index() { DataTime now = DateTime.Now; return View(now); }} DateTime &#xD0C0;&#xC785;&#xC758; ViewModel&#xC744; &#xC804;&#xB2EC;&#xD55C; &#xACBD;&#xC6B0; View&#xC5D0;&#xC11C;&#xB294; 2&#xAC00;&#xC9C0; &#xBC29;&#xBC95;&#xC73C;&#xB85C; &#xC804;&#xB2EC;&#xBC1B;&#xC740; ViewModel&#xC744; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. 4.3.1.1 Weakly Typed View &#xC57D;&#xD55C; &#xD615;&#xC2DD; &#xBDF0; (&#xB610;&#xB294; &#xBB34;&#xD615;&#xC2DD;(Untyped) &#xBDF0;)&#xB77C;&#xACE0; &#xBD88;&#xB9AC;&#xB294; &#xBC29;&#xBC95;&#xC73C;&#xB85C;, ViewModel&#xC744; &#xD2B9;&#xC815; &#xD0C0;&#xC785;&#xC73C;&#xB85C; &#xC9C0;&#xC815;&#xD558;&#xC9C0;&#xC54A;&#xACE0; object instance&#xB85C; &#xCDE8;&#xAE09;&#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB807;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC0AC;&#xC6A9;&#xC2DC; &#xD615; &#xBCC0;&#xD658;&#xC744; &#xD574;&#xC918;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xC774; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; intellisense&#xAC00; &#xC81C;&#xACF5;&#xB418;&#xC9C0; &#xC54A;&#xC744; &#xBFD0;&#xB354;&#xB7EC;, code&#xAC00; &#xB2E4;&#xC18C; &#xC9C0;&#xC800;&#xBD84;&#xD574; &#xC9C8; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. 12345@{ ViewBag.Title = &quot;Index&quot;;}&lt;h1&gt;Index&lt;/h1&gt;&lt;div&gt;The day is: @(((DateTime)Model).DayOfWeek)&lt;/div&gt; 4.3.1.2 Strongly Typed View &#xAC15;&#xB825;&#xD55C; &#xD615;&#xC2DD; &#xBDF0;&#xC5D0;&#xC11C;&#xB294; @model &#xD0A4;&#xC6CC;&#xB4DC;&#xB85C; ViewModel type&#xC744; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7EC;&#xBA74; View&#xB0B4;&#xC5D0;&#xC11C; @Model &#xD0A4;&#xC6CC;&#xB4DC;&#xB85C; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC774; &#xACBD;&#xC6B0; intellisense &#xAE30;&#xB2A5;&#xC744; &#xC0AC;&#xC6A9;&#xD560; &#xC218;&#xAC00; &#xC788;&#xC5B4;&#xC11C; &#xD3B8;&#xB9AC;&#xD558;&#xBA70;, code&#xB3C4; &#xAE54;&#xB054;&#xD558;&#xAC8C; &#xB9CC;&#xB4E4; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. 123456@model DateTime@{ ViewBag.Title = &quot;Index&quot;;}&lt;h1&gt;Index&lt;/h1&gt;&lt;div&gt;The day is: @Model.DayOfWeek&lt;/div&gt; 4.3.2 ViewBag Action Method&#xC5D0;&#xC11C; ViewBag&#xC774;&#xB77C;&#xB294; dynamic object&#xC5D0; &#xC784;&#xC758;&#xC758; &#xC18D;&#xC131;&#xC744; &#xC815;&#xC758;&#xD558;&#xBA74; View&#xC5D0;&#xC11C; &#xC77D;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. 123456789public class HomeController : Controller{ public ViewResult Index() { ViewBag.Now = DateTime.Now; ViewBag.MyName = &quot;Luna&quot;; return View(); }} 123456@{ ViewBag.Title = &quot;Index&quot;;}&lt;h1&gt;Index&lt;/h1&gt;&lt;div&gt;The day is: @ViewBag.Now.DayOfWeek&lt;/div&gt;&lt;div&gt;My name is @ViewBag.MyName&lt;/div&gt; &#xC5EC;&#xB7EC; &#xAC1C;&#xC758; &#xAC12;&#xC744; &#xC804;&#xB2EC;&#xD560; &#xACBD;&#xC6B0; ViewModel&#xBCF4;&#xB2E4; &#xD3B8;&#xB9AC;&#xD558;&#xAC8C; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC704; &#xC608;&#xC81C;&#xC640; &#xAC19;&#xC774; DateTime &#xACFC; string 2&#xAC1C;&#xC758; &#xAC12;&#xC744; ViewModel&#xB85C; &#xC804;&#xB2EC;&#xD558;&#xACE0;&#xC790; &#xD55C;&#xB2E4;&#xBA74;, &#xB530;&#xB85C; &#xC815;&#xC758;&#xB97C; &#xD574;&#xC57C;&#xD569;&#xB2C8;&#xB2E4;. 12345public class IndexViewModel{ public DateType Now; public string MyName;} TempData&#xC640; SessionData&#xB97C; &#xC774;&#xC6A9;&#xD55C; &#xC804;&#xB2EC;&#xB3C4; &#xAC00;&#xB2A5;&#xD55C;&#xB370;, &#xC774;&#xAC83;&#xC740; Redirect &#xC2DC;&#xC5D0; &#xC8FC;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xBBC0;&#xB85C; &#xB2E4;&#xC74C;&#xC5D0; &#xADF8;&#xB54C; &#xAC00;&#xC11C; &#xC124;&#xBA85;&#xB4DC;&#xB9AC;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 5. Redirect (&#xC7AC;&#xC804;&#xC1A1;) Action Method&#xC758; &#xACB0;&#xACFC;&#xB97C; &#xC9C1;&#xC811;&#xC801;&#xC73C;&#xB85C; &#xCD9C;&#xB825;&#xD558;&#xB294;&#xAC8C; &#xC544;&#xB2C8;&#xB77C;, &#xB2E4;&#xB978; URL&#xB85C; &#xC7AC;&#xC804;&#xC1A1;&#xD574;&#xC57C; &#xD558;&#xB294; &#xACBD;&#xC6B0; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. &#xB9CC;&#xC57D; HTTP POST &#xC694;&#xCCAD;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xCC98;&#xB9AC;&#xACB0;&#xACFC;&#xB97C; &#xBC14;&#xB85C; &#xCD9C;&#xB825;&#xD560; &#xACBD;&#xC6B0;, &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xB2E4;&#xC2DC; Browser Refresh&#xB97C; &#xD560; &#xACBD;&#xC6B0; POST&#xC694;&#xCCAD;&#xC774; &#xB2E4;&#xC2DC; &#xC218;&#xD589;&#xB418;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xC774;&#xB7F0; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; POST&#xC5D0; &#xAD00;&#xB828;&#xB41C; &#xCC98;&#xB9AC;&#xB97C; &#xD55C; &#xD6C4; &#xADF8; &#xACB0;&#xACFC;&#xB97C; &#xBCF4;&#xC5EC;&#xC8FC;&#xB294; View&#xB97C; &#xB530;&#xB85C; &#xC0DD;&#xC131;&#xD558;&#xC5EC; GET &#xC694;&#xCCAD;&#xC73C;&#xB85C; URL Redirect&#xB97C; &#xC218;&#xD589;&#xD558;&#xB294; &#xAC83;&#xC774; &#xB354; &#xC548;&#xC804;&#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7FC; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; Refresh&#xB97C; &#xD558;&#xB354;&#xB77C;&#xB3C4; POST &#xC694;&#xCCAD;&#xC774; &#xB2E4;&#xC2DC; &#xC218;&#xD589;&#xB418;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. Redirect&#xC5D0;&#xB294; 2&#xAC00;&#xC9C0; &#xBC29;&#xC2DD;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. HTTP 302 : &#xC784;&#xC2DC;&#xC801;&#xC778; &#xC7AC;&#xC804;&#xC1A1;&#xC744; &#xC758;&#xBBF8;&#xD569;&#xB2C8;&#xB2E4;. &#xAC00;&#xC7A5; &#xB9CE;&#xC774; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xBC29;&#xC2DD;&#xC774;&#xBA70;, Post/Redirect/Get &#xD328;&#xD134;&#xC744; &#xC0AC;&#xC6A9;&#xD560; &#xACBD;&#xC6B0;&#xC5D0;&#xB3C4; 302&#xB85C; &#xC804;&#xC1A1;&#xB418;&#xC5B4;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. HTTP 301 : &#xC601;&#xAD6C;&#xC801;&#xC778; &#xC7AC;&#xC804;&#xC1A1;&#xC744; &#xC758;&#xBBF8;&#xD569;&#xB2C8;&#xB2E4;. &#xC774; &#xACBD;&#xC6B0; &#xC6D0;&#xBCF8; URL&#xC740; &#xB354;&#xC774;&#xC0C1; &#xC0AC;&#xC6A9;&#xB418;&#xC9C0; &#xC54A;&#xC744; &#xAC83;&#xC774;&#xACE0;, Redirect&#xB41C; &#xC0C8;&#xB85C;&#xC6B4; URL&#xC774; &#xC55E;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;. 5.1 Action Method&#xC5D0;&#xC11C; Redirect&#xD558;&#xB294; &#xBC29;&#xBC95; 12345678910111213141516171819public RedirectResult Index(){ return Redirect(&quot;/Example/Index&quot;); // &#xBB38;&#xC790;&#xC5F4;&#xB85C; URL&#xC744; &#xC791;&#xC131;&#xD558;&#xC5EC; Redirect return RedirectPermanent(&quot;/Example/Index&quot;); // &#xC601;&#xAD6C;&#xC801;&#xC778; Redirect (Redirect(&quot;...&quot;, true);&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xB3C4; &#xAC00;&#xB2A5;)}public RedirectToRouteResult Index(){ return RedirectToRoute(new { // Redirect to Routing System URL controller = &quot;Example&quot;, action = &quot;Index&quot;, ID = &quot;Luna&quot; }); return RedirectToAction(&quot;Index&quot;); // Redirect to Action Method return RedirectToAction(&quot;Index&quot;, &quot;Example&quot;); // other Controller} 5.2 Redirect&#xC2DC; Data &#xC804;&#xB2EC; 5.2.1 TempData Redirect&#xD558;&#xAE30; &#xC804;&#xC5D0; TempData&#xC5D0; &#xD544;&#xC694;&#xD55C; &#xAC12;&#xB4E4;&#xC744; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;. 123456public RedirectToRouteResult Index(){ TempData[&quot;MyName&quot;] = &quot;Luna&quot;; TempData[&quot;Now&quot;] = DateTime.Now; return RedirectToAction(&quot;Hello&quot;);} &#xC804;&#xB2EC;&#xBC1B;&#xC740; TempData&#xB294; &#xAC12;&#xC744; &#xC77D;&#xAE30; &#xC804;&#xAE4C;&#xC9C0;&#xB294; &#xC720;&#xC9C0;&#xAC00; &#xB418;&#xBA70;, &#xC77D;&#xC73C;&#xBA74; &#xC0AD;&#xC81C;&#xB429;&#xB2C8;&#xB2E4;. &#xAC12;&#xC744; &#xC77D;&#xB294; &#xBC29;&#xBC95;&#xC740; TempData[&quot;MyName&quot;]&#xC73C;&#xB85C; &#xC77D;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. TempData.Peek(&quot;&quot;MyName)&#xC744; &#xC774;&#xC6A9;&#xD558;&#xBA74; &#xAC12;&#xC744; &#xC0AD;&#xC81C;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xC77D;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774; &#xAC12;&#xC744; View&#xAE4C;&#xC9C0; &#xC804;&#xB2EC;&#xD558;&#xACE0;&#xC790; &#xD55C;&#xB2E4;&#xBA74; TempData&#xC5D0;&#xC11C; &#xC77D;&#xC5B4;&#xC11C; ViewBag&#xC774;&#xB098; ViewModel&#xC5D0; &#xB123;&#xC5B4;&#xC11C; &#xC804;&#xC1A1;&#xC744; &#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 123456public ViewResult Hello(){ ViewBag.MyName = TempData[&quot;MyName&quot;]; ViewBag.Now = TempData[&quot;Now&quot;]; return View();} &#xADF8;&#xB0E5; &#xB530;&#xB85C; &#xC804;&#xB2EC;&#xD558;&#xC9C0; &#xC54A;&#xACE0;, View&#xC5D0;&#xC11C; &#xBC14;&#xB85C; &#xC77D;&#xB294; &#xAC83;&#xB3C4; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. 12345&lt;strong&gt;@TempData.TryPeek(&quot;MyName&quot;) Entered.&lt;/strong&gt;&lt;/p&gt;The day is : @(((DateTime)TempData[&quot;Now&quot;]).DayOfWeek) &lt;/p&gt;My Name is @TempData[&quot;MyName&quot;] 5.2.2 Session Data TempData&#xC640; &#xBE44;&#xC2B7;&#xD55C; &#xBC29;&#xBC95;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xC9C0;&#xB9CC;, &#xD574;&#xB2F9; Session &#xB0B4;&#xC5D0;&#xC11C; &#xACC4;&#xC18D;&#xD574;&#xC11C; &#xC720;&#xC9C0;&#xAC00; &#xB41C;&#xB2E4;&#xB294; &#xCC28;&#xC774;&#xC810;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC77C;&#xD68C;&#xC131;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xD560; &#xC815;&#xBCF4;&#xB294; TempData&#xB97C; &#xD65C;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xC774; &#xC88B;&#xACE0;, Session &#xB0B4;&#xC5D0;&#xC11C; &#xACC4;&#xC18D;&#xD574;&#xC11C; &#xD544;&#xC694;&#xD55C; &#xC815;&#xBCF4;&#xB294; Session&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xB294;&#xAC8C; &#xC88B;&#xC2B5;&#xB2C8;&#xB2E4;. 6. HTTP Code, Error &#xC804;&#xC1A1; 12345678public HttpStatusCodeResult StatusCode(){ return new HttpStatusCodeResult(404, &quot;URL cannot be serviced&quot;); // &#xC9C1;&#xC811; &#xC0DD;&#xC131;&#xD574;&#xC11C; &#xBC18;&#xD658; return HttpNotFound(); // 404 return HttpUnauthorizedResult(); // 401}","categories":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/categories/C/"},{"name":"ASP.NET","slug":"C/ASP-NET","permalink":"http://DevStarSJ.github.io/categories/C/ASP-NET/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"},{"name":"ASP.NET","slug":"ASP-NET","permalink":"http://DevStarSJ.github.io/tags/ASP-NET/"}]},{"title":"WebSockets in .NET Core","slug":"CSharp.AspnetCore.WebSocket","date":"2016-05-10T15:00:00.000Z","updated":"2017-04-23T10:32:26.000Z","comments":true,"path":"2016/05/11/CSharp.AspnetCore.WebSocket/","link":"","permalink":"http://DevStarSJ.github.io/2016/05/11/CSharp.AspnetCore.WebSocket/","excerpt":"","text":".NET Core (&#xD604;&#xC7AC;&#xB294; ASP.NET 5)&#xB85C; &#xAC04;&#xB2E8;&#xD55C; Web Socket&#xC744; &#xAD6C;&#xD604;&#xD558;&#xB294; &#xC608;&#xC81C;&#xCF54;&#xB4DC;&#xC640; &#xC124;&#xBA85;&#xC785;&#xB2C8;&#xB2E4;. &#xC791;&#xC5C5;&#xC740; Visual Studio 2015 , ASP.NET5-rc1 &#xC73C;&#xB85C; &#xC9C4;&#xD589;&#xD558;&#xC600;&#xC2B5;&#xB2C8;&#xB2E4;. &#xAC1C;&#xC694; .NET Core (ASP.NET 5 Template)&#xB85C; Web Application Project&#xB97C; &#xC0DD;&#xC131; Server : Echo Server &#xB97C; Web Socket&#xC73C;&#xB85C; &#xAD6C;&#xD604; Client&#xC5D0;&#xC11C; &#xC804;&#xB2EC;&#xD55C; Text Message&#xB97C; &#xADF8;&#xB300;&#xB85C; &#xC804;&#xB2EC; Client : jQuery&#xB97C; &#xC774;&#xC6A9;&#xD55C; &#xAC04;&#xB2E8;&#xD55C; Web Socket page&#xB97C; &#xC0DD;&#xC131; &#xC5EC;&#xB7EC; Client&#xAC00; &#xC811;&#xC18D;&#xD55C; &#xACBD;&#xC6B0; &#xC811;&#xC18D;&#xB41C; &#xBAA8;&#xB4E0; Client&#xC5D0;&#xAC8C; echo message&#xB97C; &#xC804;&#xB2EC; 1. Project &#xC0DD;&#xC131; C# -&gt; Web -&gt; ASP.NET Web Application &#xC120;&#xD0DD; &#xD6C4; ASP.NET 5 Templates -&gt; Web Appliacaion&#xC73C;&#xB85C; Project&#xB97C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. ASP.NET 5 Templates&#xAC00; &#xC124;&#xCE58;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xACBD;&#xC6B0; &#xC544;&#xB798; &#xC124;&#xCE58; &#xBC84;&#xD2BC;&#xC774; &#xD65C;&#xC131;&#xD654;&#xB418;&#xBA70;, &#xC124;&#xCE58;&#xAC00; &#xC9E7;&#xC740; &#xC21C;&#xAC04;&#xC5D0; &#xB05D;&#xB098;&#xC9C0;&#xB294; &#xC54A;&#xC73C;&#xB2C8; &#xC870;&#xAE08; &#xAE30;&#xB2E4;&#xB9AC;&#xC154;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. 2. Server Web Socket &#xAD6C;&#xD604; Startup.cs &#xD30C;&#xC77C;&#xC744; &#xC5F4;&#xC5B4;&#xC11C; public void Configure() &#xD568;&#xC218;&#xC5D0; &#xC544;&#xB798; Code&#xB97C; &#xCD94;&#xAC00;&#xD569;&#xB2C8;&#xB2E4;. &#xB2E8; app.UseMvc()&#xBCF4;&#xB2E4; &#xC704;&#xC5D0; &#xC704;&#xCE58;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. 12345678910111213141516171819202122232425262728293031323334app.UseWebSockets();app.Use(async (http, next) =&gt;{ if (http.WebSockets.IsWebSocketRequest) { var webSocket = await http.WebSockets.AcceptWebSocketAsync(); if (webSocket != null &amp;&amp; webSocket.State == WebSocketState.Open) { // Handle the socket here while (webSocket.State == WebSocketState.Open) { var token = CancellationToken.None; var buffer = new ArraySegment&lt;byte&gt;(new byte[4096]); var received = await webSocket.ReceiveAsync(buffer, token); switch (received.MessageType) { case WebSocketMessageType.Text: var request = Encoding.UTF8.GetString(buffer.Array, buffer.Offset, buffer.Count); // Handle request here await webSocket.SendAsync(buffer, WebSocketMessageType.Text, true, token); break; } } } } else { await next(); }}); &#xC704; Code&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xB824;&#xBA74; Assembly&#xB97C; &#xD558;&#xB098; &#xCD94;&#xAC00;&#xD574; &#xC918;&#xC57C;&#xD569;&#xB2C8;&#xB2E4;. &#x201C;Microsoft.AspNet.WebSockets.Server&#x201D;: &#x201C;1.0.0-rc1-final&#x201D; Nuget package manager&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xB354;&#xB77C;&#xB3C4; &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD55C; Code&#xC5D0;&#xC11C; Ctrl + . (Quick Action)&#xC744; &#xC774;&#xC6A9;&#xD558;&#xBA74; &#xC790;&#xB3D9;&#xC73C;&#xB85C; &#xCD94;&#xAC00;&#xAC00; &#xB429;&#xB2C8;&#xB2E4;. &#xB610; &#xD544;&#xC694;&#xD55C; namespace&#xB97C; using&#xC5D0; &#xCD94;&#xAC00;&#xB97C; &#xD574;&#xC8FC;&#xB294; &#xC791;&#xC5C5;&#xB3C4; Ctrl +.&#xC73C;&#xB85C; &#xC27D;&#xAC8C; &#xC791;&#xC5C5;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. Client&#xC5D0;&#xC11C; Connection&#xC744; &#xC5F0;&#xACB0;&#xD560;&#xB54C;&#xB9C8;&#xB2E4; app.Use&#xC548;&#xC5D0; &#xC120;&#xC5B8;&#xD55C; &#xD568;&#xC218;&#xAC00; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;. Request&#xAC00; &#xC544;&#xB2CC; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xADF8;&#xB0E5; &#xBB34;&#xC2DC; (next();)&#xB97C; &#xD558;&#xBA70; Request&#xC778; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; Accept&#xC218;&#xD589; &#xD6C4; Receive&#xC791;&#xC5C5;&#xC744; &#xAE30;&#xB2E4;&#xB9AC;&#xBA70; Pending &#xC0C1;&#xD0DC;&#xAC00; &#xB429;&#xB2C8;&#xB2E4;. 1234567891011121314var webSocket = await http.WebSockets.AcceptWebSocketAsync();if (webSocket != null &amp;&amp; webSocket.State == WebSocketState.Open){ while (webSocket.State == WebSocketState.Open) { var token = CancellationToken.None; var buffer = new ArraySegment&lt;byte&gt;(new byte[4096]); var received = await webSocket.ReceiveAsync(buffer, token); // Processing received message }} Message&#xAC00; &#xB3C4;&#xCC29;&#xD558;&#xBA74; await webSocket.ReceiveAsync()&#xC758; Pending&#xC774; &#xD574;&#xC81C;&#xB418;&#xBA74;&#xC11C; &#xB2E4;&#xC74C; Line&#xC744; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. &#xD604;&#xC7AC; &#xC608;&#xC81C;&#xB294; Text &#xD0C0;&#xC785;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB9CC; &#xADF8;&#xB300;&#xB85C; Client&#xC5D0;&#xAC8C; echo message&#xB97C; &#xC804;&#xB2EC;&#xD558;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. 123456switch (received.MessageType){ case WebSocketMessageType.Text: await webSocket.SendAsync(buffer, WebSocketMessageType.Text, true, token); break;} 3. Client Web Socket &#xAD6C;&#xD604; &#xD3B8;&#xC758;&#xC0C1; &#xCD94;&#xAC00;&#xB85C; Controller&#xB97C; &#xCD94;&#xAC00;&#xD558;&#xC9C0; &#xC54A;&#xACE0; Home Controller&#xC5D0; Chat&#xC774;&#xB77C;&#xB294; Action Method&#xB97C; &#xCD94;&#xAC00;&#xD558;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. Controllers/HomeController.cs&#xD30C;&#xC77C;&#xC744; &#xC5F4;&#xC5B4;&#xC11C; &#xC544;&#xB798; Action&#xC744; &#xCD94;&#xAC00;&#xD574; &#xC8FC;&#xC138;&#xC694;. 1234public ActionResult Chat(){ return View();} &#xC544;&#xBB34;&#xB7F0; &#xB0B4;&#xC6A9;&#xC5C6;&#xC774; &#xADF8;&#xB0E5; &#xAE30;&#xBCF8; Routing&#xB418;&#xB294; View&#xB97C; return&#xD569;&#xB2C8;&#xB2E4;. Views/Home &#xD3F4;&#xB354; &#xC544;&#xB798;&#xC5D0; Chat.cshtml&#xD30C;&#xC77C;&#xC744; &#xCD94;&#xAC00;&#xD574;&#xC11C; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; &#xC785;&#xB825;&#xD574;&#xC8FC;&#xC138;&#xC694;. 1234567891011121314151617181920212223242526272829303132333435@{ ViewData[&quot;Title&quot;] = &quot;WebSocket Chat Page&quot;;}&lt;form id=&quot;chatform&quot; action=&quot;&quot;&gt; &lt;input id=&quot;inputbox&quot; /&gt;&lt;/form&gt;&lt;div id=&quot;message&quot; /&gt;&lt;script src=&quot;//code.jquery.com/jquery-1.11.0.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt; $(document).ready(function() { var username = prompt(&apos;Enter your name: &apos;); var uri = &apos;ws://localhost:9258&apos;; var ws = new WebSocket(uri); ws.onopen = function () { $(&apos;#message&apos;).prepend(&apos;&lt;div&gt;Connected.&lt;/div&gt;&apos;); $(&apos;#chatform&apos;).submit(function (event) { ws.send(&apos;&lt;strong&gt;&apos; + username + &apos; : &lt;/strong&gt;&apos; +$(&apos;#inputbox&apos;).val()); $(&apos;#inputbox&apos;).val(&apos;&apos;); event.preventDefault(); }); }; ws.onerror = function (event) { $(&apos;#message&apos;).prepend(&apos;&lt;div&gt;ERROR&lt;/div&gt;&apos;); }; ws.onmessage = function (event) { $(&apos;#message&apos;).prepend(&apos;&lt;div&gt;&apos; + event.data + &apos;&lt;/div&gt;&apos;); }; });&lt;/script&gt; &#xC811;&#xC18D;&#xC8FC;&#xC18C;(uri) &#xAC12;&#xC740; Server &#xC2E4;&#xD589;&#xC2DC; port &#xBC88;&#xD638;&#xB97C; &#xBCF4;&#xACE0; &#xC218;&#xC815;&#xD574; &#xC8FC;&#xC138;&#xC694;. jQuery&#xB97C; nuget&#xC73C;&#xB85C; &#xC124;&#xCE58;&#xD574;&#xB3C4; &#xB418;&#xC9C0;&#xB9CC; &#xD3B8;&#xC758;&#xC0C1; online&#xC73C;&#xB85C; &#xCC38;&#xC870;&#xD558;&#xC600;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; View&#xAC00; &#xC5F4;&#xB9B4;&#xB54C; WebSocket()&#xC73C;&#xB85C; &#xC811;&#xC18D;&#xD569;&#xB2C8;&#xB2E4;. &#xC811;&#xC18D;&#xC5D0; &#xC131;&#xACF5;&#xD558;&#xBA74; (ws.onopen) chatform&#xC758; submit&#xC791;&#xC5C5;&#xC73C;&#xB85C; ws.send()&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xB3C4;&#xB85D; &#xC124;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. WebSocket&#xC73C;&#xB85C; &#xBD80;&#xD130; message&#xB97C; &#xC804;&#xB2EC;&#xBC1B;&#xC73C;&#xBA74; (ws,onmessage)&#xB97C; &#xD654;&#xBA74;&#xC5D0; &#xCD9C;&#xB825;&#xD569;&#xB2C8;&#xB2E4;. &#xCD5C;&#xB300;&#xD55C; &#xAD70;&#xB354;&#xB354;&#xAE30; &#xC5C6;&#xC774; &#xAC04;&#xB2E8;&#xD558;&#xAC8C; &#xAD6C;&#xD604;&#xD558;&#xC600;&#xC2B5;&#xB2C8;&#xB2E4;. 4. &#xC2E4;&#xD589; F5&#xB97C; &#xB20C;&#xB7EC;&#xC11C; Debug &#xC218;&#xD589;&#xD6C4; &#xC811;&#xC18D;&#xC8FC;&#xC18C;&#xC5D0; /Home/Chat&#xB97C; &#xBD99;&#xC5EC;&#xC11C; &#xC6B0;&#xB9AC;&#xAC00; &#xC0DD;&#xC131;&#xD55C; View&#xB97C; &#xC5F4;&#xC5B4;&#xC8FC;&#xC138;&#xC694;. &#xC774;&#xB984;&#xC744; &#xC785;&#xB825;&#xD574;&#xC11C; &#xC811;&#xC18D;&#xC744; &#xD55C; &#xD6C4;&#xC5D0;, &#xCC44;&#xD305; &#xBA54;&#xC138;&#xC9C0;&#xB97C; &#xC785;&#xB825;&#xD558;&#xBA74; &#xD654;&#xBA74;&#xC5D0; &#xBA54;&#xC138;&#xC9C0;&#xAC00; &#xCD9C;&#xB825;&#xB429;&#xB2C8;&#xB2E4;. &#xC704; &#xBA54;&#xC138;&#xC9C0;&#xB294; Client&#xC5D0;&#xC11C; &#xCD9C;&#xB825;&#xC744; &#xD55C; &#xAC83;&#xC774; &#xC544;&#xB2C8;&#xB77C; Server&#xB85C; &#xBD80;&#xD130; &#xC804;&#xB2EC;&#xBC1B;&#xC740; &#xBA54;&#xC138;&#xC9C0; &#xC785;&#xB2C8;&#xB2E4;. &#xBBFF;&#xAE30; &#xD798;&#xB4DC;&#xC2DC;&#xACA0;&#xB2E4;&#xBA74;, &#xC5EC;&#xB7EC; Client&#xB07C;&#xB9AC; Chat&#xC744; &#xD560; &#xC218; &#xC788;&#xB3C4;&#xB85D; Server&#xB97C; &#xC218;&#xC815;&#xD574; &#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 5. Server&#xB97C; &#xC5EC;&#xB7EC; Client&#xC5D0;&#xAC8C; &#xBA54;&#xC138;&#xC9C0; &#xC804;&#xB2EC;&#xD558;&#xB3C4;&#xB85D; &#xC218;&#xC815; Startup.cs &#xD30C;&#xC77C;&#xC758; public class Startup&#xC5D0; thread-safety&#xD55C; map&#xC744; &#xD558;&#xB098; &#xC120;&#xC5B8;&#xD569;&#xB2C8;&#xB2E4;. 1ConcurrentBag&lt;WebSocket&gt; _sockets = new ConcurrentBag&lt;WebSocket&gt;(); &#xB2E4;&#xC74C;&#xC73C;&#xB85C;&#xB294; Client&#xC5D0;&#xC11C; &#xC811;&#xC18D;&#xC2DC; _sockets&#xC5D0; socket&#xB4E4;&#xC744; &#xC800;&#xC7A5;&#xD574; &#xB193;&#xC2B5;&#xB2C8;&#xB2E4;. // Handle the socket here &#xBC14;&#xB85C; &#xC717; &#xBD80;&#xBD84;&#xC5D0; &#xC544;&#xB798; Code&#xB97C; &#xCD94;&#xAC00;&#xD569;&#xB2C8;&#xB2E4;. 1_sockets.Add(webSocket); Client&#xC5D0;&#xAC8C; SendAsync()&#xB97C; &#xD558;&#xB294; &#xBD80;&#xBD84;&#xC744; &#xC804;&#xCCB4; Client&#xC5D0;&#xAC8C; &#xC804;&#xC1A1;&#xD558;&#xB3C4;&#xB85D; &#xC218;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. // Handle request here &#xC544;&#xB798;&#xC5D0; &#xC788;&#xB294; await webSocket.SendAsync()&#xC904;&#xC744; &#xC9C0;&#xC6B0;&#xACE0; &#xC544;&#xB798; Code&#xB97C; &#xC785;&#xB825;&#xD574;&#xC8FC;&#xC138;&#xC694;. 1234foreach (var socket in _sockets){ await socket.SendAsync(buffer, WebSocketMessageType.Text, true, token);} 6. &#xC2E4;&#xD589; &#xC774;&#xC81C; &#xC2E4;&#xD589;&#xD558;&#xC5EC; Browser&#xB97C; 2&#xAC1C; &#xB744;&#xC6CC;&#xC11C; Test&#xD574;&#xBCF4;&#xBA74; &#xD55C; &#xCABD;&#xC5D0;&#xC11C; &#xC785;&#xB825;&#xD574;&#xB3C4; &#xC591;&#xCABD;&#xC73C;&#xB85C; &#xBAA8;&#xB450; &#xBA54;&#xC138;&#xC9C0;&#xAC00; &#xCD9C;&#xB825;&#xB418;&#xB294; &#xAC83;&#xC744; &#xD655;&#xC778; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xCC38;&#xC870; Site ASP.NET 5 Server Web Socket https://medium.com/@turowicz/websockets-in-asp-net-5-6094319a15a2#.rpft766wb Client jQuery Web Socket https://blogs.msdn.microsoft.com/youssefm/2012/07/17/building-real-time-web-apps-with-asp-net-webapi-and-websockets","categories":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/categories/C/"},{"name":"ASP.NET Core","slug":"C/ASP-NET-Core","permalink":"http://DevStarSJ.github.io/categories/C/ASP-NET-Core/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"},{"name":"ASP.NET Core","slug":"ASP-NET-Core","permalink":"http://DevStarSJ.github.io/tags/ASP-NET-Core/"}]},{"title":"Deploying .NET Core Web App with Visual Studio and Git","slug":"CSharp.AspnetCore.Depoly.VS.Git","date":"2016-05-10T15:00:00.000Z","updated":"2017-04-23T10:32:43.000Z","comments":true,"path":"2016/05/11/CSharp.AspnetCore.Depoly.VS.Git/","link":"","permalink":"http://DevStarSJ.github.io/2016/05/11/CSharp.AspnetCore.Depoly.VS.Git/","excerpt":"","text":"Deploying .NET Core Web App with Visual Studio and Git ** ASP.NET Core** &#xAC1C;&#xBC1C;&#xD658;&#xACBD;&#xC73C;&#xB85C;&#xB294; Windows&#xC5D0;&#xC11C; Visual Studio&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xC7A5; &#xD3B8;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xBC88; &#xD3EC;&#xC2A4;&#xD305;&#xC5D0;&#xC11C;&#xB294; Windows&#xC5D0;&#xC11C; ASP.NET Core Web App&#xC744; &#xC791;&#xC131;&#xD558;&#xC5EC; Git&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; Ubuntu&#xC5D0;&#xC11C; &#xC2E4;&#xD589;&#xD558;&#xB294; &#xAC83;&#xC744; &#xC18C;&#xAC1C;&#xD574; &#xB4DC;&#xB9AC;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 1. Github&#xC5D0; Repository &#xC0DD;&#xC131;&#xD558;&#xAE30; &#xBCF8;&#xC778;&#xC758; GitHub &#xACC4;&#xC815;&#xC73C;&#xB85C; &#xAC00;&#xC154;&#xC11C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC6D0;&#xD558;&#xB294; &#xC774;&#xB984;&#xC73C;&#xB85C; Repository&#xB97C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. 2. PC&#xC5D0; GitHub Repository Clone &#xD558;&#xAE30; &#xC6D0;&#xD558;&#xC2DC;&#xB294; &#xD3F4;&#xB354;&#xB85C; &#xAC00;&#xC154;&#xC11C; GitHub Repository&#xC5D0; &#xC5F0;&#xACB0;&#xD558;&#xC138;&#xC694;. (&#xC544;&#xB798;&#xC5D0;&#xC11C; github &#xC8FC;&#xC18C;&#xB780;&#xC5D0;&#xB294; &#xBCF8;&#xC778;&#xC758; Repository &#xC8FC;&#xC18C;&#xB85C; &#xC801;&#xC5B4;&#xC8FC;&#xC138;&#xC694;.) 123456789mkdir WebAppcd WebAppgit initgit remote add origin https://github.com/DevStarSJ/WebApp.gitgit pull origin master 3. Visual Studio&#xB85C; Web App &#xC608;&#xC81C; &#xB9CC;&#xB4E4;&#xAE30; ASP.NET Core Web Application&#xC73C;&#xB85C; &#xD504;&#xB85C;&#xC81D;&#xD2B8;&#xB97C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. &#xC704;&#xCE58;&#xB97C; &#xC880; &#xC804;&#xC5D0; Git Repository&#xB85C; &#xC9C0;&#xC815;&#xD55C; &#xACF3;&#xC73C;&#xB85C; &#xD574;&#xC8FC;&#xC138;&#xC694;. &#xB2E4;&#xC74C; &#xADF8;&#xB9BC;&#xC5D0;&#xC11C;&#xB294; Web Application&#xC744; &#xC120;&#xD0DD;&#xD55C; &#xD6C4;&#xC5D0; OK&#xB97C; &#xB20C;&#xB7EC;&#xC8FC;&#xC138;&#xC694;. &#xC81C;&#xB300;&#xB85C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC84C;&#xB294;&#xC9C0;, F5&#xB97C; &#xB20C;&#xB7EC;&#xC11C; &#xD655;&#xC778;&#xD574;&#xBD05;&#xB2C8;&#xB2E4;. 4. GitHub&#xC5D0; &#xC62C;&#xB9AC;&#xAE30; 12345git add --allgit commit -m &quot;Initial Commit&quot;git push origin master 5. Ubuntu&#xC5D0;&#xC11C; &#xB0B4;&#xB824;&#xBC1B;&#xAE30; &#xC544;&#xC9C1; git&#xC774; &#xC124;&#xCE58;&#xB418;&#xC5B4; &#xC788;&#xC9C0; &#xC54A;&#xB2E4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC124;&#xCE58;&#xB97C; &#xD574;&#xC8FC;&#xC138;&#xC694;. 1sudo apt-get install git &#xC774;&#xC81C; &#xC6D0;&#xD558;&#xB294; &#xD3F4;&#xB354;&#xB85C; &#xAC00;&#xC154;&#xC11C; GitHub&#xC5D0;&#xC11C; &#xB0B4;&#xB824;&#xBC1B;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC704;&#xC5D0; Windows&#xC5D0;&#xC11C; &#xD55C;&#xAC83;&#xACFC; &#xBA85;&#xB839;&#xC5B4;&#xAC00; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. 123456789mkdir WebAppcd WebAppgit initgit remote add origin https://github.com/DevStarSJ/WebApp.gitgit pull origin master &#xC774;&#xC81C; WebApp &#xD3F4;&#xB354;&#xB85C; &#xB4E4;&#xC5B4;&#xAC00;&#xC11C; project.json&#xC758; framework&#xBD80;&#xBD84;&#xC744; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC218;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. 1cd WebApp/src/WebApp 123456789101112&quot;frameworks&quot;: { &quot;netcoreapp1.0&quot;: { &quot;dependencies&quot;: { &quot;Microsoft.NETCore.App&quot;: { &quot;type&quot;: &quot;platform&quot;, &quot;version&quot;: &quot;1.0.0&quot; }, &quot;Microsoft.AspNetCore.Server.Kestrel&quot;: &quot;1.0.0&quot; }, &quot;imports&quot;: &quot;dnxcore50&quot; }}, &#xC800;&#xC7A5;&#xD55C; &#xB4A4; &#xC774;&#xC81C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. 12345dotnet restoredotnet builddotnet run","categories":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/categories/C/"},{"name":"ASP.NET Core","slug":"C/ASP-NET-Core","permalink":"http://DevStarSJ.github.io/categories/C/ASP-NET-Core/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"},{"name":"ASP.NET Core","slug":"ASP-NET-Core","permalink":"http://DevStarSJ.github.io/tags/ASP-NET-Core/"}]},{"title":".NET Core Install for Ubuntu 14.04","slug":"CSharp.AspnetCore.Install.Net.Core","date":"2016-05-10T15:00:00.000Z","updated":"2017-04-23T10:32:41.000Z","comments":true,"path":"2016/05/11/CSharp.AspnetCore.Install.Net.Core/","link":"","permalink":"http://DevStarSJ.github.io/2016/05/11/CSharp.AspnetCore.Install.Net.Core/","excerpt":"","text":".NET Core Install for Ubuntu 14.04 .NET Core&#xB97C; Ubuntu&#xC5D0; &#xC124;&#xCE58;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC18C;&#xAC1C;&#xD574;&#xB4DC;&#xB9AC;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. Ubuntu &#xC124;&#xCE58;&#xB294; &#xD544;&#xC790;&#xC758; &#xACBD;&#xC6B0;&#xB294; Microsoft Azure&#xC5D0; &#xC124;&#xCE58;&#xD558;&#xC600;&#xC2B5;&#xB2C8;&#xB2E4;. (&#xCC38;&#xACE0;&#xB85C; Azure&#xC5D0; Ubuntu&#xC124;&#xCE58;&#xC2DC; SSH (22)&#xBC88; &#xBE7C;&#xACE0;&#xB294; &#xBAA8;&#xB450; &#xB9C9;&#xD600;&#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. Portal&#xC5D0;&#xC11C; &#xC6D0;&#xD558;&#xC2DC;&#xB294; &#xD3EC;&#xD2B8;&#xB97C; &#xC5F4;&#xC5B4;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;.) 1. .NET Core &#xC124;&#xCE58; &#xD6C4; Hello World &#xCD9C;&#xB825;&#xD574;&#xBCF4;&#xAE30; &#xBA3C;&#xC800; .Net Core&#xB97C; &#xCEF4;&#xD30C;&#xC77C;&#xD558;&#xACE0; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xB3C4;&#xB85D; SDK&#xB97C; &#xC124;&#xCE58;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xACF5;&#xC2DD;&#xBB38;&#xC11C;&#xC5D0; &#xC124;&#xBA85;&#xC774; &#xC798; &#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. (https://www.microsoft.com/net/core#ubuntu) &#xC544;&#xB798; &#xC124;&#xBA85;&#xB300;&#xB85C; &#xD574;&#xC11C; &#xC798; &#xC548;&#xB418;&#xBA74; Link&#xC758; &#xACF5;&#xC2DD;&#xBB38;&#xC11C;&#xC5D0; &#xBC14;&#xB010; &#xC810;&#xC774; &#xC788;&#xB294;&#xC9C0; &#xBCF4;&#xC2DC;&#xACE0; &#xB530;&#xB77C;&#xD574;&#xC8FC;&#xC138;&#xC694;. &#xC544;&#xB798; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xD558;&#xB098;&#xC529; &#xC785;&#xB825;&#xD574;&#xC8FC;&#xC138;&#xC694;. 1234567sudo sh -c &apos;echo &quot;deb [arch=amd64] https://apt-mo.trafficmanager.net/repos/dotnet/ trusty main&quot; &gt; /etc/apt/sources.list.d/dotnetdev.list&apos;sudo apt-key adv --keyserver apt-mo.trafficmanager.net --recv-keys 417A0893sudo apt-get updatesudo apt-get install dotnet-dev-1.0.0-preview2-003121 &#xC774;&#xC81C; .Net Core SDK &#xC124;&#xCE58;&#xAC00; &#xB05D;&#xB0AC;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC81C;&#xB300;&#xB85C; &#xC124;&#xCE58;&#xAC00; &#xB418;&#xC5C8;&#xB294;&#xC9C0; &#xAE30;&#xBCF8; &#xC608;&#xC81C;&#xB97C; &#xC2E4;&#xD589;&#xD574; &#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 123456789mkdir hwappcd hwappdotnet newdotnet restoredotnet run &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xCD9C;&#xB825;&#xC774; &#xB098;&#xC624;&#xBA74; &#xC81C;&#xB300;&#xB85C; &#xC124;&#xCE58;&#xAC00; &#xB41C; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;. 2. ASP.NET Core &#xC6A9; &#xC2E4;&#xD589;&#xD658;&#xACBD; &#xAD6C;&#xC131; &#xBA3C;&#xC800; Web App &#xC0DD;&#xC131;&#xC5D0; &#xD544;&#xC694;&#xD55C; &#xAC83;&#xB4E4;&#xC744; &#xC124;&#xCE58;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xC790;&#xC138;&#xD55C; &#xC124;&#xBA85;&#xC740; &#xB2E4;&#xC74C; Link&#xC5D0; &#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. (https://docs.asp.net/en/1.0.0-rc1/getting-started/installing-on-linux.html#installing-on-ubuntu-14-04) 2.1 .NET Version Manager (DNVM) &#xC124;&#xCE58; Linux &#xC0C1;&#xC5D0;&#xC11C; &#xC5EC;&#xB7EC; &#xBC84;&#xC804;&#xC758; .NET &#xC2E4;&#xD589; &#xD658;&#xACBD; (.NET Execution Environment) DNX&#xB97C; &#xAD00;&#xB9AC;&#xD574;&#xC8FC;&#xB294; &#xB3C4;&#xAD6C;&#xC785;&#xB2C8;&#xB2E4;. 123sudo apt-get install unzip curlcurl -sSL https://raw.githubusercontent.com/aspnet/Home/dev/dnvminstall.sh | DNX_BRANCH=dev sh &amp;&amp; source ~/.dnx/dnvm/dnvm.sh 2.2 .NET Execution Environment (DNX) &#xC124;&#xCE58; Linux &#xC0C1;&#xC5D0;&#xC11C; .NET &#xD504;&#xB85C;&#xC81D;&#xD2B8;&#xB97C; &#xBE4C;&#xB4DC;&#xD558;&#xACE0; &#xC2E4;&#xD589;&#xD574;&#xC8FC;&#xB294; &#xB3C4;&#xAD6C;&#xC785;&#xB2C8;&#xB2E4;. 123sudo apt-get install libunwind8 gettext libssl-dev libcurl4-openssl-dev zlib1g libicu-dev uuid-devdnvm upgrade -r coreclr 2.3 libuv &#xC124;&#xCE58; libuv&#xB294; &#xBA40;&#xD2F0;&#xD50C;&#xB7AB;&#xD3FC; &#xBE44;&#xB3D9;&#xAE30; IO &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC; &#xC785;&#xB2C8;&#xB2E4;. Kestrel&#xC5D0;&#xC11C; libuv&#xB97C; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. Kestrel&#xC740; ASP.NET Core&#xB97C; &#xD638;&#xC2A4;&#xD305;&#xD558;&#xAE30; &#xC704;&#xD55C; &#xD06C;&#xB85C;&#xC2A4;-&#xD50C;&#xB7AB;&#xD3FC; HTTP &#xC11C;&#xBC84; &#xC785;&#xB2C8;&#xB2E4;. 1234567891011121314151617sudo apt-get install make automake libtool curlcurl -sSL https://github.com/libuv/libuv/archive/v1.8.0.tar.gz | sudo tar zxfv - -C /usr/local/srccd /usr/local/src/libuv-1.8.0sudo sh autogen.shsudo ./configuresudo makesudo make installsudo rm -rf /usr/local/src/libuv-1.8.0 &amp;&amp; cd ~/sudo ldconfig 3. ASP.NET Core Web App &#xC0DD;&#xC131;&#xD558;&#xAE30; &#xB2E4;&#xC74C; Link&#xC758; &#xACF5;&#xC2DD;&#xBB38;&#xC11C;&#xB97C; &#xBCF4;&#xACE0; &#xC791;&#xC131;&#xD558;&#xC600;&#xC2B5;&#xB2C8;&#xB2E4;. (https://docs.asp.net/en/latest/getting-started.html) &#xC880; &#xC804;&#xC5D0; &#xC0DD;&#xC131;&#xD55C; &#xC608;&#xC81C; &#xCF54;&#xB4DC;&#xB85C; &#xC774;&#xB3D9;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. 1cd ~/hwapp project.json&#xC758; dependencies&#xB780;&#xC5D0; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; Kestrel&#xB97C; &#xCD94;&#xAC00;&#xD574;&#xC8FC;&#xC138;&#xC694;. 1234567891011121314151617181920{ &quot;version&quot;: &quot;1.0.0-*&quot;, &quot;buildOptions&quot;: { &quot;debugType&quot;: &quot;portable&quot;, &quot;emitEntryPoint&quot;: true }, &quot;dependencies&quot;: {}, &quot;frameworks&quot;: { &quot;netcoreapp1.0&quot;: { &quot;dependencies&quot;: { &quot;Microsoft.NETCore.App&quot;: { &quot;type&quot;: &quot;platform&quot;, &quot;version&quot;: &quot;1.0.0&quot; }, &quot;Microsoft.AspNetCore.Server.Kestrel&quot;: &quot;1.0.0&quot; }, &quot;imports&quot;: &quot;dnxcore50&quot; } }} &#xD328;&#xD0A4;&#xC9C0;&#xB97C; project&#xC5D0; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xD569;&#xB2C8;&#xB2E4;. 1dotnet restore Startup.cs&#xD30C;&#xC77C;&#xC744; &#xCD94;&#xAC00;&#xD558;&#xB824; &#xB2E4;&#xC74C;&#xC758; &#xB0B4;&#xC6A9;&#xC73C;&#xB85C; &#xC791;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. 123456789101112131415161718using System;using Microsoft.AspNetCore.Builder;using Microsoft.AspNetCore.Hosting;using Microsoft.AspNetCore.Http;namespace aspnetcoreapp{ public class Startup { public void Configure(IApplicationBuilder app) { app.Run(context =&gt; { return context.Response.WriteAsync(&quot;Hello from ASP.NET Core!&quot;); }); } }} Program.cs&#xD30C;&#xC77C;&#xC744; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; &#xC218;&#xC815;&#xD574;&#xC8FC;&#xC138;&#xC694;. 123456789101112131415161718using System;using Microsoft.AspNetCore.Hosting;namespace aspnetcoreapp{ public class Program { public static void Main(string[] args) { var host = new WebHostBuilder() .UseKestrel() .UseStartup&lt;Startup&gt;() .Build(); host.Run(); } }} &#xADF8;&#xB7F0; &#xB2E4;&#xC74C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. 1dotnet run &#xC704; &#xADF8;&#xB9BC;&#xACFC; &#xAC19;&#xC740; &#xBA54;&#xC138;&#xC9C0;&#xAC00; &#xB098;&#xC624;&#xBA74; &#xC131;&#xACF5;&#xD55C; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;. &#xC6F9;&#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xB85C; &#xBD99;&#xC5B4;&#xBCF4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xADF8;&#xB9BC;&#xC774; &#xB098;&#xC635;&#xB2C8;&#xB2E4;. 4. &#xC678;&#xBD80;&#xC5D0;&#xC11C; &#xC811;&#xC18D;&#xAC00;&#xB2A5;&#xD558;&#xAC8C; &#xBC30;&#xD3EC;&#xD558;&#xAE30; &#xB2E4;&#xC74C; Link&#xC758; &#xACF5;&#xC2DD;&#xBB38;&#xC11C;&#xB97C; &#xBCF4;&#xACE0; &#xB530;&#xB77C;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. (https://docs.asp.net/en/latest/publishing/linuxproduction.html) Nginx&#xB97C; &#xC124;&#xCE58;&#xD569;&#xB2C8;&#xB2E4;. 1sudo apt-get install nginx &#xC774;&#xC81C; &#xC6B0;&#xB9AC;&#xAC00; &#xB744;&#xC6B4; Web App&#xC73C;&#xB85C; &#xC811;&#xC18D;&#xD558;&#xB3C4;&#xB85D; Proxy&#xB97C; &#xC124;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. &#xC124;&#xC815;&#xD30C;&#xC77C;&#xC740; /etc/nginx/sites-available/default &#xC785;&#xB2C8;&#xB2E4;. 1sudo vi /etc/nginx/sites-available/default &#xBC84;&#xC804;&#xBCC4;&#xB85C; &#xB0B4;&#xC6A9;&#xC774; &#xC870;&#xAE08; &#xB2E4;&#xB8F0;&#xC218; &#xC788;&#xB294;&#xB370; &#xB208;&#xC5EC;&#xACA8; &#xBCFC; &#xBD80;&#xBD84;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. 4.1 &#xC678;&#xBD80;&#xC5D0;&#xC11C; &#xC811;&#xC18D;&#xD560; Port &#xC124;&#xC815; &#xC544;&#xB798; 80&#xBD80;&#xBD84;&#xC744; &#xC6D0;&#xD558;&#xB294; Port&#xB85C; &#xC124;&#xC815;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 123server { listen 80 default_server; listen [::]:80 default_server ipv6only=on; 4.2 &#xB0B4;&#xBD80;&#xB85C; &#xC5F0;&#xACB0;&#xD55C; &#xC8FC;&#xC18C; &#xC124;&#xC815; location&#xBD80;&#xBD84;&#xC744; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC124;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. 12345678location / { proxy_pass http://localhost:5000; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection keep-alive; proxy_set_header Host $host; proxy_cache_bypass $http_upgrade;} &#xC911;&#xC694;&#xD55C; &#xBD80;&#xBD84;&#xB9CC; &#xADF8;&#xB9BC;&#xC73C;&#xB85C; &#xBCF4;&#xBA74; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC218;&#xC815;&#xD55C; &#xB0B4;&#xC6A9;&#xC5D0; &#xC774;&#xC0C1;&#xC740; &#xC5C6;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD55C; &#xD6C4; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. 123sudo nginx -tsudo service nginx start &#xB9CC;&#xC57D; &#xC218;&#xD589; &#xC911; &#xBCC0;&#xACBD; &#xD6C4; &#xBC18;&#xC601;&#xD558;&#xB824;&#xBA74; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; &#xC785;&#xB825;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. 1sudo nginx -s reload &#xC774;&#xC81C; &#xC678;&#xBD80;&#xC5D0;&#xC11C; Web App&#xC73C;&#xB85C; &#xC811;&#xADFC;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;","categories":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/categories/C/"},{"name":"ASP.NET Core","slug":"C/ASP-NET-Core","permalink":"http://DevStarSJ.github.io/categories/C/ASP-NET-Core/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"},{"name":"ASP.NET Core","slug":"ASP-NET-Core","permalink":"http://DevStarSJ.github.io/tags/ASP-NET-Core/"}]},{"title":"Using SignalR in ASP.NET Core","slug":"CSharp.AspnetCore.SignalR","date":"2016-05-08T15:00:00.000Z","updated":"2017-04-23T10:32:16.000Z","comments":true,"path":"2016/05/09/CSharp.AspnetCore.SignalR/","link":"","permalink":"http://DevStarSJ.github.io/2016/05/09/CSharp.AspnetCore.SignalR/","excerpt":"","text":"SignalR&#xC744; ASP.NET 5 Template&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; Startup.cs&#xC758; public void Configure(IApplicationBuilder app, ...)&#xC5D0;&#xC11C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xAD6C;&#xBB38;&#xC774; &#xD544;&#xC694;&#xD569;&#xB2C8;&#xB2E4;. 123456789101112public class Startup{ public void Configure(IApplicationBuilder app) { app.UseServices(services =&gt; { services.AddSignalR(); }); app.UseFileServer(); app.UseSignalR(); }} app.UserServices()&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; Microsoft.AspNet.RequestContainer assembly&#xB97C; &#xD3EC;&#xD568;&#xC2DC;&#xCF1C;&#xC57C; IApplicationBuilder&#xC758; extention method&#xC778; UseServices&#xC758; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD55C;&#xB370;, &#xD604;&#xC7AC; version&#xC5D0;&#xC11C;&#xB294; ASP.NET 4.5.1&#xC744; &#xC9C0;&#xC6D0;&#xD558;&#xC9C0; &#xC54A;&#xC544;&#xC11C; &#xC0AC;&#xC6A9;&#xC774; &#xBD88;&#xAC00;&#xB2A5; &#xD569;&#xB2C8;&#xB2E4;. https://github.com/aspnet/Hosting/tree/8f16060f941b71551be09015d76efb86770d84d7/src/Microsoft.AspNet.RequestContainer &#xC704; Github repository&#xC758; ContainerExtensions.cs&#xC5D0; &#xAD6C;&#xD604;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xCD94;&#xD6C4;&#xC5D0;&#xB77C;&#xB3C4; &#xC801;&#xC6A9;&#xC2DC;&#xD0A4;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; &#xC544;&#xB798; Link&#xB97C; &#xCC38;&#xACE0;&#xD558;&#xC2DC;&#xAE30; &#xBC14;&#xB78D;&#xB2C8;&#xB2E4;. http://dotnetthoughts.net/using-signalr-in-asp-net-5/","categories":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/categories/C/"},{"name":"ASP.NET Core","slug":"C/ASP-NET-Core","permalink":"http://DevStarSJ.github.io/categories/C/ASP-NET-Core/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"},{"name":"ASP.NET Core","slug":"ASP-NET-Core","permalink":"http://DevStarSJ.github.io/tags/ASP-NET-Core/"}]},{"title":"ASP.NET MVC 03. Advanced Routing","slug":"CSharp.Aspnet.03.Route.adv","date":"2016-05-07T17:00:00.000Z","updated":"2017-04-23T10:31:38.000Z","comments":true,"path":"2016/05/08/CSharp.Aspnet.03.Route.adv/","link":"","permalink":"http://DevStarSJ.github.io/2016/05/08/CSharp.Aspnet.03.Route.adv/","excerpt":"","text":"&#xACE0;&#xAE09; Routing 1. View&#xC5D0;&#xC11C; outgoing URL &#xC0DD;&#xC131; (using routing system) View&#xC5D0;&#xC11C; &#xC65C; &#xAD73;&#xC774; routing system&#xC744; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; outgoing URL&#xC744; &#xC0DD;&#xC131;&#xD574;&#xC57C; &#xD560;&#xAE4C;&#xC694; ? &#xADF8;&#xB0E5; static link&#xB97C; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; &#xC27D;&#xAC8C; &#xC0DD;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD55C;&#xB370; &#xB9D0;&#xC774;&#xC8E0;. 1&lt;a href=&quot;/Home/Index&quot;&gt;Home&lt;/a&gt; Static link (&#xC815;&#xC801; &#xB9C1;&#xD06C;)&#xC758; &#xBB38;&#xC81C;&#xC810;&#xC740; URL Schema&#xAC00; &#xBC14;&#xB014; &#xACBD;&#xC6B0; hard-coding&#xB41C; URL&#xB4E4;&#xC744; &#xBAA8;&#xB450; &#xCC3E;&#xC544;&#xC11C; &#xBC14;&#xAFD4;&#xC918;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7EC;&#xBBC0;&#xB85C; Route &#xC2DC;&#xC2A4;&#xD15C;&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; outgoing URL&#xC744; &#xB3D9;&#xC801;&#xC73C;&#xB85C; &#xC0DD;&#xC131;&#xD558;&#xB294;&#xAC8C; &#xB354; &#xBC14;&#xB78C;&#xC9C1;&#xD569;&#xB2C8;&#xB2E4;. 1.1 &#xB3D9;&#xC77C; Controller&#xC5D0;&#xC11C;&#xC758; &#xB2E4;&#xB978; Action Method &#xD638;&#xCD9C; 1@Html.ActionLink(&quot;This is a outgoing URL&quot;, &quot;ActionMethod&quot;) Html.ActionLink helper method&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; rendering&#xB41C; page&#xC758; html&#xC744; &#xBCF4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC0DD;&#xC131;&#xC774; &#xB429;&#xB2C8;&#xB2E4; 1&lt;a href=&quot;/Home/ActionMethod&quot;&gt;This is a outgoing URL&lt;/a&gt; RouteConfig.cs&#xC758; RouteConfig&#xC5D0; &#xC124;&#xC815;&#xB41C; .MapRoute()&#xC911; matching&#xB418;&#xB294; &#xD328;&#xD134;&#xC744; &#xCC3E;&#xC544;&#xC11C; &#xD574;&#xB2F9; URL&#xB85C; rendering&#xB429;&#xB2C8;&#xB2E4;. 1.2 &#xB2E4;&#xB978; Controller &#xD638;&#xCD9C; &#xB2E4;&#xB978; Controller&#xB85C; &#xAC00;&#xB824;&#xBA74; Html.ActionLink&#xC758; overloading&#xB41C; &#xB2E4;&#xB978; &#xD568;&#xC218;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 1@Html.ActionLink(&quot;This is a outgoing URL&quot;, &quot;ActionMethod&quot;, &quot;ControllerName&quot;) 1.3 &#xCD94;&#xAC00;&#xAC12; &#xC804;&#xB2EC; Controller, Action Method &#xC774;&#xC678;&#xC5D0; &#xCD94;&#xAC00;&#xAC12;&#xC744; &#xC804;&#xB2EC;&#xD560; &#xACBD;&#xC6B0; &#xC775;&#xBA85;&#xD0C0;&#xC785;&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xC804;&#xB2EC;&#xD569;&#xB2C8;&#xB2E4;. 1@Html.ActionLink(&quot;This is a outgoing URL&quot;, &quot;ActionMethod&quot;, &quot;ControllerName&quot;, new { id = &quot;Luna&quot; ) &#xC774; &#xACBD;&#xC6B0; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC740; Link&#xB85C; rendering &#xB429;&#xB2C8;&#xB2E4;. 1&lt;a href=&quot;/ControllerName/ActionMethod?id=Luna&quot;&gt;This is a outgoing URL&lt;/a&gt; &#xBB3C;&#xB860; routes.MapRoute(null, &quot;{controller}/{action}/{id}&quot;, ...);&#xB85C; URL pattern&#xC774; &#xC124;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xC744; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &quot;/ControllerName/ActionMethod/Luna&quot; &#xB85C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. 1.4 Html Attribute&#xAC00; &#xC801;&#xC6A9;&#xB41C; &#xC575;&#xCEE4;(a) &#xC0DD;&#xC131; &#xC775;&#xBA85;&#xD0C0;&#xC785;&#xC758; &#xCD94;&#xAC00;&#xAC12; &#xB2E4;&#xC74C; &#xC778;&#xC790;&#xB85C; &#xC775;&#xBA85;&#xD0C0;&#xC785;&#xC73C;&#xB85C; &#xC804;&#xB2EC;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. &#xC804;&#xB2EC;&#xD560; &#xCD94;&#xAC00;&#xAC12;&#xC774; &#xC5C6;&#xB294; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xCD94;&#xAC00;&#xAC12;&#xC5D0; &#xB300;&#xD55C; &#xC775;&#xBA85;&#xD0C0;&#xC785;&#xB780;&#xC5D0; null&#xC744; &#xB123;&#xC5B4;&#xC8FC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 12@Html.ActionLink(&quot;Home&quot;, &quot;Index&quot;, &quot;Home&quot;, null, new { id = &quot;anchorID&quot;, @class = &quot;cssStyleClass&quot; } ) &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; rendering &#xB429;&#xB2C8;&#xB2E4;. 1&lt;a href=&quot;/&quot; id = &quot;anchorID&quot;, class = &quot;cssStyleClass&quot;&gt;Home&lt;/a&gt; @class&#xB97C; &#xC880; &#xC8FC;&#xC758;&#xD574;&#xC57C;&#xD558;&#xB294;&#xB370;, &#xC544;&#xB9C8;&#xB3C4; C# keyword&#xC758; class&#xC640; &#xC911;&#xBCF5;&#xC774; &#xB418;&#xC5B4;&#xC11C;&#xAC00; &#xC544;&#xB2D0;&#xAE4C;&#xB77C; &#xCD94;&#xCE21;&#xB429;&#xB2C8;&#xB2E4;. 1.5 &#xC815;&#xADDC;&#xD654;&#xB41C; URL &#xC0DD;&#xC131; 1234@Html.ActionLink(&quot;Home&quot;, &quot;Index&quot;, &quot;Home&quot;, &quot;https&quot;, &quot;mySite.com&quot;, &quot;fragment&quot;, new { id = &quot;Luna&quot; }, new { id = &quot;anchorID&quot;, @class = &quot;cssStyleClass&quot; } ) Controller &#xB2E4;&#xC74C;&#xC5D0; &#xC0C8;&#xB85C; &#xCD94;&#xAC00;&#xB41C; 3&#xAC1C;&#xC758; &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xB294; &#xAC01;&#xAC01; Protocol, Server&#xC758; URL, FragmentName&#xC744; &#xB098;&#xD0C0;&#xB0C5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; rendering &#xB429;&#xB2C8;&#xB2E4;. 1&lt;a href=&quot;https://mySite.com?id=Luna#fragment&quot; id = &quot;anchorID&quot;, class = &quot;cssStyleClass&quot;&gt;Home&lt;/a&gt; 1.6 &#xB9C1;&#xD06C;(a)&#xC5C6;&#xC774; URL&#xB9CC; &#xC0DD;&#xC131;&#xD558;&#xAE30; Html.ActionLink() &#xB300;&#xC2E0; Html.Action()&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &lt;a&gt;&lt;/a&gt;&#xC5C6;&#xB294; URL&#xB9CC; Text&#xB85C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. &#xB9D0; &#xADF8;&#xB300;&#xB85C; Link&#xB97C; &#xBE7C;&#xBA74; Link&#xC5C6;&#xC774; URL&#xB9CC; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. &#xC0AC;&#xC6A9;&#xBC95;&#xC740; Html.ActionLink()&#xC640; &#xAC19;&#xC2B5;&#xB2E4;&#xB9CC; &#xCC98;&#xC74C;&#xC758; text &#xC778;&#xC790;&#xC640; html attribute &#xC778;&#xC790;&#xAC00; &#xC5C6;&#xC2B5;&#xB2C8;&#xB2E4;. 1@Html.Action(&quot;ActionMethod&quot;, &quot;ControllerName&quot;, new { id = &quot;Luna&quot; ) &#xC758; &#xACBD;&#xC6B0; /ControllerName/ActionMethod?id=Luna&#xB77C;&#xB294; &#xBB38;&#xC790;&#xC5F4;&#xC744; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. routes.MapRoute(null, &quot;{controller}/{action}/{id}&quot;, ...);&#xB85C; URL pattern&#xC774; &#xC124;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xC744; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; /ControllerName/ActionMethod/Luna &#xB85C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. 2. Action Method&#xC5D0;&#xC11C; outgoing URL &#xC0DD;&#xC131;&#xD558;&#xAE30; 2.1 View&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD55C; helper method &#xADF8;&#xB300;&#xB85C; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; URL&#xC0DD;&#xC131; 1234567public ViewResult MyActionMethod(){ string url = Url.Action(&quot;Index&quot;, new { id = &quot;Luna&quot;}); // /Home/Index?id=Luna or /Home/Index/Luna string url2 = Url.RouteUrl(new { controller = &quot;Home&quot;, action = &quot;Index&quot;}); // /Home/Index or / ... return View();} 2.2 &#xB2E4;&#xB978; URL&#xB85C; &#xC7AC;&#xC804;&#xC1A1; 2.2.1 &#xB2E4;&#xB978; Action Method &#xD638;&#xCD9C; 1234public RedirectToRouteResult MyActionMethod(){ return RedirectToAction(&quot;Index&quot;);} &#xB2E4;&#xB978; Controller &#xD638;&#xCD9C; &#xBC0F; segement &#xC804;&#xB2EC; &#xAC00;&#xB2A5;&#xD55C; overload&#xB41C; &#xD568;&#xC218;&#xB4E4;&#xC774; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. 2.2.2 URL&#xC744; &#xC0DD;&#xC131;&#xD558;&#xC5EC; &#xC7AC;&#xC804;&#xC1A1; 1234public RedirectToRouteResult MyActionMethod(){ return RedirectToRoute(new { controller = &quot;Home&quot;, action = &quot;Index&quot;, id = &quot;Luna&quot;});} 3. &#xD2B9;&#xC815; Route&#xB97C; &#xC120;&#xD0DD;&#xC801;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xC774;&#xC81C;&#xAECF; Routing system&#xC774; URL, Link&#xB97C; Rule&#xC5D0; &#xB530;&#xB77C;&#xC11C; &#xC0DD;&#xC131;&#xD558;&#xC600;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC6B0;&#xB9AC;&#xAC00; &#xC9C1;&#xC811; Route&#xB97C; &#xC120;&#xD0DD;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xB3C4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. (routes.MapRoute()&#xC758; &#xCCAB;&#xBC88;&#xC9F8; &#xC778;&#xC790;&#xB85C; &#xBA85;&#xCE6D;&#xC744; &#xC785;&#xB825;&#xD588;&#xB294;&#xB370; &#xADF8;&#xAC83;&#xC744; &#xBA85;&#xC2DC;&#xC801;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;.) 12routes.MapRoute(&quot;Route1&quot;, &quot;{controller}/{action}&quot;);routes.MapRoute(&quot;Route2&quot;, &quot;App/{action}&quot;, new { controller = &quot;Home&quot; }); &#xC704;&#xC640; &#xAC19;&#xC774; &#xC124;&#xC815;&#xB41C; &#xACBD;&#xC6B0; 1@Html.ActionLink(&quot;Customer Infomation&quot;, &quot;Index&quot;, &quot;Customer&quot;) &#xB294; &#xD56D;&#xC0C1; &#xB2E4;&#xC74C;&#xC758; Link&#xB85C; &#xC0DD;&#xC131;&#xB429;&#xB2C8;&#xB2E4;. 1&lt;a href=&quot;/Customer/Index&quot;&gt;Customer Information&lt;/a&gt; 3.1 View&#xC5D0;&#xC11C; &#xD2B9;&#xC815; Route &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xB9CC;&#xC57D; Route2&#xB97C; &#xC774;&#xC6A9;&#xD55C; Link&#xC758; &#xC0DD;&#xC131;&#xC744; &#xC6D0;&#xD560; &#xACBD;&#xC6B0; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; &#xBA85;&#xC2DC;&#xC801;&#xC73C;&#xB85C; Route Name&#xC744; &#xC120;&#xD0DD; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. 1@Html.ActionLink(&quot;Customer Infomation&quot;, &quot;Route2&quot;, &quot;Index&quot;, &quot;Customer&quot;) 1&lt;a href=&quot;/Home/Index?Length=5&quot; Length=&quot;8&quot;&gt;Customer Information&lt;/a&gt; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; Customer&#xB77C;&#xB294; Controller&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB77C;&#xACE0; &#xD588;&#xC9C0;&#xB9CC;, &#xD574;&#xB2F9; Route Pattern&#xC5D0; &#xC758;&#xD574;&#xC11C; HomeController&#xB85C; &#xC5F0;&#xACB0;&#xC774; &#xB429;&#xB2C8;&#xB2E4;. 3.2 Route Attribute&#xC5D0;&#xC11C; &#xD2B9;&#xC815; Route&#xB97C; &#xC9C0;&#xC815; 12345[Route(&quot;Add/{user}/{id:int}&quot;, Name=&quot;AddRoute&quot;)]public string Add(string user, int id){ return $&quot;Add User - Name : {user} , ID : {id}&quot;;} 4. Area Project&#xC5D0;&#xC11C; Area&#xB97C; &#xCD94;&#xAC00; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xAC01; &#xC601;&#xC5ED;(Area)&#xBCC4;&#xB85C; &#xB2E4;&#xB978; Controller, Model, View &#xBC0F; &#xB2E4;&#xB978; Route &#xADDC;&#xCE59; &#xB4F1;&#xC744; &#xAC00;&#xC9D1;&#xB2C8;&#xB2E4;. Area&#xC758; &#xD2B9;&#xC9D5;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. Area&#xBCC4;&#xB85C; &#xB2E4;&#xB978; Folder&#xC548;&#xC5D0; MVC Project&#xC758; &#xAD6C;&#xC870;&#xB4E4;&#xC744; &#xADF8;&#xB300;&#xB85C; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. Area&#xB0B4;&#xC758; (Area&#xBA85;&#xCE6D;)AreaRegistration.cs &#xB0B4;&#xC5D0; Route &#xADDC;&#xCE59;&#xC744; &#xC815;&#xC758;&#xD569;&#xB2C8;&#xB2E4;. Project&#xC758; Global.asax.cs&#xB0B4;&#xC5D0; AreaRegistration.RegisterAllAreas();&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xB294; &#xBD80;&#xBD84;&#xC774; &#xCD94;&#xAC00;&#xB429;&#xB2C8;&#xB2E4;. Attribute&#xB85C; Routing&#xD558;&#xB294; &#xACBD;&#xC6B0; [RouteArea(&quot;Area&#xBA85;&#xCE6D;&quot;)]&#xC73C;&#xB85C; &#xC801;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. Html.ActionLink()&#xC5D0;&#xC11C; Area&#xB97C; &#xBA85;&#xC2DC;&#xD560; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xCD94;&#xAC00;&#xC815;&#xBCF4;&#xB97C; &#xC801;&#xB294; &#xBB34;&#xBA85; &#xD0C0;&#xC785;&#xB780;&#xC5D0; area&#xB97C; &#xC9C0;&#xC815;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 1@Html.ActionLink(&quot;Go to Another Area&quot;, &quot;Index&quot;, new { area = &quot;Admin&quot; }) 5. Disk file&#xC5D0; &#xB300;&#xD55C; &#xC694;&#xCCAD; &#xC815;&#xC801; &#xD30C;&#xC77C; (Image, html, JavaScript &#xB4F1;&#x2026;)&#xC5D0; &#xB300;&#xD55C; &#xC811;&#xADFC;&#xC740; &#xADF8;&#xB0E5; &#xD574;&#xB2F9; &#xC8FC;&#xC18C;&#xB97C; &#xADF8;&#xB300;&#xB85C; &#xC801;&#xC5B4;&#xC8FC;&#xBA74; &#xC811;&#xADFC;&#xC774; &#xB429;&#xB2C8;&#xB2E4;. Routing system&#xC740; &#xC804;&#xB2EC;&#xBC1B;&#xC740; URL&#xC774; disk&#xC0C1;&#xC758; file&#xACFC; &#xB9E4;&#xCE6D;&#xB420; &#xACBD;&#xC6B0; Routing pattern&#xACFC;&#xB294; &#xC0C1;&#xAD00;&#xC5C6;&#xC774; &#xD574;&#xB2F9; file&#xC744; &#xC804;&#xB2EC;&#xD574; &#xC90D;&#xB2C8;&#xB2E4;. &#xB2E8;, RouteConfig.cs&#xC5D0;&#xC11C; routes.RouteExistingFiles = true;&#xB85C; &#xC124;&#xC815;&#xD560; &#xACBD;&#xC6B0; file&#xC744; &#xCC3E;&#xAE30;&#xC804;&#xC5D0; Routing pattern&#xC744; &#xBA3C;&#xC800; &#xC801;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB807;&#xAC8C; &#xC124;&#xC815;&#xD55C; &#xACBD;&#xC6B0; &#xD2B9;&#xC815; &#xD328;&#xD134;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; file&#xB85C; &#xC811;&#xADFC;&#xC744; &#xBA3C;&#xC800; &#xC2DC;&#xD0A4;&#xACE0;&#xC790; &#xD560;&#xB54C;&#xB294; routes.IgnoreRoute(&quot;Content/{filename}.html&quot;)&#xACFC; &#xAC19;&#xC740; &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xC801;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.","categories":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/categories/C/"},{"name":"ASP.NET","slug":"C/ASP-NET","permalink":"http://DevStarSJ.github.io/categories/C/ASP-NET/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"},{"name":"ASP.NET","slug":"ASP-NET","permalink":"http://DevStarSJ.github.io/tags/ASP-NET/"}]},{"title":"ASP.NET MVC 02. URL Routing","slug":"CSharp.Aspnet.02.Route","date":"2016-05-06T16:00:00.000Z","updated":"2017-04-23T10:31:43.000Z","comments":true,"path":"2016/05/07/CSharp.Aspnet.02.Route/","link":"","permalink":"http://DevStarSJ.github.io/2016/05/07/CSharp.Aspnet.02.Route/","excerpt":"","text":"ASP.NET MVC URL Routing 1. URL Routing&#xC774;&#xB780; ASP.NET MVC&#xB85C; &#xC0DD;&#xC131;&#xB41C; Web Application&#xC758; &#xACBD;&#xC6B0; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xC811;&#xADFC;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. 1http://mySite.com/Home/Index &#xAE30;&#xBCF8; URL Routing &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xD574;&#xC11D;&#xC744; &#xD560; &#xACBD;&#xC6B0; - mySite.com : Web Application&#xC758; &#xC8FC;&#xC18C; - Home : Controller &#xBA85;&#xCE6D; - Index : Action method &#xBA85;&#xCE6D; &#xC73C;&#xB85C; &#xB3D9;&#xC791;&#xD569;&#xB2C8;&#xB2E4;. 2. RouteConfig.cs 2.1 Global.asax.cs &#xB97C; &#xBCF4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; Route&#xB97C; &#xC124;&#xC815;&#xD558;&#xB294; Code&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. 1RouteConfig.RegisterRoutes(RouteTable.Routes); 2.2 \\App_Start\\RouteConfig.cs &#xD30C;&#xC77C;&#xC5D0; RouteConfig.RegisterRoute&#xB77C;&#xB294; static method&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xB85C; &#xC804;&#xB2EC;&#xBC1B;&#xC740; RouteCollection route&#xC5D0; .MapRoute()&#xB85C; Routing &#xADDC;&#xCE59;&#xB4E4;&#xC744; &#xCD94;&#xAC00;&#xD558;&#xB294; Code&#xB4E4;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. 3. .MapRoute() parameters 3.1 name Mapping&#xD560; Routing &#xBA85;&#xCE6D;&#xC785;&#xB2C8;&#xB2E4;. &#xBCC4; &#xC758;&#xBBF8;&#xAC00; &#xC5C6;&#xC73C;&#xBBC0;&#xB85C; null&#xB85C; &#xC785;&#xB825;&#xD574;&#xB3C4; &#xB429;&#xB2C8;&#xB2E4;. 3.2 url URL &#xD328;&#xD134;&#xC744; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. Web Application &#xC8FC;&#xC18C;/ &#xB2E4;&#xC74C;&#xBD80;&#xD130;&#xC758; &#xD328;&#xD134;&#xC744; &#xC9C0;&#xC815; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. Static URL Segment : url&#xC548;&#xC5D0; &#xC77C;&#xBC18; &#xBB38;&#xC790;&#xC5F4;&#xB85C; &#xC785;&#xB825;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. Dynamic URL Segment : &#xC911;&#xAD04;&#xD638;{ }&#xB0B4;&#xC5D0; &#xBCC0;&#xC218;&#xBA85;&#xC744; &#xC785;&#xB825;&#xD558;&#xBA74; &#xD574;&#xB2F9; ActionMethod&#xC5D0;&#xC11C; RouteData.Vaues[&quot;&#xBCC0;&#xC218;&#xBA85;&quot;]&#xC73C;&#xB85C; &#xC77D;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. ex) url: &quot;Page{page}&quot;&#xB85C; &#xC124;&#xC815;&#xD560; &#xACBD;&#xC6B0; http://mySite.com/Page3&#xC73C;&#xB85C; &#xC811;&#xADFC;&#xD558;&#xBA74; &#xD574;&#xB2F9; Route&#xB85C; mapping&#xB418;&#xBA70; {page}&#xC5D0; 3&#xC758; &#xAC12;&#xC774; &#xC804;&#xB2EC;&#xB429;&#xB2C8;&#xB2E4;. &#xC544;&#xB798;&#xC758; 3&#xAC00;&#xC9C0; &#xBA85;&#xCE6D;&#xC740; &#xBCC0;&#xC218;&#xBA85;&#xC73C;&#xB85C; &#xC9C0;&#xC815;&#xC774; &#xBD88;&#xAC00;&#xB2A5; &#xD569;&#xB2C8;&#xB2E4;. - controller : Controller &#xC774;&#xB984;&#xC744; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. - action : Action Method &#xC774;&#xB984;&#xC744; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. - area : Area&#xB97C; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. &#xB9CC;&#xC57D; &#xD574;&#xB2F9; Controller&#xC758; Action Method&#xC758; argument&#xC640; &#xAC19;&#xC740; &#xBCC0;&#xC218;&#xBA85;&#xC73C;&#xB85C; Mapping&#xD558;&#xAC8C;&#xB418;&#xBA74; Action Method&#xC758; argument&#xB85C; &#xADF8; &#xAC12;&#xC744; &#xC804;&#xB2EC;&#xD569;&#xB2C8;&#xB2E4;. ex) url : &quot;{controller}/{action}/{id}&#xB85C; &#xC124;&#xC815;&#xD558;&#xC600;&#xC744; &#xACBD;&#xC6B0;, http://mySite.com/Product/Index/Luna&#xB780; &#xC8FC;&#xC18C;&#xB85C; &#xC811;&#xADFC;&#xD560; &#xACBD;&#xC6B0; ProductController&#xC5D0; Index(string id)&#xB77C;&#xB294; Action Method&#xAC00; &#xC788;&#xC73C;&#xBA74; id&#xB77C;&#xB294; argument&#xB97C; Luna&#xB85C; &#xC804;&#xB2EC;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. &#xAC00;&#xBCC0;&#xAE38;&#xC774; parameter {controller}/{action}/{*all} &#xC774;&#xB77C;&#xACE0; &#xC815;&#xC758;&#xD55C; &#xACBD;&#xC6B0; segment&#xAC00; 3&#xAC1C; &#xC774;&#xC0C1;&#xC778; &#xACBD;&#xC6B0; &#xBAA8;&#xB450; all&#xBCC0;&#xC218;&#xC5D0; &#xD560;&#xB2F9;&#xB418;&#xC5B4;&#xC11C; Matching&#xB429;&#xB2C8;&#xB2E4;. 3.3 defaults &#xAE30;&#xBCF8;&#xAC12; &#xC124;&#xC815;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. 1defaults : new { controller = &quot;Product&quot;, action = &quot;Index&quot;, id = &quot;Luna&quot; } &#xC640; &#xAC19;&#xC740; &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xC9C0;&#xC815;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; URL&#xC640; &#xB9E4;&#xCE6D;&#xB418;&#xB294; &#xACBD;&#xC6B0; URL &#xD328;&#xD134;&#xC758; &#xBCC0;&#xC218;&#xBA85;&#xACFC; &#xAC19;&#xC740; &#xACF3;&#xC5D0; &#xC544;&#xBB34;&#xB7F0; &#xAC12;&#xB3C4; &#xC548; &#xB123;&#xC740; &#xACBD;&#xC6B0; default&#xB85C; &#xC124;&#xC815;&#xB41C; &#xAC12;&#xC774; &#xC0AC;&#xC6A9;&#xB418;&#xBA70;, URL &#xD328;&#xD134;&#xC5D0; &#xC5C6;&#xB294; &#xBCC0;&#xC218;&#xBA85;&#xC744; default&#xB85C; &#xC124;&#xC815;&#xD55C; &#xACBD;&#xC6B0; &#xD574;&#xB2F9; &#xBCC0;&#xC218;&#xBA85;(&#xB610;&#xB294; controller, action)&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; default&#xB85C; &#xC124;&#xC815;&#xB41C; &#xAC12;&#xC73C;&#xB85C; &#xB3D9;&#xC791;&#xD569;&#xB2C8;&#xB2E4;. Optinal&#xB85C; &#xC124;&#xC815;&#xB420; &#xACBD;&#xC6B0; id = UrlParameter.Optional &#xD574;&#xB2F9; segment&#xB294; &#xC785;&#xB825;&#xB418;&#xC9C0; &#xC54A;&#xC544;&#xB3C4; Matching &#xB41C; &#xAC83;&#xC73C;&#xB85C; &#xAC04;&#xC8FC;&#xB429;&#xB2C8;&#xB2E4;. 3.4 constratins URL parameter&#xC5D0; &#xC81C;&#xC57D;&#xC0AC;&#xD56D;&#xC744; &#xC124;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. 3.4.1 Regular Expression (&#xC815;&#xADDC;&#xD45C;&#xD604;&#xC2DD;)&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xAC80;&#xC0AC; 1constraints: new { page = @&quot;\\d+&quot; } &#xC704;&#xC758; &#xACBD;&#xC6B0; page&#xC758; &#xAC12;&#xC740; &#xC22B;&#xC790;&#xD615;&#xC2DD;&#xB9CC; &#xAC00;&#xB2A5;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. 3.4.2 &#xC5EC;&#xB7EC; &#xAC1C;&#xC758; &#xAC12;&#xC744; &#xC9C0;&#xC815;&#xD558;&#xC5EC; &#xAC80;&#xC0AC; 1constraints: new { page = @&quot;\\d+&quot;, action=&quot;^Index$|^About$&quot;} &#xC704;&#xC758; &#xACBD;&#xC6B0; &#xCD94;&#xAC00;&#xB85C; action segment&#xAC00; Index &#xB098; About&#xC778; URL&#xB9CC; Matching&#xD569;&#xB2C8;&#xB2E4;. 3.4.3 HTTP Method&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xAC80;&#xC0AC; 12constraints: new { page = @&quot;\\d+&quot;, action=&quot;^Index$|^About$&quot;, httpMethod = new HttpMethodConstarint(&quot;GET&quot;, &quot;POST&quot;)} &#xC704;&#xC758; &#xACBD;&#xC6B0; &#xCD94;&#xAC00;&#xB85C; GET, POST &#xC694;&#xCCAD;&#xB9CC; &#xCC98;&#xB9AC;&#xD558;&#xB3C4;&#xB85D; &#xC81C;&#xD55C;&#xD569;&#xB2C8;&#xB2E4;. 3.4.4 &#xD615;&#xC2DD;,&#xBC94;&#xC704; &#xB4F1;&#xC758; &#xC81C;&#xC57D;&#xC870;&#xAC74; 123constraints: new { page = @&quot;\\d+&quot;, action=&quot;^Index$|^About$&quot;, httpMethod = new HttpMethodConstarint(&quot;GET&quot;, &quot;POST&quot;), id = new RangeRouteConstraint(10, 20) } &#xC704;&#xC758; &#xACBD;&#xC6B0; &#xCD94;&#xAC00;&#xB85C; id&#xAC12;&#xC774; 10&#xC5D0;&#xC11C; 20 &#xC0AC;&#xC774;&#xC5D0; &#xACBD;&#xC6B0;&#xC5D0;&#xB9CC; &#xD5C8;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. 1using System.Web.Mvc.Routing.Constarints; &#xC704; namespace&#xC5D0; &#xC81C;&#xC57D;&#xC870;&#xAC74; class&#xB4E4;&#xC774; &#xC815;&#xC758;&#xB418;&#xC5B4; &#xC788;&#xC73C;&#xBA70; &#xBAA9;&#xB85D;&#xC740; &#xC544;&#xB798; link&#xC5D0;&#xC11C; &#xD655;&#xC778;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. https://msdn.microsoft.com/ko-kr/library/system.web.mvc.routing.constraints(v=vs.118).aspx 3.5 namespaces string[] &#xD0C0;&#xC785;&#xC73C;&#xB85C; &#xC5EC;&#xB7EC;&#xAC1C;&#xC758; namespace &#xAC12;&#xC744; &#xC804;&#xB2EC; &#xBC1B;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xAC12;&#xC744; &#xC804;&#xB2EC;&#xBC1B;&#xC740; &#xACBD;&#xC6B0; &#xBA3C;&#xC800; &#xC804;&#xB2EC;&#xBC1B;&#xC740; namespace&#xB0B4;&#xC758; controller&#xBD80;&#xD130; &#xCC3E;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. &#xBC30;&#xC5F4;&#xB85C; &#xC804;&#xB2EC;&#xBC1B;&#xC740; namespace&#xB4E4;&#xC740; &#xBAA8;&#xB450; &#xB3D9;&#xC77C;&#xD55C; &#xC6B0;&#xC120;&#xC21C;&#xC704;&#xB97C; &#xAC00;&#xC9C0;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. &#xB9CC;&#xC57D; &#xD2B9;&#xC815; namespace&#xC5D0; &#xC6B0;&#xC120;&#xC21C;&#xC758;&#xB97C; &#xB450;&#xACE0;&#xC790; &#xD560; &#xACBD;&#xC6B0; MapRoute()&#xB97C; &#xB530;&#xB85C; &#xC124;&#xC815;&#xD558;&#xC5EC;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. 4. Segment Matching &#xADDC;&#xCE59; &#xC704;&#xC5D0; &#xC124;&#xC815;&#xD55C; &#xADDC;&#xCE59;&#xBD80;&#xD130; &#xCC28;&#xB840;&#xB300;&#xB85C; &#xC801;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7EC;&#xBBC0;&#xB85C; &#xB3D9;&#xC77C;&#xD55C; segment&#xB97C; &#xAC00;&#xC9C0;&#xB294; Route&#xB97C; &#xC5EC;&#xB7EC;&#xAC1C; &#xC124;&#xC815;&#xD560; &#xACBD;&#xC6B0; &#xC880; &#xB354; &#xD2B9;&#xC218;&#xD55C; &#xACBD;&#xC6B0;&#xB97C; &#xBA3C;&#xC800; &#xC120;&#xC5B8;&#xD574;&#xC57C; &#xC801;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;. ex) 123456789routes.MapRoute( name: null, url: &quot;Luna{controller}/{action}&quot;);routes.MapRoute( name: null, url: &quot;{controller}/{action}&quot;); &#xC704;&#xC640; &#xAC19;&#xC774; &#xC124;&#xC815;&#xD588;&#xC744; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; - http://mySite.com/LunaProduct/Index&#xB85C; &#xC811;&#xADFC;&#xD560; &#xACBD;&#xC6B0; Product controller&#xC758; Index Action Method&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xAC8C; &#xB418;&#xBA70;, - http://mySite.com/Product/Index&#xB85C; &#xC811;&#xADFC;&#xD560; &#xACBD;&#xC6B0;&#xC5D0;&#xB3C4; Product controller&#xC758; Index Action Method&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. 123456789routes.MapRoute( name: null, url: &quot;{controller}/{action}&quot;);routes.MapRoute( name: null, url: &quot;Luna{controller}/{action}&quot;); &#xC704;&#xC640; &#xAC19;&#xC774; &#xC124;&#xC815;&#xB418;&#xC5C8;&#xC744; &#xACBD;&#xC6B0; segment&#xAC00; 2&#xAC1C;&#xC778; &#xACBD;&#xC6B0; &#xBB34;&#xC870;&#xAC74; &#xC704;&#xC5D0; &#xAC83;&#xB9CC; &#xCC98;&#xB9AC;&#xB418;&#xBA70; &#xC544;&#xB798;&#xC5D0; &#xC124;&#xC815;&#xB41C; URL&#xD328;&#xD134;&#xC73C;&#xB85C;&#xB294; &#xAC80;&#xC0AC;&#xD558;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC989;, - http://mySite.com/LunaProduct/Index&#xB85C; &#xC811;&#xADFC;&#xD560; &#xACBD;&#xC6B0; LunaProduct controller&#xC758; Index Action Method&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xAC8C; &#xB418;&#xBA70;, (&#xC5C6;&#xC73C;&#xBA74; 404 &#xC624;&#xB958;) - http://mySite.com/Product/Index&#xB85C; &#xC811;&#xADFC;&#xD560; &#xACBD;&#xC6B0;&#xC5D0;&#xB3C4; Product controller&#xC758; Index Action Method&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. 5. Attribute Routing &#xC704;&#xC5D0; &#xC0B4;&#xD3B4;&#xBCF8; &#xAC83;&#xC740; Rule-based Routing (&#xADDC;&#xCE59;&#xAE30;&#xBC18; &#xB77C;&#xC6B0;&#xD305;)&#xC774;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. &#xAC01;&#xAC01;&#xC758; Action Method&#xC5D0; Attribute&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xC801;&#xC6A9;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xB3C4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. 5.1 Attribute Route&#xAC00; &#xB3D9;&#xC791;&#xD558;&#xB3C4;&#xB85D; &#xC124;&#xC815; RouteConfig.cs&#xC758; RegisterRoutes(RouteCollection routes)&#xD568;&#xC218; &#xB0B4;&#xC5D0; routes.MapMvcAttributeRoutes();&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xBA74; Attribute &#xAE30;&#xBC18;&#xC758; Route &#xAE30;&#xB2A5;&#xC744; &#xD65C;&#xC131;&#xD654;&#xD569;&#x3134;&#xB2E4;. 5.2 Attribute Route &#xC124;&#xC815; 12345678public class CustomerController : Controller{ [Route(&quot;Test&quot;)] public ActionResult Index() { ... }} &#xC640; &#xAC19;&#xC774; &#xACBD;&#xC6B0; http://mySite.com/Test&#xB85C; &#xC811;&#xADFC;&#xD560; &#xACBD;&#xC6B0; Customer Controller&#xC758; Index Action method&#xAC00; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;. 12[Route(&quot;User/Add/{user}/{id}&quot;]public string Create(string user, int id) { ... } user&#xC640; id&#xAC00; &#xC778;&#xC790;&#xB85C; &#xC804;&#xB2EC;&#xB429;&#xB2C8;&#xB2E4;. &#xAC01;&#xAC01;&#xC758; &#xC778;&#xC790;&#xC5D0; &#xC81C;&#xC57D;&#xC870;&#xAC74; &#xC124;&#xC815;&#xB3C4; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. - {id:int} : id&#xB294; int &#xAC12;&#xC73C;&#xB85C;&#xC804;&#xB2EC;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. - {password:alpha:length(6)} : password&#xC5D0; alpha&#xC640; length 2&#xAC00;&#xC9C0; &#xC81C;&#xC57D;&#xC870;&#xAC74;&#xC744; &#xC124;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. 5.3 Prefix(&#xC811;&#xB450;&#xC5B4;) &#xC0AC;&#xC6A9; 123456789[RoutePrefix(&quot;User&quot;)]public class UserController : Controller{ [Route(&quot;~/Test&quot;)] public ActionResult Index() { ... } [Route(&quot;Add/{user}&quot;)] public ActionResult Create(string user) { ... }} http://mySite.com/User/Add/Luna&#xB85C; &#xC811;&#xADFC;&#xD560; &#xACBD;&#xC6B0; Create Action method&#xAC00; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;. http://mySite.com/Test&#xB85C; &#xC811;&#xADFC;&#xD560; &#xACBD;&#xC6B0; Index&#xAC00; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;. &#xC989;, ~/&#xB85C; &#xC124;&#xC815;&#xD560; &#xACBD;&#xC6B0; Prefix&#xAC00; &#xBB34;&#xC2DC;&#xB429;&#xB2C8;&#xB2E4;.","categories":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/categories/C/"},{"name":"ASP.NET","slug":"C/ASP-NET","permalink":"http://DevStarSJ.github.io/categories/C/ASP-NET/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"},{"name":"ASP.NET","slug":"ASP-NET","permalink":"http://DevStarSJ.github.io/tags/ASP-NET/"}]},{"title":"ASP.NET MVC 01. Project","slug":"CSharp.Aspnet.01.MVC.Project","date":"2016-05-06T15:00:00.000Z","updated":"2017-04-23T10:33:21.000Z","comments":true,"path":"2016/05/07/CSharp.Aspnet.01.MVC.Project/","link":"","permalink":"http://DevStarSJ.github.io/2016/05/07/CSharp.Aspnet.01.MVC.Project/","excerpt":"","text":"MVC Project &#xD56D;&#xBAA9;&#xC694;&#xC57D; /App_Data : File&#xAE30;&#xBC18; &#xC800;&#xC7A5;&#xC18C;&#xC758; &#xB370;&#xC774;&#xD130; &#xD30C;&#xC77C;,XML &#xD30C;&#xC77C; &#xB4F1;&#xC744; &#xC800;&#xC7A5; /App_Start : Route, Filter, Contents &#xB4F1;&#xC5D0; &#xB300;&#xD55C; &#xC815;&#xC758; &#xAC19;&#xC740; Project&#xC5D0; &#xB300;&#xD55C; &#xC8FC;&#xC694; &#xAD6C;&#xC131; &#xC124;&#xC815;&#xB4E4; /RouteConfig.cs : Route &#xC815;&#xBCF4; /Areas : &#xD070; Application&#xC744; &#xC791;&#xC740; Area&#xB85C; &#xB098;&#xB204;&#xB294; &#xBC29;&#xBC95; /bin : compile&#xB41C; &#xC5B4;&#xC148;&#xBE14;&#xB9AC; &#xBC0F; &#xAE30;&#xD0C0; &#xC5B4;&#xC148;&#xBE14;&#xB9AC;&#xB4E4;&#xC774; &#xC704;&#xCE58;, &#xC18C;&#xC2A4; &#xC81C;&#xC5B4;&#xC5D0; &#xD3EC;&#xD568;&#xC2DC;&#xCF1C;&#xC11C;&#xB294; &#xC548;&#xB428; /Content : css, Image &#xB4F1; static contents&#xB4E4; /Controllers : Controller classes /Models : VewModel, Domain Model &#xB4E4;. &#xBCC4;&#xB3C4; Project&#xC5D0; Domain Model&#xC744; &#xC815;&#xC758;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xC744; &#xB354; &#xB9CE;&#xC774; &#xC120;&#xD638; /Scripts : JavaScript Library /Views : View, PartialView /Web.config : View&#xAC00; &#xB3D9;&#xC791;&#xD558;&#xB294;&#xB370; &#xD544;&#xC694;&#xD55C; &#xAD6C;&#xC131;, ISS&#xC5D0; &#xC758;&#xD574; View &#xD30C;&#xC77C; &#xC790;&#xCCB4;&#xAC00; &#xC11C;&#xBE44;&#xC2A4;&#xB418;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; &#xC81C;&#xD55C;&#xD558;&#xB294;&#xB370; &#xD544;&#xC694;&#xD55C; &#xAD6C;&#xC131;, View&#xC5D0; import&#xD558;&#xB294; namespace&#xC5D0; &#xB300;&#xD55C; &#xC815;&#xBCF4; &#xB4F1;&#x2026; /Share : &#xD2B9;&#xC815; Controller&#xC5D0; &#xC885;&#xC18D;&#xB418;&#xC9C0; &#xC54A;&#xB294; Layout, View /Global.asax : &#xC804;&#xC5ED; ASP.NET Application class. /Web.config : Application&#xC744; &#xC704;&#xD55C; &#xAD6C;&#xC131; &#xD30C;&#xC77C; MVC &#xADDC;&#xC57D; Controller /Controllers/&#xBA85;&#xCE6D;Controller.cs &#xB780; &#xC774;&#xB984;&#xC73C;&#xB85C; &#xC800;&#xC7A5; HTML helper method&#xC5D0;&#xC11C; &#xBA85;&#xCE6D;&#xB9CC; &#xC785;&#xB825;&#xD558;&#xBA74; &#xBA85;&#xCE6D;Controller class&#xB97C; &#xC790;&#xB3D9;&#xC73C;&#xB85C; &#xCC3E;&#xC544;&#xC90C; View /Views/&#xBA85;&#xCE6D; &#xD3F4;&#xB354;&#xC548;&#xC5D0; &#xC800;&#xC7A5; &#xD574;&#xB2F9; Controller&#xC758; Action method &#xBA85;&#xCE6D;&#xC73C;&#xB85C; View&#xC774;&#xB984;&#xC744; &#xC815;&#xD568; : return View(); ex) ProductController&#xC758; Index&#xC5D0; &#xB300;&#xD55C; View&#xB294; /View/Product/Index.cshtml &#xC774;&#xB780; &#xC774;&#xB984;&#xC73C;&#xB85C; &#xC791;&#xC131; &#xB2E4;&#xB978; View &#xC774;&#xB984;&#xC744; &#xBA85;&#xC2DC;&#xC801;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xB3C4; &#xAC00;&#xB2A5;&#xD568; : return View(&quot;View&#xBA85;&#xCE6D;&quot;); Controller &#xBA85;&#xCE6D;&#xC758; &#xD3F4;&#xB354;&#xC5D0;&#xC11C; View&#xB97C; &#xBA3C;&#xC800; &#xCC3E;&#xC740; &#xD6C4; /Views/Shared &#xD3F4;&#xB354;&#xC5D0;&#xC11C; &#xCC3E;&#xB294;&#xB2E4;. Layout _(&#xC5B8;&#xB354;&#xBC14;)&#xB85C; &#xC2DC;&#xC791; &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; /Views/_ViewStart.cshtml&#xC744; &#xBAA8;&#xB4E0; View&#xC5D0; &#xC801;&#xC6A9; &#xD2B9;&#xC815; Layout&#xC744; &#xC9C0;&#xC815;&#xD558;&#xBA74; _ViewStart.cshtml&#xC744; &#xC801;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xC74C; : Layout = &quot;~/Views/Shared/_MyLayout.cshtml&quot;; &#xC544;&#xBB34;&#xB7F0; Layout&#xB3C4; &#xCC38;&#xC870;&#xD558;&#xC9C0; &#xC54A;&#xC73C;&#xB824;&#xBA74; null&#xAC12;&#xC744; &#xB300;&#xC785; : Layout = null;","categories":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/categories/C/"},{"name":"ASP.NET","slug":"C/ASP-NET","permalink":"http://DevStarSJ.github.io/categories/C/ASP-NET/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://DevStarSJ.github.io/tags/C/"},{"name":"ASP.NET","slug":"ASP-NET","permalink":"http://DevStarSJ.github.io/tags/ASP-NET/"}]},{"title":"Using the gesture function with a common mouse in macOS","slug":"macOS.set.mouse","date":"2016-05-06T15:00:00.000Z","updated":"2017-04-23T10:42:10.000Z","comments":true,"path":"2016/05/07/macOS.set.mouse/","link":"","permalink":"http://DevStarSJ.github.io/2016/05/07/macOS.set.mouse/","excerpt":"","text":"macOS(OSX)&#xC5D0;&#xC11C; &#xC77C;&#xBC18; &#xB9C8;&#xC6B0;&#xC2A4;&#xB85C; &#xB9E4;&#xC9C1;&#xB9C8;&#xC6B0;&#xC2A4;&#xC758; &#xC81C;&#xC2A4;&#xCCD0;(gesture) &#xAE30;&#xB2A5; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xB9E5;&#xBD81;&#xD504;&#xB85C;&#xB098; &#xB9E5;&#xBD81;&#xC5D0;&#xC5B4;&#xC758; &#xACBD;&#xC6B0; &#xB9C8;&#xC6B0;&#xC2A4;&#xC5C6;&#xC774; &#xB9E4;&#xC9C1;&#xD328;&#xB4DC;&#xB9CC;&#xC73C;&#xB85C;&#xB3C4; &#xC0AC;&#xC6A9;&#xC774; &#xD3B8;&#xB9AC;&#xD558;&#xB2E4;&#xB294; &#xBD84;&#xB4E4;&#xC774; &#xB9CE;&#xAE34;&#xD558;&#xC9C0;&#xB9CC;, &#xADF8;&#xB798;&#xB3C4; &#xB9C8;&#xC6B0;&#xC2A4;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294;&#xAC8C; &#xC775;&#xC219;&#xD558;&#xC2E0; &#xBD84;&#xB4E4;&#xC740; &#xB9C8;&#xC6B0;&#xC2A4; &#xC0AC;&#xC6A9;&#xC744; &#xC120;&#xD638;&#xD569;&#xB2C8;&#xB2E4;. &#xC774; &#xACBD;&#xC6B0; &#xB9E4;&#xC9C1;&#xD328;&#xB4DC;&#xC5D0;&#xC11C; &#xC81C;&#xC2A4;&#xCCD0;&#xB85C; &#xC81C;&#xACF5;&#xD558;&#xB294; &#xAE30;&#xB2A5;&#xC774; &#xD3B8;&#xB9AC;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xD574;&#xB2F9; &#xAE30;&#xB2A5;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C; &#xB9E4;&#xC9C1;&#xB9C8;&#xC6B0;&#xC2A4;&#xB97C; &#xAD6C;&#xC785;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xAC00; &#xB9CE;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xB9E4;&#xC9C1;&#xB9C8;&#xC6B0;&#xC2A4; &#xAC00;&#xACA9;&#xC774; &#xC880; &#xD6C4;&#xB35C;&#xB35C;&#xD558;&#xC8E0;. (99,000&#xC6D0;) &#xC624;&#xD508;&#xB9C8;&#xCF13;&#xC5D0;&#xC11C; &#xC870;&#xAE08; &#xC800;&#xB834;&#xD558;&#xAC8C; &#xAD6C;&#xC785;&#xD558;&#xB354;&#xB77C;&#xB3C4; 8&#xB9CC;&#xC6D0;&#xC774; &#xB118;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD0A4;&#xBCF4;&#xB4DC; &#xB2E8;&#xCD95;&#xD0A4; &#xD655;&#xC778; &#xBC0F; &#xC7AC;&#xD560;&#xB2F9; &#xC0AC;&#xC2E4; &#xB9E4;&#xC9C1;&#xB9C8;&#xC6B0;&#xC2A4;&#xC5D0;&#xC11C; &#xC8FC;&#xB85C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xC81C;&#xC2A4;&#xCCD0; &#xC911; Mission Control, &#xC67C;&#xCABD; Space, &#xC624;&#xB978;&#xCABD; Space &#xC774; 3&#xAC00;&#xC9C0;&#xB9CC; &#xC0AC;&#xC6A9;&#xD558;&#xB354;&#xB77C;&#xB3C4; &#xC791;&#xC5C5;&#xC774; &#xD3B8;&#xB9AC;&#xD574; &#xC9D1;&#xB2C8;&#xB2E4;. &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; &#xC774; &#xAE30;&#xB2A5;&#xC744; &#xAD73;&#xC774; &#xB9E4;&#xC9C1;&#xB9C8;&#xC6B0;&#xC2A4;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xD0A4;&#xBCF4;&#xB4DC; &#xB2E8;&#xCD95;&#xD0A4;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xB3C4; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. ^&#xB294; control&#xD0A4;&#xB97C; &#xB73B;&#xD569;&#xB2C8;&#xB2E4;. control&#xD0A4;&#xC640; &#xBC29;&#xD5A5;&#xD0A4; 4&#xAC1C;&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xD574;&#xB2F9; &#xAE30;&#xB2A5;&#xB4E4;&#xC774; &#xAE30;&#xBCF8;&#xC73C;&#xB85C; &#xD560;&#xB2F9;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. Mission Control &#xAE30;&#xB2A5;&#xC744; &#xB9C8;&#xC6B0;&#xC2A4;&#xC5D0; &#xD560;&#xB2F9; &#xC774; &#xAE30;&#xB2A5;&#xB4E4;&#xC744; &#xB9C8;&#xC6B0;&#xC2A4; &#xBC84;&#xD2BC;&#xC5D0; &#xD560;&#xB2F9;&#xD558;&#xB824;&#xBA74; &#xC2DC;&#xC2A4;&#xD15C; &#xD658;&#xACBD;&#xC124;&#xC815; &#xC5D0;&#xC11C; Mission Control&#xC5D0;&#xC11C; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC544;&#xB798;&#xCABD;&#xC5D0;&#xBCF4;&#xBA74; &#xD0A4;&#xBCF4;&#xB4DC;&#xB85C;&#xB294; &#xAE30;&#xBCF8; &#xB2E8;&#xCD95;&#xD0A4;&#xB4E4;&#xC774; &#xD560;&#xB2F9;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8; &#xC624;&#xB978;&#xCABD;&#xC744; &#xD074;&#xB9AD;&#xD558;&#xBA74; &#xB9C8;&#xC6B0;&#xC2A4;&#xBC84;&#xD2BC; &#xB610;&#xB294; &#xB9C8;&#xC6B0;&#xC2A4; &#xBC84;&#xD2BC; + &#xD2B9;&#xC218;&#xD0A4;(control , alt, command, shift) &#xC870;&#xD569;&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC11C;&#xB3C4; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC5EC;&#xAE30;&#xC5D0;&#xC11C; &#xB9C8;&#xC6B0;&#xC2A4;&#xBC84;&#xD2BC;&#xC744; &#xD560;&#xB2F9;&#xD558;&#xB824;&#xACE0; &#xB20C;&#xB7EC;&#xBCF4;&#xBA74; &#xB9C8;&#xC6B0;&#xC2A4; &#xBC84;&#xD2BC;&#xC774; 32&#xBC88;&#xAE4C;&#xC9C0; &#xD560;&#xB2F9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC;, &#xC77C;&#xBC18; &#xB9C8;&#xC6B0;&#xC2A4;&#xC758; &#xACBD;&#xC6B0; &#xB9C8;&#xC6B0;&#xC2A4; &#xBC84;&#xD2BC;&#xC744; macOS &#xC5D0;&#xC11C; &#xC778;&#xC2DD;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; &#xC804;&#xC6A9; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xB97C; &#xC124;&#xCE58;&#xD558;&#xAC70;&#xB098;, &#xBCC4;&#xB3C4;&#xC758; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC744; &#xC0AC;&#xC6A9;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xACB0;&#xC815;&#xC801;&#xC73C;&#xB85C; &#xC5EC;&#xAE30;&#xC5D0;&#xC11C;&#xB294; Space &#xAC04; &#xC774;&#xC6A9;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xD560;&#xB2F9;&#xC774; &#xC548;&#xB429;&#xB2C8;&#xB2E4;. BetterTouchTool &#xC608;&#xC804;&#xC5D0;&#xB294; &#xBB34;&#xB8CC; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xB3C4; &#xB9CE;&#xC558;&#xC9C0;&#xB9CC; &#xC694;&#xC998; &#xB300;&#xBD80;&#xBD84; &#xC720;&#xB8CC;&#xD654; &#xB418;&#xC5C8;&#xC73C;&#xBA70; &#xADF8;&#xB798;&#xB3C4; &#xADF8; &#xC911; &#xAC00;&#xC7A5; &#xAE30;&#xB2A5;&#xC774; &#xB9CE;&#xACE0; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xD3B8;&#xD55C; &#xAC83;&#xC73C;&#xB85C;&#xB294; BetterTouchTool&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. https://www.boastr.net/downloads&#xC5D0;&#xC11C; 45&#xC77C; Trial &#xB85C; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xBA70; 4,500&#xC6D0;&#xC5D0;&#xC11C; 50,000&#xC6D0; &#xC815;&#xB3C4;&#xC758; &#xAC00;&#xACA9;&#xC73C;&#xB85C; &#xAD6C;&#xB9E4;&#xAC00; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC81C;&#xC791;&#xC0AC;&#xB294; 7,000&#xC6D0; &#xC815;&#xB3C4;&#xC758; &#xAC00;&#xACA9;&#xC73C;&#xB85C; &#xAD6C;&#xB9E4;&#xD574;&#xC8FC;&#xAE30;&#xB97C; &#xCD94;&#xCC9C;&#xD55C;&#xB2E4;&#xACE0; &#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xAC00;&#xACA9;&#xBCC4;&#xB85C; &#xAE30;&#xB2A5;&#xC801; &#xCC28;&#xC774;&#xB294; &#xC5C6;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB0E5; donation &#xC801;&#xC778; &#xCE21;&#xBA74;&#xC774;&#xB77C; &#xC0DD;&#xAC01;&#xD558;&#xC2DC;&#xBA74; &#xB420; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;. BetterTouchTool &#xC758; &#xC6D0;&#xB798; &#xBAA9;&#xC801;&#xC740; macOS &#xBC0F; &#xAC1C;&#xBCC4; Application &#xBCC4;&#xB85C; &#xD0A4;&#xBCF4;&#xB4DC;, &#xB9E4;&#xC9C1;&#xB9C8;&#xC6B0;&#xC2A4;, &#xC77C;&#xBC18;&#xB9C8;&#xC6B0;&#xC2A4; &#xC758; &#xD2B9;&#xC815; &#xBC84;&#xD2BC; &#xBC0F; &#xC81C;&#xC2A4;&#xCCD0;&#xC5D0; &#xAE30;&#xB2A5;&#xB4E4;&#xC744; &#xD560;&#xB2F9;&#xD558;&#xB294; &#xAC83;&#xC774;&#xBBC0;&#xB85C; &#xB9E4;&#xC9C1;&#xB9C8;&#xC6B0;&#xC2A4; &#xC0AC;&#xC6A9;&#xC790;&#xB77C;&#xB3C4; &#xAD6C;&#xB9E4;&#xD558;&#xC2DC;&#xBA74; &#xD3B8;&#xB9AC;&#xD558;&#xAC8C; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC77C;&#xBC18;&#xB9C8;&#xC6B0;&#xC2A4; &#xC0AC;&#xC6A9;&#xC790;&#xB294; &#xC774; &#xD234;&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; macOS &#xC5D0;&#xC11C; &#xD560;&#xB2F9;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xBC84;&#xD2BC;&#xC774;&#xB098; &#xBC84;&#xD2BC; + &#xD2B9;&#xC218;&#xD0A4;(control , alt, command, shift)&#xC758; &#xC870;&#xD569;&#xC73C;&#xB85C; Mission Control, &#xC67C;&#xCABD; Space, &#xC624;&#xB978;&#xCABD; Space &#xB4F1;&#xC758; &#xAE30;&#xB2A5;&#xC744; &#xD560;&#xB2F9; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC81C;&#xC870;&#xC0AC; &#xC81C;&#xACF5; &#xB9C8;&#xC6B0;&#xC2A4; &#xB4DC;&#xB77C;&#xC774;&#xBC84; &#xD544;&#xC790;&#xB294; Logitech &#xC0AC;&#xC758; MX Anywhere 2 &#xB9C8;&#xC6B0;&#xC2A4;&#xB97C; &#xC0AC;&#xC6A9;&#xC911;&#xC778;&#xB370;, &#xC81C;&#xC870;&#xC0AC;&#xC5D0;&#xC11C; macOS &#xC6A9; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xB97C; &#xB530;&#xB85C; &#xC81C;&#xACF5;&#xD574; &#xC90D;&#xB2C8;&#xB2E4;. &#xC774;&#xB807;&#xAC8C; &#xBCC4;&#xB3C4;&#xC758; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xB97C; &#xC81C;&#xACF5;&#xD558;&#xB294; &#xB9C8;&#xC6B0;&#xC2A4;&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xAC70;&#xAE30;&#xC11C; &#xC124;&#xC815;&#xC774; &#xAC00;&#xB2A5;&#xD55C; &#xACBD;&#xC6B0;&#xAC00; &#xB9CE;&#xC2B5;&#xB2C8;&#xB2E4;. MX Anywhere 2&#xB294; &#xAC00;&#xC6B4;&#xB370; &#xBC84;&#xD2BC;&#xC5D0; Mission Control, &#xC67C;&#xCABD; Space, &#xC624;&#xB978;&#xCABD; Space &#xC774; &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; &#xD560;&#xB2F9;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. Mission Control : &#xAC00;&#xC6B4;&#xB370; &#xBC84;&#xD2BC; &#xD074;&#xB9AD; &#xB610;&#xB294; &#xB204;&#xB978;&#xCCB4; &#xC704;&#xB85C; &#xC774;&#xB3D9; &#xC67C;&#xCABD; Space : &#xAC00;&#xC6B4;&#xB370; &#xBC84;&#xD2BC; &#xB204;&#xB978;&#xCCB4; &#xC88C;&#xB85C; &#xC774;&#xB3D9; &#xC624;&#xB978;&#xCABD; Space : &#xAC00;&#xC6B4;&#xB370; &#xBC84;&#xD2BC; &#xB204;&#xB978;&#xCCB4; &#xC6B0;&#xB85C; &#xC774;&#xB3D9; &#xC751;&#xC6A9; &#xD504;&#xB85C;&#xADF8;&#xB7A8; &#xC708;&#xB3C4;&#xC6B0; : &#xAC00;&#xC6B4;&#xB370; &#xBC84;&#xD2BC; &#xB204;&#xB978;&#xCCB4; &#xC544;&#xB798;&#xB85C; &#xC774;&#xB3D9; Space &#xC774;&#xB3D9;&#xC758; &#xACBD;&#xC6B0;&#xB294; &#xBE44;&#xAD50;&#xC801; &#xC790;&#xC8FC; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAE30;&#xB2A5;&#xC774;&#xBBC0;&#xB85C; &#xC880; &#xB354; &#xBE68;&#xB9AC; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xC704;&#xD574; &#xB9C8;&#xC6B0;&#xC2A4; &#xD720;&#xC744; &#xC88C;, &#xC6B0;&#xB85C; &#xD074;&#xB9AD;&#xD558;&#xB294; &#xAC83;&#xC774; &#xB354; &#xD3B8;&#xB9AC;&#xD560; &#xAC83;&#xC73C;&#xB85C; &#xD310;&#xB2E8;&#xB418;&#xC5B4; &#xADF8;&#xB807;&#xAC8C; &#xD560;&#xB2F9;&#xC744; &#xD558;&#xC600;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB9C8;&#xCE58;&#xBA70;&#x2026; &#xD574;&#xB2F9; &#xC81C;&#xD488;&#xC774; &#xC544;&#xB2CC; &#xB2E4;&#xB978; &#xB9C8;&#xC6B0;&#xC2A4;&#xB97C; &#xAD6C;&#xC785;&#xD560; &#xACBD;&#xC6B0; &#xC81C;&#xC870;&#xC0AC;&#xC5D0;&#xC11C; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xB97C; &#xC81C;&#xACF5;&#xD574;&#xC8FC;&#xC9C0; &#xC54A;&#xB294;&#xB2E4; &#xD558;&#xB354;&#xB77C;&#xB3C4; BetterTouchTool &#xD234;&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xD560;&#xB2F9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xB2E8;, &#xB9C8;&#xC6B0;&#xC2A4;&#xC758; &#xBCC4;&#xB3C4; &#xBC84;&#xD2BC;&#xC774; &#xC788;&#xAC70;&#xB098;, &#xD720;&#xC744; &#xC88C;,&#xC6B0; &#xD074;&#xB9AD;&#xC73C;&#xB85C; &#xB204;&#xB974;&#xB294;&#xAC8C; &#xAC00;&#xB2A5;&#xD55C; &#xB9C8;&#xC6B0;&#xC2A4;&#xB97C; &#xAD6C;&#xB9E4;&#xD558;&#xC154;&#xC57C; &#xC880; &#xB354; &#xD3B8;&#xB9AC;&#xD558;&#xAC8C; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB9AC;&#xB77C; &#xC0DD;&#xAC01;&#xB429;&#xB2C8;&#xB2E4;. &#xC870;&#xAE08; &#xC800;&#xB834;&#xD55C; &#xBC84;&#xD2BC;&#xC774; &#xB9CE;&#xC740; &#xB9C8;&#xC6B0;&#xC2A4;(&#xD720; &#xC88C;,&#xC6B0; &#xD074;&#xB9AD; &#xC9C0;&#xC6D0;)&#xC640; BetterTouchTool &#xAD6C;&#xB9E4;&#xB97C; &#xD558;&#xB354;&#xB77C;&#xB3C4; &#xB9E4;&#xC9C1;&#xB9C8;&#xC6B0;&#xC2A4; &#xBCF4;&#xB2E4;&#xB294; &#xD655;&#xC2E4;&#xD788; &#xB354; &#xC800;&#xB834;&#xD558;&#xB2C8;&#xAE50;&#xC694;. &#xB9E4;&#xC9C1;&#xB9C8;&#xC6B0;&#xC2A4; + BetterTouchTool &#xC758; &#xC870;&#xD569;&#xC758; &#xACBD;&#xC6B0;&#xB294; &#xB354; &#xB9CE;&#xC740; &#xC791;&#xC5C5;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xACA0;&#xC9C0;&#xB9CC;&#xC694;. &#xC138;&#xC190;&#xAC00;&#xB77D; &#xD074;&#xB9AD;, &#xB124;&#xC190;&#xAC00;&#xB77D; &#xD074;&#xB9AD; &#xB4F1; &#xB9E4;&#xC9C1;&#xB9C8;&#xC6B0;&#xC2A4; &#xC0C1;&#xC758; &#xC81C;&#xC2A4;&#xCCD0;&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xBCBC;&#xB098;&#xBCC4; &#xAE30;&#xB2A5;&#xC758; &#xD560;&#xB2F9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.","categories":[{"name":"Tips","slug":"Tips","permalink":"http://DevStarSJ.github.io/categories/Tips/"},{"name":"macOS","slug":"Tips/macOS","permalink":"http://DevStarSJ.github.io/categories/Tips/macOS/"}],"tags":[{"name":"macOS","slug":"macOS","permalink":"http://DevStarSJ.github.io/tags/macOS/"}]},{"title":"Make Symbol Repository for Visual Studio","slug":"Devops.SymbolRepository","date":"2016-04-03T15:00:00.000Z","updated":"2017-04-23T09:56:54.000Z","comments":true,"path":"2016/04/04/Devops.SymbolRepository/","link":"","permalink":"http://DevStarSJ.github.io/2016/04/04/Devops.SymbolRepository/","excerpt":"","text":"Make Symbol Repository for Visual Studio 1. Debugging Tools for Windows &#xC124;&#xCE58; https://msdn.microsoft.com/en-us/library/windows/hardware/ff551063(v=vs.85).aspx 2. Symbol &#xB4F1;&#xB85D; 1call svnindex.cmd -source=&quot;{SolutionFolder}&quot; -symbols=&quot;{SolutionFolder}\\bin\\Unicode Release&quot; 1symstore.exe add /r /f &quot;{SolutionFolder}\\bin\\Unicode Release\\*.*&quot; /s &quot;{SymbolRepository}&quot; /t &quot;{Name}&quot; /compress e.g. call svnindex.cmd -source=&#x201C;d:&#x201D; -symbol=&#x201C;d:Release&#x201D; symstore add /r /f &#x201C;d:Release*.*&quot; /s &#x201C;d:&#x201D; /t &#x201C;MyApp&#x201D; /compress &#xD1B5;&#xC0C1;&#xC801;&#xC73C;&#xB85C; symstore.exe&#xB294; &#xC544;&#xB798; &#xD3F4;&#xB354;&#xC5D0; &#xC704;&#xCE58;&#xD569;&#xB2C8;&#xB2E4;. 1C:\\Program Files\\Debugging Tools for Windows (x64) svnindex.cmd&#xB294; &#xC124;&#xCE58;&#xB41C; Debugging Tools for Windows &#xD3F4;&#xB354; &#xC544;&#xB798; srcsrv &#xD3F4;&#xB354; &#xB0B4;&#xC5D0; &#xC788;&#xC73C;&#xBA70; &#xB2E4;&#xB978; CI &#xC81C;&#xD488;&#xB4E4;&#xC758; cmd &#xD30C;&#xC77C;&#xB4E4;&#xB3C4; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. 3. &#xC800;&#xC7A5;&#xB41C; Symbol &#xD655;&#xC778; {SymbolRepository}\\000Admin\\server.txt&#xC5D0;&#xC11C; &#xD655;&#xC778; &#xAC01; ID&#xBCC4; Build&#xC77C;&#xC2DC;. &#xC774;&#xB984; (/t &#xC635;&#xC158; &#xB4A4;&#xC5D0; &#xC774;&#xB984;) &#xD655;&#xC778;&#xC774; &#xAC00;&#xB2A5; 4. Symbol &#xC0AD;&#xC81C; 1symstore del /i ID /s &quot;{SymbolRepository}&quot; e.g. symstore del /i 142 /s &#x201C;d:&#x201D; symstore &#xC0AC;&#xC6A9;&#xBC95; (Symbol &#xC0AD;&#xC81C; &#xD3EC;&#xD568;) https://msdn.microsoft.com/en-us/library/windows/desktop/ms681378(v=vs.85).aspx","categories":[{"name":"DevOps","slug":"DevOps","permalink":"http://DevStarSJ.github.io/categories/DevOps/"}],"tags":[{"name":"DevOps","slug":"DevOps","permalink":"http://DevStarSJ.github.io/tags/DevOps/"},{"name":"CI/CD","slug":"CI-CD","permalink":"http://DevStarSJ.github.io/tags/CI-CD/"}]},{"title":"Oracle hint","slug":"Oracle.hint","date":"2016-02-25T17:00:00.000Z","updated":"2017-04-24T00:20:38.000Z","comments":true,"path":"2016/02/26/Oracle.hint/","link":"","permalink":"http://DevStarSJ.github.io/2016/02/26/Oracle.hint/","excerpt":"","text":"LEADING(&#xD14C;&#xC774;&#xBE14;) : &#xD574;&#xB2F9; Table &#xBD80;&#xD130; &#xC77D;&#xC74C; QB_NAME(&#xC774;&#xB984;) : &#xD574;&#xB2F9; query block&#xC5D0; &#xC774;&#xB984;&#xC744; &#xC9C0;&#xC5B4;&#xC900;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xB2E4;&#xB978; &#xACF3;&#xC5D0;&#xC11C; &#xC774;&#xB984;@&#xD14C;&#xC774;&#xBE14;&#xBA85; &#xC73C;&#xB85C; &#xD574;&#xB2F9; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xC9C0;&#xC815; &#xD560; &#xC218; &#xC788;&#xB2E4;. JOIN &#xBC29;&#xBC95; USE_NL(&#xD14C;&#xC774;&#xBE14;) : outer table&#xC744; &#xD14C;&#xC774;&#xBE14;(inner table)&#xACFC; Nested Loop Join &#xBC29;&#xC2DD;&#xC73C;&#xB85C; JOIN&#xC744; &#xC2DC;&#xB3C4; Semi Join : 1 row&#xB9CC; JOIN&#xC5D0; &#xC131;&#xACF5;&#xD558;&#xBA74; &#xB354;&#xC774;&#xC0C1; inner&#xCABD;&#xC744; &#xBCF4;&#xC9C0; &#xC54A;&#xACE0; outer&#xC758; &#xB2E4;&#xC74C; row&#xB97C; &#xCC3E;&#xC74C; NL_SJ, HASH_SJ, MERGE_SJ Anti Join : &#xC77C;&#xCE58;&#xD558;&#xC9C0; &#xC54A;&#xB294; data&#xB97C; &#xCD94;&#xCD9C; (NOT IN, NOT EXISTS, MINUS) NL_AJ, HASH_AJ, MERGE_AJ Subquery Unnesting &#xAD00;&#xB828; UNNEST : &#xD480;&#xC5B4;&#xC11C; JOIN &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xC720;&#xB3C4; NO_UNNEST : &#xD480;&#xC9C0;&#xB9D0;&#xACE0; Filter &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xCD5C;&#xC801;&#xD654; &#xC720;&#xB3C4; View Merging NO_MERGE(&#xD14C;&#xC774;&#xBE14;) : main query &#xC640; inline view&#xB97C; JOIN&#xC73C;&#xB85C; &#xD480;&#xC9C0;&#xB9D0;&#xACE0; inline view&#xB97C; &#xBA3C;&#xC800; &#xC2E4;&#xD589; MERGE(&#xD14C;&#xC774;&#xBE14;) : main query&#xC640; inline view&#xB97C; JOIN&#xC73C;&#xB85C; &#xD480;&#xC5B4;&#xC11C; &#xCD5C;&#xC801;&#xD654;&#xB97C; &#xC2DC;&#xB3C4; PUSH_PRED(&#xC778;&#xB77C;&#xC778;&#xBDF0;) : (Push Predicate, &#xC870;&#xAC74;&#xC808; Push) main query&#xC5D0;&#xC11C; &#xBA3C;&#xC800; filtering&#xD558;&#xC5EC; &#xADF8; &#xACB0;&#xACFC;&#xB97C; inline view&#xC758; filter &#xC870;&#xAC74;&#xC73C;&#xB85C; &#xB123;&#xC5B4;&#xB77C;. PUSH_SUBQ : (Push Subquery) &#xC2E4;&#xD589;&#xACC4;&#xD68D;&#xC0C1; &#xAC00;&#xB2A5;&#xD55C; &#xC55E; &#xB2E8;&#xACC4;&#xC5D0;&#xC11C; subquery filtering&#xC744; &#xD558;&#xC5EC; main query&#xC758; &#xBC94;&#xC704;&#xB97C; &#xC904;&#xC774;&#xACE0;&#xC790; &#xD560;&#xB54C;, NO_UNNEST&#xC640; &#xAC19;&#xC774; &#xC0AC;&#xC6A9;&#xB418;&#xC5B4;&#xC57C; &#xD568; Concatenation (&#xC8FC;&#xB85C; OR&#xC808; &#xCC98;&#xB9AC;) USE_CONCAT : UNION ALL&#xB85C; &#xD45C;&#xD604; NO_EXPAND : &#xB098;&#xB204;&#xC9C0; &#xB9D0;&#xACE0; &#xADF8;&#xB300;&#xB85C; &#xC2E4;&#xD589; FULL(&#xD14C;&#xC774;&#xBE14;) : &#xD574;&#xB2F9; &#xD14C;&#xC774;&#xBE14;&#xC744; full scan &#xD55C;&#xB2E4;. PARALLEL(&#xD14C;&#xC774;&#xBE14; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xC218;) : &#xD574;&#xB2F9; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xBA85;&#xC2DC;&#xD55C; &#xD504;&#xB85C;&#xB808;&#xC2A4;&#xC218; &#xB9CC;&#xD07C; &#xBCD1;&#xB82C;&#xB85C; &#xCC98;&#xB9AC;&#xD55C;&#xB2E4;. APPEND : INSERT&#xB97C; APPEND &#xBAA8;&#xB4DC;&#xB85C; &#xC218;&#xD589;","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"Oracle","slug":"Database/Oracle","permalink":"http://DevStarSJ.github.io/categories/Database/Oracle/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"Oracle Plan,Trace","slug":"Oracle.read.plan.trace","date":"2016-02-19T17:00:00.000Z","updated":"2017-04-24T00:25:31.000Z","comments":true,"path":"2016/02/20/Oracle.read.plan.trace/","link":"","permalink":"http://DevStarSJ.github.io/2016/02/20/Oracle.read.plan.trace/","excerpt":"","text":"Oracle Plan, Trace &#xC77D;&#xB294; &#xBC95; SQL Tuning&#xC744; &#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C; &#xAC00;&#xC7A5; &#xAE30;&#xBCF8;&#xC73C;&#xB85C; &#xC54C;&#xC544;&#xC57C; &#xD558;&#xB294; &#xAC83;&#xC774; Plan&#xACFC; Trce&#xB97C; &#xC77D;&#xB294; &#xBC29;&#xBC95;&#xC785;&#xB2C8;&#xB2E4;. &#xADF8;&#xB798;&#xC57C; &#xC5B4;&#xB290; &#xACF3;&#xC774; &#xBE44;&#xD6A8;&#xC728;&#xC801;&#xC778;&#xC9C0;&#xB97C; &#xC54C;&#xC544;&#xB0B4;&#xC11C; &#xADF8; &#xBD80;&#xBD84;&#xC744; &#xC911;&#xC2EC;&#xC73C;&#xB85C; Tuning &#xC804;&#xB7B5;&#xC744; &#xC138;&#xC6B8; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC544;&#xB798; &#xB0B4;&#xC6A9;&#xC911; SELECT Tuning&#xC2DC; &#xC911;&#xC694;&#xD558;&#xAC8C; &#xBD10;&#xC57C;&#xD560; &#xC0AC;&#xD56D;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. - &#xC2E4;&#xD589; &#xC21C;&#xC11C; : Plan, Trace &#xB3D9;&#xC77C; - Trace &#xACB0;&#xACFC; : Row Source Operation&#xC758; &#xAC01; &#xC218;&#xCE58;&#xB4E4;&#xC758; &#xC758;&#xBBF8; (rows, cr&#xB9CC; &#xC54C;&#xC544;&#xB3C4; &#xB429;&#xB2C8;&#xB2E4;.) 1. Plan &#xC77D;&#xB294; &#xBC95; Plan&#xC740; SQL&#xC744; &#xC2E4;&#xD589;&#xD558;&#xAE30; &#xC804;&#xC5D0; Optimizer&#xC5D0; &#xC758;&#xD574; &#xC120;&#xD0DD;&#xB41C; &#xCD5C;&#xC801;&#xC758; &#xC2E4;&#xD589; &#xACBD;&#xB85C; &#xBC0F; &#xACC4;&#xC0B0;&#xB418;&#xC5B4;&#xC9C4; &#xC608;&#xC0C1; Cost&#xB97C; &#xBCF4;&#xC5EC;&#xC90D;&#xB2C8;&#xB2E4;. 1234567891011121314151617181920212223242526*************************[Explain Plan Time: 2016/02/21 14:01:15]*************************Execution Plan----------------------------------------------------------- 0 SELECT STATEMENT Optimizer=ALL_ROWS (Cost=5 Card=5 Bytes=325) 1 0 SORT (ORDER BY) (Cost=9 Card=5 Bytes=325) 2 1 UNION-ALL 3 2 COUNT (STOPKEY) 4 3 VIEW (Cost=5 Card=1 Bytes=65) 5 4 SORT (ORDER BY STOPKEY) (Card=1 Bytes=14) 6 5 FILTER 7 6 TABLE ACCESS (FULL) OF &apos;BBS&apos; (TABLE) (Cost=3 Card=10 Bytes=140) 8 2 VIEW (Cost=4 Card=4 Bytes=260) 9 8 SORT (ORDER BY) (Cost=4 Card=4 Bytes=56) 10 9 COUNT (STOPKEY) 11 10 TABLE ACCESS (FULL) OF &apos;BBS&apos; (TABLE) (Cost=3 Card=5 Bytes=70)-----------------------------------------------------------Predicate information (identified by operation id):----------------------------------------------------------- 3 - filter(ROWNUM&lt;=4) 5 - filter(ROWNUM&lt;=4) 6 - filter(NULL IS NOT NULL) 7 - filter(&quot;NUM&quot;&lt;10) 10 - filter(ROWNUM&lt;=4) 11 - filter(&quot;NUM&quot;&gt;10)----------------------------------------------------------- 1.1 &#xC2E4;&#xD589;&#xC21C;&#xC11C; (access path) sibling &#xC0AC;&#xC774;&#xC5D0;&#xC11C;&#xB294; &#xBA3C;&#xC800; &#xB098;&#xC628; &#xAC83;&#xC744; &#xBA3C;&#xC800; &#xCC98;&#xB9AC; child&#xAC00; &#xC788;&#xB294; &#xACBD;&#xC6B0; child&#xBD80;&#xD130; &#xB2E4; &#xCC98;&#xB9AC;&#xD558;&#xACE0; parent &#xCC98;&#xB9AC;&#xD558;&#xAE30; &#xC774; &#xB450;&#xAC00;&#xC9C0;&#xB9CC; &#xAE30;&#xC5B5;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. &#xC704; Plan&#xC744; &#xAE30;&#xC900;&#xC73C;&#xB85C; &#xCC98;&#xB9AC; &#xC21C;&#xC11C;&#xB294; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. (0 ~ 11&#xAE4C;&#xC9C0; &#xC788;&#xB294; &#xC67C;&#xCABD;&#xC758; Index&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;.) 17 -&gt; 6 -&gt; 5 -&gt; 4 -&gt; 3 -&gt; 11 -&gt; 10 -&gt; 9 -&gt; 8 -&gt; 2 -&gt; 1 -&gt; 0 UNION-ALL &#xC544;&#xB798;&#xC5D0; 2&#xAC1C;&#xC758; child(3,8)&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774; &#xB458;&#xC911; &#xC704;&#xC5D0; &#xC788;&#xB294; (3)&#xBD80;&#xD130; &#xCC98;&#xB9AC;&#xB97C; &#xD574;&#xC57C;&#xD558;&#xB294;&#xB370; (3)&#xC740; child&#xAC00; &#xC788;&#xC73C;&#xBBC0;&#xB85C; &#xAC00;&#xC7A5; &#xC548;&#xCABD;&#xBD80;&#xD130; &#xCC98;&#xB9AC;&#xD569;&#xB2C8;&#xB2E4;. (3)&#xC758; child&#xB97C; &#xB2E4; &#xCC98;&#xB9AC;&#xD55C; &#xD6C4;&#xC5D0; &#xC790;&#xC2E0;&#xC758; sibling&#xC778; (8)&#xC744; &#xCC98;&#xB9AC;&#xD574;&#xC57C;&#xD558;&#xB294;&#xB370;, (8)&#xB3C4; child&#xAC00; &#xC788;&#xC73C;&#xBBC0;&#xB85C; &#xC548;&#xCABD;&#xBD80;&#xD130; &#xCC98;&#xB9AC;&#xD569;&#xB2C8;&#xB2E4;. (3, 8)&#xC774; &#xBAA8;&#xB450; &#xCC98;&#xB9AC;&#xB41C; &#xD6C4;&#xC5D0; (2)&#xBD80;&#xD130; &#xCB49; &#xCC98;&#xB9AC;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 1.2 &#xC608;&#xC0C1; &#xC131;&#xB2A5;&#xC9C0;&#xD45C; (Cost-based Optimizer Mode&#xC5D0;&#xC11C;&#xB9CC; &#xD45C;&#xC2DC;) Cost : Cost &#xC608;&#xC0C1; &#xC9C0;&#xC218;. &#xD074;&#xC218;&#xB85D; &#xC131;&#xB2A5;&#xC0C1; (CPU &#xC810;&#xC720;, Disk I/O, &#xC218;&#xD589;&#xC2DC;&#xAC04; &#xB4F1;&#x2026;) &#xC548;&#xC88B;&#xB2E4;&#xB294; &#xC758;&#xBBF8;&#xC785;&#xB2C8;&#xB2E4;. Card : (Computed Cardinality) : CBO&#xC0C1; &#xACC4;&#xC0B0;&#xB41C; &#xC608;&#xC0C1;&#xB418;&#xB294; return row &#xC785;&#xB2C8;&#xB2E4;. Bytes : return row&#xC758; byte&#xC218; &#xC785;&#xB2C8;&#xB2E4;. 1.3 Predicate information &#xAC01; &#xB2E8;&#xACC4;&#xBCC4; filter &#xC870;&#xAC74;&#xC774; &#xC5B4;&#xB5BB;&#xAC8C; &#xC801;&#xC6A9;&#xB418;&#xC5C8;&#xB2E4;&#xB294; &#xC815;&#xBCF4;&#xB97C; &#xBCF4;&#xC5EC;&#xC90D;&#xB2C8;&#xB2E4;. 2. Trace &#xC77D;&#xB294; &#xBC95; Trace&#xB294; &#xC2E4;&#xC81C; &#xC2E4;&#xD589;&#xB41C; &#xACBD;&#xB85C;&#xC640; &#xADF8; &#xC131;&#xB2A5;&#xC0C1; &#xC911;&#xC694; &#xC218;&#xCE58;&#xB4E4;&#xC744; &#xBCF4;&#xC5EC;&#xC90D;&#xB2C8;&#xB2E4;. 123456789101112131415161718192021222324Compile Time : 2015/07/09 13:31:22Trace File : c:\\oracle\\diag\\rdbms\\orcl\\orcl\\trace\\orcl_ora_11048.trcTrace Version : 11.2.0.1.0********************************************************************************SELECT * FROM SCOTT.EMP WHERE DEPTNO = :&quot;SYS_B_0&quot;Call Count CPU Time Elapsed Time Disk Query Current Rows------- ------ -------- ------------ ---------- ---------- ---------- ----------Parse 1 0.000 0.000 0 0 0 0Execute 1 0.000 0.001 0 0 0 0Fetch 1 0.000 0.000 0 3 0 0------- ------ -------- ------------ ---------- ---------- ---------- ----------Total 3 0.000 0.001 0 3 0 0Misses in library cache during parse : 1Optimizer Goal : ALL_ROWSParsing user : SYS (ID=0)Rows Row Source Operation------- ----------------------------------------------------------------------- 0 TABLE ACCESS FULL EMP (cr=3 pr=0 pw=0 time=0 us cost=2 size=190 card=5 2.1 Row Source Operation &#xC77D;&#xB294;&#xBC95; &#xC0C1;&#xB300;&#xC801;&#xC73C;&#xB85C; &#xC911;&#xC694;&#xD55C; Row Source Operation &#xC77D;&#xB294; &#xBC95;&#xBD80;&#xD130; &#xC18C;&#xAC1C;&#xD574;&#xB4DC;&#xB9AC;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. Plan&#xACFC; &#xAC19;&#xC740; &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xC2E4;&#xD589; &#xACBD;&#xB85C;&#xB97C; &#xBCF4;&#xC5EC; &#xC90D;&#xB2C8;&#xB2E4;. &#xC77D;&#xB294; &#xBC95;&#xC740; Plan&#xACFC; &#xAC19;&#xC73C;&#xBA70; &#xAD04;&#xD638; &#xC548;&#xC5D0; &#xB098;&#xC624;&#xB294; &#xC131;&#xB2A5;&#xC9C0;&#xD45C; &#xAC12;&#xC744; &#xD574;&#xC11D;&#xD558;&#xB294; &#xAC83;&#xC774; &#xC911;&#xC694;&#xD569;&#xB2C8;&#xB2E4;. Rows (&#xC67C;&#xCABD;) : return row &#xC218; &#xC785;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xB2E8;&#xACC4;&#xC5D0;&#xC11C; &#xBA87;&#xAC74;&#xC758; row&#xAC00; &#xACB0;&#xACFC;&#xB85C; return &#xB418;&#xC5C8;&#xB294;&#xC9C0; &#xC54C;&#xB824;&#xC90D;&#xB2C8;&#xB2E4;. cr : (Consistent Mode Block Read) &#xCD1D; &#xC77D;&#xC740; block&#xC218; &#xC785;&#xB2C8;&#xB2E4;. &#xC758;&#xBBF8;&#xC0C1;&#xC740; DB Buffer Cache&#xC5D0;&#xC11C; &#xC77D;&#xC740; block&#xC218; &#xC774;&#xC9C0;&#xB9CC;, disk&#xC0C1;&#xC5D0;&#xC11C; &#xC77D;&#xC740; &#xACBD;&#xC6B0;&#xC5D0;&#xB3C4; buffer&#xB85C; &#xBA3C;&#xC800; &#xC62C;&#xB9B0; &#xD6C4;&#xC5D0; &#xC77D;&#xC5B4;&#xC57C; &#xD558;&#xBBC0;&#xB85C; &#xC0AC;&#xC2E4;&#xC0C1; disk + cache&#xC5D0;&#xC11C; &#xC77D;&#xC740; &#xCD1D; &#xC218;&#xB77C;&#xACE0; &#xD574;&#xC11D;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. pr : (Physical Disk Block Read) disk&#xC5D0;&#xC11C; &#xC77D;&#xC740; block&#xC218; &#xC785;&#xB2C8;&#xB2E4;. pw : (Physical Disk Block Write) disk&#xC5D0; &#xC800;&#xC7A5;&#xD55C; block&#xC218; &#xC785;&#xB2C8;&#xB2E4;. time : &#xC18C;&#xC694;&#xC2DC;&#xAC04; (microsecond &#xB2E8;&#xC704;) cost : cost (&#xC131;&#xB2A5;&#xC0C1;) size : data size card : (cardinality) 2.2 Call Table Tunning&#xC2DC; &#xC0AC;&#xC2E4;&#xC0C1; &#xD06C;&#xAC8C; &#xBCFC; &#xD544;&#xC694; &#xC5C6;&#xC2B5;&#xB2C8;&#xB2E4;. Call Parse : Cursor&#xB97C; Parsing&#xD558;&#xACE0; Execution Plan&#xC744; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xB2E8;&#xACC4; Execute : Cursor&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xB294; &#xB2E8;&#xACC4; Fetch : &#xACB0;&#xACFC; Record&#xB97C; Fetch&#xD558;&#xB294; &#xB2E8;&#xACC4; Count : &#xC218;&#xD589; &#xD68C;&#xC218; CPU : CPU &#xC0AC;&#xC6A9;&#xC2DC;&#xAC04; Elapsed : &#xC218;&#xD589;&#xC2DC;&#xAC04; ( CPU time + Wait time ) Disk : Disk&#xC5D0;&#xC11C; &#xC77D;&#xC740; Block&#xC218; Query : Consistent Mode&#xC5D0;&#xC11C; &#xC77D;&#xC740; Block&#xC218; (Query &#xC218;&#xD589; &#xC2DC;&#xC810;&#xC5D0; &#xC77D;&#xC740; &#xC77D;&#xAE30; &#xC804;&#xC6A9; Block) Current : Current Mode&#xC5D0;&#xC11C; &#xC77D;&#xC740; Block&#xC218; (Table&#xC744; &#xC561;&#xC138;&#xC2A4;&#xD558;&#xB294; &#xC2DC;&#xC810;&#xC5D0; &#xC77D;&#xC740; &#xC218;&#xC815;&#xD560; Block) Rows : &#xC77D;&#xAC70;&#xB098; &#xAC31;&#xC2E0;&#xD55C; &#xCC98;&#xB9AC; &#xAC74;&#xC218; &#xCC38;&#xC870; Slide &#xC880; &#xB354; &#xC790;&#xC138;&#xD55C; &#xC0AC;&#xD56D;&#xC744; &#xC54C;&#xACE0; &#xC2F6;&#xC73C;&#xC2DC;&#xBA74; &#xC544;&#xB798; Slide&#xB97C; &#xCC38;&#xACE0;&#xD574;&#xC8FC;&#xC138;&#xC694;. [Oracle Architecture][2015 04-17] Consistent vs Current : http://www.slideshare.net/seokjoonyun9/oracle-architecture2015-0417-consistent-vs-current [2015-06-12] Oracle &#xC131;&#xB2A5; &#xCD5C;&#xC801;&#xD654; &#xBC0F; &#xD488;&#xC9C8; &#xACE0;&#xB3C4;&#xD654; 1 : http://www.slideshare.net/seokjoonyun9/20150612-oracle-1 [2015-07-10-&#xC724;&#xC11D;&#xC900;] Oracle &#xC131;&#xB2A5; &#xAD00;&#xB9AC; &amp; v$sysstat : http://www.slideshare.net/seokjoonyun9/20150710-oracle-vsysstat","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"Oracle","slug":"Database/Oracle","permalink":"http://DevStarSJ.github.io/categories/Database/Oracle/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP etc-1 외워야 할 SQL 문법","slug":"05.01.sql","date":"2016-02-12T17:00:00.000Z","updated":"2017-04-24T00:18:34.000Z","comments":true,"path":"2016/02/13/05.01.sql/","link":"","permalink":"http://DevStarSJ.github.io/2016/02/13/05.01.sql/","excerpt":"","text":"&#xD575;&#xC2EC;&#xC815;&#xB9AC; 5. &#xC678;&#xC6CC;&#xC57C; &#xD560; SQL &#xBB38;&#xBC95; 1. Hirarchical SQL (&#xACC4;&#xCE35;&#xD615; &#xC9C8;&#xC758;) root&#xC5D0;&#xC11C; &#xC2DC;&#xC791;&#xD574;&#xC11C; &#xC8FC;&#xC5B4;&#xC9C4; &#xC870;&#xAC74;&#xC5D0; &#xB9DE;&#xAC8C; &#xC804;&#xAC1C;&#xD558;&#xB294; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; Query 123456SELECT ... FROM table_name WHERE ... START WITH (root condition) CONNECT BY [NOCYCLE] PRIOR (root id) = (child&apos;s root id) [ORDER SIBLINGS BY (columns...)] &#xAC00;&#xC0C1; Coluns LEVEL : root = 1, leaf &#xBC29;&#xD5A5;&#xC73C;&#xB85C; 1&#xC529; &#xC99D;&#xAC00; CONNECT_BY_ISLEAF : leaf&#xBA74; 1 (&#xC790;&#xC2DD;&#xC774; &#xC788;&#xC73C;&#xBA74; 0, &#xC5C6;&#xC73C;&#xBA74; 1) CONNECT_BY_ISCYCLE : leaf&#xAC00; &#xC544;&#xB2C8;&#xBA74;&#xC11C; &#xC870;&#xC0C1; &#xC911;&#xC5D0; &#xC790;&#xAE30;&#xC790;&#xC2E0;&#xC774; &#xC788;&#xC73C;&#xBA74; 1 (cycle&#xC5D0; &#xC18D;&#xD574; &#xC788;&#xC73C;&#xBA74; 1, &#xC544;&#xB2C8;&#xBA74; 0) &#xC804;&#xC6A9; &#xD568;&#xC218; SYS_CONNECT_BY_PATH(column, separator) : root&#xBD80;&#xD130; &#xD604;&#xC7AC;&#xAE4C;&#xC9C0; &#xACBD;&#xB85C; CONNECT_BY_ROOT column : root &#xB370;&#xC774;&#xD130;&#xC758; &#xCEEC;&#xB7FC;&#xC744; &#xD45C;&#xC2DC; Oracle SCOTT.EMP Table&#xC5D0;&#xC11C; MANAGER = NULL&#xBD80;&#xD130; &#xC804;&#xAC1C; 123456789SELECT EMP.*, LPAD(&apos; &apos;,LEVEL - 1) || LEVEL &quot;LEVEL&quot;, CONNECT_BY_ISLEAF ISLEAF, SUBSTR(SYS_CONNECT_BY_PATH(ENAME,&apos;-&apos;),2) PATH, CONNECT_BY_ROOT ENAME ROOT FROM EMP START WITH MGR IS NULL CONNECT BY PRIOR EMPNO = MGR ORDER SIBLINGS BY HIREDATE; &#xBC18;&#xB300;&#xB85C; MILLER(7934)&#xB85C; &#xBD80;&#xD130; &#xC9C1;&#xC18D;&#xC0C1;&#xAD00;&#xB4E4;&#xC744; &#xC804;&#xAC1C; 1234567SELECT EMP.*, LPAD(&apos; &apos;, LEVEL - 1) || LEVEL &quot;LEVEL&quot;, SUBSTR(SYS_CONNECT_BY_PATH(ENAME, &apos;-&apos;),2) NAME_PATH, SUBSTR(SYS_CONNECT_BY_PATH(JOB,&apos;-&apos;),2) JOB_PATH FROM EMP START WITH EMPNO = 7934 CONNECT BY PRIOR MGR = EMPNO 2. ROLLUP (Group Function) &#xAC01; &#xB2E8;&#xACC4;&#xBCC4; &#xC18C;&#xACC4;&#xB97C; &#xACC4;&#xC0B0; 123SELECT ... FROM ... WHERE ...GROUP BY (&#xC18C;&#xACC4;&#xB97C; &#xC801;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xC744; column...), ROLLUP (&#xC18C;&#xACC4; &#xC801;&#xC6A9;&#xD560; columns...)-- ROLLUP &#xC548;&#xC5D0;&#xC11C; column&#xB4E4;&#xC744; &#xAD04;&#xD638;&#xB85C; &#xBB36;&#xC744;&#xC2DC; &#xACC4;&#xCE35;&#xAD6C;&#xC870;&#xAC00; &#xC544;&#xB2CC; &#xAC19;&#xC740; level&#xB85C; &#xC18C;&#xACC4;&#xB97C; &#xAD6C;&#xBD84; GROUPING(column) &#xD568;&#xC218; : &#xD574;&#xB2F9; &#xC18C;&#xACC4;&#xC5D0; &#xC18D;&#xD55C; column&#xC5D0; &#xB300;&#xD574;&#xC11C; 1&#xC744; &#xCD9C;&#xB825; 1234567SELECT DECODE(GROUPING(DNAME), 1,&apos;Total DEPT&apos;, DNAME) DNAME, DECODE(GROUPING(JOB), 1,&apos;Toal JOB&apos;, JOB) JOB, COUNT(*) TOTAL_EMP, SUM(SAL) TOTAL_SAL FROM EMP e, DEPT d WHERE e.DEPTNO = d.DEPTNO GROUP BY ROLLUP (DNAME, JOB);","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 3-5-4 Partition, Batch Job","slug":"04.04.partition","date":"2016-02-10T17:00:00.000Z","updated":"2017-04-24T00:17:31.000Z","comments":true,"path":"2016/02/11/04.04.partition/","link":"","permalink":"http://DevStarSJ.github.io/2016/02/11/04.04.partition/","excerpt":"","text":"3&#xACFC;&#xBAA9; SQL &#xACE0;&#xAE09; &#xD65C;&#xC6A9; &#xBC0F; Tuning 5&#xC7A5; &#xACE0;&#xAE09; SQL Tuning 5.4 Partition &#xD65C;&#xC6A9; Partitioning &#xC774;&#xB780; ? Table, Index&#xB97C; Partition &#xB2E8;&#xC704;&#xB85C; &#xB098;&#xB204;&#xC5B4; &#xC800;&#xC7A5; Partition Key&#xC5D0; &#xB530;&#xB77C; &#xBB3C;&#xB9AC;&#xC801;&#xC73C;&#xB85C; &#xBCC4;&#xB3C4;&#xC758; Segment&#xC5D0; &#xC800;&#xC7A5; Partition &#xC7A5;&#xC810; &#xAD00;&#xB9AC;&#xC801; &#xCE21;&#xBA74; : Partition &#xB2E8;&#xC704; &#xBC31;&#xC5C5;, &#xCD94;&#xAC00;, &#xC0AD;&#xC81C;, &#xBCC0;&#xACBD;&#xC774; &#xD3B8;&#xB9AC; &#xC131;&#xB2A5;&#xC801; &#xCE21;&#xBA74; : Partition &#xB2E8;&#xC704;&#xB85C; Query, DML&#xC774; &#xC218;&#xD589;&#xB418;&#xC5B4;&#xC11C; Transaction &#xACBD;&#xD569; &#xBC0F; &#xBD80;&#xD558; &#xBD84;&#xC0B0; 5.4.1 Partition &#xC720;&#xD615; 1. Range Partition Partition Key &#xAC12;&#xC758; &#xBC94;&#xC704;(Range)&#xB85C; &#xBD84;&#xD560; &#xAC00;&#xC7A5; &#xC77C;&#xBC18;&#xC801;&#xC778; &#xD615;&#xD0DC; e.g.&#xA0;&#xB0A0;&#xC9DC; &#xCE7C;&#xB7FC; &#xAE30;&#xC900;&#xC73C;&#xB85C; &#xD310;&#xB9E4;&#xB370;&#xC774;&#xD130;&#xB97C; &#xC6D4;&#xBCC4;&#xB85C; &#xBD84;&#xD560; 1234567891011CREATE TABLE &#xC8FC;&#xBB38;( ...)PARTITION BY RANGE(&#xC8FC;&#xBB38;&#xC77C;&#xC790;)( PARTITION P2009_Q1 VALUES LESS THAN (&apos;20090401&apos;), PARTITION P2009_Q2 VALUES LESS THAN (&apos;20090701&apos;), ... PARTITION P9999_MX VALUES LESS THAN (MAXVALUE))&apos; 2. Hash Partition Partition Key &#xAC12;&#xC758; Hash &#xD568;&#xC218;&#xB97C; &#xC801;&#xC6A9;&#xD558;&#xC5EC; &#xADF8; &#xAC12;&#xC73C;&#xB85C; Mapping &#xACE0;&#xB974;&#xAC8C; &#xBD84;&#xC0B0;&#xB418;&#xB294; &#xB300;&#xC2E0; &#xAC01; Row&#xC758; &#xC800;&#xC7A5;&#xC704;&#xCE58; &#xC608;&#xCE21;&#xC774; &#xBD88;&#xAC00; &#xBCD1;&#xB82C;&#xCC98;&#xB9AC; &#xC2DC; &#xC131;&#xB2A5;&#xD6A8;&#xACFC; &#xADF9;&#xB300;&#xD654; DML &#xACBD;&#xD569; &#xBD84;&#xC0B0;&#xC5D0; &#xD6A8;&#xACFC;&#xC801; e.g.&#xA0;&#xACE0;&#xAC1D;&#xBC88;&#xD638;, &#xC8FC;&#xBB38;&#xC77C;&#xB828;&#xBC88;&#xD638; 3. List Partition &#xBD88;&#xC5F0;&#xC18D;&#xC801;&#xC778; &#xAC12;&#xC758; &#xBAA9;&#xB85D;&#xC744; &#xAC01; Partition&#xC5D0; &#xC9C0;&#xC815; e.g.&#xA0;&#xD310;&#xB9E4; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC9C0;&#xC5ED;&#xBCC4;&#xB85C; &#xBD84;&#xD560; 4. Composite Partition 2&#xAC1C; &#xC774;&#xC0C1;&#xC758; Partition &#xAD6C;&#xC131; (&#xB2E8;, &#xB9E8; &#xCC98;&#xC74C;&#xC5D0; Hash&#xAC00; &#xC62C; &#xC21C; &#xC5C6;&#xC74C;) Range&#xB098; List Partition&#xC5D0; Range, Hash, List&#xB97C; Sub-partition&#xC73C;&#xB85C; &#xAD6C;&#xC131; e.g.&#xA0;Range + Hash&#xB85C; &#xAD6C;&#xC131; 123456789101112CREATE TABLE &#xC8FC;&#xBB38;( ...)PARTITION BY RANGE(&#xC8FC;&#xBB38;&#xC77C;&#xC790;)SUBPARTITION BY HASH(&#xACE0;&#xAC1D;ID) SUBPARTITIONS 8( PARTITION P2009_Q1 VALUES LESS THAN (&apos;20090401&apos;), PARTITION P2009_Q2 VALUES LESS THAN (&apos;20090701&apos;), ... PARTITION P9999_MX VALUES LESS THAN (MAXVALUE) ); 5.4.2 Partition Pruning Optimizer&#xAC00; SQL&#xC758; &#xB300;&#xC0C1; Table&#xACFC; &#xC870;&#xAC74;&#xC744; &#xBD84;&#xC11D;&#xD558;&#xC5EC; &#xBD88;&#xD544;&#xC694;&#xD55C; Partition&#xC744;&#xC561;&#xC138;&#xC2A4; &#xB300;&#xC0C1;&#xC5D0;&#xC11C; &#xC81C;&#xC678;&#xD558;&#xB294; &#xAE30;&#xB2A5; Static Partition Pruning &#xC561;&#xC138;&#xC2A4;&#xD560; Partition&#xC744; Compile-Time&#xC5D0; &#xBBF8;&#xB9AC; &#xACB0;&#xC815; &#xC0C1;&#xC218; &#xC870;&#xAC74;&#xC73C;&#xB85C; &#xC870;&#xD68C;&#xD560; &#xACBD;&#xC6B0; &#xC791;&#xB3D9; Dynamic Partition Pruning &#xC561;&#xC138;&#xC2A4;&#xD560; Partition&#xC744; Run-Time&#xC5D0; &#xACB0;&#xC815; Bind Variable&#xB85C; &#xC870;&#xD68C;&#xD558;&#xB294; &#xACBD;&#xC6B0; NL Join&#xC2DC; Inner Table&#xC774; Join &#xCE7C;&#xB7FC; &#xAE30;&#xC900;&#xC73C;&#xB85C; Partition &#xB418; &#xC788;&#xB294; &#xACBD;&#xC6B0; 5.4.3 Index Partitioning Local vs Global Local Partition Index Table Partition&#xACFC; 1:1 &#xB300;&#xC751;&#xD558;&#xB3C4;&#xB85D; Index Partitioning Index Partition Key&#xB97C; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xB530;&#xB85C; &#xC9C0;&#xC815;&#xD558;&#xC9C0; &#xC54A;&#xACE0;, DBMS&#xAC00; &#xC790;&#xB3D9;&#xC73C;&#xB85C; &#xAD00;&#xB9AC; Global Partition Index Table Partition&#xACFC;&#xB294; &#xB3C5;&#xB9BD;&#xC801;&#xC73C;&#xB85C; &#xAD6C;&#xC131; Prefixed vs NonPrefixed Prefixed Partition Index : Partition Key Column&#xC774; Index&#xC758; &#xC67C;&#xCABD; &#xC120;&#xB450;&#xC5D0; &#xC704;&#xCE58; NonPrefixed Partition Index : Partition Key Column&#xC774; Index&#xC758; &#xC67C;&#xCABD; &#xC120;&#xB450;&#xC5D0; &#xC788;&#xC9C0; &#xC54A;&#xAC70;&#xB098;, &#xC544;&#xC5D0; &#xC18D;&#xD558;&#xC9C0; &#xC54A;&#xC744; &#xACBD;&#xC6B0; &#xC704; &#xC870;&#xD569;&#xC911; Global NonPrefixed Partition Index&#xB294; Oracle&#xC5D0;&#xC11C; &#xC9C0;&#xC6D0;&#xD558;&#xC9C0; &#xC54A;&#xC74C; Index Partitioning Guide NonPartitioned Index (&#xC77C;&#xBC18; Index) Partition Key Column&#xC774; &#xC870;&#xAC74;&#xC808;&#xC5D0; &#xB204;&#xB77D;&#xB418;&#xBA74; &#xC5EC;&#xB7EC; Index Partition&#xC744; &#xC561;&#xC138;&#xC2A4;&#xD574;&#xC57C; &#xD558;&#xBBC0;&#xB85C; &#xBE44;&#xD6A8;&#xC728;&#xC801; &#xD2B9;&#xD788; OLTP&#xD658;&#xACBD;&#xC5D0;&#xC11C;&#xB294; &#xC131;&#xB2A5;&#xC5D0; &#xBBF8;&#xCE58;&#xB294; &#xC601;&#xD5A5;&#xC774; &#xD06C;&#xBBC0;&#xB85C; NonPartitioned &#xC804;&#xB7B5;&#xC774; &#xC720;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xC74C; NL Join&#xC5D0;&#xC11C; Partition Key&#xC5D0; &#xB300;&#xD55C; &#xB113;&#xC740; &#xBC94;&#xC704;&#xAC80;&#xC0C9; &#xC870;&#xAC74;&#xC744; &#xAC00;&#xC9C0;&#xACE0; Inner Table&#xC5D0; Partitioned Index&#xB85C; &#xC561;&#xC138;&#xC2A4;&#xD558;&#xBA74; &#xBE44;&#xD6A8;&#xC728;&#xC801; -&gt; NonPartitioned Index &#xC0AC;&#xC6A9;&#xC744; &#xACE0;&#xB824; Partition Index&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xBA74; SORT ORDER BY &#xB300;&#xCCB4; &#xD6A8;&#xACFC; &#xC0C1;&#xC2E4; -&gt; Sort &#xC5F0;&#xC0B0;&#xC744; &#xB300;&#xCCB4;&#xD568;&#xC73C;&#xB85C; &#xBD80;&#xBD84;&#xBC94;&#xC704; &#xCC98;&#xB9AC;&#xB97C; &#xD65C;&#xC6A9;&#xD558;&#xACE0;&#xC790; &#xD560; &#xACBD;&#xC6B0; NonPartitioned Index&#xAC00; &#xC720;&#xB9AC;&#xD568; Table Partition &#xC774;&#xB3D9;,&#xC0AD;&#xC81C; &#xB4F1; &#xC791;&#xC5C5;&#xC2DC; unsuable &#xB418;&#xBBC0;&#xB85C; &#xC801;&#xC6A9; &#xC2DC; &#xC8FC;&#xC758; Global Prefixed Index &#xACBD;&#xD569; &#xBD84;&#xC0B0;&#xC5D0; &#xD6A8;&#xACFC;&#xC801; &#xC5EC;&#xB7EC; Local Index Partition&#xC744; &#xC561;&#xC138;&#xC2A4;&#xD558;&#xB294; &#xAC83;&#xC774; &#xBE44;&#xD6A8;&#xC728;&#xC801;&#xC77C; &#xACBD;&#xC6B0; &#xB300;&#xC548;&#xC73C;&#xB85C; &#xD65C;&#xC6A9; Table Partition &#xC774;&#xB3D9;,&#xC0AD;&#xC81C; &#xB4F1; &#xC791;&#xC5C5;&#xC2DC; unsuable &#xB418;&#xBBC0;&#xB85C; &#xC801;&#xC6A9; &#xC2DC; &#xC8FC;&#xC758; Local Prefixed &#xAD00;&#xB9AC;&#xC801; &#xCE21;&#xBA74;&#xC5D0;&#xC11C; &#xC720;&#xC6A9; : Table Partition&#xC5D0; &#xB300;&#xD55C; &#xCD94;&#xAC00;, &#xC0AD;&#xC81C; &#xB4F1;&#xC758; &#xC791;&#xC5C5;&#xC774; &#xBE48;&#xBC88;&#xD560; &#xB54C; &#xC774;&#xB825;&#xC131; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC8FC;&#xB85C; &#xAD00;&#xB9AC;&#xD558;&#xB294; DB &#xD658;&#xACBD;&#xC5D0; &#xD6A8;&#xACFC;&#xC801; Partition Key Column&#xC774; = &#xC870;&#xAC74;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xB420; &#xB54C; &#xC720;&#xC6A9; Partition Key Column&#xC5D0; &#xB300;&#xD55C; &#xAC80;&#xC0C9; &#xC870;&#xAC74;&#xC774; &#xC5C6;&#xC73C;&#xBA74; &#xC815;&#xC0C1;&#xC801; &#xC0AC;&#xC6A9;&#xC774; &#xBD88;&#xAC00; (Index Full Scan&#xC73C;&#xB85C;&#xB294; &#xC120;&#xD0DD;&#xAC00;&#xB2A5;) Partition Key Column&#xC774; &#xBC94;&#xC704;&#xAC80;&#xC0C9; (LIKE, BETWEEN, &#xBD80;&#xB4F1;&#xD638;) &#xC77C; &#xACBD;&#xC6B0; &#xBD88;&#xB9AC; Local NonPrefixed Local Prefixed&#xC640; &#xAC70;&#xC758; &#xAC19;&#xC740; &#xD2B9;&#xC9D5;&#xC774;&#xAE34;&#xD558;&#xB098; &#xBC94;&#xC704;&#xAC80;&#xC0C9;&#xC774; &#xC8FC;&#xB85C; &#xC0AC;&#xC6A9;&#xB420; &#xACBD;&#xC6B0; NonPrefixed&#xAC00; &#xB354; &#xC720;&#xB9AC; (&#xB2E8;, &#xC881;&#xC740; &#xBC94;&#xC704;&#xAC80;&#xC0C9;&#xC774;&#xC5B4;&#xC57C; &#xD568;) 5.5 Batch Program Tuning Batch Program&#xC774;&#xB780; ? User&#xC640;&#xC758; &#xC0C1;&#xD638;&#xC791;&#xC6A9;(Interface)&#xC5C6;&#xC774; &#xB300;&#xB7C9;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; &#xCC98;&#xB9AC;&#xD558;&#xB294; &#xC77C;&#xB828;&#xC758; &#xC791;&#xC5C5;&#xB4E4;&#xC744; &#xBB36;&#xC5B4; &#xC815;&#xAE30;&#xC801;&#xC73C;&#xB85C; &#xBC18;&#xBCF5; &#xC218;&#xD589;&#xD558;&#xAC70;&#xB098; (&#xC815;&#xAE30; &#xBC30;&#xCE58;) &#xC815;&#xD574;&#xC9C4; &#xADDC;&#xCE59;&#xC5D0; &#xB530;&#xB77C; (&#xC774;&#xBCA4;&#xD2B8; &#xBC30;&#xCE58;) &#xC790;&#xB3D9;&#xC73C;&#xB85C; &#xC218;&#xD589; (&#xC218;&#xB3D9;&#xC73C;&#xB85C; On-Demand &#xBC30;&#xCE58;&#xB85C;&#xB3C4; &#xC218;&#xD589;&#xAC00;&#xB2A5;) Batch &#xD658;&#xACBD;&#xC758; &#xBCC0;&#xD654; &#xACFC;&#xAC70; : &#xC77C;, &#xC6D4; &#xB2E8;&#xC704;&#xB85C; &#xC8FC;&#xB85C; &#xC57C;&#xAC04;&#xC5D0; &#xC218;&#xD589;&#xB418;&#xC5C8;&#xC73C;&#xBA70;, Online&#xACFC; Batch&#xAC00; &#xBA85;&#xD655;&#xD558;&#xAC8C; &#xAD6C;&#xBD84;&#xB418;&#xC5B4;&#xC11C; &#xC0AC;&#xC6A9;&#xB418;&#xC5C8;&#xC9C0;&#xB9CC;, &#xD604;&#xC7AC; : &#xC2DC;&#xAC04;, &#xBD84; &#xB2E8;&#xC704;&#xC758; &#xC9E7;&#xC740; &#xC2DC;&#xAC04;&#xC5D0; &#xC218;&#xD589;&#xB418;&#xB294; &#xACBD;&#xC6B0;&#xAC00; &#xB9CE;&#xC73C;&#xBA70; On-Demand Batch&#xB3C4; &#xC81C;&#xD55C;&#xC801;&#xC774;&#xB098;&#xB9C8; &#xD5C8;&#xC6A9;&#xB418;&#xC5B4;&#xC57C; &#xD55C;&#xB2E4;. &#xC131;&#xB2A5;&#xAC1C;&#xC120; &#xBAA9;&#xD45C; &#xC124;&#xC815; &#xC804;&#xCCB4; Batch Program &#xB4E4;&#xC758; &#xCD5C;&#xC885; &#xC218;&#xD589;&#xC2DC;&#xAC04; &#xB2E8;&#xCD95; Batch Window&#xB97C; &#xBCF4;&#xACE0; Batch Program &#xAC04;&#xC758; &#xC120;&#xD6C4; &#xAD00;&#xACC4;&#xB97C; &#xB530;&#xC838;&#xAC00;&#xBA74;&#xC11C; &#xC804;&#xCCB4;&#xC801;&#xC73C;&#xB85C; &#xACE0;&#xB824; System &#xBD80;&#xD558;&#xB3C4; &#xACE0;&#xB824;&#xD574;&#xC57C; &#xD568; &#xBCD1;&#xB82C;&#xB3C4; (DOP : Degree of Parallelism)&#xB97C; 32&#xB85C; &#xD558;&#xC5EC; 5&#xBD84;&#xC5D0; &#xC218;&#xD589;&#xB418;&#xB294;&#xAC83;&#xBCF4;&#xB2E4;&#xB294; &#xBCD1;&#xB82C;&#xCC98;&#xB9AC; &#xC5C6;&#xC774; 10&#xBD84; &#xC18C;&#xC694;&#xB418;&#xB294;&#xAC8C; &#xB354; &#xB098;&#xC744; &#xC218; &#xC788;&#xB2E4;. &#xACBD;&#xD569;&#xC744; &#xCD5C;&#xC18C;&#xD654; CPU &#xC790;&#xC6D0; &#xB300;&#xB7C9; &#xC0AC;&#xC6A9; &#xBC0F; &#xB3D9;&#xC77C;&#xD55C; &#xC790;&#xC6D0;(&#xB370;&#xC774;&#xD130;)&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xB294; Batch Program&#xC744; &#xBD84;&#xC0B0; Batch Program &#xAD6C;&#xD604; Pattern&#xACFC; Tuning &#xBC29;&#xC548; &#xC808;&#xCC28;&#xD615;&#xC73C;&#xB85C; &#xC791;&#xC131;&#xB41C; Program Application Cursor&#xB97C; &#xC5F4;&#xACE0;, Loop &#xB0B4;&#xC5D0;&#xC11C; &#xB2E4;&#xB978; SQL&#xC774;&#xB098; Sub Procedure&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xBA74;&#xC11C; &#xBC18;&#xBCF5;&#xCC98;&#xB9AC; (One SQL &#xBCF4;&#xB2E4;) &#xAD6C;&#xD604;&#xC774; &#xC27D;&#xB2E4;. &#xC544;&#xBB34;&#xB9AC; Tuning&#xC744; &#xC798;&#xD574;&#xB3C4; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC740; &#xCD5C;&#xC801;&#xD654; &#xD55C;&#xACC4;&#xAC00; &#xC788;&#xC74C; &#xBC18;&#xBCF5;&#xC801;&#xC778; DB Call &#xBC1C;&#xC0DD; Random I/O &#xC704;&#xC8FC; &#xB3D9;&#xC77C;&#xD55C; &#xB370;&#xC774;&#xD130; &#xC911;&#xBCF5; &#xC561;&#xC138;&#xC2A4; Tuning Guide &#xBCD1;&#xBAA9;&#xC744; &#xC77C;&#xC73C;&#xD0A4;&#xB294; SQL&#xC744; &#xCC3E;&#xC544; I/O Tuning : Index &#xC7AC;&#xAD6C;&#xC131; &#xBC0F; &#xC561;&#xC138;&#xC2A4; &#xACBD;&#xB85C; &#xCD5C;&#xC801;&#xD654; Program Parallel &#xD65C;&#xC6A9; : SQL&#xC774; &#xC77D;&#xB294; &#xB370;&#xC774;&#xD130; &#xBC94;&#xC704;&#xB97C; &#xB2EC;&#xB9AC;&#xD558;&#xC5EC; &#xC5EC;&#xB7EC; Program&#xC774; &#xB3D9;&#xC2DC;&#xC5D0; &#xC218;&#xD589; Array Processing &#xD65C;&#xC6A9; One SQL&#xB85C; &#xB2E4;&#xC2DC; &#xAD6C;&#xD604;;;; One SQL One SQL&#xB85C; &#xAD6C;&#xD604;&#xD558;&#xAC70;&#xB098;, &#xC9D1;&#xD569;&#xC801;&#xC73C;&#xB85C; &#xC815;&#xC758;&#xB41C; &#xC5EC;&#xB7EC; SQL&#xC744; &#xB2E8;&#xACC4;&#xC801;&#xC73C;&#xB85C; &#xC2E4;&#xD589; &#xAD6C;&#xD604;&#xD558;&#xAE30; &#xC5B4;&#xB835;&#xACE0;, &#xC5C5;&#xBB34;&#xAC00; &#xBCF5;&#xC7A1;&#xD560; &#xACBD;&#xC6B0; &#xC5EC;&#xB7EC; SQL&#xB4E4;&#xC744; &#xD1B5;&#xD569;&#xD588;&#xB2E4;&#xAC00; &#xACB0;&#xACFC;&#xAC00; &#xD2C0;&#xB824;&#xC9C8; &#xC218; &#xC788;&#xC74C; Tuning Guide &#xBCD1;&#xBAA9;&#xC744; &#xC77C;&#xC73C;&#xD0A4;&#xB294; &#xC624;&#xD37C;&#xB808;&#xC774;&#xC158;&#xC744; &#xCC3E;&#xC544; I/O Tuning Index Scan &#xB300;&#xC2E0; Full Table Scan&#xC73C;&#xB85C; NL Join &#xBCF4;&#xB2E4; Hash Join&#xC73C;&#xB85C; &#xC784;&#xC2DC; Table &#xD65C;&#xC6A9; Partition &#xD65C;&#xC6A9; &#xBCD1;&#xB82C;&#xCC98;&#xB9AC; &#xD65C;&#xC6A9; &#xBCD1;&#xB82C; &#xCC98;&#xB9AC; &#xD65C;&#xC6A9; SELECT /*+ full(T) parallel(T, 4) */ ... : T Table&#xC744; Full Scan&#xC73C;&#xB85C; 4&#xAC1C;&#xB85C; &#xBCD1;&#xB82C;&#xCC98;&#xB9AC; SELECT /*+ index_ffs(T t_idx) parallel(T, t_idx, 4) */ ... : T Table&#xC758; t_idx Index&#xB97C; Fast Full Scan&#xC73C;&#xB85C; 4&#xAC1C;&#xB85C; &#xBCD1;&#xB82C;&#xCC98;&#xB9AC; QC (Query Cordinator) &#xBCD1;&#xB82C; SQL&#xBB38;&#xC744; &#xBC1C;&#xD589;&#xD55C; Session &#xBCD1;&#xB82C;&#xB85C; &#xCC98;&#xB9AC;&#xB418;&#xC9C0; &#xC54A;&#xB294; Table&#xC740; QC&#xAC00; &#xC9C1;&#xC811;&#xCC98;&#xB9AC; &#xAC01; &#xBCD1;&#xB82C; Server&#xB85C;&#xBD80;&#xD130;&#xC758; &#xC0B0;&#xCD9C;&#xBB3C;&#xC744; &#xD1B5;&#xD569;&#xD558;&#xB294; &#xC791;&#xC5C5; &#xC218;&#xD589; &#xCD5C;&#xC885; &#xACB0;&#xACFC; &#xC9D1;&#xD569;&#xC744; User&#xC5D0;&#xAC8C; &#xC804;&#xC1A1; Parallel Server Process &#xBCD1;&#xB82C; SQL&#xC744; &#xC2E4;&#xC81C;&#xB85C; &#xC218;&#xD589;&#xD558;&#xB294; &#xAC1C;&#xBCC4; Session Operation Parallelism Intra-Opertarion Parallelism &#xC11C;&#xB85C; &#xBC30;&#xD0C0;&#xC801;&#xC778; &#xBC94;&#xC704;&#xB97C; &#xB3C5;&#xB9BD;&#xC801;&#xC73C;&#xB85C; &#xCC98;&#xB9AC; &#xAC01;&#xAC01;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; Process&#xBCC4;&#xB85C; &#xC77D;&#xB294; &#xC791;&#xC5C5; &#xC804;&#xB2EC;&#xBC1B;&#xC740; &#xB370;&#xC774;&#xD130;&#xB97C; &#xAC01;&#xAC01;&#xC758; Process&#xC5D0;&#xC11C; &#xCC98;&#xB9AC; Inter-Operation Parallelism &#xB2E4;&#xB978; &#xC11C;&#xBC84; &#xC9D1;&#xD569;&#xC73C;&#xB85C; &#xBD84;&#xBC30;&#xD558;&#xAC70;&#xB098; &#xC815;&#xB82C;&#xB41C; &#xACB0;&#xACFC;&#xB97C; QC&#xC5D0;&#xAC8C; &#xC804;&#xC1A1;&#xD558;&#xB294; &#xC791;&#xC5C5;&#xC744; &#xBCD1;&#xB82C;&#xB85C; &#xB3D9;&#xC2DC;&#xC5D0; &#xC9C4;&#xD589; Process&#xAC04;&#xC758; &#xD1B5;&#xC2E0;&#xC774; &#xBC1C;&#xC0DD;","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 3-5-3 DML Tuning","slug":"04.03.dml","date":"2016-02-10T16:00:00.000Z","updated":"2017-04-24T00:16:41.000Z","comments":true,"path":"2016/02/11/04.03.dml/","link":"","permalink":"http://DevStarSJ.github.io/2016/02/11/04.03.dml/","excerpt":"","text":"3&#xACFC;&#xBAA9; SQL &#xACE0;&#xAE09; &#xD65C;&#xC6A9; &#xBC0F; Tuning 5&#xC7A5; &#xACE0;&#xAE09; SQL Tuning 5.3 DML Tuning DML &#xC218;&#xD589;&#xC2DC; Table &#xBCC0;&#xACBD; Index &#xBCC0;&#xACBD; : Update &#xC218;&#xD589;&#xC2DC; Index&#xB294; Delete &amp; Insert &#xC218;&#xD589; Redo, Undo &#xC0DD;&#xC131; 5.3.1 Insert Tuning Direct Path Insert Freelist &#xC870;&#xD68C;&#xC5C6;&#xC774;, Buffer Cache&#xB97C; &#xAC70;&#xCE58;&#xC9C0; &#xC54A;&#xACE0; datafile&#xC5D0; &#xBC14;&#xB85C; &#xC785;&#xB825;&#xD558;&#xB294; &#xBC29;&#xC2DD; INSERT SELECT &#xBB38;&#xC7A5;&#xC5D0; /*+ append */ Hint &#xC0AC;&#xC6A9; Parallel Mode&#xB85C; INSERT direct &#xC635;&#xC158;&#xC744; &#xC9C0;&#xC815;&#xD558;&#xACE0; SQL#Loader(sqlldr)&#xB85C; &#xB370;&#xC774;&#xD130; &#xB85C;&#xB4DC; CTAS (CREATE TABLE &#x2026; AS SELECT) &#xBB38;&#xC7A5;&#xC744; &#xC218;&#xD589; nologging &#xBAA8;&#xB4DC; Insert ALTER TABLE &#xD14C;&#xC774;&#xBE14;&#xBA85; NOLOGGING; Redo Log&#xAE4C;&#xC9C0; &#xCD5C;&#xC18C;&#xD654; (DPI&#xC5D0;&#xC11C;&#xB294; Freelist &#xC870;&#xD68C;X, Buffer Cache X) Direct Path Insert &#xC2DC;&#xC5D0;&#xB9CC; &#xC791;&#xB3D9; &#xB2E8; Exclusive Mode Table Lock&#xC774; &#xAC78;&#xB9AC;&#xBBC0;&#xB85C; &#xB2E4;&#xB978; Transaction&#xC774; &#xD574;&#xB2F9; Table&#xC5D0; DML &#xC218;&#xD589;&#xC744; &#xCC28;&#xB2E8; nologging &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; &#xC785;&#xB825;&#xD55C; &#xB370;&#xC774;&#xD130;&#xB294; &#xC7A5;&#xC560; &#xBC1C;&#xC0DD;&#xC2DC; &#xBCF5;&#xAD6C;&#xAC00; &#xBD88;&#xAC00;&#xB2A5; &#xC785;&#xB825;&#xD6C4; &#xBC14;&#xB85C; Backup&#xC744; &#xD574;&#xC57C; &#xD568; &#xC5B8;&#xC81C;&#xB4E0; &#xC7AC;&#xC0DD; &#xAC00;&#xB2A5;&#xD55C; &#xB370;&#xC774;&#xD130;&#xB77C;&#xBA74; &#xC0C1;&#xAD00;&#xC5C6;&#xC74C; e.g.&#xA0;&#xBC30;&#xCE58; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC5D0;&#xC11C; &#xC911;&#xAC04; &#xB2E8;&#xACC4; &#xC784;&#xC2DC; Table 5.3.2 Update Tuning 1. Truncate &amp; Insert &#xBC29;&#xC2DD; 1UPDATE contract SET status = &apos;9999&apos; WHERE ord_date &lt; _TO_DATE(&apos;20000101&apos;, &apos;yyyymmdd); &#xB300;&#xB7C9;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; UPDATE&#xD558;&#xBA74; &#xC0C1;&#xB2F9;&#xD788; &#xC624;&#xB79C;&#xC2DC;&#xAC04;&#xC774; &#xAC78;&#xB9B0;&#xB2E4;. UPDATE &#xC790;&#xCCB4; &#xC791;&#xC5C5; Index Delete &amp; Insert Datafile&#xC744; Buffer Cache&#xB85C; load&#xD55C; &#xD6C4;&#xC5D0; &#xAC31;&#xC2E0; Redo, Undo &#xC815;&#xBCF4; &#xC0DD;&#xC131; Block&#xC5D0; &#xBE48; &#xACF5;&#xAC04;&#xC774; &#xC5C6;&#xB294; &#xACBD;&#xC6B0; &#xC0C8; &#xBE14;&#xB85D; &#xD560;&#xB2F9; -&gt; Row Migration &#xADF8;&#xB798;&#xC11C; &#xCC28;&#xB77C;&#xB9AC; Table&#xC744; &#xC0C8;&#xB85C; &#xC0DD;&#xC131;&#xD558;&#xC5EC;&#xC11C; &#xC791;&#xC5C5;&#xC744; &#xD55C; &#xD6C4;&#xC5D0; Index&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xAC83;&#xC774; &#xB354; &#xD6A8;&#xC728;&#xC801;&#xC77C; &#xC218; &#xC788;&#xB2E4;. 12345678910111213141516CREATE TABLE tmp_cont AS SELECT * FROM contract; -- &#xC784;&#xC2DC; Table&#xB85C; &#xB370;&#xC774;&#xD130; &#xBCF5;&#xC0AC;ALTER TABLE DROP CONSTRAINT cont_pk; -- INDEX &#xC0AD;&#xC81C;DROP INDEX contract.cont_idx;TRUNCATE TABLE contract; -- Table &#xB370;&#xC774;&#xD130; &#xC0AD;&#xC81C; (No Undo)INSERT INTO contract (ord_no, ord_date, status) -- UPDATE &#xBB38;&#xC5D0; &#xB300;&#xC751;&#xD558;&#xB294; INSERT INTO SELECT &#xBB38;SELECT ord_no, ord_date, CASE WHEN ord_date &gt;= TO_DATE(&apos;20000101&apos;, &apos;yyyymmdd&apos;) then &apos;9999&apos; ELSE status END FROM tmp_cont;ALTER TABLE contract ADD CONSTRAINT cont_pk PRIMARY KEY (ord_no, ord_date); -- INDEX &#xB2E4;&#xC2DC; &#xC0DD;&#xC131;CREATE INDEX cont_idx ON contract(ord_date, status);DROP TABLE tmp_cont; -- &#xC784;&#xC2DC; Table &#xC0AD;&#xC81C; &#xC774; &#xC791;&#xC5C5;&#xC740; UPDATE &#xBFD0;&#xB9CC; &#xC544;&#xB2C8;&#xB77C; DELETE &#xC5D0;&#xB3C4; &#xC801;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. 1DELETE contract WHERE ord_date &lt; TO_DATE(&apos;20010101&apos;,&apos;yyyymmdd&apos;); &#xC704; &#xBB38;&#xC7A5;&#xC744; &#xC218;&#xD589;&#xD558;&#xB294; &#xAC83;&#xBCF4;&#xB2E4; &#xC544;&#xB798;&#xAC00; &#xB354; &#xD6A8;&#xC728;&#xC801;&#xC77C; &#xC218; &#xC788;&#xB2E4;. 1234567891011121314151617CREATE TABLE tmp_cont -- DELETE &#xBB38;&#xC5D0; &#xB300;&#xC751;&#xD558;&#xB294; CTASASSELECT * FROM contract WHERE ord_date &gt;= TO_DATE(&apos;20010101&apos;,&apos;yyyymmdd&apos;);ALTER TABLE DROP CONSTRAINT cont_pk;DROP INDEX contract.cont_pk;TRUNCATE TABLE contract;INSERT INTO contractSELECT * FROM tmp_cont;ALTER TABLE ADD CONSTRAINT cont_pk PRIMARY KEY (ord_no, ord_date);CREATE INDEX cont_idx ON contract(ord_date, status);DROP TABLE tmp_cont; 2. Join&#xC744; &#xB0B4;&#xD3EC;&#xD55C; Update Tuning UPDATE &#xC790;&#xCCB4; &#xC131;&#xB2A5;&#xBCF4;&#xB2E4;&#xB294; Join &#xACFC;&#xC815;&#xC758; &#xBE44;&#xD6A8;&#xC728; &#xB54C;&#xBB38;&#xC5D0; &#xC131;&#xB2A5;&#xC774; &#xB290;&#xB824;&#xC9C0;&#xB294; &#xACBD;&#xC6B0;&#xAC00; &#xB354; &#xB9CE;&#xB2E4;. &#xCD5C;&#xADFC; 1&#xB2EC;&#xC548;&#xC5D0; &#xAC70;&#xB798;&#xB0B4;&#xC5ED;&#xC774; &#xC788;&#xB294; &#xACE0;&#xAC1D;&#xC758; &#xCD5C;&#xC885;&#xAC70;&#xB798;&#xC77C;&#xC2DC;&#xC640; 1&#xB2EC;&#xAC04;&#xC758; &#xAC70;&#xB798;&#xAE08;&#xC561;&#xC744; UPDATE&#xD558;&#xB294; &#xBB38;&#xC7A5;&#xC5D0; &#xB300;&#xD55C; &#xC608;&#xC81C;&#xC774;&#xB2E4;. 12345678UPDATE &#xACE0;&#xAC1D; SET (&#xCD5C;&#xC885;&#xAC70;&#xB798;&#xC77C;&#xC2DC;, &#xCD5C;&#xADFC;&#xAC70;&#xB798;&#xAE08;&#xC561;) = (SELECT MAX(&#xAC70;&#xB798;&#xC77C;&#xC2DC;), SUM(&#xAC70;&#xB798;&#xAE08;&#xC561;) FROM &#xAC70;&#xB798; WHERE &#xACE0;&#xAC1D;&#xBC88;&#xD638; = &#xACE0;&#xAC1D;.&#xACE0;&#xAC1D;&#xBC88;&#xD638; AND &#xAC70;&#xB798;&#xC77C;&#xC2DC; &gt;= TRUNC(ADD_MONTHS(SYSDATE, -1))) WHERE EXISTS (SELECT 1 FROM &#xAC70;&#xB798; WHERE &#xACE0;&#xAC1D;&#xBC88;&#xD638; = &#xACE0;&#xAC1D;.&#xACE0;&#xAC1D;&#xBC88;&#xD638; AND &#xAC70;&#xB798;&#xC77C;&#xC2DC; &gt;= TRUNC(ADD_MONTHS(SYSDATE, -1))); &#xBB38;&#xC81C;&#xC810; &#xAC70;&#xB798; Table&#xC744; 2&#xBC88; &#xCC38;&#xC870;&#xD588;&#xB2E4;. [&#xACE0;&#xAC1D;&#xBC88;&#xD638; + &#xAC70;&#xB798;&#xC77C;&#xC2DC;] Index&#xAC00; &#xD544;&#xC694;&#xD558;&#xB2E4;. Index&#xC5D0; &#xB370;&#xC774;&#xD130;&#xAC00; &#xB9CE;&#xC73C;&#xBA74; Random &#xC561;&#xC138;&#xC2A4;&#xB85C; Join&#xC744; &#xC218;&#xD589;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xBE44;&#xD6A8;&#xC728;&#xC801;&#xC774;&#xB2E4;. &#xD574;&#xACB0;&#xBC29;&#xC548;1 Sub-query&#xC5D0;&#xC11C; unnest &#xC640; hash_sj Hint&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; Semi Join &#xBC29;&#xBC95;&#xC744; &#xC720;&#xB3C4; &#xADF8;&#xB798;&#xB3C4; &#xC5EC;&#xC804;&#xD788; Table&#xC744; 2&#xBC88; &#xCC38;&#xC870;&#xD558;&#xAE34; &#xD574;&#xC57C; &#xD55C;&#xB2E4;. 123456789UPDATE &#xACE0;&#xAC1D; SET (&#xCD5C;&#xC885;&#xAC70;&#xB798;&#xC77C;&#xC2DC;, &#xCD5C;&#xADFC;&#xAC70;&#xB798;&#xAE08;&#xC561;) = (SELECT MAX(&#xAC70;&#xB798;&#xC77C;&#xC2DC;), SUM(&#xAC70;&#xB798;&#xAE08;&#xC561;) FROM &#xAC70;&#xB798; WHERE &#xACE0;&#xAC1D;&#xBC88;&#xD638; = &#xACE0;&#xAC1D;.&#xACE0;&#xAC1D;&#xBC88;&#xD638; AND &#xAC70;&#xB798;&#xC77C;&#xC2DC; &gt;= TRUNC(ADD_MONTHS(SYSDATE, -1))) WHERE EXISTS (SELECT /*+ unnest hash_sj */ 1 FROM &#xAC70;&#xB798; WHERE &#xACE0;&#xAC1D;&#xBC88;&#xD638; = &#xACE0;&#xAC1D;.&#xACE0;&#xAC1D;&#xBC88;&#xD638; AND &#xAC70;&#xB798;&#xC77C;&#xC2DC; &gt;= TRUNC(ADD_MONTH(SYSDATE, -1))); &#xD574;&#xACB0;&#xBC29;&#xC548;2 &#xC218;&#xC815;&#xAC00;&#xB2A5; &#xC870;&#xC778;&#xBDF0; (Updatable Join View) &#xD65C;&#xC6A9; 12345678910UPDATE /*+ bypass_ujvc */ (SELECT c.&#xCD5C;&#xC885;&#xAC70;&#xB798;&#xC77C;&#xC2DC;, c.&#xCD5C;&#xADFC;&#xAC70;&#xB798;&#xAE08;&#xC561;, t.&#xAC70;&#xB798;&#xC77C;&#xC2DC;, t.&#xAC70;&#xB798;&#xAE08;&#xC561; FROM (SELECT &#xACE0;&#xAC1D;&#xBC88;&#xD638;, MAX(&#xAC70;&#xB798;&#xC77C;&#xC2DC;) &#xAC70;&#xB798;&#xC77C;&#xC2DC;, SUM(&#xAC70;&#xB798;&#xAE08;&#xC561;) &#xAC70;&#xB798;&#xAE08;&#xC561; FROM &#xAC70;&#xB798; WHERE &#xAC70;&#xB798;&#xC77C;&#xC2DC; &gt;= TRUNC(ADD_MONTH(SYSDATE, -1)) GROUP BY &#xACE0;&#xAC1D;&#xBC88;&#xD638;) t, &#xACE0;&#xAC1D; c WHERE c.&#xACE0;&#xAC1D;&#xBC88;&#xD638; = t.&#xACE0;&#xAC1D;&#xBC88;&#xD638;) SET &#xCD5C;&#xC885;&#xAC70;&#xB798;&#xC77C;&#xC2DC; = &#xAC70;&#xB798;&#xC77C;&#xC2DC;, &#xCD5C;&#xADFC;&#xAC70;&#xB798;&#xAE08;&#xC561; = &#xAC70;&#xB798;&#xAE08;&#xC561;; Updatable Join View &#xB780; ? Join View : FROM &#xC808;&#xC5D0; 2 &#xAC1C;&#xC758; Table&#xC744; &#xAC00;&#xC9C4; View Unique Index&#xAC00; &#xC788;&#xB294; Table &#xCABD;&#xC758; Unique &#xD55C; &#xACBD;&#xC6B0;&#xC5D0;&#xB9CC; UPDATE&#xAC00; &#xAC00;&#xB2A5; GROUP BY&#xB97C; &#xD1B5;&#xD558;&#xBA74; &#xACB0;&#xACFC;&#xAC00; &#xBB34;&#xC870;&#xAC74; Unique&#xD55C;&#xB370;&#xB3C4; &#xBD88;&#xAD6C;&#xD558;&#xACE0; Unique Index&#xAC00; &#xC5C6;&#xC73C;&#xBA74; &#xC218;&#xC815; &#xBD88;&#xAC00; Oracle MERGE&#xBB38; &#xD65C;&#xC6A9; 12345MERGE INTO &#xB300;&#xC0C1;&#xD14C;&#xC774;&#xBE14; t using &#xC18C;&#xC2A4;&#xD14C;&#xC774;&#xBE14; s ON (t.id = s.id) -- &#xC870;&#xAC74;WHEN MATCHED THEN UPDATE SET t.a = s.a, ...WHEN NOT MATCHED THEN INSERT (t.&#xCEEC;&#xB834;list) VALUES (s.&#xCEEC;&#xB7FC;list); Oracle 9i, MS-SQL 2008&#xBD80;&#xD130; &#xC9C0;&#xC6D0; Oracle 10g&#xBD80;&#xD130;&#xB294; UPDATE, INSERT &#xB97C; &#xC120;&#xD0DD;&#xC801;&#xC73C;&#xB85C; &#xB530;&#xB85C; &#xCC98;&#xB9AC;&#xAC00; &#xAC00;&#xB2A5; MERGE&#xBB38;&#xC73C;&#xB85C; &#xC55E;&#xC5D0;&#xC11C; &#xBCF8; Updatable Join View&#xB97C; &#xB300;&#xCCB4; &#xD560; &#xC218; &#xC788;&#xB2E4;. 123456789MERGE INTO &#xACE0;&#xAC1D; c USING (SELECT &#xACE0;&#xAC1D;&#xBC88;&#xD638;, MAX(&#xAC70;&#xB798;&#xC77C;&#xC2DC;) &#xAC70;&#xB798;&#xC77C;&#xC2DC;, SUM(&#xAC70;&#xB798;&#xAE08;&#xC561;) &#xAC70;&#xB798;&#xAE08;&#xC561; FROM &#xAC70;&#xB798; WHERE &#xAC70;&#xB798;&#xC77C;&#xC2DC; &gt;= TRUNC(ADD_MONTHS(SYSDATE,-1)) GROUP BY &#xACE0;&#xAC1D;&#xBC88;&#xD638;) t ON (c.&#xACE0;&#xAC1D;&#xBC88;&#xD638; = t.&#xACE0;&#xAC1D;&#xBC88;&#xD638;)WHEN MATCHED THEN UPDATE SET c.&#xCD5C;&#xC885;&#xAC70;&#xB798;&#xC77C;&#xC2DC; = t.&#xAC70;&#xB798;&#xC77C;&#xC2DC;, c.&#xCD5C;&#xADFC;&#xAC70;&#xB798;&#xAE08;&#xC561; = t.&#xAC70;&#xB798;&#xAE08;&#xC561;","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 3-5-2 Sort Tuning","slug":"04.02.sort","date":"2016-02-08T16:00:00.000Z","updated":"2017-04-24T00:16:03.000Z","comments":true,"path":"2016/02/09/04.02.sort/","link":"","permalink":"http://DevStarSJ.github.io/2016/02/09/04.02.sort/","excerpt":"","text":"3&#xACFC;&#xBAA9; SQL &#xACE0;&#xAE09; &#xD65C;&#xC6A9; &#xBC0F; Tuning 5&#xC7A5; &#xACE0;&#xAE09; SQL Tuning 5.2 Sort Tuning 5.2.1 Sort Tuning &#xC804;&#xB7B5; Data Modeling &#xCE21;&#xBA74;&#xC5D0;&#xC11C; &#xAC80;&#xD1A0; GROUP BY, DISTINCT, UNION &#xC5F0;&#xC0B0;&#xC774; &#xC790;&#xC8FC; &#xC77C;&#xC5B4;&#xB09C;&#xB2E4;&#xBA74; &#xC815;&#xADDC;&#xD654;&#xB97C; &#xC798;&#xD558;&#xBA74; &#xB9CE;&#xC774; &#xD574;&#xC18C;&#xB41C;&#xB2E4;. M:M &#xAD00;&#xACC4;&#xC5D0;&#xC11C; &#xC870;&#xD68C;&#xD558;&#xB824;&#xBA74; Sort &#xC5F0;&#xC0B0;&#xC774; &#xB9CE;&#xC774; &#xC77C;&#xC5B4;&#xB09C;&#xB2E4;. Sort &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; SQL &#xC791;&#xC131; UNION -&gt; UNION ALL DISTINCT -&gt; EXISTS &#xBD88;&#xD544;&#xC694;&#xD55C; COUNT &#xC5F0;&#xC0B0; &#xC81C;&#xAC70; Index&#xB97C; &#xC774;&#xC6A9;&#xD55C; Sort &#xC5F0;&#xC0B0; &#xB300;&#xCCB4; Sort Order By, Sort Group By, Min, Max &#xB4F1;&#x2026; Sort Area&#xB97C; &#xC801;&#xAC8C; &#xC0AC;&#xC6A9;&#xD558;&#xB3C4;&#xB85D; SQL &#xC791;&#xC131; Sort &#xC644;&#xB8CC; &#xD6C4; &#xB370;&#xC774;&#xD130; &#xAC00;&#xACF5; || &#xC5F0;&#xC0B0;&#xC73C;&#xB85C; &#xBD99;&#xC778; &#xD6C4; Sort&#xD558;&#xC9C0; &#xB9D0;&#xACE0; &#xBA3C;&#xC800; Sort&#xD55C; &#xAC83;&#xC744; Inline View&#xB85C; &#xAD6C;&#xD55C; &#xB4A4; &#xACB0;&#xD569;&#xD558;&#xC790;. Top-N Query Sort &#xC601;&#xC5ED; &#xD06C;&#xAE30; &#xC870;&#xC815; 12ALTER SESSION SET WORKAREA_SIZE_POLICY = MANUAL;ALTER SESSION SET SORT_AREA_SIZE = N; 5.2.2 Memory Sort vs Disk Sort Memory Sort &#xC804;&#xCCB4; &#xC815;&#xB82C; &#xC791;&#xC5C5;&#xC744; &#xD560;&#xB2F9;&#xBC1B;&#xC740; Sort Area (PGA) &#xB0B4;&#xC5D0;&#xC11C; &#xC644;&#xB8CC; Internal Sort, Optimal Sort &#xB77C;&#xACE0;&#xB3C4; &#xD568; Disk Sort &#xD560;&#xB2F9;&#xBC1B;&#xC740; Sort Area &#xC548;&#xC5D0;&#xC11C; &#xC644;&#xB8CC;&#xBABB;&#xD574;&#xC11C; Disk&#xAE4C;&#xC9C0; &#xC0AC;&#xC6A9; External Sort &#xB77C;&#xACE0;&#xB3C4; &#xD568; Onepass Sort : disk&#xC5D0; &#xD55C; &#xBC88;&#xB9CC; &#xAE30;&#xB85D; Multipass Sort : disk&#xC5D0; &#xC5EC;&#xB7EC; &#xBC88; &#xAE30;&#xB85D; 5.2.3 Sort Operation 1. Sort Aggregate &#xC9D1;&#xACC4; &#xD568;&#xC218; &#xC218;&#xD589;. (&#xC2E4;&#xC81C;&#xB85C; Sort&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xC9C4; &#xC54A;&#xC74C;) 12345SELECT SUM(SAL), MAX(SAL), MIN(SAL) FROM EMP;SELECT STATEMENT OPTIMIZER=ALL_ROWS SORT (AGGREGATE) TABLE ACCESS (FULL) OF `EMP` (TABLE) 2. Sort Order By ORDER BY (Index&#xAC00; &#xC788;&#xB294; &#xCEEC;&#xB7FC;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xC74C;) 12345SELECT * FROM EMP ORDER BY SAL;SELECT STATEMENT OPTIMIZER=ALL_ROWS SORT (ORDER BY) TABLE ACCESS (FULL) OF &apos;EMP&apos; (TABLE) 12345SELECT * FROM EMP ORDER BY EMPNO;SELECT STATEMENT OPTIMIZER=ALL_ROWS TABLE ACCESS (BY INDEX ROWID) OF `EMP` (TABLE) INDEX (FULL SCAN) OF &apos;PK_EMP&apos; (INDEX (UNIQUE)) 3. Sort Group By GROUP BY &#xC608;&#xC804;&#xC5D0;&#xB294; GROUP BY&#xAC00; Sort&#xB41C; &#xD615;&#xD0DC;&#xC758; &#xACB0;&#xACFC;&#xB97C; &#xBCF4;&#xC7A5;&#xD588;&#xC9C0;&#xB9CC;, &#xC694;&#xC998;&#xC740; Optimizer&#xAC00; &#xB300;&#xC2E0; Hash&#xB97C; &#xC0AC;&#xC6A9; &#xD560; &#xC218;&#xB3C4; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC21C;&#xC11C;&#xB97C; &#xBCF4;&#xC7A5;&#xD558;&#xC9C0; &#xC54A;&#xC74C; &#xB530;&#xB85C; ORDER BY&#xB97C; &#xBD99;&#xC5EC;&#xC918;&#xC57C;&#xC9C0;&#xB9CC; &#xC21C;&#xC11C;&#xB97C; &#xBCF4;&#xC7A5;&#xD568; 12345SELECT JOB, SUM(SAL) FROM EMP GROUP BY JOB ORDER BY JOB;SELECT STATEMENT OPTIMIZER=ALL_ROWS SORT (GROUP BY) TABLE ACCESS (FULL) OF &apos;EMP&apos; (TABLE) 12345SELECT JOB, SUM(SAL) FROM EMP GROUP BY JOB;SELECT STATEMENT OPTIMIZER=ALL_ROWS HASH (GROUP BY) TABLE ACCESS (FULL) OF &apos;EMP&apos; (TABLE) 4. Sort Unique UNION, DISTINCT &#xC5F0;&#xC0B0;&#xC790; &#xC0AC;&#xC6A9;&#xC2DC; GROUP BY &#xAC19;&#xC774; Sort&#xB97C; &#xBCF4;&#xC7A5;&#xD574;&#xC8FC;&#xC9C0; &#xC54A;&#xC73C;&#xBBC0;&#xB85C; ORDER BY&#xB97C; &#xC548;&#xBD99;&#xC5EC;&#xC8FC;&#xBA74; Optimizer&#xAC00; Hash&#xB85C; &#xC2E4;&#xD589;&#xD560; &#xAC00;&#xB2A5;&#xC131;&#xC774; &#xB192;&#xC74C; 12345SELECT DISTINCT DEPTNO FROM EMP ORDER BY DEPTNO;SELECT STATEMENT OPTIMIZER=ALL_ROWS SORT (UNIQUE) TABLE ACCESS (FULL) OF &apos;EMP&apos; (TABLE) 12345SELECT DISTINCT DEPTNO FROM EMP;SELECT STATEMENT OPTIMIZER=ALL_ROWS HASH (UNIQUE) TABLE ACCESS (FULL) OF `EMP` (TABLE) 12345678910SELECT ENAME FROM EMP WHERE SAL &lt;= 1500 UNIONSELECT DNAME FROM DEPT;SELECT STATEMENT OPTIMIZER=ALL_ROWS SORT (UNIQUE) UNION-ALL TABLE ACCESS (BY INDEX ROWID) OF &apos;EMP&apos; (TABLE) INDEX (RANGE SCAN) OF &apos;EMP_SAL_IDX&apos; (INDEX) TABLE ACCESS (FULL) OF &apos;DEPT&apos; (TABLE) 5. Sort Join Sort Merge Join &#xC218;&#xD589;&#xC2DC; (Index &#xC0AC;&#xC6A9;&#xD560; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xC744; &#xC218; &#xC788;&#xC74C;) 12345678SELECT /*+ ordered use_merge(d) */ * FROM EMP e, DEPT d WHERE e.DEPTNO = d.DEPTNO;SELECT STATEMENT OPTIMIZER=ALL_ROWS MERGE JOIN TABLE ACCESS (BY INDEX ROWID) OF &apos;EMP&apos; (TABLE) INDEX (FULL SCAN) OF &apos;EMP_DEPT_IDX&apos; (INDEX) SORT (JOIN) TABLE ACCESS (FULL) OF &apos;EMP&apos; (TABLE) 6. Window Sort Window &#xD568;&#xC218;&#xC5D0;&#xC11C; ORDER BY &#xC218;&#xD589;&#xC2DC; 12345SELECT EMPNO, ROW_NUMBER() OVER (ORDER BY HIREDATE) FROM EMP;SELETE STATEMENT OPTIMIZER=ALL_ROWS WINDOW (SORT) TABLE ACCESS (FULL) OF &apos;EMP&apos; (TABLE) 5.2.4 Sort&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; SQL &#xC791;&#xC131; 1. UNION&#xC744; UNION ALL&#xB85C; &#xB300;&#xCCB4; UNION : &#xC911;&#xBCF5; &#xC81C;&#xAC70;&#xB97C; &#xC704;&#xD574; SORT UNIQUE &#xC5F0;&#xC0B0;&#xC744; &#xC218;&#xD589;&#xD55C;&#xB2E4;. UNION ALL : &#xC911;&#xBCF5;&#xC744; &#xD5C8;&#xC6A9;&#xD558;&#xACE0; &#xB450; &#xC9D1;&#xD569;&#xC744; &#xB2E8;&#xC21C;&#xD788; &#xACB0;&#xD569;&#xD55C;&#xB2E4;. &#xB450; &#xC5F0;&#xC0B0;&#xC758; &#xACB0;&#xACFC;&#xAC00; &#xAC19;&#xB2E4;&#xB294;&#xAC8C; &#xBCF4;&#xC7A5;&#xB41C;&#xB2E4;&#xBA74; UNION&#xBCF4;&#xB2E4;&#xB294; UNION ALL&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xB294;&#xAC8C; &#xC131;&#xB2A5;&#xC0C1; &#xB3C4;&#xC6C0;&#xC774; &#xB41C;&#xB2E4;. 1234567891011SELECT * FROM EMP WHERE DEPTNO = 10 UNIONSELECT * FROM EMP WHERE DEPTNO = 20;SELETE STATEMENT OPTIMIZER=ALL_ROWS SORT (UNIQUE) UNION-ALL TABLE ACCESS (BY INDEX ROWID) OF &apos;EMP&apos; (TABLE) INDEX (RANGE SCAN) OF &apos;EMP_DEPT_IDX&apos; (INDEX) TABLE ACCESS (BY INDEX ROWID) OF &apos;EMP&apos; (TABLE) INDEX (RANGE SCAN) OF &apos;EMP_DEPT_IDX&apos; (INDEX) 12345678910SELECT * FROM EMP WHERE DEPTNO = 10 UNION ALLSELECT * FROM EMP WHERE DEPTNO = 20;SELETE STATEMENT OPTIMIZER=ALL_ROWS UNION-ALL TABLE ACCESS (BY INDEX ROWID) OF &apos;EMP&apos; (TABLE) INDEX (RANGE SCAN) OF &apos;EMP_DEPT_IDX&apos; (INDEX) TABLE ACCESS (BY INDEX ROWID) OF &apos;EMP&apos; (TABLE) INDEX (RANGE SCAN) OF &apos;EMP_DEPT_IDX&apos; (INDEX) &#xC2E4;&#xD589;&#xACC4;&#xD68D;&#xC744; &#xBCF4;&#xBA74; &#xB098;&#xBA38;&#xC9C4; &#xB611;&#xAC19;&#xC740;&#xB370; SORT (UNIQUE) &#xC5F0;&#xC0B0;&#xC774; &#xBE60;&#xC84C;&#xB2E4;. 2. DISTINCT&#xB97C; EXISTS Sub-query&#xB85C; &#xB300;&#xCCB4; &#xC911;&#xBCF5;&#xC81C;&#xAC70;&#xB97C; &#xC704;&#xD574; DISTINCT&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294;&#xAC8C; &#xB300;&#xD45C;&#xC801;&#xC778;&#xB370;, EXISTS&#xB85C; &#xB300;&#xCCB4;&#xAC00; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. EXISTS&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC870;&#xAC74;&#xC5D0; &#xB9DE;&#xB294; &#xAC83; 1&#xAC1C;&#xB9CC; &#xCC3E;&#xC73C;&#xBA74; &#xBC14;&#xB85C; &#xB2E4;&#xC74C;&#xC73C;&#xB85C; &#xB118;&#xC5B4;&#xAC00;&#xBC84;&#xB9AC;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC131;&#xB2A5;&#xC0C1; &#xC720;&#xB9AC;&#xD558;&#xB2E4;. &#xC774;&#xB7F4; &#xACBD;&#xC6B0; DISTINCT&#xD55C; &#xAC12;&#xB4E4;&#xC774; &#xB4E4;&#xC5B4;&#xAC00; &#xC788;&#xB294; Table (&#xC8FC;&#xB85C; Master Table)&#xC774; &#xD544;&#xC218;&#xC801;&#xC73C;&#xB85C; &#xD544;&#xC694;&#xD558;&#xB2E4;. Master Table&#xC774; &#xC5C6;&#xB294; &#xACBD;&#xC6B0; &#xBCC4;&#xB3C4;&#xB85C; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xB3C4; &#xC788;&#xB2E4;. (e.g.&#xA0;&#xC5F0;&#xC6D4; Table) 12345SELECT DISTINCT DEPTNO FROM EMP ORDER BY DEPTNO;SELECT STATEMENT OPTIMIZER=ALL_ROWS SORT (UNIQUE) TABLE ACCESS (FULL) OF &apos;EMP&apos; (TABLE) 123456SELECT DEPTNO FROM DEPT WHERE EXISTS (SELECT 1 FROM EMP WHERE DEPTNO = DEPT.DEPTNO) ORDER BY DEPTNO;SELECT STATEMENT OPTIMIZER=ALL_ROWS NESTED LOOPS (SEMI) INDEX (FULL SCAN) OF &apos;PK_DEPT&apos; (INDEX (UNIQUE)) INDEX (RANGE SCAN) OF &apos;EMP_DEPT_IDX&apos; (INDEX) Semi Join Subquery unnesting&#xC758; &#xB300;&#xD45C;&#xC801;&#xC778; &#xACB0;&#xACFC; Join &#xC870;&#xAC74;&#xC5D0; &#xB9CC;&#xC871;&#xD558;&#xB294; &#xAC83;&#xC774; &#xD558;&#xB098;&#xB77C;&#xB3C4; &#xC788;&#xC73C;&#xBA74; &#xB2E4;&#xC74C;&#xC73C;&#xB85C; &#xB118;&#xC5B4;&#xAC10; 3. &#xBD88;&#xD544;&#xC694;&#xD55C; COUNT &#xC5F0;&#xC0B0; &#xC81C;&#xAC70; &#xC774;&#xAC74; &#xADFC;&#xBCF8;&#xC801;&#xC73C;&#xB85C; &#xC798;&#xBABB; &#xC9DC;&#xC5EC;&#xC9C4; SQL&#xC5D0;&#xC11C; &#xBE44;&#xB86F;&#xB41C; &#xBB38;&#xC81C;&#xC774;&#xB2E4;. &#xD574;&#xB2F9; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC788;&#xB294;&#xC9C0; &#xADF8; &#xC5EC;&#xBD80;&#xB97C; &#xC54C;&#xAE30; &#xC704;&#xD574;&#xC11C; - COUNT(*)&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; : SORT AGGREGATE &#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xACE0; - ROWNUM &lt;= 1 &#xC870;&#xAC74;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; : COUNT STOPKEY&#xAC00; &#xBC1C;&#xC0DD;&#xD55C;&#xB2E4;.","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 3-5-1 One SQL","slug":"04.01.onesql","date":"2016-02-08T15:00:00.000Z","updated":"2017-04-24T00:15:16.000Z","comments":true,"path":"2016/02/09/04.01.onesql/","link":"","permalink":"http://DevStarSJ.github.io/2016/02/09/04.01.onesql/","excerpt":"","text":"3&#xACFC;&#xBAA9; SQL &#xACE0;&#xAE09; &#xD65C;&#xC6A9; &#xBC0F; Tuning 5&#xC7A5; &#xACE0;&#xAE09; SQL Tuning 5.1 One SQL &#xAD6C;&#xD604; &#xAE30;&#xBC95; 5.1.1 CASE(DECODE) &#xD65C;&#xC6A9; One SQL &#xAE30;&#xBC95;&#xC911; &#xAC00;&#xC7A5; &#xAE30;&#xBCF8;&#xC778; CASE&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; record&#xB85C; &#xB098;&#xB220;&#xC838; &#xC788;&#xB294; &#xB370;&#xC774;&#xD130;&#xB97C; &#xD55C; row&#xC5D0; &#xD45C;&#xD604;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xC774;&#xB2E4;. 12345&#xC6D4;&#xBCC4;&#xB0A9;&#xC785;&#xBC29;&#xBC95;&#xBCC4;&#xC9D1;&#xACC4;# &#xACE0;&#xAC1D;&#xBC88;&#xD638;# &#xB0A9;&#xC785;&#xC6D4;# &#xB0A9;&#xC785;&#xBC29;&#xBC95;&#xCF54;&#xB4DC;* &#xB0A9;&#xC785;&#xAE08;&#xC561; &#xC704; Table&#xC744; &#xC77D;&#xC5B4;&#xC11C; &#xC544;&#xB798; &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xAC00;&#xACF5;&#xD558;&#xACE0;&#xC790; &#xD560; &#xACBD;&#xC6B0; 12345678&#xC6D4;&#xBCC4;&#xC694;&#xAE08;&#xB0A9;&#xBD80;&#xC2E4;&#xC801;# &#xACE0;&#xAC1D;&#xBC88;&#xD638;# &#xB0A9;&#xC785;&#xC6D4;* &#xC9C0;&#xB85C; &#xAE08;&#xC561;* &#xC790;&#xB3D9;&#xC774;&#xCCB4; &#xAE08;&#xC561;* &#xC2E0;&#xC6A9;&#xCE74;&#xB4DC; &#xAE08;&#xC561;* &#xD578;&#xB4DC;&#xD3F0; &#xAE08;&#xC561;* &#xC778;&#xD130;&#xB137; &#xAE08;&#xC561; CASE&#xB97C; &#xC774;&#xC6A9;&#xD55C; One SQL&#xB85C; &#xAD6C;&#xD604;&#xD574;&#xBCF4;&#xC790;. (&#xC774;&#xAC74; &#xB108;&#xBB34; &#xC790;&#xC8FC; &#xB098;&#xC628; &#xBC29;&#xBC95;&#xC774;&#xB77C;&#x2026; &#xBCC4; &#xB2E4;&#xB978; &#xC124;&#xBA85;&#xC774; &#xD544;&#xC694;&#xC5C6;&#xC744;&#xB4EF; &#xD558;&#xB2E4;.) 12345678SELECT &#xACE0;&#xAC1D;&#xBC88;&#xD638;, &#xB0A9;&#xC785;&#xC6D4;, NVL(SUM(DECODE(&#xB0A9;&#xC785;&#xBC29;&#xBC95;&#xCF54;&#xB4DC;, &apos;&#xC9C0;&#xB85C;&apos;, &#xB0A9;&#xC785;&#xAE08;&#xC561;))) &#xC9C0;&#xB85C;, NVL(SUM(DECODE(&#xB0A9;&#xC785;&#xBC29;&#xBC95;&#xCF54;&#xB4DC;, &apos;&#xC790;&#xB3D9;&#xC774;&#xCCB4;&apos;, &#xB0A9;&#xC785;&#xAE08;&#xC561;))) &#xC790;&#xB3D9;&#xC774;&#xCCB4;, NVL(SUM(DECODE(&#xB0A9;&#xC785;&#xBC29;&#xBC95;&#xCF54;&#xB4DC;, &apos;&#xC2E0;&#xC6A9;&#xCE74;&#xB4DC;&apos;, &#xB0A9;&#xC785;&#xAE08;&#xC561;))) &#xC2E0;&#xC6A9;&#xCE74;&#xB4DC;, NVL(SUM(DECODE(&#xB0A9;&#xC785;&#xBC29;&#xBC95;&#xCF54;&#xB4DC;, &apos;&#xC778;&#xD130;&#xB137;&apos;, &#xB0A9;&#xC785;&#xAE08;&#xC561;))) &#xC778;&#xD130;&#xB137;, NVL(SUM(DECODE(&#xB0A9;&#xC785;&#xBC29;&#xBC95;&#xCF54;&#xB4DC;, &apos;&#xD578;&#xB4DC;&#xD3F0;&apos;, &#xB0A9;&#xC785;&#xAE08;&#xC561;))) &#xD578;&#xB4DC;&#xD3F0; FROM &#xC6D4;&#xBCC4;&#xB0A9;&#xC785;&#xBC29;&#xBC95;&#xBCC4;&#xC9D1;&#xACC4; GROUP BY &#xACE0;&#xAC1D;&#xBC88;&#xD638;, &#xB0A9;&#xC785;&#xC6D4;; 5.1.2 Table &#xBCF5;&#xC81C; &#xAE30;&#xBC95; Data&#xB97C; &#xBCF5;&#xC81C;&#xB97C; &#xD574;&#xC11C; &#xD65C;&#xC6A9;&#xC744; &#xD574;&#xC57C;&#xD558;&#xB294; &#xACBD;&#xC6B0; &#xC608;&#xC804;&#xC5D0;&#xB294; &#xBCF5;&#xC81C;&#xC6A9; Table&#xC744; &#xC0DD;&#xC131;&#xD574; &#xB450;&#xACE0; &#xBB3B;&#xC9C0;&#xB9C8; JOIN&#xC744; &#xD65C;&#xC6A9;&#xD558;&#xC5EC; &#xBCF5;&#xC81C;&#xD558;&#xC600;&#xB2E4;. 1234567CREATE TABLE COPY_T (no NUMBER); -- &#xBCF5;&#xC0AC;&#xC6A9; Table&#xC744; &#xC0DD;&#xC131;&#xD574; &#xB450;&#xACE0;,INSERT INTO COPY_TSELECT ROWNUM FROM EMP WHERE ROWNUM &lt;= 10; -- 1 ~ 10&#xC758; &#xAC12;&#xC744; &#xB123;&#xC5B4;&#xB450;&#xACE0; (&#xCD5C;&#xB300; 10&#xBC30;&#xAE4C;&#xC9C0; &#xBCF5;&#xC0AC;)SELECT * FROM EMP, COPY_T -- &#xBCF5;&#xC0AC;&#xD560; &#xAC12;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xBB3B;&#xC9C0;&#xB9C8; JOIN WHERE COPY_T.NO &lt;= 2; -- no&#xC5D0; &#xB300;&#xD55C; &#xC870;&#xAC74;&#xC73C;&#xB85C; &#xBCF5;&#xC0AC;&#xAC74;&#xC218; &#xC785;&#xB825; Oracle 9i&#xBD80;&#xD130;&#xB294; dual Table&#xC5D0; start with &#xC5C6;&#xB294; connect by &#xAD6C;&#xBB38;&#xC73C;&#xB85C; inline view&#xB85C; &#xD65C;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. 123SELECT ROWNUM FROM dual CONNECT BY LEVEL &lt;= 2; -- 2&#xAC1C;&#xC758; &#xAC12;&#xC744; &#xAC00;&#xC9C4; &#xC784;&#xC2DC; &#xBCF5;&#xC81C; TableSELECT * FROM EMP, (SELECT ROWNUM FROM dual CONNECT BY LEVEL &lt;= 2); -- 2&#xAC1C;&#xB85C; &#xBCF5;&#xC81C; &#xADF8;&#xB7FC; &#xBCF5;&#xC0AC;&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; emp Table&#xC744; 1&#xBC88;&#xB9CC; &#xC77D;&#xACE0; JOB&#xBCC4; SAL&#xC758; &#xD569;&#xACC4;&#xC640; &#xC804;&#xCCB4; &#xD569;&#xACC4;&#xB97C; &#xAD6C;&#xD574;&#xBCF4;&#xC790;. 123456SELECT DECODE(no, 1, job, &apos;Total&apos;) as JOB, SUM(sal) as SAL FROM (SELECT job, no, sal FROM EMP, (SELECT ROWNUM no FROM dual CONNECT BY LEVEL &lt;= 2)) GROUP BY no, DECODE(no, 1, job, &apos;Total&apos;) ORDER BY job, no; &#xC0AC;&#xC2E4; &#xC704; &#xBC29;&#xC2DD;&#xB3C4; &#xC61C;&#xB0A0; &#xBC29;&#xC2DD;&#xC774;&#xAE34;&#xD558;&#xB2E4;. &#xADF8;&#xB0E5; ROLLUP&#xC744; &#xC774;&#xC6A9;&#xD558;&#xBA74; &#xC27D;&#xAC8C; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. 12345SELECR DECODE(GROUPING(job), 0, job, &apos;Total&apos;) JOB, SUM(sal) SAL FROM emp GROUP BY ROLLUP(job) ORDER BY job; ROLLUP&#xC744; &#xC774;&#xC6A9;&#xD55C;&#xAC8C; &#xBA54;&#xBAA8;&#xB9AC;&#xB3C4; &#xD6E8;&#xC52C; &#xB354; &#xC801;&#xAC8C; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;. dual&#xC744; &#xC774;&#xC6A9;&#xD55C; &#xBCF5;&#xC81C; Table &#xBC29;&#xC2DD;&#xC758; Execute Plan 123456789SELECT STATEMENT OPTIMIZER=ALL_ROWS SORT (GROUP BY) (Bytes=125) MERGE JOIN (CARTESIAN) (Bytes=350) VIEW COUNT CONNECT BY (WITHOUT FILTERING) FAST DUAL BUFFER (SORT) (Bytes=168) TABLE ACCESS (FULL) OF &apos;EMP&apos; (TABLE) (Bytes=168) &#xC704; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; MERGE JOIN &#xB2E8;&#xACC4;&#xC5D0;&#xC11C; Table &#xD06C;&#xAE30;&#xC758; 2&#xBC30;&#xB9CC;&#xD07C;&#xC758; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;. ROLLUP&#xC744; &#xC774;&#xC6A9;&#xD55C; Execute Plan 1234SELECT STATEMENT OPTIMIZER=ALL_ROWS SORT (ORDER BY) (Bytes=60) SORT (GROUP BY) (Bytes=60) TABLE ACCESS (FULL) OF &apos;EMP&apos; (TABLE) (Bytes=168) 5.1.3 UNION ALL&#xC744; &#xD65C;&#xC6A9;&#xD55C; M:M Join M:M &#xAD00;&#xACC4; Join&#xC774;&#xB098; Full Outer Join&#xC744; &#xB300;&#xC2E0;&#xD574;&#xC11C; UNION ALL&#xC744; &#xD65C;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xB2E4;. 12345&#xBD80;&#xC11C;&#xBCC4;&#xD310;&#xB9E4;&#xACC4;&#xD68D; &#xCC44;&#xB110;&#xBCC4;&#xD310;&#xB9E4;&#xC2E4;&#xC801;# &#xC0C1;&#xD488; # &#xC0C1;&#xD488;# &#xACC4;&#xD68D;&#xC5F0;&#xC6D4; # &#xD310;&#xB9E4;&#xC5F0;&#xC6D4;# &#xD310;&#xB9E4;&#xBD80;&#xC11C; # &#xD310;&#xB9E4;&#xCC44;&#xB110;* &#xACC4;&#xD68D;&#xC218;&#xB7C9; * &#xD310;&#xB9E4;&#xC218;&#xB7C9; &#xC704;&#xC640; &#xAC19;&#xC740; 2&#xAC1C;&#xC758; Table&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xC6D4;&#xBCC4;&#xB85C; &#xAC01; &#xC0C1;&#xD488;&#xC758; &#xACC4;&#xD68D; &#xB300;&#xBE44; &#xD310;&#xB9E4; &#xC2E4;&#xC801;&#xC744; &#xC9D1;&#xACC4;&#xD560;&#xB824;&#xBA74; M:M &#xAD00;&#xACC4;&#xB85C; Join&#xC744; &#xD574;&#xC57C;&#xD55C;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xBB34;&#xD131;&#xB300;&#xB85C; Full Outer Join&#xC744; &#xD558;&#xBA74; &#xC798;&#xBABB;&#xB41C; &#xACB0;&#xACFC;&#xAC00; &#xCD9C;&#xB825;&#xB41C;&#xB2E4;. 123456789SELECT NVL(a.&#xC0C1;&#xD488;, b.&#xC0C1;&#xD488;) &#xC0C1;&#xD488;, NVL(a.&#xACC4;&#xD68D;&#xC5F0;&#xC6D4;, b.&#xD310;&#xB9E4;&#xC5F0;&#xC6D4;) &#xC5F0;&#xC6D4;, SUM(&#xACC4;&#xD68D;&#xC218;&#xB7C9;) &#xACC4;&#xD68D;, SUM(&#xD310;&#xB9E4;&#xC218;&#xB7C9;) &#xD310;&#xB9E4; FROM &#xBD80;&#xC11C;&#xBCC4;&#xD310;&#xB9E4;&#xACC4;&#xD68D; a FULL OUTER JOIN &#xCC44;&#xB110;&#xBCC4;&#xD310;&#xB9E4;&#xC2E4;&#xC801; b ON a.&#xC0C1;&#xD488; = b.&#xC0C1;&#xD488; AND a.&#xACC4;&#xD68D;&#xC5F0;&#xC6D4; = b.&#xD310;&#xB9E4;&#xC5F0;&#xC6D4; GROUP BY NVL(a.&#xC0C1;&#xD488;, b.&#xC0C1;&#xD488;) , NVL(a.&#xACC4;&#xD68D;&#xC5F0;&#xC6D4;, b.&#xD310;&#xB9E4;&#xC5F0;&#xC6D4;) ORDER BY NVL(a.&#xC0C1;&#xD488;, b.&#xC0C1;&#xD488;) , NVL(a.&#xACC4;&#xD68D;&#xC5F0;&#xC6D4;, b.&#xD310;&#xB9E4;&#xC5F0;&#xC6D4;); &#xC5B4;&#xB5A4; &#xC798;&#xBABB;&#xB41C; &#xACB0;&#xACFC;&#xAC00; &#xB098;&#xC624;&#xB294;&#xC9C0; SQL&#xB9CC; &#xBCF4;&#xACE0; &#xD310;&#xB2E8;&#xC774; &#xAC00;&#xB2A5;&#xD55C;&#xAC00; ? &#xC608;&#xB97C; &#xB4E4;&#xC5B4;&#xC11C; &#xC0C1;&#xD488;A, 201501 &#xB300;&#xD574;&#xC11C; &#xACC4;&#xD68D;&#xC5D0;&#xC11C;&#xB294; 1&#xAC1C;&#xC758; record&#xAC00; &#xC788;&#xACE0;, &#xD310;&#xB9E4;&#xC5D0;&#xB294; 2&#xAC1C;&#xC758; record&#xAC00; &#xC788;&#xB2E4;&#xBA74; SUM(&#xACC4;&#xD68D;&#xC218;&#xB7C9;)&#xC5D0;&#xB294; &#xACC4;&#xD68D;&#xC218;&#xB7C9; X 2 &#xAC1C;&#xC758; &#xAC12;&#xC774; &#xB098;&#xC628;&#xB2E4;. &#xB9CC;&#xC57D; Join &#xC870;&#xAC74;&#xC5D0; &#xD310;&#xB9E4;&#xBD80;&#xC11C;, &#xD310;&#xB9E4;&#xCC44;&#xB110;&#xB3C4; &#xD3EC;&#xD568;&#xC2DC;&#xD0A8;&#xB2E4;&#xBA74; &#xC704;&#xC640; &#xAC19;&#xC740; &#xBB38;&#xC81C;&#xC5C6;&#xC774; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xD65C;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xADF8;&#xB7FC; &#xD310;&#xB9E4;&#xBD80;&#xC11C;&#xB97C; Join&#xC870;&#xAC74;&#xC5D0;&#xC11C; &#xBE80; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; &#xB3D9;&#xC77C; &#xB370;&#xC774;&#xD130;&#xAC00; 2&#xBC88; &#xC9D1;&#xACC4;&#xB418;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; &#xD558;&#xB824;&#xBA74; &#xC5B4;&#xB5BB;&#xAC8C; &#xD574;&#xC57C; &#xD560;&#xAE4C; ? &#xADF8;&#xB807;&#xB2E4;&#xBA74; &#xBBF8;&#xB9AC; [&#xC0C1;&#xD488; + &#xC5F0;&#xC6D4;] &#xBCC4;&#xB85C; GROUP BY &#xD55C; &#xACB0;&#xACFC;&#xB4E4;&#xB85C; Full Outer Join&#xC744; &#xD558;&#xBA74; &#xB41C;&#xB2E4;. 12345678910111213SELECT NVL(a.&#xC0C1;&#xD488;, b.&#xC0C1;&#xD488;) &#xC0C1;&#xD488;, NVL(a.&#xC5F0;&#xC6D4;, b.&#xC5F0;&#xC6D4;) &#xC5F0;&#xC6D4;, SUM(&#xACC4;&#xD68D;) &#xACC4;&#xD68D;, SUM(&#xD310;&#xB9E4;) &#xD310;&#xB9E4; FROM (SELECT &#xC0C1;&#xD488;, &#xACC4;&#xD68D;&#xC5F0;&#xC6D4; &#xC5F0;&#xC6D4;, SUM(&#xACC4;&#xD68D;&#xC218;&#xB7C9;) &#xACC4;&#xD68D; FROM &#xBD80;&#xC11C;&#xBCC4;&#xD310;&#xB9E4;&#xACC4;&#xD68D; GROUP BY &#xC0C1;&#xD488;, &#xACC4;&#xD68D;&#xC5F0;&#xC6D4;) a FULL OUTER JOIN (SELECT &#xC0C1;&#xD488;, &#xD310;&#xB9E4;&#xC5F0;&#xC6D4; &#xC5F0;&#xC6D4;, SUM(&#xD310;&#xB9E4;&#xC218;&#xB7C9;) &#xD310;&#xB9E4; FROM &#xCC44;&#xB110;&#xBCC4;&#xD310;&#xB9E4;&#xC2E4;&#xC801; GROUP BY &#xC0C1;&#xD488;, &#xD310;&#xB9E4;&#xC5F0;&#xC6D4;) b ON a.&#xC0C1;&#xD488; = b.&#xC0C1;&#xD488; AND a.&#xC5F0;&#xC6D4; = b.&#xC5F0;&#xC6D4; GROUP BY NVL(a.&#xC0C1;&#xD488;, b.&#xC0C1;&#xD488;), NVL(a.&#xC5F0;&#xC6D4;, b.&#xC5F0;&#xC6D4;) ORDER BY NVL(a.&#xC0C1;&#xD488;, b.&#xC0C1;&#xD488;), NVL(a.&#xC5F0;&#xC6D4;, b.&#xC5F0;&#xC6D4;); &#xC6D0;&#xD558;&#xB294;&#xB300;&#xB85C; &#xCD9C;&#xB825;&#xB41C;&#xB2E4;. &#xCC45;&#xC5D0;&#xB294; Execute Plan&#xC774; &#xBE44;&#xD6A8;&#xC728;&#xC801;&#xC774;&#xB77C;&#xACE0; &#xB098;&#xC654;&#xB2E4;&#xB294;&#xB370;, Oracle 11g&#xC5D0;&#xC11C;&#xB294; &#xBCC4;&#xB85C; &#xBE44;&#xD6A8;&#xC728;&#xC801;&#xC774;&#xC9C0; &#xC54A;&#xC558;&#xB2E4;. 12345678910SELECT STATEMENT OPTIMZER=ALL_ROWS SORT (GROUP BY) VIEW OF &apos;&#xC784;&#xC2DC;&apos; (VIEW) HASH JOIN (FULL OUTER) VIEW HASH TABLE ACCESS (FULL) OF &apos;&#xCC44;&#xB110;&#xBCC4;&#xD310;&#xB9E4;&#xC2E4;&#xC801;&apos; (TABLE) VIEW HASH TABLE ACCESS (FULL) OF &apos;&#xBD80;&#xC11C;&#xBCC4;&#xD310;&#xB9E4;&#xACC4;&#xD68D;&apos; (TABLE) &#xC804;&#xD615;&#xC801;&#xC778; Hash Join&#xC758; Execute Plan&#xC774;&#xB2E4;. &#xC704;&#xC640; &#xAC19;&#xC740; SQL&#xBB38; &#xBCF4;&#xB2E4;&#xB294; UNION ALL&#xC77C; &#xC774;&#xC6A9;&#xD558;&#xBA74; &#xB354; &#xAC04;&#xB2E8;&#xD788; &#xAD6C;&#xD604;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. 12345678SELECT &#xC0C1;&#xD488;, &#xC5F0;&#xC6D4;, SUM(&#xACC4;&#xD68D;) &#xACC4;&#xD68D;, SUM(&#xD310;&#xB9E4;) &#xD310;&#xB9E4; FROM (SELECT &#xC0C1;&#xD488;, &#xACC4;&#xD68D;&#xC5F0;&#xC6D4; &#xC5F0;&#xC6D4;, SUM(&#xACC4;&#xD68D;&#xC218;&#xB7C9;) &#xACC4;&#xD68D;, NULL &#xD310;&#xB9E4; FROM &#xBD80;&#xC11C;&#xBCC4;&#xD310;&#xB9E4;&#xACC4;&#xD68D; GROUP BY &#xC0C1;&#xD488;, &#xACC4;&#xD68D;&#xC5F0;&#xC6D4; UNION ALL SELECT &#xC0C1;&#xD488;, &#xD310;&#xB9E4;&#xC5F0;&#xC6D4;, NULL, SUM(&#xD310;&#xB9E4;&#xC218;&#xB7C9;) FROM &#xCC44;&#xB110;&#xBCC4;&#xD310;&#xB9E4;&#xC2E4;&#xC801; GROUP BY &#xC0C1;&#xD488;, &#xD310;&#xB9E4;&#xC5F0;&#xC6D4;) GROUP BY &#xC0C1;&#xD488;, &#xC5F0;&#xC6D4; ORDER BY &#xC0C1;&#xD488;, &#xC5F0;&#xC6D4;; &#xC2E4;&#xD589;&#xACC4;&#xD68D;&#xB3C4; &#xBCF4;&#xBA74; Hash Join&#xC774; &#xC544;&#xB2CC; UNION ALL&#xB85C; &#xBC14;&#xB00C;&#xC5C8;&#xB2E4;. 12345678SELECT STATEMENT OPTIMIZER=ALL_ROWS SORT (GROUP BY) VIEW UNION-ALL HASH (GROUP BY) TABLE ACCESS (FULL) OF &apos;&#xBD80;&#xC11C;&#xBCC4;&#xD310;&#xB9E4;&#xACC4;&#xD68D;&apos; (TABLE) HASH (GROUP BY) TABLE ACCESS (FULL) OF &apos;&#xCC44;&#xB110;&#xBCC4;&#xD310;&#xB9E4;&#xC2E4;&#xC801;&apos; (TABLE) 5.1.4 Paging &#xCC98;&#xB9AC; Webpage&#xC5D0;&#xC11C; &#xAC8C;&#xC2DC;&#xD310;&#xC744; &#xBCF4;&#xC5EC;&#xC904; &#xACBD;&#xC6B0; &#xD55C;&#xBC88;&#xC5D0; &#xBAA8;&#xB4E0; &#xBAA9;&#xB85D;&#xC744; &#xB2E4; &#xBCF4;&#xC5EC;&#xC8FC;&#xC9C0;&#xC54A;&#xACE0;, Page &#xB2E8;&#xC704;&#xB85C; &#xB04A;&#xC5B4;&#xC11C; &#xBAA9;&#xB85D;&#xC744; &#xBCF4;&#xC5EC;&#xC900;&#xB2E4;. &#xC774;&#xB7F4; &#xACBD;&#xC6B0; Paging &#xCC98;&#xB9AC;&#xB97C; &#xD574;&#xC8FC;&#xC9C0; &#xC54A;&#xACE0;, &#xBB34;&#xC870;&#xAC74;&#xC801;&#xC73C;&#xB85C; &#xC77D;&#xC740; &#xB2E4;&#xC74C; FETCH&#xB85C; &#xB118;&#xAE30;&#xB514;&#xAC00; &#xD544;&#xC694;&#xD55C; &#xB9CC;&#xD07C;&#xB9CC; &#xBCF4;&#xC5EC;&#xC8FC;&#xACE0; &#xB05D;&#xB0B4;&#xB294; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xAD6C;&#xD604;&#xD588;&#xB2E4;&#xAC00;&#xB294; DB&#xC5D0; &#xC5C4;&#xCCAD;&#xB09C; &#xBD80;&#xD558;&#xAC00; &#xAC78;&#xB9B0;&#xB2E4;. 1234567BBS# Catalog# num* RegDate* Title* Description* Writer &#xC704;&#xC640; &#xAC19;&#xC774; &#xAC8C;&#xC2DC;&#xD310;&#xC744; &#xAD00;&#xB9AC;&#xD558;&#xB294; Table&#xC774; &#xC788;&#xB294; &#xACBD;&#xC6B0; Paging &#xCC98;&#xB9AC;&#xB294; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; &#xD558;&#xBA74; &#xB41C;&#xB2E4;. 12345678910SELECT * FROM (SELECT ROWNUM no, num, title, COUNT(*) OVER () CNT -- #1 FROM (SELECT num, title FROM bbs WHERE RegDate &gt;= :dt AND Catalog = :cat ORDER BY num DESC) WHERE ROWNUM &lt;= :page * :pageSize + 1) -- #2 WHERE no BETWEEN (:page - 1) * :pagesize + 1 AND :pageSize * :page; -- #3 1234567SELECT STATEMENT Optimizer=ALL_ROWS VIEW WINDOW (BUFFER) COUNT (STOPKEY) VIEW TABLE ACCESS (BY INDEX ROWID) OF &apos;BBS&apos; (TABLE) INDEX (RANGE SCAN) OF &apos;BBS_PK&apos; (INDEX (UNIQUE)) 1 : &#xB2E4;&#xC74C; page&#xC5D0; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC788;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD560; &#xC6A9;&#xB3C4;&#xC774;&#xB2E4;. &#xAC00;&#xC7A5; &#xC548;&#xCABD; Inline View&#xC758; record &#xC218;&#xAC00; return &#xB41C;&#xB2E4;. &#xC774; &#xAC12;&#xC744; no&#xAC12;&#xACFC; &#xBE44;&#xAD50;&#xD574;&#xC11C; &#xB354; &#xD06C;&#xB2E4;&#xBA74; &#xB2E4;&#xC74C; page&#xC5D0; &#xCD9C;&#xB825;&#xD560; &#xAC12;&#xC774; &#xC788;&#xB2E4;&#xACE0; &#xD310;&#xB2E8; &#xD560; &#xC218; &#xC788;&#xB2E4;. 2 : List&#xC758; &#xCCAB; page &#xBD80;&#xD130; &#xD604;&#xC7AC; page&#xAE4C;&#xC9C0;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; &#xCD9C;&#xB825;&#xD55C;&#xB2E4;. &#xC0AC;&#xC2E4; &#xBE44;&#xD6A8;&#xC728;&#xC801;&#xC774;&#xAE34; &#xD558;&#xB2E4;. (index + first_rows(n)&#xC744; &#xD65C;&#xC6A9;&#xD574;&#xC11C; &#xBD80;&#xBD84;&#xBC94;&#xC704; &#xCC98;&#xB9AC;&#xD574;&#xC57C; &#xD55C;&#xB2E4;.) 3 : &#xD604;&#xC7AC; page&#xC5D0; &#xBCF4;&#xC5EC;&#xC904; &#xB0B4;&#xC6A9;&#xB9CC; &#xAC78;&#xB7EC;&#xB0B8;&#xB2E4;. &#xC131;&#xB2A5;&#xACFC; I/O&#xD6A8;&#xC728;&#xC744; &#xC704;&#xD574;&#xC11C;&#xB294; num&#xC758; index&#xAC00; &#xD544;&#xC694;&#xD558;&#xB2E4;. &#xADF8;&#xB7EC;&#xBA74; sort &#xC791;&#xC5C5;&#xC744; &#xC218;&#xD589;&#xD558;&#xC9C0; &#xC54A;&#xC544;&#xB3C4; &#xB418;&#xBA70;, first_rows(N) Hint&#xB97C; &#xD65C;&#xC6A9;&#xD574;&#xC11C; &#xBD80;&#xBD84;&#xBC94;&#xC704; &#xCC98;&#xB9AC;&#xB97C; &#xC720;&#xB3C4;&#xD560;&#xC218;&#xB3C4; &#xC788;&#xB2E4;. &#xC704; &#xC608;&#xC81C;&#xB294; 1 page&#xB9CC; &#xBCFC;&#xB54C;&#xB294; &#xAD1C;&#xCC2E;&#xC740;&#xB370;, &#xB2E4;&#xC74C; page &#xC870;&#xD68C;&#xB97C; &#xC790;&#xC8FC; &#xD560; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xBE44;&#xD6A8;&#xC728;&#xC801;&#xC774;&#xB2E4;. &#xB9E4;&#xBC88; &#xBCF4;&#xC5EC;&#xC904; &#xD544;&#xC694;&#xAC00; &#xC5C6;&#xB294; &#xC55E; page&#xB4E4;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; &#xB2E4; &#xC77D;&#xC5B4;&#xC640;&#xC57C; &#xD55C;&#xB2E4;. &#xB2E4;&#xC74C; page &#xBC84;&#xD2BC;&#xC744; &#xB20C;&#xB800;&#xC744;&#xB54C;&#xC758; SQL&#xBB38;&#xC740; &#xAC04;&#xB2E8;&#xD788; &#xAD6C;&#xD604;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. 123456SELECT num, title FROM bbs WHERE Catalog = :cat AND num &lt; :no -- &#xD604;&#xC7AC; page&#xC758; &#xB9C8;&#xC9C0;&#xB9C9; num&#xAC12; AND rownum &lt;= :pageSize ORDER BY num DESC; &#xC704; SQL&#xC774; &#xB9DE;&#xAC8C; &#xBCF4;&#xC77C;&#xC218;&#xB3C4; &#xC788;&#xB2E4;. &#xB354;&#xAD70;&#xB2E4;&#xAC00; &#xC77D;&#xC740; &#xB370;&#xC774;&#xD130;&#xB3C4; &#xB531; &#xD55C; page&#xC5D0; &#xBCF4;&#xC5EC;&#xC904; &#xB9CC;&#xD07C;&#xB9CC; &#xC77D;&#xC5C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC;, Index&#xAC00; &#xC5B4;&#xB5BB;&#xAC8C; &#xC124;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xB0D0;&#xC5D0; &#xB530;&#xB77C; &#xB2E4;&#xB978; &#xAC12;&#xC774; &#xB098;&#xC62C; &#xC218; &#xC788;&#xB2E4;. &#xC774; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC131;&#xB2A5;&#xBCF4;&#xB2E4;&#xB294; &#xC5B4;&#xB5A4; &#xC0C1;&#xD669;&#xC5D0;&#xC11C;&#xB3C4; &#xC815;&#xD655;&#xD55C; &#xAC12;&#xC774; &#xB098;&#xC624;&#xB294;&#xAC8C; &#xB354; &#xC911;&#xC694;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; Inline View&#xB85C; &#xCC98;&#xB9AC;&#xB97C; &#xD574;&#xC8FC;&#xC5B4;&#xC57C; &#xC548;&#xC804;&#xD558;&#xB2E4;. 1234567SELECT * FROM (SELECT num, title FROM bbs WHERE Catalog = :cat AND num &lt; :no -- &#xD604;&#xC7AC; page&#xC758; &#xB9C8;&#xC9C0;&#xB9C9; num&#xAC12; ORDER BY num DESC) WHERE rownum &lt;= :pageSize 12345SELECT STATEMENT Optimzer=ALL_ROWS COUNT (STOPKEY) VIEW TABLE ACCESS (BY INDEX ROWID) OF &apos;BBS&apos; (TABLE) INDEX (RANGE SCAN DESCENDING) OF &apos;BBS_PK&apos; (INDEX (UNIQUE)) &#xADF8;&#xB7FC; &#xC774;&#xC804; page&#xB294; ??? 12345678SELECT * FROM (SELECT num, title FROM bbs WHERE Catalog = :cat AND num &gt; :no -- &#xD604;&#xC7AC; page&#xC758; &#xCCAB;&#xBC88;&#xC9F8; num&#xAC12; AND rownum &lt;= :pageSize ORDER BY num) ORDER BY num DESC; &#xC774; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; rownum &#xBE44;&#xAD50;&#xB97C; Inline View &#xC548;&#xC73C;&#xB85C; &#xB123;&#xC5B4;&#xC11C; &#xC77D;&#xB294; &#xB370;&#xC774;&#xD130; &#xC218;&#xB97C; &#xC904;&#xC600;&#xB2E4;. &#xC774;&#xAC74; index &#xAD6C;&#xC131;&#xACFC; &#xD654;&#xBA74;&#xC5D0; &#xBCF4;&#xC5EC;&#xC8FC;&#xB294; data&#xC758; &#xC21C;&#xC11C;&#xB97C; &#xC0DD;&#xAC01;&#xD574;&#xC11C; &#xB2E4;&#xC74C; page, &#xC774;&#xC804; page &#xB458; &#xC911; &#xD558;&#xB098;&#xB294; &#xC548;&#xC5D0; &#xB123;&#xB294;&#xAC8C; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xB2E4;&#xC74C; page&#xC758; SQL&#xBB38; &#xAC19;&#xC774; &#xBC16;&#xC73C;&#xB85C; &#xBE7C;&#xB3C4; &#xACB0;&#xACFC;&#xB294; &#xB611;&#xAC19;&#xB2E4;. &#xADF8;&#xB7FC; &#xB2E4;&#xC74C; page &#xC640; &#xC774;&#xC804; page&#xB97C; &#xD558;&#xB098;&#xC758; SQL&#xBB38;&#xC73C;&#xB85C; &#xBB36;&#xC744;&#xC21C; &#xC5C6;&#xC744;&#xAE4C; ? UNION ALL&#xC744; &#xC774;&#xC6A9;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. &#xC5B4;&#xB290; &#xBC84;&#xD2BC;&#xC744; &#xB20C;&#xB800;&#xB294;&#xC9C0;&#xC5D0; &#xB300;&#xD55C; &#xC870;&#xAC74;&#xB9CC; &#xCD94;&#xAC00;&#xB97C; &#xD574;&#xC8FC;&#xBA74; &#xB41C;&#xB2E4;. &#xB9CC;&#xC57D; &#xB2E4;&#xC74C; page&#xB97C; &#xB20C;&#xB800;&#xC744;&#xB54C; &#x2019;N&#x2019;&#xC744; &#xC804;&#xB2EC;&#xD558;&#xACE0;, &#xC774;&#xC804; page&#xB97C; &#xB20C;&#xB800;&#xC744;&#xB54C; &#x2019;P&#x2019;&#xB97C; &#xC804;&#xB2EC;&#xD558;&#xB2E4;&#xACE0; &#xD558;&#xBA74; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; &#xC791;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. 123456789101112131415161718SELECT num, title FROM (SELECT num, title FROM bbs WHERE &apos;N&apos; = :btn AND Catalog = :cat AND num &lt; :no ORDER BY num DESC) WHERE rownum &lt;= :pageSize UNION ALL SELECT num, title FROM (SELECT num, title FROM bbs WHERE &apos;P&apos; = :btn AND Catalog = :cat AND num &gt; :no AND rownum &lt;= :pageSize ORDER BY num) ORDER BY num DESC; &#xC5BC;&#xD54F; &#xC0DD;&#xAC01;&#xD558;&#xBA74; &#xC544;&#xB798;,&#xC704;&#xC758; Inline View&#xB97C; UNION ALL&#xB85C; &#xD558;&#xACE0; &#xAC89;&#xC5D0; SELECT&#xB85C; &#xC50C;&#xC6B0;&#xB294;&#xAC8C; &#xAC00;&#xB2A5;&#xD560;&#xAC83; &#xAC19;&#xC9C0;&#xB9CC;, &#xC548;&#xB41C;&#xB2E4;. &#xAC89;&#xC758; SELECT&#xAE4C;&#xC9C0; &#xD574;&#xC57C; &#xC6D0;&#xD558;&#xB294; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC21C;&#xC11C;&#xB798;&#xB3C4; &#xCD9C;&#xB825;&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC774;&#xB2E4;. 5.1.5 Window &#xD568;&#xC218; &#xD65C;&#xC6A9; &#xC67C;&#xCABD; &#xADF8;&#xB7FC;&#xACFC; &#xAC19;&#xC774; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xB294; Table&#xC5D0;&#xC11C; &#xC624;&#xB978;&#xCABD;&#xACFC; &#xAC19;&#xC740; &#xD615;&#xD0DC;&#xB85C; &#xCD9C;&#xB825;&#xD558;&#xACE0; &#xC2F6;&#xC744; &#xB54C; Query&#xB97C; &#xC5B4;&#xB5BB;&#xAC8C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC57C; &#xD560;&#xAE4C; ? &#xBA3C;&#xC800; STATUS &#xAC12;&#xC774; NULL&#xC774;&#xBA74; &#xC790;&#xC2E0;&#xBCF4;&#xB2E4; &#xC774;&#xC804; &#xAC12;&#xC911;&#xC5D0; NULL&#xC774; &#xC544;&#xB2CC; &#xCD5C;&#xADFC;&#xAC12;&#xC744; &#xCC3E;&#xC544;&#xC57C; &#xD558;&#xB294;&#xB370;&#x2026; (&#xC774; &#xBD80;&#xBD84;&#xC5D0;&#xC11C; Sub-query&#xB85C; &#xD55C;&#xACB9;) &#xADF8;&#xB7EC;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; STATUS&#xAC00; NULL&#xC774; &#xC544;&#xB2CC; &#xCD5C;&#xADFC;&#xAC12;&#xC758; SN&#xC744; &#xAD6C;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. (&#xC774; &#xBD80;&#xBD84;&#xC5D0;&#xC11C; &#xB2E4;&#xC2DC; Sub-query) &#xC989; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC740; Query&#xB97C; &#xC791;&#xC131;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. 123456789SELECT a.SN, NVL(a.STATUS, (SELECT b.STATUS FROM EQ_MES b WHERE b.SN = (SELECT MAX(SN) FROM EQ_MES c WHERE c.SN &lt; a.SN AND c.STATUS IS NOT NULL))) STATUS, a.VALUE FROM EQ_MES a; SN&#xC5D0; PK&#xAC00; &#xC124;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xB2E4;&#xB294; &#xAC00;&#xC815;&#xD558;&#xC5D0;&#xC11C; &#xC0DD;&#xAC01;&#xD574;&#xBCF4;&#xBA74;, 1. &#xAC00;&#xC7A5; &#xC548;&#xCABD;&#xC758; Sub-query&#xC5D0;&#xC11C; MAX(SN)&#xC744; &#xAD6C;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C; INDEX RANGE SCAN 2. &#xD574;&#xB2F9; SN&#xAC12;&#xC73C;&#xB85C; b.STATUS&#xAC12;&#xC744; &#xAD6C;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C; INDEX UNIQUE SCAN 3. &#xC704; 1,2 &#xACFC;&#xC815;&#xC744; &#xBAA8;&#xB4E0; &#xB808;&#xCF54;&#xB4DC; &#xBCC4;&#xB85C; 1&#xBC88;&#xC529; &#xC218;&#xD589;. &#xD544;&#xD130;&#xB9C1; &#xCE90;&#xC2DC; ? &#xC785;&#xB825;&#xAC12;&#xC774; &#xB298; &#xB2E4;&#xB974;&#xBBC0;&#xB85C; &#xC758;&#xBBF8;&#xC5C6;&#xC74C; 1234567SELECT STATEMENT OPTIMIZER=ALL_ROWS TABLE ACCESS (BY INDEX ROWID) OF &apos;EQ_MES&apos; (TABLE) INDEX (UNIQUE SCAN) OF &apos;EQ_MES_PK&apos; (INDEX (UNIQUE)) SORT (AGGREGATE) TABLE ACCESS (BY INDEX ROWID) OF `EQ_MES` (TABLE) INDEX (RANGE SCAN) OF `EQ_MES_PK` (INDEX (UNIQUE)) TABLE ACCESS (FULL) OF `EQ_MES` (TABLE) SN&#xC5D0; PK&#xAC00; &#xC124;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xC73C;&#xBA74; &#xADF8;&#xB0E5; &#xAC04;&#xB2E8;&#xD558;&#xAC8C; index&#xB97C; &#xD65C;&#xC6A9;&#xD558;&#xC5EC; NULL&#xC774; &#xC544;&#xB2CC; &#xCCAB;&#xBC88;&#xC9F8; &#xAC12;&#xC744; &#xAC00;&#xC838;&#xC624;&#xAC8C;&#xB054;&#xB3C4; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. 12345678SELECT a.SN, NVL(a.STATUS, (SELECT /*+ index_desc(b EQ_MES_PK) */ b.STATUS FROM EQ_MES b WHERE b.SN &lt; a.SN AND b.STATUS IS NOT NULL AND ROWNUM &lt;= 1)) STATUS, a.VALUE FROM EQ_MES a; 12345SELECT STATEMENT OPTIMIZER=ALL_ROWS COUNT (STOPKEY) TABLE ACCESS (BY INDEX ROWID) OF `EQ_MES` (TABLE) INDEX (RANGE SCAN DESCENDING) OF EQ_MES_PK` (INDEX (UNIQUE)) TABLE ACCESS (FULL) OF `EQ_MES` (TABLE) &#xC55E;&#xC5D0;&#xC11C; &#xBC30;&#xC6B4; Window &#xD568;&#xC218;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xBA74; &#xC27D;&#xAC8C; &#xD574;&#xACB0;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. LAST_VALUE : Partition &#xB0B4;&#xC5D0;&#xC11C; &#xAC00;&#xC7A5; &#xB9C8;&#xC9C0;&#xB9C9; &#xAC12;&#xC744; &#xCD9C;&#xB825; IGNORE NULLS &#xC635;&#xC158;&#xC744; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; &#xBC14;&#xB85C; &#xAC00;&#xC838; &#xC62C; &#xC218;&#xAC00; &#xC788;&#xB2E4;. 123456SELECT SN, LAST_VALUE(STATUS IGNORE NULLS) OVER (ORDER BY SN ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) STATUS, VALUE FROM EQ_MES ORDER BY SN; IGNORE NULLS : NULL&#xAC12;&#xC740; &#xBB34;&#xC2DC;&#xD558;&#xACE0; &#xB9C8;&#xC9C0;&#xB9C9;&#xAC12;&#xC744; &#xAC00;&#xC838;&#xC634; PARTITION &#xC740; &#xC5EC;&#xAE30;&#xC11C; &#xC9C0;&#xC815;&#xD558;&#xC9C0; &#xC54A;&#xC558;&#xC74C; ORDER BY SN : SN &#xC21C;&#xC73C;&#xB85C; &#xC815;&#xB82C; BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW : &#xAC80;&#xC0C9; RANGE&#xB97C; &#xC774;&#xC804;&#xC758; &#xBAA8;&#xB4E0; &#xB370;&#xC774;&#xD130;&#xC5D0;&#xC11C; &#xD604;&#xC7AC;&#xAE4C;&#xC9C0; 123SELECT STATEMENT OPTIMIZER=ALL_ROWS WINDOW(SORT) TABLE ACCESS (FULL) OF `EQ_MES` (TABLE) 5.1.6 WITH &#xD65C;&#xC6A9; PL/SQL &#xC5D0;&#xC11C; &#xB0B4;&#xBD80;&#xC801;&#xC73C;&#xB85C; &#xC784;&#xC2DC; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xC0DD;&#xC131;&#xD558;&#xC5EC; &#xC7AC;&#xD65C;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. 123WITH &#xC784;&#xC2DC;&#xD14C;&#xC774;&#xBE14;&#xBA85;AS(SELECT ... ) &#xB85C; &#xC120;&#xC5B8;&#xC744; &#xD574;&#xB450;&#xACE0; &#xC7AC;&#xD65C;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xC774;&#xAC83;&#xC744; &#xD65C;&#xC6A9;&#xD55C; &#xC131;&#xB2A5;&#xD5A5;&#xC0C1;&#xC740; Oracle (9i&#xC774;&#xD6C4;)&#xB9CC; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. MS-SQL&#xC740; Inline &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xD56D;&#xC0C1; &#xD574;&#xB2F9; Query&#xB97C; &#xC0C8;&#xB85C; &#xC2E4;&#xD589;&#xD55C;&#xB2E4;. Oracle&#xC740; materialize, inline Hint&#xB97C; &#xD65C;&#xC6A9;&#xD558;&#xC5EC; &#xC784;&#xC2DC; &#xD14C;&#xC774;&#xBE14;&#xB85C; &#xACB0;&#xACFC;&#xB97C; &#xC800;&#xC7A5;&#xD558;&#xACE0; &#xC7AC;&#xC0AC;&#xC6A9;&#xD560; &#xAC83;&#xC778;&#xC9C0;, View&#xAC19;&#xC774; &#xD56D;&#xC0C1; &#xC0C8;&#xB85C; &#xC2E4;&#xD589;&#xD55C; &#xAC83;&#xC778;&#xC9C0;&#xC758; &#xC120;&#xD0DD;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;.","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 3-4-3 고급 Join 기법","slug":"03.07.join.adv","date":"2016-02-06T15:00:00.000Z","updated":"2017-04-24T00:14:22.000Z","comments":true,"path":"2016/02/07/03.07.join.adv/","link":"","permalink":"http://DevStarSJ.github.io/2016/02/07/03.07.join.adv/","excerpt":"","text":"3&#xACFC;&#xBAA9; SQL &#xACE0;&#xAE09; &#xD65C;&#xC6A9; &#xBC0F; Tuning 4&#xC7A5; Index&#xC640; Join 4.4 &#xACE0;&#xAE09; Join &#xAE30;&#xBC95; Inline View &#xD65C;&#xC6A9; &#xB300;&#xBD80;&#xBD84;&#xC758; JOIN&#xC740; 1:M &#xAD00;&#xACC4;&#xC774;&#xB2E4;. M&#xCABD; &#xC9D1;&#xD569;&#xC744; 1&#xCABD; &#xC9D1;&#xD569; &#xB2E8;&#xC704;&#xB85C; Grouping&#xD574;&#xC57C; &#xD55C;&#xB2E4;&#xBA74; &#xBBF8;&#xB9AC; Grouping&#xD55C; &#xB4A4; JOIN&#xD558;&#xB294; &#xAC83;&#xC774; &#xC720;&#xB9AC;&#xD558;&#xB2E4;. 12345SELECT MIN(b.&#xC0C1;&#xD488;&#xBA85;) &#xC0C1;&#xD488;&#xBA85;, SUM(a.&#xD310;&#xB9E4;&#xC218;&#xB7C9;) &#xD310;&#xB9E4;&#xC218;&#xB7C9;, SUM(a.&#xD310;&#xB9E4;&#xAE08;&#xC561;) &#xD310;&#xB9E4;&#xAE08;&#xC561; FROM &#xC77C;&#xBCD1;&#xC0C1;&#xD488;&#xD310;&#xB9E4; a, &#xC0C1;&#xD488; b WHERE a.&#xC0C1;&#xD488;&#xCF54;&#xB4DC; = b.&#xC0C1;&#xD488;&#xCF54;&#xB4DC; AND a.&#xD310;&#xB9E4;&#xC77C;&#xC790; BETWEEN &apos;20090101&apos; AND &apos;20091231&apos; GROUP BY b.&#xC0C1;&#xD488;&#xCF54;&#xB4DC;; 123456SELECT STATEMENT OPTIMIZER=ALL_ROWS SORT GROUP BY NESTED LOOPS TABLE ACCESS FULL &#xC77C;&#xBCC4;&#xC0C1;&#xD488;&#xD310;&#xB9E4; (Table) TABLE ACCESS BY INDEX ROWID &#xC0C1;&#xD488; (Table) INDEX UNIQUE SCAN &#xC0C1;&#xD488;_PK (Index) &#xC704; &#xC0C1;&#xD669;&#xC5D0;&#xC11C; &#xC77C;&#xBCC4;&#xC0C1;&#xD488;&#xD310;&#xB9E4;&#xC5D0;&#xC11C; &#xC870;&#xAC74;&#xC5D0; &#xB9DE;&#xB294; &#xBAA8;&#xB4E0; record&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC0C1;&#xD488; &#xACFC; JOIN&#xC744; &#xC218;&#xD589;&#xD55C; &#xD6C4;&#xC5D0; &#xB9C8;&#xC9C0;&#xB9C9;&#xC5D0; SORT GROUP BY&#xB97C; &#xC218;&#xD589;&#xD558;&#xC600;&#xB2E4;. &#xBBF8;&#xB9AC; &#xC0C1;&#xD488;&#xCF54;&#xB4DC; &#xBCC4;&#xB85C; GROUP BY&#xB97C; &#xD55C; &#xD6C4;&#xC5D0; JOIN&#xC744; &#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xC218;&#xC815;&#xD574; &#xBCF4;&#xC790;. 123456SELECT b.&#xC0C1;&#xD488;&#xBA85;, a.&#xD310;&#xB9E4;&#xC218;&#xB7C9;, a.&#xD310;&#xB9E4;&#xAE08;&#xC561; FROM (SELECT &#xC0C1;&#xD488;&#xCF54;&#xB4DC;, SUM(&#xD310;&#xB9E4;&#xC218;&#xB7C9;) &#xD310;&#xB9E4;&#xC218;&#xB7C9;, SUM(&#xD310;&#xB9E4;&#xAE08;&#xC561;) &#xD310;&#xB9E4;&#xAE08;&#xC561; FROM &#xC77C;&#xBCC4;&#xC0C1;&#xD488;&#xD310;&#xB9E4; WHERE &#xD310;&#xB9E4;&#xC77C;&#xC790; BETWEEN &apos;20090101&apos; AND &apos;20091231&apos; GROUP BY &#xC0C1;&#xD488;&#xCF54;&#xB4DC;) a, &#xC0C1;&#xD488; b WHERE a.&#xC0C1;&#xD488;&#xCF54;&#xB4DC; = b.&#xC0C1;&#xD488;&#xCF54;&#xB4DC;; 1234567SELECT STATEMENT OPTIMIZER=ALL_ROWS NESTED LOOPS VIEW SORT GROUP BY TABLE ACCESS FULL &#xC77C;&#xBCC4;&#xC0C1;&#xD488;&#xD310;&#xB9E4; (Table) TABLE ACCESS BY INDEX ROWID &#xC0C1;&#xD488; (Table) INDEX UNIQUE SCAN &#xC0C1;&#xD488;_PK (Index) &#xBCA0;&#xD0C0;&#xC801; &#xAD00;&#xACC4;&#xC758; JOIN &#xC0C1;&#xD638;&#xBC30;&#xD0C0;&#xC801; &#xAD00;&#xACC4;&#xB780; ? &#xC5B4;&#xB5A4; &#xC5D4;&#xD130;&#xD2F0;&#xAC00; &#xB450; &#xAC1C; &#xC774;&#xC0C1;&#xC758; &#xB2E4;&#xB978; &#xC5D4;&#xD130;&#xD2F0;&#xC758; &#xD569;&#xC9D1;&#xD569;&#xACFC; &#xAD00;&#xACC4;&#xB97C; &#xAC16;&#xB294; &#xAC83; e.g.&#xA0;&#xC791;&#xC5C5;&#xC9C0;&#xC2DC; Table&#xC758; &#xC791;&#xC5C5;&#xC77C;&#xB828;&#xBC88;&#xD638; &#xAC00; &#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD; Table&#xC758; &#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD;&#xBC88;&#xD638; &#xC640;&#xB3C4; &#xAD00;&#xACC4;&#xB97C; &#xAC00;&#xC9C0;&#xACE0;, &#xC7A5;&#xC560;&#xC811;&#xC218; Table&#xC758; &#xC7A5;&#xC560;&#xC811;&#xC218;&#xBC88;&#xD638; &#xC640;&#xB3C4; &#xAD00;&#xACC4;&#xB97C; &#xAC00;&#xC9C0;&#xB294; &#xACBD;&#xC6B0; &#xC774; &#xACBD;&#xC6B0; 3&#xAC00;&#xC9C0;&#xB85C; &#xAD6C;&#xD604;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xC791;&#xC5C5;&#xC77C;&#xB828;&#xBC88;&#xD638; 1&#xAC1C;&#xC758; &#xCEEC;&#xB7FC;&#xC73C;&#xB85C; 2&#xAC1C;&#xC758; Table&#xB85C; &#xC5F0;&#xACB0;&#xD558;&#xC5EC; &#xAD00;&#xB828;&#xC788;&#xB294; &#xB808;&#xCF54;&#xB4DC;&#xB9CC; &#xAC01; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xC785;&#xB825; (#1) &#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD;&#xBC88;&#xD638;, &#xC7A5;&#xC560;&#xC811;&#xC218;&#xBC88;&#xD638; &#xB450; &#xCE7C;&#xB7FC;&#xC744; &#xB530;&#xB85C; &#xB450;&#xACE0; &#xAC01; &#xB808;&#xCF54;&#xB4DC;&#xBCC4;&#xB85C; &#xB458; &#xC911; &#xD558;&#xB098;&#xC5D0;&#xB9CC; &#xAC12;&#xC744; &#xC785;&#xB825; (#2) &#xC811;&#xC218;&#xBC88;&#xD638; &#xC640; &#xC791;&#xC5C5;&#xAD6C;&#xBD84; &#xCE7C;&#xB7FD;&#xC744; &#xB450;&#xACE0; &#xC791;&#xC5C5;&#xAD6C;&#xBD84;&#xC758; &#xAC12;&#xC73C;&#xB85C; &#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD;, &#xC7A5;&#xC560;&#xC811;&#xC218;&#xB97C; &#xAD6C;&#xBD84; (#3) &#xC608;&#xC81C; SQL (#1) 12345678SELECT /*+ ordered use_nl(b) use_nl(c) */ a.&#xC791;&#xC5C5;&#xC77C;&#xB828;&#xBC88;&#xD638;, a.&#xC791;&#xC5C5;&#xC790;ID, NVL(b.&#xACE0;&#xAC1D;&#xBC88;&#xD638;, c.&#xACE0;&#xAC1D;&#xBC88;&#xD638;) &#xACE0;&#xAC1D;&#xBC88;&#xD638;, NVL(b.&#xC8FC;&#xC18C;, c.&#xC8FC;&#xC18C;) &#xC8FC;&#xC18C; FROM &#xC791;&#xC5C5;&#xC9C0;&#xC2DC; a, &#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD; b, &#xC7A5;&#xC560;&#xC811;&#xC218; c WHERE a.&#xC791;&#xC5C5;&#xC77C;&#xB828;&#xBC88;&#xD638; = b.&#xC791;&#xC5C5;&#xC9C0;&#xC2DC;&#xBC88;&#xD638;(+) AND a.&#xC791;&#xC5C5;&#xC77C;&#xB828;&#xBC88;&#xD638; = c.&#xC7A5;&#xC560;&#xC811;&#xC218;&#xBC88;&#xD638;(+) AND a.&#xC811;&#xC218;&#xC77C;&#xC790; BETWEEN :fromDate AND :toDate; &#xC608;&#xC81C; SQL (#2) 12345678910111213141516171819202122232425SELECT /*+ ordered use_nl(b) use_nl(c) */ NVL(a.&#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD;&#xBC88;&#xD638;, b.&#xC7A5;&#xC560;&#xC811;&#xC218;&#xBC88;&#xD638;) &#xC791;&#xC5C5;&#xC77C;&#xB828;&#xBC88;&#xD638;, a.&#xC791;&#xC5C5;&#xC790;ID, DECODE(a.&#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD;&#xBC88;&#xD638;, NULL, c.&#xACE0;&#xAC1D;&#xBC88;&#xD638;, b.&#xACE0;&#xAC1D;&#xBC88;&#xD638;) &#xACE0;&#xAC1D;&#xBC88;&#xD638;, DECODE(a.&#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD;&#xBC88;&#xD638;, NULL, c.&#xC8FC;&#xC18C;, b.&#xC8FC;&#xC18C;) &#xC8FC;&#xC18C; FROM &#xC791;&#xC5C5;&#xC9C0;&#xC2DC; a, &#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD; b, &#xC7A5;&#xC560;&#xC811;&#xC218; c WHERE a.&#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD;&#xBC88;&#xD638; = b.&#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD;&#xBC88;&#xD638;(+) AND a.&#xC7A5;&#xC560;&#xC811;&#xC218;&#xBC88;&#xD638; = c.&#xC7A5;&#xC560;&#xC811;&#xC218;&#xBC88;&#xD638;(+) AND a.&#xC811;&#xC218;&#xC77C;&#xC790; BETWEEN :fromDate AND :toDate;-- &#xC704;&#xC758; &#xACBD;&#xC6B0; &#xD544;&#xC694;&#xC5C6;&#xB294; JOIN &#xC2DC;&#xB3C4; &#xD69F;&#xC218;&#xAC00; &#xB9CE;&#xC544;&#xC9C0;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; 2&#xAC00;&#xC9C0; &#xACBD;&#xC6B0;&#xB97C; &#xB098;&#xB204;&#xC5B4;&#xC11C; UNION ALL&#xD558;&#xB294;&#xAC8C; &#xD6A8;&#xC728;&#xC774; &#xC88B;&#xB2E4;.SELECT a.&#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD;&#xBC88;&#xD638; &#xC791;&#xC5C5;&#xC77C;&#xB828;&#xBC88;&#xD638;, a.&#xC791;&#xC5C5;&#xC790;ID, b.&#xACE0;&#xAC1D;&#xBC88;&#xD638;, b.&#xC8FC;&#xC18C; FROM &#xC791;&#xC5C5;&#xC9C0;&#xC2DC; a, &#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD; b WHERE a.&#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD;&#xBC88;&#xD638; = b.&#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD;&#xBC88;&#xD638; AND a.&#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD;&#xBC88;&#xD638; IS NOT NULL AND a.&#xC811;&#xC218;&#xC77C;&#xC790; BETWEEN :fromDate AND :toDate UNION ALLSELECT a.&#xC7A5;&#xC560;&#xC811;&#xC218;&#xBC88;&#xD638; &#xC791;&#xC5C5;&#xC77C;&#xB828;&#xBC88;&#xD638;, a.&#xC791;&#xC5C5;&#xC790;ID, b.&#xACE0;&#xAC1D;&#xBC88;&#xD638;, b.&#xC8FC;&#xC18C; FROM &#xC791;&#xC5C5;&#xC9C0;&#xC2DC; a, &#xC7A5;&#xC560;&#xC811;&#xC218; b WHERE a.&#xC7A5;&#xC560;&#xC811;&#xC218;&#xBC88;&#xD638; = b.&#xC7A5;&#xC560;&#xC811;&#xC218;&#xBC88;&#xD638; AND a.&#xC7A5;&#xC560;&#xC811;&#xC218;&#xBC88;&#xD638; IS NOT NULL AND a.&#xC811;&#xC218;&#xC77C;&#xC790; BETWEEN :fromDate AND :toDate &#xC608;&#xC81C; SQL (#3) 12345678910111213SELECT a.&#xC791;&#xC5C5;&#xC77C;&#xB828;&#xBC88;&#xD638;, a.&#xC791;&#xC5C5;&#xC790;ID, b.&#xACE0;&#xAC1D;&#xBC88;&#xD638;, b.&#xC8FC;&#xC18C; FROM &#xC791;&#xC5C5;&#xC9C0;&#xC2DC; a, &#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD; b WHERE a.&#xC791;&#xC5C5;&#xC77C;&#xB828;&#xBC88;&#xD638; = b.&#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD;&#xBC88;&#xD638; AND a.&#xC791;&#xC5C5;&#xAD6C;&#xBD84; = 1 AND a.&#xC811;&#xC218;&#xC77C;&#xC790; BETWEEN :fromDate AND :toDate UNION ALLSELECT a.&#xC791;&#xC5C5;&#xC77C;&#xB828;&#xBC88;&#xD638;, a.&#xC791;&#xC5C5;&#xC790;ID, b.&#xACE0;&#xAC1D;&#xBC88;&#xD638;, b.&#xC8FC;&#xC18C; FROM &#xC791;&#xC5C5;&#xC9C0;&#xC2DC; a, &#xC7A5;&#xC560;&#xC811;&#xC218; b WHERE a.&#xC791;&#xC5C5;&#xC77C;&#xB828;&#xBC88;&#xD638; = b.&#xC7A5;&#xC560;&#xC811;&#xC218;&#xBC88;&#xD638; AND a.&#xC791;&#xC5C5;&#xAD6C;&#xBD84; = 2 AND a.&#xC811;&#xC218;&#xC77C;&#xC790; BETWEEN :fromDate AND :toDate &#xB9C8;&#xC9C0;&#xB9C9; &#xC608;&#xC81C;&#xC758; &#xACBD;&#xC6B0; Index&#xAC00; [&#xC791;&#xC5C5;&#xAD6C;&#xBD84; + &#xC811;&#xC218;&#xC77C;&#xC790;]&#xB85C; &#xAD6C;&#xC131;&#xB418;&#xC5C8;&#xB2E4;&#xBA74; &#xC77D;&#xB294; &#xBC94;&#xC704;&#xC758; &#xC911;&#xBCF5;&#xC774; &#xC5C6;&#xACA0;&#xC9C0;&#xB9CC;, [&#xC811;&#xC218;&#xC77C;&#xC790; + &#xC791;&#xC5C5;&#xAD6C;&#xBD84;]&#xC77C; &#xACBD;&#xC6B0; &#xC911;&#xBCF5;&#xD574;&#xC11C; &#xC77D;&#xC5B4;&#xC57C; &#xD558;&#xBA70;, [&#xC811;&#xC218;&#xC77C;&#xC790;]&#xB9CC;&#xC73C;&#xB85C; &#xAD6C;&#xC131;&#xB41C; Index&#xB97C; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;&#xBA74; &#xC791;&#xC5C5;&#xAD6C;&#xBD84;&#xC744; &#xD544;&#xD130;&#xB9C1;&#xD558;&#xAE30;&#xC704;&#xD574; Random &#xC561;&#xC138;&#xC2A4;&#xAE4C;&#xC9C0; &#xC911;&#xBCF5;&#xC73C;&#xB85C; &#xBC1C;&#xC0DD;&#xD55C;&#xB2E4;. &#xADF8;&#xB7F4; &#xACBD;&#xC6B0; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC218;&#xC815;&#xC744; &#xD558;&#xBA74; &#xC911;&#xBCF5; &#xC561;&#xC138;&#xC2A4;&#xC758; &#xBE44;&#xD6A8;&#xC728;&#xC744; &#xD574;&#xC18C;&#xD560; &#xC218; &#xC788;&#xB2E4;. 12345678SELECT /*+ ordered use_nl(b) use_nl(c) */ a.&#xC791;&#xC5C5;&#xC77C;&#xB828;&#xBC88;&#xD638;, a.&#xC791;&#xC5C5;&#xC790;ID, NVL(b.&#xACE0;&#xAC1D;&#xBC88;&#xD638;, c.&#xACE0;&#xAC1D;&#xBC88;&#xD638;) &#xACE0;&#xAC1D;&#xBC88;&#xD638;, NVL(b.&#xC8FC;&#xC18C;, c.&#xC8FC;&#xC18C;) &#xC8FC;&#xC18C; FROM &#xC791;&#xC5C5;&#xC9C0;&#xC2DC; a, &#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD; b, &#xC7A5;&#xC560;&#xC811;&#xC218; c WHERE b.&#xAC1C;&#xD1B5;&#xC2E0;&#xCCAD;&#xBC88;&#xD638;(+) = DECODE(a.&#xC791;&#xC5C5;&#xAD6C;&#xBD84;, 1,a.&#xC791;&#xC5C5;&#xC77C;&#xB828;&#xBC88;&#xD638;) AND c.&#xC7A5;&#xC560;&#xC811;&#xC218;&#xBC88;&#xD638;(+) = DECODE(a.&#xC791;&#xC5C5;&#xAD6C;&#xBD84;, 2,a.&#xC791;&#xC5C5;&#xC77C;&#xB828;&#xBC88;&#xD638;) AND a.&#xC811;&#xC218;&#xC77C;&#xC790; BETWEEN :fromDate AND :toDate; &#xBD80;&#xB4F1;&#xD638; JOIN &#x2018;=&#x2019; &#xC870;&#xAC74;&#xC774; &#xC544;&#xB2CC; BETWEEN, LIKE &#xB4F1;&#xACFC; &#xAC19;&#xC740; &#xBD80;&#xB4F1;&#xD638; &#xC5F0;&#xC0B0;&#xACFC; JOIN&#xD574;&#xC57C; &#xD560; &#xB54C;&#xB3C4; &#xC788;&#xB2E4;. &#xC544;&#xB798; &#xADF8;&#xB9BC;&#xC758; &#xC67C;&#xCABD; &#xADF8;&#xB9BC;&#xACFC; &#xAC19;&#xC740; &#xC6D4;&#xBCC4;&#xC9C0;&#xC810;&#xB9E4;&#xCD9C; Table&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xC624;&#xB978;&#xCABD; &#xADF8;&#xB9BC;&#xC758; &#xB204;&#xC801;&#xB9E4;&#xCD9C;&#xC744; &#xAD6C;&#xD574;&#xBCF4;&#xC790;. Oracle&#xC758; Window &#xD568;&#xC218;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xBA74; &#xAC04;&#xB2E8;&#xD558;&#xB2E4;. 12345SELECT &#xC9C0;&#xC810;, &#xD310;&#xB9E4;&#xC6D4;, &#xB9E4;&#xCD9C;, SUM(&#xB9E4;&#xCD9C;) OVER (PARTITION BY &#xC9C0;&#xC810; ORDER BY &#xD310;&#xB9E4;&#xC6D4; RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) &#xB204;&#xC801;&#xB9E4;&#xCD9C; FROM &#xC6D4;&#xBCC4;&#xC9C0;&#xC810;&#xB9E4;&#xCD9C; Window &#xD568;&#xC218;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xACE0; BETWEEN&#xC744; JOIN&#xC870;&#xAC74;&#xC73C;&#xB85C; &#xB123;&#xC5B4;&#xC11C;&#xB3C4; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. 123456SELECT a.&#xC9C0;&#xC810;, a.&#xD310;&#xB9E4;&#xC6D4;, MIN(a.&#xB9E4;&#xCD9C;) &#xB9E4;&#xCD9C;, SUM(b.&#xB9E4;&#xCD9C;) &#xB204;&#xC801;&#xB9E4;&#xCD9C; FROM &#xC6D4;&#xBCC4;&#xC9C0;&#xC810;&#xB9E4;&#xCD9C; a, &#xC6D4;&#xBCC4;&#xC9C0;&#xC810;&#xB9E4;&#xCD9C; b WHERE a.&#xC9C0;&#xC810; = b.&#xC9C0;&#xC810; AND a.&#xD310;&#xB9E4;&#xC6D4; &gt;= b.&#xD310;&#xB9E4;&#xC6D4; GROUP BY a.&#xC9C0;&#xC810;, a.&#xD310;&#xB9E4;&#xC6D4; ORDER BY a.&#xC9C0;&#xC810;, a.&#xD310;&#xB9E4;&#xC6D4; BETWEEN JOIN &#xC774;&#xB825;&#xAD00;&#xB9AC; &#xBC29;&#xC2DD; &#xC120;&#xBD84;&#xC774;&#xB825; &#xC2DC;&#xC791;&#xC77C;&#xC790;, &#xC885;&#xB8CC;&#xC77C;&#xC790; &#xD615;&#xC2DD;&#xC73C;&#xB85C; 2&#xAC1C;&#xC758; &#xC77C;&#xC790; &#xCEEC;&#xB7FC;&#xC73C;&#xB85C; &#xC774;&#xB825;&#xC744; &#xAD00;&#xB9AC; &#xD2B9;&#xC815;&#xC2DC;&#xC810; &#xC774;&#xB825;&#xC744; &#xC870;&#xD68C;&#xD560;&#xB54C; BETWEEN &#xC870;&#xAC74;&#xC73C;&#xB85C; &#xAC04;&#xD3B8;&#xD558;&#xAC8C; &#xAC00;&#xB2A5; :dt BETWEEN &#xC2DC;&#xC791;&#xC77C;&#xC790; AND &#xC885;&#xB8CC;&#xC77C;&#xC790; &#xD604;&#xC7AC;&#xC2DC;&#xC810; : &#xC885;&#xB8CC;&#xC77C;&#xC790; = &apos;99991231&apos; PK&#xAC12; &#xBCC0;&#xACBD;&#xC774; &#xC790;&#xC8FC; &#xBC1C;&#xC0DD;&#xD568; PK&#xB97C; [Master Key + &#xC2DC;&#xC791;&#xC77C;&#xC790; + &#xC885;&#xB8CC;&#xC77C;&#xC790;]&#xB85C; &#xAD00;&#xB9AC;&#xD574;&#xC57C; &#xD558;&#xB294;&#xB370;, &#xC0C8;&#xB85C;&#xC6B4; &#xC774;&#xB825;&#xC774; &#xB4E4;&#xC5B4;&#xC624;&#xBA74; &#xAE30;&#xC874;&#xC758; &#xB9C8;&#xC9C0;&#xB9C9; &#xC885;&#xB8CC;&#xC77C;&#xC790;&#xAC00; &#xBCC0;&#xACBD;&#xB418;&#xC5B4;&#xC57C; &#xD568; &#xC810;&#xC774;&#xB825; &#xC8FC;&#xB85C; &#xC2DC;&#xC791;&#xC77C;&#xC790;&#xB9CC;&#xC744; &#xC800;&#xC7A5;&#xD558;&#xC5EC; &#xAD00;&#xB9AC; &#xD2B9;&#xC815;&#xC2DC;&#xC810; &#xC774;&#xB825;&#xC744; &#xC870;&#xD68C;&#xD560;&#xB54C; Subquery&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xADF8; &#xC2DC;&#xC810;&#xC758; &#xB9C8;&#xC9C0;&#xB9C9; &#xC774;&#xB825;&#xC77C;&#xC790;&#xB97C; &#xBA3C;&#xC800; &#xAD6C;&#xD55C;&#xB4A4;&#xC5D0; &#xC870;&#xD68C; 1234567891011121314151617181920212223242526-- &#xC120;&#xBD84;&#xC774;&#xB825;&#xC73C;&#xB85C; &#xAD00;&#xB9AC;&#xD560;&#xB54C;&#xC758; &#xD2B9;&#xC815;&#xC2DC;&#xC810; &#xC870;&#xD68C;SELECT &#xACE0;&#xAC1D;&#xBC88;&#xD638;, &#xC5F0;&#xCCB4;&#xAE08;&#xC561;, &#xC5F0;&#xCCB4;&#xAE30;&#xAC04; FROM &#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561; WHERE &#xACE0;&#xAC1D;&#xBC88;&#xD638; = :no AND :date BETWEEN &#xC2DC;&#xC791;&#xC77C;&#xC790; AND &#xC885;&#xB8CC;&#xC77C;&#xC790;;-- &#xC810;&#xC774;&#xB825;SELECT a.&#xACE0;&#xAC1D;&#xBC88;&#xD638;, a.&#xC5F0;&#xCCB4;&#xAE08;&#xC561;, a.&#xC5F0;&#xCCB4;&#xAE30;&#xAC04; FROM &#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561; a, (SELECT &#xACE0;&#xAC1D;&#xBC88;&#xD638;, MAX(a.&#xC2DC;&#xC791;&#xC77C;&#xC790;) &#xC2DC;&#xC791;&#xC77C;&#xC790; FROM &#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561; WHERE &#xACE0;&#xAC1D;&#xBC88;&#xD638; = :no AND &#xC2DC;&#xC791;&#xC77C;&#xC790; &lt;= :date) b WHERE a.&#xACE0;&#xAC1D;&#xBC88;&#xD638; = b.&#xACE0;&#xAC1D;&#xBC88;&#xD638; AND a.&#xC2DC;&#xC791;&#xC77C;&#xC790; = b.&#xC2DC;&#xC791;&#xC77C;&#xC790;;-- &#xB610;&#xB294; &#xCCB4;&#xD06C;&#xC870;&#xAC74;&#xC73C;&#xB85C;SELECT a.&#xACE0;&#xAC1D;&#xBC88;&#xD638;, a.&#xC5F0;&#xCCB4;&#xAE08;&#xC561;, a.&#xC5F0;&#xCCB4;&#xAE30;&#xAC04; FROM &#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561; a WHERE a.&#xACE0;&#xAC1D;&#xBC88;&#xD638; = :no AND a.&#xC2DC;&#xC791;&#xC77C;&#xC790; = (SELECT MAX(b.&#xC2DC;&#xC791;&#xC77C;&#xC790;) FROM &#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561; b WHERE a.&#xACE0;&#xAC1D;&#xBC88;&#xD638; = b.&#xACE0;&#xAC1D;&#xBC88;&#xD638; AND b.&#xC2DC;&#xC791;&#xC77C;&#xC790; &lt;= :date); &#xC120;&#xBD84;&#xC774;&#xB825; JOIN &#xACE0;&#xAC1D; Table, &#xB4F1;&#xAE09;&#xBCC0;&#xACBD;&#xC774;&#xB825; Table, &#xC804;&#xD654;&#xBC88;&#xD638;&#xBCC0;&#xACBD;&#xC774;&#xB825; Table&#xC774; &#xC788;&#xACE0;, &#xAC01;&#xAC01;&#xC758; &#xC774;&#xB825;Table&#xC5D0;&#xC11C; &#xC120;&#xBD84;&#xC774;&#xB825;&#xC73C;&#xB85C; &#xAD00;&#xB9AC;&#xD558;&#xACE0; &#xC788;&#xB294; &#xACBD;&#xC6B0; &#xD2B9;&#xC815;&#xC2DC;&#xC810;&#xC758; &#xB4F1;&#xAE09;&#xACFC; &#xC804;&#xD654;&#xBC88;&#xD638;&#xB97C; &#xC870;&#xD68C;&#xD560; &#xACBD;&#xC6B0; 1234567SELECT a.&#xACE0;&#xAC1D;&#xBA85;, b.&#xB4F1;&#xAE09;, c.&#xC804;&#xD654;&#xBC88;&#xD638; FROM &#xACE0;&#xAC1D; a, &#xB4F1;&#xAE09;&#xBCC0;&#xACBD;&#xC774;&#xB825; b, &#xC804;&#xD654;&#xBC88;&#xD638;&#xC774;&#xB825; c WHERE a.&#xACE0;&#xAC1D;ID = :id AND a.&#xACE0;&#xAC1D;ID = b.&#xACE0;&#xAC1D;ID AND a.&#xACE0;&#xAC1D;ID = c.&#xACE0;&#xAC1D;ID AND :dt BETWEEN b.&#xC2DC;&#xC791;&#xC77C;&#xC790; AND b.&#xC885;&#xB8CC;&#xC77C;&#xC790; AND :dt BETWEEN c.&#xC2DC;&#xC791;&#xC77C;&#xC790; AND c.&#xC885;&#xB8CC;&#xC77C;&#xC790;; &#xC810;&#xC774;&#xB825;&#xAD00;&#xB9AC;&#xC5D0;&#xC11C; ROWID &#xC774;&#xC6A9; &#xC55E;&#xC11C; &#xC0B4;&#xD3B4;&#xBCF8; &#xC810;&#xC774;&#xB825;&#xAD00;&#xB9AC;&#xC758; &#xACBD;&#xC6B0; &#xB3D9;&#xC77C;&#xD55C; Table&#xC744; 2&#xBC88; &#xC561;&#xC138;&#xC2A4;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. 123456SELECT a.&#xACE0;&#xAC1D;&#xBC88;&#xD638;, a.&#xC5F0;&#xCCB4;&#xAE08;&#xC561;, a.&#xC5F0;&#xCCB4;&#xAE30;&#xAC04; FROM &#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561; a WHERE a.&#xACE0;&#xAC1D;&#xBC88;&#xD638; = :no AND a.&#xC2DC;&#xC791;&#xC77C;&#xC790; = (SELECT MAX(b.&#xC2DC;&#xC791;&#xC77C;&#xC790;) FROM &#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561; b WHERE a.&#xACE0;&#xAC1D;&#xBC88;&#xD638; = b.&#xACE0;&#xAC1D;&#xBC88;&#xD638; AND b.&#xC2DC;&#xC791;&#xC77C;&#xC790; &lt;= :date); 1234567SELECT STATEMENT OPTIMIZER=ALL_ROWS NESTED LOOPS TABLE ACCESS (BY INDEX ROWID) OF &apos;&#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561;&apos; INDEX (RANGE SCAN) OF &apos;IDX_&#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561;_&#xACE0;&#xAC1D;_&#xC77C;&#xC790;&apos; (NON-UNIQUE) SORT FIRST ROW INDEX (RANGE SCAN (MIN/MAX) OF &apos;IDX_&#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561;_&#xACE0;&#xAC1D;_&#xC77C;&#xC790;&apos; (NON-UNIQUE) &#xC774; &#xACBD;&#xC6B0; Subquery&#xC5D0;&#xC11C; rowid&#xB97C; &#xAD6C;&#xD574;&#xC11C; Main Query&#xB85C; &#xC804;&#xB2EC;&#xD574;&#xC8FC;&#xBA74; &#xC870;&#xAE08; &#xB354; &#xC131;&#xB2A5;&#xC744; &#xD5A5;&#xC0C1; &#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xB2E4;. 12345678SELECT a.&#xACE0;&#xAC1D;&#xBC88;&#xD638;, a.&#xC5F0;&#xCCB4;&#xAE08;&#xC561;, a.&#xC5F0;&#xCCB4;&#xAE30;&#xAC04; FROM &#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561; a WHERE a.&#xACE0;&#xAC1D;&#xBC88;&#xD638; = :no AND a.rowid = (SELECT /*+ index_desc(b IDX_&#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561;_&#xACE0;&#xAC1D;_&#xC77C;&#xC790;) */ rowid FROM &#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561; b WHERE a.&#xACE0;&#xAC1D;&#xBC88;&#xD638; = b.&#xACE0;&#xAC1D;&#xBC88;&#xD638; AND b.&#xC2DC;&#xC791;&#xC77C;&#xC790; &lt;= :date AND rownum &lt;= 1); 1234567SELECT STATEMENT OPTIMZER=ALL_ROWS NESTED LOOPS TABLE ACCESS (BY INDEX ROWID) OF &apos;&#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561;&apos; INDEX (RANGE SCAN) OF &apos;IDX_&#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561;_&#xACE0;&#xAC1D;_&#xC77C;&#xC790;&apos; (NON-UNIQUE) TABLE ACCESS (BY USER ROWID) OF &apos;&#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561;&apos; COUNT (STOPKEY) INDEX (RANGE SCAN) OF &apos;IDX_&#xACE0;&#xAC1D;&#xBCC4;&#xC5F0;&#xCCB4;&#xAE08;&#xC561;_&#xACE0;&#xAC1D;_&#xC77C;&#xC790;&apos; (NON-UNIQUE)","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 3-4-2 Join","slug":"03.06.join","date":"2016-02-05T15:00:00.000Z","updated":"2017-04-24T00:14:01.000Z","comments":true,"path":"2016/02/06/03.06.join/","link":"","permalink":"http://DevStarSJ.github.io/2016/02/06/03.06.join/","excerpt":"","text":"3&#xACFC;&#xBAA9; SQL &#xACE0;&#xAE09; &#xD65C;&#xC6A9; &#xBC0F; Tuning 4&#xC7A5; Index&#xC640; Join 4.3 JOIN Nested Loop Join Index &#xC0C1;&#xD669; 12345* PK_DELP : DEPT.DEPTNO* DEPT_LOC_IDX : DEPT.LOC* PK_EMP : EMP.EMPNO* EMP_DEPTNO_IDX : EMP.DEPTNO* EMP_SAL_IDX : EMP.SAL Query 123456SELECT /*+ ORDERED USE_NL(e) */ E.EMPNO, E.ENAME, D.DNAME, E.JOB, E.SAL FROM DEPT d, EMP e WHERE e.DEPTNO = d.DEPTNO -- #1 AND d.LOC = &apos;DALLAS&apos; -- #2 AND e.SAL &gt;= 1500 -- #3 ORDER BY SAL DESC &#xC704;&#xC758; &#xACBD;&#xC6B0; &#xC2E4;&#xD589;&#xACC4;&#xD68D;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xB2E4;. Execution Plan 12345678SELECT STATEMENT OPTIMIZER = ALL_ROWS SORT (ORDER BY) NESTED LOOPS NESTED LOOPS TABLE ACCESS (BY INDEX ROWID) OF &apos;DEPT&apos; (TABLE) INDEX (RANGE SCAN) OF &apos;DEPT_LOC_IDX&apos; (INDEX) INDEX (RANGE SCAN) OF &apos;EMP_DEPT_INDEX&apos; (INDEX) TABLE ACCESS (BY INDEX ROWID) OF &apos;EMP&apos; (TABLE) &#xC21C;&#xC11C;&#xB97C; &#xC0B4;&#xD3B4;&#xBCF4;&#xBA74; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xB2E4;. DEPT_LOC_IDX Index&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; LOC = &apos;DALLAS&apos; &#xC870;&#xAC74;&#xC5D0; &#xB9DE;&#xB294; ROWID&#xB97C; &#xCC3E;&#xC544;&#xB0B8;&#xB2E4;. &#xD574;&#xB2F9; ROWID&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; DEPT Table&#xC5D0;&#xC11C; record&#xB97C; &#xCC3E;&#xB294;&#xB2E4;. &#xC704; &#xC870;&#xAC74;&#xC5D0; &#xB9CC;&#xC871;&#xD558;&#xB294; Table&#xC758; DEPTNO &#xCE7C;&#xB7FC;&#xACFC; EMP_DEPT_INDEX Index&#xC758; DEPTNO &#xCE7C;&#xB7FC;&#xC744; NL Join&#xD55C;&#xB2E4;. NL Join &#xACB0;&#xACFC;&#xC5D0;&#xC11C;&#xC758; EMP_DEPT_INDEX&#xC758; ROWID&#xB85C; EMP Table&#xC744; &#xC561;&#xC138;&#xC2A4; &#xD574;&#xC11C; SAL &gt;= 1500 &#xC870;&#xAC74;&#xC5D0; &#xB9CC;&#xC871;&#xD558;&#xB294; record&#xB97C; &#xCC3E;&#xB294;&#xB2E4;. 2&#xBC88;&#xACFC; 5&#xBC88;&#xC758; record&#xB97C; NL Join &#xD55C;&#xB2E4;. &#xADF8; &#xACB0;&#xACFC;&#xB97C; SAL DESC &#xAE30;&#xC900;&#xC73C;&#xB85C; &#xC815;&#xB82C;&#xD55C;&#xB2E4;. NL Join&#xC758; &#xD2B9;&#xC9D5; DBMS&#xB294; Block&#xB2E8;&#xC704; I/O&#xB97C; &#xC218;&#xD589;&#xD558;&#xB294;&#xB370;, Random &#xC561;&#xC138;&#xC2A4; &#xD558;&#xBBC0;&#xB85C; &#xC544;&#xBB34;&#xB9AC; Index &#xAD6C;&#xC131;&#xC774; &#xC644;&#xBCBD;&#xD574;&#xB3C4; &#xB300;&#xB7C9;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; JOIN&#xD558;&#xBA74; &#xB9E4;&#xC6B0; &#xBE44;&#xD6A8;&#xC728;&#xC801;&#xC774;&#xB2E4;. record &#xB2E8;&#xC704;&#xB85C; &#xC21C;&#xCC28;&#xC801;&#xC73C;&#xB85C; JOIN&#xC744; &#xC218;&#xD589;&#xD558;&#xBBC0;&#xB85C; &#xB300;&#xC6A9;&#xB7C9; &#xB370;&#xC774;&#xD130; &#xCC98;&#xB9AC;&#xC2DC; &#xB9E4;&#xC6B0; &#xCE58;&#xBA85;&#xC801;&#xC774;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC;, &#xBD80;&#xBD84;&#xBC94;&#xC704;&#xCC98;&#xB9AC;&#xAC00; &#xAC00;&#xB2A5;&#xD55C; &#xC0C1;&#xD669;&#xC5D0;&#xC11C; &#xCD5C;&#xCD08;&#xC758; &#xC751;&#xB2F5;&#xC2DC;&#xAC04;&#xC740; &#xB9E4;&#xC6B0; &#xC9E7;&#xB2E4;. &#xC21C;&#xCC28;&#xC801;&#xC73C;&#xB85C; &#xCC98;&#xB9AC;&#xB418;&#xB294; &#xD2B9;&#xC9D5;&#xB54C;&#xBB38;&#xC5D0; Driving Table&#xC758; &#xCC98;&#xB9AC; &#xBC94;&#xC704;&#xC5D0; &#xC758;&#xD574; &#xC804;&#xCCB4; &#xC77C;&#xB7C9;&#xC774; &#xACB0;&#xC815;&#xB41C;&#xB2E4;. Index &#xAD6C;&#xC131; &#xC804;&#xB7B5;&#xC774; &#xC911;&#xC694;&#xD558;&#xB2E4;. &#xC18C;&#xB7C9; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC8FC;&#xB85C; &#xCC98;&#xB9AC;&#xD558;&#xAC70;&#xB098; &#xBD80;&#xBD84;&#xBC94;&#xC704;&#xCC98;&#xB9AC;&#xAC00; &#xAC00;&#xB2A5;&#xD55C; &#xC628;&#xB77C;&#xC778; &#xD2B8;&#xB79C;&#xC7AD;&#xC158; &#xD658;&#xACBD;&#xC5D0; &#xC801;&#xD569;&#xD558;&#xB2E4;. Sort Merge Join &#xC9C4;&#xD589; &#xB2E8;&#xACC4; Sort : &#xC591;&#xCABD; &#xC9D1;&#xD569;&#xC744; JOIN &#xCEEC;&#xB7FC; &#xAE30;&#xC900;&#xC73C;&#xB85C; &#xC815;&#xB82C; (&#xB2E8;, Oracle&#xC758; &#xACBD;&#xC6B0; Outer Table&#xC5D0; &#xD574;&#xB2F9; &#xCEEC;&#xB7FC;&#xC5D0; &#xB300;&#xD55C; Index&#xAC00; &#xC788;&#xB2E4;&#xBA74; &#xC0DD;&#xB7B5; &#xAC00;&#xB2A5;) Merge : &#xC815;&#xB82C;&#xB41C; &#xC591;&#xCABD; &#xC9D1;&#xD569;&#xC744; Merge SQL 123SELECT /*+ ORDERED USE_MERGE(e) */ d.deptno, d.name, e.empno, e.ename FROM dept d, emp e WHERE d.deptno = e.deptno Execute Plan 123456SELECT STATEMENT OPTIMIZER = ALL_ROWS MERGE JOIN TABLE ACCESS (BY INDEX ROWID) OF &apos;DEPT&apos; (TABLE) INDEX (FULL SCAN) OF &apos;PK_DEPT&apos; (INDEX (UNIQUE)) SORT (JOIN) TABLE ACCESS (FULL) OF &apos;EMP&apos; (TABLE) &#xD2B9;&#xC9D5; JOIN&#xD558;&#xAE30; &#xC804;&#xC5D0; &#xC591;&#xCABD; &#xC9D1;&#xD569;&#xC744; &#xC815;&#xB82C;&#xD55C;&#xB2E4;. &#xB300;&#xC6A9;&#xB7C9; Table&#xC758; &#xACBD;&#xC6B0; Sort&#xC790;&#xCCB4;&#xAC00; &#xD070; &#xBE44;&#xC6A9;&#xC744; &#xC218;&#xBC18;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xBE44;&#xD6A8;&#xC728;&#xC801;&#xC77C; &#xC218; &#xC788;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC;, Cluster&#xB098; Index&#xCC98;&#xB7FC; &#xBBF8;&#xB9AC; &#xC815;&#xB82C;&#xB41C; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xBA74; &#xD6A8;&#xACFC;&#xC801;&#xC774;&#xB2E4;. &#xBD80;&#xBD84;&#xC801;&#xC73C;&#xB85C; &#xBD80;&#xBD84;&#xBC94;&#xC704; &#xCC98;&#xB9AC;&#xAC00; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. Outer &#xC9D1;&#xD569;&#xC774; &#xBBF8;&#xB9AC; &#xC815;&#xB82C;&#xB41C; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; &#xC77C;&#xBD80;&#xB9CC; Fet&#xD558;&#xB2E4; &#xBA48;&#xCD98;&#xB2E4;&#xBA74; Outer &#xC9D1;&#xD569;&#xC740; &#xB05D;&#xAE4C;&#xC9C0; &#xC77D;&#xC744; &#xD544;&#xC694;&#xAC00; &#xC5C6;&#xB2E4;. Table&#xBCC4; &#xAC80;&#xC0C9; &#xC870;&#xAC74;&#xC5D0; &#xC758;&#xD574; &#xC804;&#xCCB4; &#xC77C;&#xB7C9;&#xC774; &#xACB0;&#xC815; NL Join&#xC758; &#xACBD;&#xC6B0; Outer &#xC9D1;&#xD569;&#xC5D0;&#xC11C; &#xC870;&#xC778; &#xB300;&#xC0C1;&#xC774; &#xB418;&#xB294; &#xAC74;&#xC218;&#xC5D0; &#xC758;&#xD574; &#xC88C;&#xC6B0;&#xB41C;&#xB2E4;. Sort Merge Join&#xC758; &#xACBD;&#xC6B0; &#xAC01; &#xC9D1;&#xD569;&#xC758; &#xD06C;&#xAE30;, &#xC989; &#xAC01; &#xD14C;&#xC774;&#xBE14;&#xBCC4; &#xAC80;&#xC0C9; &#xC870;&#xAC74;&#xC5D0; &#xC758;&#xD574; &#xC88C;&#xC6B0;&#xB41C;&#xB2E4;. Inner Table&#xC744; &#xBC18;&#xBCF5; &#xC561;&#xC138;&#xC2A4;&#xD558;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;. Hash Join &#xC9C4;&#xD589; &#xB2E8;&#xACC4; &#xB458; &#xC911; &#xC791;&#xC740; &#xC9D1;&#xD569;(Build input)&#xC744; &#xC77D;&#xC5B4; Hash Area&#xC5D0; Hash Map&#xC744; &#xC0DD;&#xC131; (Hash Bucket&#xC73C;&#xB85C; &#xAD6C;&#xC131;&#xB41C; &#xBC30;&#xC5F4;) &#xD070; &#xC9D1;&#xD569;(Probe Input)&#xC744; &#xC77D;&#xC5B4; Hash Map&#xC744; &#xD0D0;&#xC0C9;&#xD558;&#xBA74;&#xC11C; JOIN SQL 123SELECT /*+ ORDERED USE_HASH(e) */ d.deptno, d.dname, e.empno, e.ename FROM dept d, emp e WHERE d.deptno = e.deptno Execute Plan 1234SELECT STATEMENT OPTIMIZER = ALL_ROWS HASH JOIN TABLE ACCESS (FULL) OF &apos;DEPT&apos; (TABLE) TABLE ACCESS (FULL) OF &apos;EMP&apos; (TABLE) &#xD2B9;&#xC9D5; NL Join&#xCC98;&#xB7FC; Random &#xC561;&#xC138;&#xC2A4; &#xBD80;&#xD558;&#xB3C4; &#xC5C6;&#xC73C;&#xBA70;, Sort Merge Join &#xCC98;&#xB7FC; Sort&#xC5D0; &#xB300;&#xD55C; &#xBD80;&#xD558;&#xB3C4; &#xC5C6;&#xB2E4;. Build Input&#xC758; &#xD06C;&#xAE30;&#xAC00; &#xC791;&#xC544;&#xC57C; &#xD6A8;&#xACFC;&#xC801;&#xC774;&#xB2E4;. Hash Join &#xC790;&#xCCB4;&#xB294; &#xC804;&#xCCB4; Table&#xC744; &#xB2E4; &#xC77D;&#xC5B4;&#xC57C; &#xD558;&#xC9C0;&#xB9CC;, Probe Input&#xC744; Scan&#xD558;&#xB294; &#xB2E8;&#xACC4;&#xB294; NL Join&#xCC98;&#xB7FC; &#xBD80;&#xBD84;&#xBC94;&#xC704;&#xCC98;&#xB9AC;&#xAC00; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. Build Input&#xC774; Memory &#xACF5;&#xAC04;&#xC744; &#xCD08;&#xACFC;&#xD558;&#xB294; &#xACBD;&#xC6B0; Partition &#xB2E8;&#xACC4; : &#xC591;&#xCABD; &#xD14C;&#xC774;&#xBE14; &#xBAA8;&#xB450; Hash&#xAC12;&#xC5D0; &#xB530;&#xB77C; &#xB3D9;&#xC801;&#xC73C;&#xB85C; &#xD30C;&#xD2F0;&#xC154;&#xB2DD; Join &#xB2E8;&#xACC4; : &#xAC01; &#xD30C;&#xD2F0;&#xC158;&#xBCC4;&#xB85C; &#xD06C;&#xAE30;&#xAC00; &#xC791;&#xC740; &#xCABD;&#xC744; Build Input&#xC73C;&#xB85C; &#xD070; &#xCABD;&#xC744; Probe Input&#xC73C;&#xB85C; &#xD574;&#xC11C; Hash Join &#xC218;&#xD589; Join &#xD558;&#xAE30;&#xC704;&#xD574;&#xC11C;&#xB294; Memory&#xB85C; Load&#xD574;&#xC57C; &#xD558;&#xB294;&#xB370; &#xADF8; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xAC00;&#xC6A9; Memory&#xB97C; &#xCD08;&#xACFC;&#xD558;&#xBA74; &#xACC4;&#xC18D;&#xD574;&#xC11C; Recursive &#xD558;&#xAC8C; Partition &#xB2E8;&#xACC4;&#xB97C; &#xC218;&#xD589;&#xD55C;&#xB2E4;. Build Input&#xC758; Hash Key &#xC911;&#xBCF5;&#xC774; &#xB9CE;&#xC744; &#xACBD;&#xC6B0; &#xBE44;&#xD6A8;&#xC728;&#xC801;&#xC774;&#xAC8C; &#xB41C;&#xB2E4;. Hash Bucket&#xC5D0;&#xC11C;&#xB294; Sequential Scan&#xC744; &#xD574;&#xC57C; &#xD558;&#xBBC0;&#xB85C; &#xC5D4;&#xD2B8;&#xB9AC;&#xAC00; &#xB9CE;&#xC544;&#xC9C0;&#xBA74; &#xADF8;&#xB9CC;&#xD07C; &#xBE44;&#xD6A8;&#xC728;&#xC801;&#xC774;&#xB2E4;. Hash Join &#xC804;&#xB7B5; &#xAC00;&#xC7A5; &#xADF9;&#xC801;&#xC73C;&#xB85C; &#xD6A8;&#xACFC;&#xAC00; &#xC88B;&#xAE30; &#xC704;&#xD55C; &#xC870;&#xAC74; &#xD55C; &#xCABD; Table&#xC774; &#xAC00;&#xC6A9; Memory&#xC5D0; &#xB2F4;&#xAE38; &#xC815;&#xB3C4;&#xB85C; &#xCDA9;&#xBD84;&#xD788; &#xC791;&#xC544;&#xC57C; &#xD568; Build Input HashKey &#xCE7C;&#xB7FC;&#xC758; &#xC911;&#xBCF5; &#xAC12;&#xC774; &#xAC70;&#xC758; &#xC5C6;&#xC5B4;&#xC57C; &#xD568; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC740; &#xACBD;&#xC6B0; Hash Join&#xC758; &#xC0AC;&#xC6A9;&#xC744; &#xACE0;&#xB824;&#xD574; &#xBCF4;&#xC544;&#xC57C; &#xD55C;&#xB2E4;. Join &#xCE7C;&#xB7FC;&#xC5D0; &#xC801;&#xB2F9;&#xD55C; Index&#xAC00; &#xC5C6;&#xC5B4; NL Join&#xC774; &#xBE44;&#xD6A8;&#xC728;&#xC801;&#xC77C; &#xB54C; Index&#xAC00; &#xC788;&#xB354;&#xB77C;&#xB3C4; Driving &#xC9D1;&#xD569;&#xC5D0;&#xC11C; Inner &#xCABD;&#xC73C;&#xB85C; Join &#xC561;&#xC138;&#xC2A4;&#xAC00; &#xB9CE;&#xC544; Random &#xC561;&#xC138;&#xC2A4; &#xBD80;&#xD558;&#xAC00; &#xC2EC;&#xD560; &#xB54C; Sort Merge Join&#xC744; &#xD558;&#xAE30;&#xC5D0; &#xB450; &#xD14C;&#xC774;&#xBE14;&#xC774; &#xB108;&#xBB34; &#xCEE4; Sort &#xBD80;&#xD558;&#xAC00; &#xC2EC;&#xD560; &#xB54C; &#xC218;&#xD589;&#xBE48;&#xB3C4;&#xAC00; &#xB0AE;&#xACE0; &#xC218;&#xD589; &#xC2DC;&#xAC04;&#xC774; &#xC624;&#xB798; &#xAC78;&#xB9AC;&#xB294; &#xB300;&#xC6A9;&#xB7C9; Table Join &#xC2DC; Hash &#xACB0;&#xACFC;&#xB294; &#xC77C;&#xD68C;&#xC6A9;&#xC774;&#xB2E4;. (&#xC7AC;&#xC0AC;&#xC6A9;&#xC774; &#xC548;&#xB41C;&#xB2E4;.) &#xC218;&#xD589;&#xBE48;&#xB3C4;&#xAC00; &#xB192;&#xC740; &#xC791;&#xC5C5;&#xC744; Hash&#xB85C; &#xD558;&#xBA74; &#xBA54;&#xBAA8;&#xB9AC; &#xD655;&#xBCF4;&#xB97C; &#xC704;&#xD574; Latch &#xACBD;&#xD569;&#xC774; &#xBC1C;&#xC0DD;&#xD574; &#xC2DC;&#xC2A4;&#xD15C; &#xB3D9;&#xC2DC;&#xC131;&#xC744; &#xB5A8;&#xC5B4;&#xB728;&#xB9B4; &#xC218; &#xC788;&#xB2E4;. Scalar Subquery Scalar Subquery : 1&#xAC1C;&#xC758; data (1 row 1 column)&#xB9CC; &#xBC18;&#xD658;. SQL&#xBB38; &#xC911; column&#xC774; &#xC704;&#xCE58;&#xD560; &#xC218; &#xC788;&#xB294; &#xB300;&#xBD80;&#xBD84;&#xC758; &#xACF3;&#xC5D0; &#xC0AC;&#xC6A9; &#xAC00;&#xB2A5; &#xB300;&#xBD80;&#xBD84;&#xC758; Scalar Subquery&#xB294; Outer Join&#xBB38;&#xC73C;&#xB85C; &#xBCC0;&#xACBD;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. 123456789SELECT empno, ename, sal, hiredate, (SELECT d.dname FROM dept d WHERE d.deptno = e.deptno) dname FROM EMP e WHERE sal &gt;= 2000; SELECT empno, ename, sal, hiredate, dname FROM emp e, dept d WHERE e.deptno(+) = d.deptno AND sal &gt;= 2000; &#xACB0;&#xACFC;&#xB9CC; 100% &#xAC19;&#xC744; &#xBFD0; &#xC544;&#xB2C8;&#xB77C; &#xCC98;&#xB9AC; &#xACBD;&#xB85C;&#xB3C4; &#xB3D9;&#xC77C;&#xD558;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; Scarlar Subquery&#xB294; &#xB0B4;&#xBD80;&#xC801;&#xC73C;&#xB85C; Caching &#xAE30;&#xBC95;&#xC774; &#xC791;&#xC6A9;&#xD55C;&#xB2E4;. Scarlar Subquery Cache Subquery&#xC758; &#xC785;&#xB825;&#xAC12;&#xACFC; &#xCD9C;&#xB825;&#xAC12;&#xC744; Cache&#xC5D0; &#xC800;&#xC7A5; Main Query&#xC5D0;&#xC11C; &#xAC19;&#xC740; &#xC785;&#xB825;&#xAC12;&#xC774; &#xB4E4;&#xC5B4;&#xC624;&#xBA74; &#xCE90;&#xC2DC;&#xB41C; &#xCD9C;&#xB825;&#xAC12;&#xC744; &#xB9AC;&#xD134; Hash &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xCC3E;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC785;&#xB825;&#xAC12;&#xC758; &#xC885;&#xB958;&#xAC00; &#xC18C;&#xC218;&#xC77C; &#xACBD;&#xC6B0; &#xB354;&#xC6B1; &#xD6A8;&#xACFC;&#xC801; 2&#xAC1C; &#xC774;&#xC0C1;&#xC758; &#xAC12;&#xC744; return&#xD558;&#xACE0; &#xC2F6;&#xC744; &#xB550; &#xAC12;&#xC744; &#xACB0;&#xD569;&#xD558;&#xC5EC; 1&#xAC1C;&#xB85C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC11C; return&#xD558;&#xACE0; &#xBC16;&#xC5D0;&#xC11C; SUBSTR&#xB85C; &#xBD84;&#xB9AC;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xC744; &#xC0AC;&#xC6A9; 12345SELECT d.deptno, d.dname, avg_sal, min_sal, max_sal FROM dept d, (SELECT deptno, AVG(sal) avg_sal, MIN(sal) min_sal, MAX(sal) max_sal FROM emp GROUP BY deptno) e WHERE d.deptno = e.deptno(+) AND d.loc = &apos;CHICAGO&apos;; &#xC704;&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC77C;&#xB2E8; Inline View&#xB97C; &#xB9CC;&#xB4E4;&#xAE30; &#xC704;&#xD574; emp &#xD14C;&#xC774;&#xBE14; &#xC804;&#xCCB4;&#xB97C; &#xC77D;&#xC5B4;&#xC57C; &#xD55C;&#xB2E4;. 123456SELECT d.deptno, d.dname, (SELECT AVG(sal) FROM emp WHERE emp.deptno = d.deptno) avg_sal, (SELECT MIN(sal) FROM emp WHERE emp.deptno = d.deptno) min_sal, (SELECT MAX(sal) FROM emp WHERE emp.deptno = d.deptno) max_sal FROM dept d WHERE d.loc = &apos;CHICAGO&apos;; &#xC704;&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; emp&#xB97C; 3&#xBC88; &#xD638;&#xCD9C;&#xD558;&#xC600;&#xB2E4;. 123456789SELECT deptno, dname, TO_NUMBER(SUBSTR(ret,1,5)) avg_sal, TO_NUMBER(SUBSTR(ret,6,5)) min_sal, TO_NUMBER(SUBSTR(ret,11,5)) max_sal FROM (SELECT d.deptno, d.dname, (SELECT LPAD(AVG(sal),5) || LPAD(MIN(sal),5) || LPAD(MAX(sal),5) FROM emp WHERE emp.deptno = d.deptno) ret FROM dept d WHERE d.loc = &apos;CHICAGO&apos;); &#xB2E4;&#xC18C; Query&#xAC00; &#xC880; &#xBCF5;&#xC7A1;&#xD574; &#xC84C;&#xC9C0;&#xB9CC;, emp &#xD14C;&#xC774;&#xBE14;&#xC744; 1&#xBC88;&#xB9CC; &#xC77D;&#xACE0;&#xB3C4; &#xAC19;&#xC740; &#xACB0;&#xACFC;&#xB97C; &#xCD9C;&#xB825;&#xD558;&#xC600;&#xB2E4;.","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 3-4-1 Index","slug":"03.05.index","date":"2016-02-04T15:00:00.000Z","updated":"2017-04-24T00:07:47.000Z","comments":true,"path":"2016/02/05/03.05.index/","link":"","permalink":"http://DevStarSJ.github.io/2016/02/05/03.05.index/","excerpt":"","text":"3&#xACFC;&#xBAA9; SQL &#xACE0;&#xAE09; &#xD65C;&#xC6A9; &#xBC0F; Tuning 4&#xC7A5; Index&#xC640; Join 4.1 Index Index&#xC758; NULL&#xAC12; Oracle : &#xBAA8;&#xB450; NULL&#xC778; &#xAC12;&#xC740; &#xC800;&#xC7A5;&#xD558;&#xC9C0; &#xC54A;&#xC74C;. NULL&#xC740; &#xB9E8; &#xB4A4;&#xC5D0; &#xC800;&#xC7A5; MS-SQL : &#xBAA8;&#xB450; NULL&#xC778; &#xAC12;&#xB3C4; &#xC800;&#xC7A5;. NULL&#xC740; &#xB9E8; &#xC55E;&#xC5D0; &#xC800;&#xC7A5; Index &#xD0D0;&#xC0C9; &#xC218;&#xC9C1; &#xD0D0;&#xC0C9; &#xC218;&#xD3C9;&#xC801; &#xD0D0;&#xC0C9;&#xC744; &#xC704;&#xD55C; &#xC2DC;&#xC791;&#xC810;&#xC744; &#xCC3E;&#xB294; &#xACFC;&#xC815; Root Node&#xC5D0;&#xC11C; Leaf Node&#xAE4C;&#xC9C0;&#xC758; &#xAC80;&#xC0C9; Index &#xC870;&#xAC74;&#xC5D0; &#xB9DE;&#xB294; &#xCCAB;&#xBC88;&#xC9F8; &#xAC12;&#xC744; &#xCC3E;&#xC544;&#xAC00;&#xB294; &#xC5F0;&#xC0B0; &#xC218;&#xD3C9; &#xD0D0;&#xC0C9; Leaf Node&#xB07C;&#xB9AC; &#xC5F0;&#xACB0;&#xB41C; Link&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xBC94;&#xC704; &#xAC80;&#xC0C9; Index Scan &#xBC29;&#xC2DD; 1. Index Range Scan 1INDEX (RANGE SCAN) OF &apos;&#xC778;&#xB371;&#xC2A4;&#xBA85;&apos; (INDEX) &#xC218;&#xC9C1; &#xD0D0;&#xC0C9; &#xD6C4; Leaf Block&#xC744; &#xD544;&#xC694;&#xD55C; &#xBC94;&#xC704;&#xB9CC; Scan B*Tree Index&#xC758; &#xAC00;&#xC7A5; &#xC77C;&#xBC18;&#xC801;&#xC774;&#xACE0; &#xC815;&#xC0C1;&#xC801;&#xC778; &#xD615;&#xD0DC; Index &#xAD6C;&#xC131; &#xCE7C;&#xB7FC; &#xC911; &#xC120;&#xB450; &#xCEEC;&#xB7FC;&#xC774; &#xC870;&#xAC74;&#xC808;&#xC5D0; &#xC0AC;&#xC6A9;&#xB418;&#xC5B4;&#xC57C;&#xB9CC; &#xAC00;&#xB2A5; &#xC0DD;&#xC131;&#xB41C; &#xACB0;&#xACFC;&#xC9D1;&#xD569;&#xC740; Index &#xCEEC;&#xB7FC; &#xC21C;&#xB300;&#xB85C; &#xC815;&#xB82C;&#xB41C; &#xC0C1;&#xD0DC; (ORDER BY, MIN, MAX &#xCC98;&#xB9AC; &#xAC00;&#xB2A5;) 2. Index Full Scan 1INDEX (FULL SCAN) OF &apos;&#xC778;&#xB371;&#xC2A4;&#xBA85;&apos; (INDEX) &#xC218;&#xC9C1; &#xD0D0;&#xC0C9; &#xC5C6;&#xC774; Leaf Block&#xC744; &#xCC98;&#xC74C;&#xBD80;&#xD130; &#xB05D;&#xAE4C;&#xC9C0; &#xC218;&#xD3C9;&#xC801;&#xC73C;&#xB85C; Scan &#xB300;&#xAC1C;&#xC758; &#xACBD;&#xC6B0; Index&#xC758; &#xC120;&#xB450; &#xCEEC;&#xB7FC;&#xC774; &#xC870;&#xAC74;&#xC808;&#xC5D0; &#xC5C6;&#xC73C;&#xBA74; Optimizer&#xB294; Table Full Scan&#xC744; &#xACE0;&#xB824;&#xD55C;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xB2E4;&#xC74C; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; Optimzer&#xAC00; &#xC804;&#xB7B5;&#xC801;&#xC73C;&#xB85C; Index Full Scan&#xC744; &#xACE0;&#xB824;&#xD55C;&#xB2E4;. Table&#xC774; &#xB300;&#xC6A9;&#xB7C9;&#xC774;&#xAC70;&#xB098;, Index&#xC758; &#xB098;&#xBA38;&#xC9C0; &#xCE7C;&#xB7FC;&#xC73C;&#xB85C; &#xB300;&#xBD80;&#xBD84;&#xC758; record&#xB97C; filtering&#xD558;&#xACE0; &#xC77C;&#xBD80;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB9CC; Table &#xC561;&#xC138;&#xC2A4;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xACBD;&#xC6B0; ORDER BY &#xC5F0;&#xC0B0;&#xC744; &#xD574;&#xC57C;&#xD558;&#xB294;&#xB370; first_rows Hint&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xBD80;&#xBD84;&#xBC94;&#xC704; &#xCC98;&#xB9AC;&#xB97C; &#xD560; &#xACBD;&#xC6B0;. &#xD558;&#xC9C0;&#xB9CC; &#xC774; &#xACBD;&#xC6B0; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; FETCH&#xB97C; &#xB05D;&#xAE4C;&#xC9C0; &#xB2E4; &#xD560; &#xACBD;&#xC6B0; Table Full Scan&#xBCF4;&#xB2E4; &#xB354; &#xBE44;&#xD6A8;&#xC728;&#xC801;&#xC774;&#xAC8C; &#xB41C;&#xB2E4;. 3. Index Unique Scan 1INDEX (UNIQUE SCAN) OF &apos;PK &#xB610;&#xB294; Unique Index&#xBA85;` (UNIQUE) &#xC218;&#xC9C1; &#xD0D0;&#xC0C9;&#xB9CC;&#xC73C;&#xB85C; Scan Unique Index&#xB97C; = &#xC870;&#xAC74;&#xC73C;&#xB85C; &#xAC80;&#xC0C9;&#xD560; &#xACBD;&#xC6B0;&#xC5D0;&#xB9CC; &#xC791;&#xB3D9; 4. Index Skip Scan 1INDEX (SKIP SCAN) OF &apos;&#xC778;&#xB371;&#xC2A4;&#xBA85;&apos; (INDEX) INDEX&#xC758; &#xC120;&#xB450;&#xCEEC;&#xB7FC;&#xC774; &#xC870;&#xAC74;&#xC808;&#xC5D0; &#xBE60;&#xC84C;&#xC744; &#xACBD;&#xC6B0; &#xB300;&#xBD80;&#xBD84; Table Full Scan&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0;&#xB9CC; 9i&#xC5D0;&#xC11C; &#xC0C8;&#xB85C; &#xC0DD;&#xAE34; &#xBC29;&#xC2DD; &#xC120;&#xB450; &#xCEEC;&#xB7FC;&#xC758; DISTICT &#xC218;&#xAC00; &#xC801;&#xACE0;, &#xD6C4;&#xD589; &#xCEEC;&#xB7FC;&#xC758; DISTINCT &#xC218;&#xAC00; &#xB9CE;&#xC744; &#xACBD;&#xC6B0; &#xD6A8;&#xACFC;&#xC801; 5. Index Fast Full Scan Index&#xC5D0; &#xD3EC;&#xD568;&#xB41C; &#xCEEC;&#xB7FC;&#xB9CC;&#xC73C;&#xB85C; &#xC870;&#xD68C;&#xAC00; &#xAC00;&#xB2A5;&#xD55C; &#xACBD;&#xC6B0; Index Tree&#xAD6C;&#xC870;&#xB97C; &#xBB34;&#xC2DC;&#xD558;&#xACE0; Segment &#xC804;&#xCCB4;&#xB97C; Multiblock Read &#xBC29;&#xC2DD;&#xC73C;&#xB85C; Scan &#xACB0;&#xACFC;&#xC9D1;&#xD569; &#xC21C;&#xC11C;&#xAC00; &#xBCF4;&#xC7A5; &#xC548;&#xB428; Parallel Scan &#xAC00;&#xB2A5; 6. Index Range Scan Descending 1INDEX (RANGE SCAN DESCENDING) OF &apos;&#xC778;&#xB371;&#xC2A4;&#xBA85;&apos; (INDEX) Index Range Scan&#xACFC; &#xB3D9;&#xC77C;&#xD55C; &#xBC29;&#xBC95;&#xC774;&#xB098; &#xB4A4;&#xC5D0;&#xC11C; &#xC55E;&#xC73C;&#xB85C; Scan Index&#xC5D0; &#xC800;&#xC7A5;&#xB41C; &#xC21C;&#xC11C;&#xC640;&#xB294; &#xBC18;&#xB300;&#xB85C; &#xC815;&#xB82C;&#xB41C; &#xACB0;&#xACFC;&#xC9D1;&#xD569;&#xC744; &#xCD9C;&#xB825; MIN / MAX &#xAC12;&#xC744; &#xAD6C;&#xD560; &#xACBD;&#xC6B0; 1&#xAC74;&#xB9CC; &#xC77D;&#xACE0; &#xBA48;&#xCD94;&#xB294; &#xC2E4;&#xD589;&#xACC4;&#xD68D;&#xC73C;&#xB85C; &#xC720;&#xB3C4;&#xD560; &#xACBD;&#xC6B0;&#xC5D0; &#xC88B;&#xC74C; 1INDEX (RANGE SCAN (MIN/MAX)) OF &apos;&#xC778;&#xB371;&#xC2A4;&#xBA85;&apos; (INDEX) Index &#xC885;&#xB958; 1. B*Tree Index &#xAC00;&#xC7A5; &#xAE30;&#xBCF8;&#xC801;&#xC778; Index &#xD615;&#xC2DD; &#xCD5C;&#xC801;&#xC758; &#xC131;&#xB2A5;&#xC744; &#xC704;&#xD574;&#xC11C;&#xB294; Index Fragmentation&#xC744; &#xACE0;&#xB824;&#xD574;&#xC57C; &#xD568; Unbalnaced Index Root&#xC5D0;&#xC11C; Leaf Node&#xAE4C;&#xC9C0;&#xC758; Height&#xAC00; &#xB2E4;&#xB978; &#xACBD;&#xC6B0; BTree&#xC5D0;&#xC11C;&#xB294; &#xC774;&#xB7F0; &#xD604;&#xC0C1;&#xC774; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xC74C; (BalancedTree&#xC5D0;&#xC11C; Unbalanced &#xD604;&#xC0C1;&#xC774; &#xC0DD;&#xAE30;&#xB294;&#xAC74; &#xB9D0;&#xC774; &#xC548;&#xB428;) Index Skew Index Enrty&#xAC00; &#xD55C;&#xCABD;&#xC73C;&#xB85C; &#xCE58;&#xC6B0;&#xCE58;&#xB294; &#xD604;&#xC0C1; &#xB300;&#xB7C9;&#xC758; delete &#xC791;&#xC5C5; &#xD6C4;&#xC5D0;&#xB294; &#xD55C;&#xCABD;&#xC758; Leaf Node&#xB4E4;&#xC774; empty &#xC0C1;&#xD0DC;&#xAC00; &#xB428; empty Node&#xB4E4;&#xC740; &#xC5B8;&#xC81C;&#xB4E0; &#xC7AC;&#xC0AC;&#xC6A9; &#xAC00;&#xB2A5;&#xD558;&#xC9C0;&#xB9CC;, &#xB2E4;&#xC2DC; &#xCC44;&#xC6CC;&#xC9C8; &#xB54C;&#xAE4C;&#xC9C0;&#xB294; Index Scan &#xD6A8;&#xC728;&#xC774; &#xB5A8;&#xC5B4;&#xC9D0; MS-SQL&#xC740; &#xC8FC;&#xAE30;&#xC801;&#xC73C;&#xB85C; Index&#xB97C; &#xC815;&#xB9AC;&#xD574;&#xC8FC;&#xBBC0;&#xB85C; &#xC774;&#xB7F0; &#xD604;&#xC0C1;&#xC774; &#xB098;&#xD0C0;&#xB098;&#xC9C0; &#xC54A;&#xC74C; Index Sparse Index Block &#xB0B4;&#xC758; &#xBC00;&#xB3C4;(density)&#xAC00; &#xB5A8;&#xC5B4;&#xC9C0;&#xB294; &#xD604;&#xC0C1; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xD604;&#xC0C1;&#xC774; &#xC77C;&#xC5B4;&#xB098;&#xBA74; Index Sparse&#xB77C; &#xD310;&#xB2E8; Index &#xB0B4;&#xC758; record&#xB294; &#xB9CE;&#xC774; &#xC0AD;&#xC81C;&#xD588;&#xC9C0;&#xB9CC;, Index Scan Block &#xC218;&#xB294; &#xBCC0;&#xD654;&#xAC00; &#xC5C6;&#xC74C; Index record&#xC218;&#xB294; &#xC77C;&#xC815;&#xD55C;&#xB370;, Index &#xC0AC;&#xC6A9; &#xACF5;&#xAC04;&#xC774; &#xC810;&#xC810; &#xCEE4;&#xC9D0; Index &#xC7AC;&#xC0DD;&#xC131; &#xC704;&#xC640; &#xAC19;&#xC740; Fragmentation &#xD604;&#xC0C1;&#xC744; &#xC81C;&#xAC70;&#xD558;&#xAE30; &#xC704;&#xD574; Index&#xB97C; &#xC0AD;&#xC81C; &#xD6C4; &#xC7AC;&#xC0DD;&#xC131; &#xC7AC;&#xC0DD;&#xC131;&#xC740; &#xC218;&#xD589;&#xC2DC;&#xAC04;&#xACFC; &#xBD80;&#xD558;&#xAC00; &#xD070; &#xC791;&#xC5C5;&#xC774;&#xBBC0;&#xB85C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC608;&#xC0C1;&#xD6A8;&#xACFC;&#xAC00; &#xD655;&#xC2E4;&#xD560; &#xB54C;&#xB9CC; &#xC2DC;&#xD589;&#xD558;&#xB294;&#xAC8C; &#xBC14;&#xB78C;&#xC9C1;&#xD568; Index &#xBD84;&#xD560;&#xC5D0; &#xC758;&#xD55C; &#xACBD;&#xD569;&#xC774; &#xD604;&#xC800;&#xD788; &#xB192;&#xC744; &#xB54C; &#xC790;&#xC8FC; &#xC0AC;&#xC6A9;&#xB418;&#xB294; Index Scan &#xD6A8;&#xC728;&#xC744; &#xB192;&#xC774;&#xACE0;&#xC790; &#xD560; &#xB54C;. &#xD2B9;&#xD788; NL Join&#xC5D0;&#xC11C; &#xBC18;&#xBCF5; &#xC561;&#xC138;&#xC2A4; &#xB418;&#xB294; &#xACBD;&#xC6B0; &#xB300;&#xB7C9;&#xC758; delete &#xC791;&#xC5C5; &#xC774;&#xD6C4; &#xC0C8;&#xB85C;&#xC6B4; record&#xAC00; &#xC785;&#xB825;&#xB420; &#xB54C;&#xAE4C;&#xC9C0; &#xC624;&#xB79C; &#xC2DC;&#xAC04;&#xC774; &#xAC78;&#xB9B4; &#xB54C; &#xCD1D; record&#xC218;&#xAC00; &#xC77C;&#xC815;&#xD55C;&#xB370;&#xB3C4; Index&#xAC00; &#xACC4;&#xC18D; &#xCEE4;&#xC9C8; &#xB54C; 2 Bitmap Index Column&#xC774; &#xAC00;&#xC9C8;&#xC218; &#xC788;&#xB294; &#xAC12;&#xC758; DISTINCT &#xC218;&#xB9CC;&#xD07C;&#xC758; BIT(0,1)&#xB97C; 2&#xCC28;&#xC6D0; &#xBC30;&#xC5F4;&#xB85C; &#xD45C;&#xD604; &#xC5EC;&#xB7EC; INDEX&#xB97C; &#xB3D9;&#xC2DC;&#xC5D0; &#xD65C;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xC5B4;&#xC11C;, &#xC815;&#xD615;&#xD654;&#xB418;&#xC9C0; &#xC54A;&#xC740; ad-hoc query&#xAC00; &#xB9CE;&#xC740; &#xD658;&#xACBD;&#xC5D0; &#xD6A8;&#xACFC;&#xC801; DISTICT&#xC218;&#xAC00; &#xC801;&#xC744; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; B*Tree Index&#xBCF4;&#xB2E4; &#xC801;&#xC740; &#xACF5;&#xAC04;&#xC744; &#xCC28;&#xC9C0;&#xD558;&#xC9C0;&#xB9CC;, DISTINCT&#xC218;&#xAC00; &#xB9CE;&#xC73C;&#xBA74; &#xB354; &#xD070; &#xACF5;&#xAC04;&#xC744; &#xCC28;&#xC9C0;&#xD560; &#xC218;&#xB3C4; &#xC788;&#xB2E4;. &#xB4F1;&#xCE58;(=), &#xBD80;&#xC815;(&lt;&gt;), NULL &#xC870;&#xAC74;&#xC744; &#xCC3E;&#xB294;&#xB370; &#xD6A8;&#xACFC;&#xC801;&#xC774;&#xB2E4;. &#xD558;&#xB098;&#xC758; record&#xB9CC; &#xBCC0;&#xACBD;&#xB418;&#xB354;&#xB77C;&#xB3C4; &#xC804;&#xCCB4;&#xC5D0; Lock&#xC774; &#xAC78;&#xB9AC;&#xBBC0;&#xB85C; OLTP&#xD658;&#xACBD;&#xC5D0;&#xC11C;&#xB294; &#xC4F8;&#xC218; &#xC5C6;&#xC74C; &#xB300;&#xC6A9;&#xB7C9;&#xC758; DW(OLAP) &#xD658;&#xACBD;&#xC5D0; &#xC801;&#xD569; 3. FBI (Function Based Index) &#xCEEC;&#xB7FC;&#xAC12; &#xC790;&#xCCB4;&#xAC00; &#xC544;&#xB2CC; &#xD568;&#xC218;&#xACB0;&#xACFC;&#xAC12;&#xC73C;&#xB85C; B*Tree Index&#xB97C; &#xC0DD;&#xC131; Index &#xCEEC;&#xB7FC; &#xC790;&#xCCB4;&#xB97C; &#xAC00;&#xACF5;&#xD558;&#xBA74; &#xC815;&#xC0C1;&#xC801;&#xC778; Index &#xC0AC;&#xC6A9;&#xC774; &#xBD88;&#xAC00;&#xB2A5;&#xD55C;&#xB370;, &#xC774; &#xACBD;&#xC6B0; &#xD6A8;&#xACFC;&#xC801;&#xC73C;&#xB85C; Scan &#xAC00;&#xB2A5; 123CREATE INDEX EMP_NVL_COMM ON EMP(NVL(COMM,0)); -- &#xC0C1;&#xC5EC;&#xAE08;&#xC774; &#xC5C6;&#xB294; &#xACBD;&#xC6B0; 0CREATE INDEX EMP_UPPER_ENAME ON EMP(UPPER(ENAME)); -- &#xC774;&#xB984;&#xC744; &#xB300;&#xC18C;&#xBB38;&#xC790; &#xAD6C;&#xBD84;&#xC5C6;&#xC774; &#xAC80;&#xC0C9;&#xD574;&#xC57C; &#xD560; &#xACBD;&#xC6B0; 4. Reverse Key Index Key &#xAC12;&#xC744; Reverse() &#xD568;&#xC218;&#xB97C; &#xAC70;&#xCCD0;&#xC11C; &#xC800;&#xC7A5; &#xD55C;&#xCABD;&#xC73C;&#xB85C;&#xB9CC; &#xCE58;&#xC6B0;&#xCE58;&#xB294; &#xD615;&#xD0DC;&#xC758; &#xAC12;&#xC744; &#xBD84;&#xC0B0;&#xC801;&#xC73C;&#xB85C; &#xC800;&#xC7A5;&#xD558;&#xACE0;&#xC790; &#xD560; &#xACBD;&#xC6B0; &#xD6A8;&#xACFC;&#xC801; &#xC8FC;&#xBB38;&#xC77C;&#xC2DC;&#xC758; &#xACBD;&#xC6B0; &#xD56D;&#xC0C1; &#xC99D;&#xAC00;&#xB41C; &#xAC12;&#xC774; &#xB4E4;&#xC5B4;&#xC624;&#xB974;&#xBAA8; &#xC624;&#xB978;&#xCABD; Leaf Block&#xC5D0;&#xB9CC; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC313;&#xC778;&#xB2E4;. (Right Growing Index) &#xC774;&#xB7F4; &#xACBD;&#xC6B0; &#xC8FC;&#xBB38;&#xC77C;&#xC790;&#xB97C; &#xAC70;&#xAFB8;&#xB85C; &#xC785;&#xB825;&#xD558;&#xBA74; Leaf &#xC804;&#xCCB4;&#xC5D0; &#xACE0;&#xB974;&#xAC8C; &#xC800;&#xC7A5;&#xB418;&#xBBC0;&#xB85C; Transaction&#xC744; &#xBD84;&#xC0B0;&#xC2DC;&#xD0A4;&#xB294; &#xD6A8;&#xACFC;&#xB97C; &#xC5BB;&#xC744; &#xC218; &#xC788;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC;, &#xB4F1;&#xCE58;(=) &#xC870;&#xAC74;&#xC73C;&#xB85C;&#xB9CC; &#xAC80;&#xC0C9;&#xC774; &#xAC00;&#xB2A5; (&#xBD80;&#xB4F1;&#xD638;, BETWEEN, LIKE&#xB85C;&#xC758; &#xAC80;&#xC0C9;&#xC740; &#xBD88;&#xAC00;&#xB2A5;) 1CREATE INDEX IDX_&#xC8FC;&#xBB38;_&#xC8FC;&#xBB38;&#xC77C;&#xC2DC; ON &#xC8FC;&#xBB38;(REVERSE(&#xC8FC;&#xBB38;&#xC77C;&#xC2DC;)); 5. Cluster Index 12CREATE CLUSTER C_DEPTNO (DEPTNO NUMBER(2)) INDEX;CREATE INDEX I_DEPTNO ON CLUSTER C_DEPTNO; Oracel Clusterd Table : &#xAC12;&#xC740; Key&#xAC12;&#xC744; &#xAC00;&#xC9C4; record&#xB97C; &#xD55C; block&#xC5D0; &#xC800;&#xC7A5; (1 block&#xC758; &#xD06C;&#xAE30;&#xAC00; &#xB118;&#xC73C;&#xBA74; cluster chain&#xC73C;&#xB85C; &#xC5F0;&#xACB0;) CLUSTER&#xC5D0; &#xB300;&#xD55C; Index&#xB97C; &#xC0DD;&#xC131; Index Key&#xAC12;&#xC740; Unique Index Key : Table Record&#xAC00; 1:M &#xAD00;&#xACC4; (&#xC77C;&#xBC18; Index&#xB294; 1:1) Index Key&#xC5D0;&#xC11C; Random Scan, Cluster &#xB0B4;&#xC5D0;&#xC11C;&#xB294; Sqeuential Scan &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC740; &#xACBD;&#xC6B0; &#xC720;&#xB9AC; Scan &#xBC94;&#xC704;&#xAC00; &#xB113;&#xC744; &#xACBD;&#xC6B0; &#xD06C;&#xAE30;&#xAC00; &#xC791;&#xACE0; NL Join&#xC73C;&#xB85C; &#xBC18;&#xBCF5; Lookup&#xD558;&#xB294; Table Column &#xC218;&#xAC00; &#xC801;&#xACE0; rocord&#xAC00; &#xB9CE;&#xC740; Table &#xB370;&#xC774;&#xD130; &#xC785;&#xB825; &#xD328;&#xD134;&#xACFC; &#xC870;&#xD68C; &#xD328;&#xD134;&#xC774; &#xC11C;&#xB85C; &#xB2E4;&#xB978; Table ex. &#xC2E4;&#xC801;&#xB4F1;&#xB85D; &#xBC0F; &#xC870;&#xD68C;&#xC758; &#xACBD;&#xC6B0; &#xC785;&#xB825;&#xC740; &#xC77C;&#xC790;&#xBCC4;&#xB85C; &#xC9C4;&#xD589;&#xB418;&#xC9C0;&#xB9CC;, &#xC870;&#xD68C;&#xB294; &#xC0AC;&#xC6D0;&#xBCC4;&#xB85C; &#xD558;&#xB294; &#xACBD;&#xC6B0; &#xC77C;&#xBC18; Table&#xC758; &#xACBD;&#xC6B0; &#xC0AC;&#xC6D0;&#xB9C8;&#xB2E4; 365&#xC77C;&#xC758; &#xB370;&#xC774;&#xD130; &#xD398;&#xC774;&#xC9C0;&#xB97C; Random &#xC561;&#xC138;&#xC2A4; &#xD574;&#xC57C;&#xD568; &#xC0AC;&#xBC88;&#xC744; &#xAE30;&#xC900;&#xC73C;&#xB85C; CLUSTER&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xBA74; &#xD6A8;&#xACFC;&#xC801; 4.2 Index Tuning Index Tuning &#xAE30;&#xCD08; Index &#xC120;&#xB450; &#xCEEC;&#xB7FC;&#xC774; &#xC870;&#xAC74;&#xC808;&#xC5D0; &#xC0AC;&#xC6A9;&#xB418;&#xB354;&#xB77C;&#xB3C4; Index Range Scan&#xC774; &#xBD88;&#xAC00;&#xB2A5;&#xD558;&#xAC70;&#xB098; Index&#xB97C; &#xC0AC;&#xC6A9;&#xBABB;&#xD558;&#xB294; &#xACBD;&#xC6B0; &#xCE7C;&#xB7FC; &#xAC00;&#xACF5; : SUBSTR(DNAME, 1, 2) = &apos;&#xC601;&#xC5C5;&apos; &#xBD80;&#xC815; &#xBE44;&#xAD50; : DNAME &lt;&gt; &apos;&#xC601;&#xC5C5;&#xBD80;&apos; NOT NULL &#xC870;&#xAC74; : COMM IS NOT NULL (&#xB2F9;&#xC5F0;&#xD788; INDEX&#xC5D0;&#xB294; NULL&#xC774; &#xC5C6;&#xC73C;&#xBBC0;&#xB85C;, &#xADF8;&#xB0E5; Index Full Scan&#xACFC; &#xAC19;&#xB2E4;.) Index &#xCEEC;&#xB7FC; &#xAC00;&#xACF5;&#xC5D0; &#xB300;&#xD55C; Tuning SUBSTR(DNAME, 1, 2) = &apos;&#xC601;&#xC5C5;&apos; -&gt; DNAME LIKE &apos;&#xC601;&#xC5C5;%&apos; SAL * 12 &gt; 3000 -&gt; SAL &gt; 3000 / 12 TO_CHAR(&#xC77C;&#xC2DC;,&apos;yyyymmdd&apos;) = :dt -&gt; &#xC77C;&#xC2DC; &gt;= TO_DATE(:dt,&apos;yyyymmdd&apos;) AND &#xC77C;&#xC2DC; &lt; TO_DATE(:dt,&apos;yyyymmdd&apos;) + 1 &#xC5F0;&#xB839; || &#xC9C1;&#xC5C5; = &apos;30&#xACF5;&#xBB34;&#xC6D0;&apos; -&gt; &#xC5F0;&#xB839; = 30 AND &#xC9C1;&#xC5C5; = &apos;&#xACF5;&#xBB34;&#xC6D0;&apos; &#xD68C;&#xC6D0;&#xBC88;&#xD638; || &#xC9C0;&#xC810;&#xBC88;&#xD638; = :str -&gt; &#xD68C;&#xC6D0;&#xBC88;&#xD638; = SUBSTR(:str,1,2) AND &#xC9C0;&#xC810;&#xBC88;&#xD638; = SUBSTR(:str,3,4) Implicit Conversion (&#xBB35;&#xC2DC;&#xC801; &#xD615;&#xBCC0;&#xD658;) &#xCEEC;&#xB7FC; &#xD0C0;&#xC785;&#xACFC; &#xBE44;&#xAD50;&#xAC12; &#xD0C0;&#xC785;&#xC774; &#xB2E4;&#xB97C; &#xACBD;&#xC6B0; &#xBB35;&#xC2DC;&#xC801; &#xD615;&#xBCC0;&#xD658;&#xC774; &#xBC1C;&#xC0DD; &#xBB38;&#xC790;&#xD615;&#xACFC; &#xC22B;&#xC790;&#xD615; : &#xBB38;&#xC790;&#xD615;&#xC744; &#xC22B;&#xC790;&#xD615;&#xC73C;&#xB85C; &#xBCC0;&#xD658; &#xBB38;&#xC790;&#xD615;&#xACFC; &#xB0A0;&#xC9DC;&#xD615; : &#xBB38;&#xC790;&#xD615;&#xC744; &#xB0A0;&#xC9DC;&#xD615;&#xC73C;&#xB85C; &#xBCC0;&#xD658; &#xBCC0;&#xD658;&#xB418;&#xB294;&#xAC8C; &#xCEEC;&#xB7FC;&#xCABD;&#xC774;&#xB77C;&#xBA74; Index&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xBABB;&#xD558;&#xACE0; Table Full Scan &#xBC1C;&#xC0DD; &#xC774;&#xB7F0; &#xBCC0;&#xD658;&#xC758; &#xC6B0;&#xC120;&#xC21C;&#xC704;&#xB97C; &#xC678;&#xC6B0;&#xAE30; &#xBCF4;&#xB2E4;&#xB294; &#xADF8;&#xB0E5; &#xBE44;&#xAD50;&#xAC12;&#xC744; &#xCEEC;&#xB7FC; &#xD0C0;&#xC785;&#xC73C;&#xB85C; &#xBCC0;&#xD658;&#xD574;&#xC8FC;&#xB294;&#xAC8C; &#xC88B;&#xC74C; Table Random &#xC561;&#xC138;&#xC2A4; &#xCD5C;&#xC18C;&#xD654; Index rowid&#xC5D0; &#xC758;&#xD55C; Table &#xC561;&#xC138;&#xC2A4; 1TABLE ACCESS (BY INDEX ROWID) OF &apos;&#xCEEC;&#xB7FC;&apos; (TABLE) rowid&#xB294; disk &#xC0C1;&#xC758; &#xC704;&#xCE58;&#xC815;&#xBCF4;&#xC774;&#xB2E4;. DB Buffer Cache&#xC5D0;&#xC11C;&#xC758; &#xD574;&#xB2F9; Block&#xC758; &#xC704;&#xCE58;&#xB294; rowid&#xC758; hash&#xAC12;&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; bucket list&#xB85C; &#xCC3E;&#xC544;&#xAC04;&#xB2E4;. bucket list &#xC0C1;&#xC5D0;&#xC11C; &#xAC12;&#xC744; &#xCC3E;&#xB294; &#xACFC;&#xC815;&#xC5D0;&#xC11C;&#xB3C4; Latch, &#xBC84;&#xD37C; Lock&#xB4F1;&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xCC3E;&#xB294;&#xB2E4;. Clustering Factor Index&#xC0C1; &#xAC19;&#xC740; Block&#xC5D0; &#xC788;&#xB294; record&#xB4E4;&#xB77C;&#xB3C4; Table&#xC0C1;&#xC5D0;&#xC11C;&#xB294; &#xB2E4;&#xB978; Block&#xB4E4;&#xC5D0; &#xC788;&#xC744; &#xC218; &#xC788;&#xB2E4;. Index&#xC640; Table&#xC758; Record&#xC815;&#xB82C; &#xC21C;&#xC11C;&#xAC00; &#xBE44;&#xAD50;&#xC801; &#xAC19;&#xC740; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; Clustering Factor&#xAC00; &#xC88B;&#xC544;&#xC11C; Index Scan &#xD6A8;&#xC728;&#xC774; &#xC88B;&#xB2E4;. Index &#xC190;&#xC775;&#xBD84;&#xAE30;&#xC810; Index Range Scan&#xC5D0; &#xC758;&#xD55C; &#xBE44;&#xC6A9;&#xC774; Table Full Scan&#xBCF4;&#xB2E4; &#xB290;&#xB824;&#xC9C0;&#xB294; &#xC9C0;&#xC810; &#xC77C;&#xBC18;&#xC801;&#xC73C;&#xB85C; 5 ~ 20% &#xC815;&#xB3C4;&#xC9C0;&#xB9CC; Clustering Factor&#xAC00; &#xB098;&#xC058;&#xBA74; 5% &#xBBF8;&#xB9CC;&#xC774; &#xB420;&#xC218;&#xB3C4; &#xC788;&#xACE0;, &#xC544;&#xC8FC; &#xC88B;&#xC744; &#xB550; 90%&#xAE4C;&#xC9C0; &#xC62C;&#xB77C;&#xAC00;&#xAE30;&#xB3C4; &#xD55C;&#xB2E4;. Index rowid&#xC5D0; &#xC758;&#xD55C; Table &#xC561;&#xC138;&#xC2A4; : Random &#xC561;&#xC138;&#xC2A4;, Single Block Read Full Table Scan : Sequential &#xC561;&#xC138;&#xC2A4;, Multiblock Read &#xC190;&#xC775;&#xBD84;&#xAE30;&#xC810; &#xADF9;&#xBCF5;&#xD558;&#xAE30; Clustering Index, IOT : Table&#xC744; Index&#xAD6C;&#xC870;&#xB85C; &#xC0DD;&#xC131;&#xD568;&#xC73C;&#xB85C;&#xC368; &#xD56D;&#xC0C1; &#xC815;&#xB82C;&#xB41C; &#xC0C1;&#xD0DC;&#xB97C; &#xC720;&#xC9C0; Index Key &#xC774;&#xC678;&#xC758; &#xBBF8;&#xB9AC; &#xC9C0;&#xC815;&#xB41C; &#xCE7C;&#xB7FC;&#xC744; Leaf Level&#xC5D0; &#xBAA8;&#xB450; &#xC800;&#xC7A5; (MS-SQL&#xC758; Include index) Oracle&#xC758; Clusterd Table : Key&#xAC12;&#xC774; &#xAC19;&#xC740; record&#xB97C; &#xAC19;&#xC740; Block&#xC5D0; &#xC800;&#xC7A5;&#xD568;&#xC73C;&#xB85C; Random &#xC561;&#xC138;&#xC2A4;&#xB294; Key&#xAC12;&#xB2F9; 1&#xBC88; Partitioning : &#xC790;&#xC8FC; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xCEEC;&#xB7FC; &#xAE30;&#xC900;&#xC73C;&#xB85C; &#xD30C;&#xD2F0;&#xC154;&#xB2DD;&#xC744; &#xD558;&#xBA74; Full Table Scan&#xC774;&#xB354;&#xB77C;&#xB3C4; &#xC77C;&#xBD80; &#xD30C;&#xD2F0;&#xC158;&#xB9CC; &#xC77D;&#xACE0; &#xBA48;&#xCD9C; &#xC218; &#xC788;&#xC74C; Table Random &#xC561;&#xC138;&#xC2A4; &#xCD5C;&#xC18C;&#xD654; Tuning 1. Index &#xCEEC;&#xB7FC; &#xCD94;&#xAC00; &#xAE30;&#xC874; Index&#xC758; &#xAD6C;&#xC131;&#xC774;&#xB098; &#xC2E0;&#xADDC; &#xCD94;&#xAC00;&#xB294; &#xC2E4; &#xC6B4;&#xC601; &#xD658;&#xACBD;&#xC5D0;&#xC11C;&#xB294; &#xD568;&#xBD80;&#xB85C; &#xBC14;&#xAFB8;&#xAE30;&#xAC00; &#xC27D;&#xC9C0; &#xC54A;&#xB2E4;. &#xAE30;&#xC874; Index&#xC5D0; &#xC870;&#xAC74;&#xC808;&#xC758; &#xBE44;&#xAD50;&#xC870;&#xAC74;&#xC744; &#xBCF4;&#xACE0; &#xB4A4;&#xC5D0; &#xCEEC;&#xB7FC;&#xC744; &#xCD94;&#xAC00;&#xD574;&#xC918;&#xC11C; &#xCD5C;&#xB300;&#xD55C; &#xC870;&#xAC74;&#xBE44;&#xAD50;&#xB97C; Index &#xB0B4;&#xC5D0;&#xC11C; &#xB05D;&#xB0B4;&#xACE0; Table &#xC561;&#xC138;&#xC2A4;&#xB97C; &#xCD5C;&#xC18C;&#xD654; &#xD55C;&#xB2E4;. 123456CREATE INDEX I_EMP_01 ON EMP(DEPTNO, JOB);SELECT /*+ INDEX(I_EMP_01) */ ENAME, JOB, SAL FROM EMP WHERE DEPTNO = 30 AND SAL &gt;= 2000; &#xC704;&#xC758; &#xC0C1;&#xD669;&#xC5D0;&#xC11C;&#xB294; DEPTNO = 30&#xC778; &#xC870;&#xAC74;&#xC5D0; &#xB9DE;&#xB294; record&#xB4E4;&#xC5D0; &#xB300;&#xD574;&#xC11C; Table&#xC5D0;&#xC11C; record&#xB4E4;&#xC744; &#xAC00;&#xC838;&#xC640;&#xC57C; &#xD55C;&#xB2E4;. &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xAE30;&#xC874; Index&#xB97C; &#xADF8;&#xB300;&#xB85C; &#xB450;&#xACE0; &#xCEEC;&#xB7FC;&#xB9CC; &#xCD94;&#xAC00;&#xD574; &#xC904; &#xACBD;&#xC6B0; Index&#xC758; &#xC561;&#xC138;&#xC2A4;&#xB294; &#xC904;&#xC77C; &#xC218; &#xC5C6;&#xC9C0;&#xB9CC;, Table &#xC561;&#xC138;&#xC2A4;&#xB294; &#xC904;&#xC77C; &#xC218; &#xC788;&#xB2E4;. 1CREATE INDEX I_EMP_01 ON EMP(DEPTNO, JOB, SAL); &#xB9CC;&#xC57D; Index&#xC758; &#xCE7C;&#xB7FC;&#xB9CC;&#xC73C;&#xB85C;&#xB3C4; &#xC870;&#xD68C;&#xAC00; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;&#xBA74; Table &#xC561;&#xC138;&#xC2A4; &#xC790;&#xCCB4;&#xB97C; &#xC548;&#xD574;&#xB3C4; &#xB420; &#xC218; &#xC788;&#xB2E4;. MS-SQL&#xC5D0;&#xC11C;&#xB294; &#xC774; &#xACBD;&#xC6B0;&#xB97C; Covered Index, Covered Query &#xB77C; &#xBD80;&#xB978;&#xB2E4;. Include Index : MS-SQL&#xC5D0;&#xC11C;&#xB294; Index&#xC5D0; Key&#xAC00; &#xC544;&#xB2CC; &#xC77C;&#xBC18; &#xCEEC;&#xB7FC; &#xCD94;&#xAC00;&#xAC00; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. CREATE INDEX EMP_01 ON EMP (DEPTNO) INCLUDE (SAL); 2. IOT, Cluster &#xD65C;&#xC6A9; Index Key&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xD55C;&#xBC88;&#xB9CC;&#xC5D0; &#xCC3E;&#xC544;&#xAC00;&#xC11C; Sequential&#xB85C; &#xCC3E;&#xC74C; Index Key&#xC758; Hash&#xAC12;&#xC73C;&#xB85C; &#xCC3E;&#xC544;&#xAC00;&#xBBC0;&#xB85C; = &#xC870;&#xAC74;&#xC73C;&#xB85C;&#xB9CC; &#xAC80;&#xC0C9;&#xB418;&#xB294; &#xCE7C;&#xB7FC;&#xC744; Key&#xB85C; &#xD574;&#xC57C;&#xD55C;&#xB2E4;. 3. &#xC218;&#xB3D9;&#xC73C;&#xB85C; Clustering Factor &#xB192;&#xC774;&#xAE30; &#xC790;&#xC8FC; &#xC774;&#xC6A9;&#xB418;&#xB294; Index&#xB97C; &#xAE30;&#xC900;&#xC73C;&#xB85C; Table&#xC744; &#xC7AC;&#xC0DD;&#xC131; &#xD55C; Table&#xC5D0; Index&#xAC00; &#xC5EC;&#xB7EC; &#xAC1C;&#xC778; &#xACBD;&#xC6B0; &#xADF8; &#xC911; 1&#xAC1C;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB9CC; Clustering Factor&#xAC00; &#xC88B;&#xAC8C; &#xD560; &#xC218; &#xC788;&#xB2E4;. Index Scan &#xBC94;&#xC704; &#xCD5C;&#xC18C;&#xD654; &#xC77C;&#xBC18;&#xC801;&#xC73C;&#xB85C; Random &#xC561;&#xC138;&#xC2A4; &#xBC1C;&#xC0DD;&#xB7C9;&#xC744; &#xC904;&#xC774;&#xACE0;, Sequential &#xC561;&#xC138;&#xC2A4;&#xC5D0; &#xC758;&#xD55C; &#xC120;&#xD0DD; &#xBC30;&#xC911;&#xC744; &#xB192;&#xC774;&#xBA74; &#xC131;&#xB2A5;&#xC774; &#xC88B;&#xC544;&#xC9C4;&#xB2E4;. 1. Index &#xC120;&#xD589; &#xCE7C;&#xB7FC;&#xC774; &#xBC94;&#xC704;&#xC870;&#xAC74;&#xC77C; &#xACBD;&#xC6B0; &#xBC94;&#xC704; &#xC870;&#xAC74; &#xC774;&#xD6C4;&#xC758; &#xCE7C;&#xB7FC;&#xB4E4;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; Range Scan&#xC744; &#xD574;&#xC57C; &#xD558;&#xBBC0;&#xB85C; &#xC77D;&#xC5B4;&#xC57C; &#xD560; &#xBC94;&#xC704;&#xAC00; &#xB113;&#xC5B4;&#xC9C4;&#xB2E4;. &#xC774;&#xB7F4; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; Index &#xCEEC;&#xB7FC; &#xC21C;&#xC11C;&#xB97C; &#xBC14;&#xAFD4;&#xC8FC;&#xB294;&#xAC8C; &#xD6A8;&#xACFC;&#xC801;&#xC774;&#xB2E4;. 2. &#xBC94;&#xC704;&#xC870;&#xAC74;&#xC744; In-List&#xB85C; &#xC804;&#xD658; &#xBC94;&#xC704;&#xC870;&#xAC74;&#xC73C;&#xB85C; &#xAC80;&#xC0C9;&#xD558;&#xB294; &#xCEEC;&#xB7FC;&#xC758; &#xC21C;&#xC11C;&#xB97C; &#xBC14;&#xAFB8;&#xAE30;&#xAC00; &#xD798;&#xB4E0; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; BETWEEN &#xC870;&#xAC74;&#xC744; IN-List&#xB85C; &#xBC14;&#xAFD4;&#xC8FC;&#xBA74; &#xD6A8;&#xACFC;&#xC801;&#xC774;&#xB2E4;. &#xC2E4;&#xD589;&#xACC4;&#xD68D;&#xC0C1;&#xC5D0; INLIST ITERATOR&#xB85C; &#xCC98;&#xB9AC;&#xB418;&#xBBC0;&#xB85C; Scan &#xBC94;&#xC704;&#xB97C; &#xC904;&#xC77C; &#xC218; &#xC788;&#xB2E4;. IN-List&#xB294; UNION ALL&#xB85C; &#xB530;&#xB85C; &#xC2E4;&#xD589;&#xB418;&#xB294; &#xAC70;&#xB791; &#xAC19;&#xB2E4;. IN-List&#xC758; &#xAC1C;&#xC218;&#xAC00; &#xC801;&#xC744; &#xACBD;&#xC6B0; &#xD6A8;&#xACFC;&#xC801;&#xC774;&#xB2E4;. &#xB9CE;&#xB2E4;&#xBA74; &#xBC94;&#xC704;&#xC870;&#xAC74;&#xC77C; &#xACBD;&#xC6B0;&#xBCF4;&#xB2E4; &#xBE44;&#xD6A8;&#xC728;&#xC801;&#xC77C; &#xC218; &#xC788;&#xB2E4;. 1DEPTNO BETWEEN 10 AND 20 -&gt; DEPTNO IN (10, 20) 3. &#xBC94;&#xC704;&#xC870;&#xAC74;&#xC774; 2&#xAC1C; &#xC774;&#xC0C1;&#xC77C; &#xACBD;&#xC6B0; 123456CREATE INDEX I_PROD ON PRODUCT(COMPANY, PTYPE, PNAME);SELECT * FROM PRODUCT WHERE COMPANY = :com AND PTYPE LIKE :ptype || &apos;%&apos; AND PNAME LIKE :pname || &apos;%&apos;; &#xCCAB;&#xBC88;&#xC9F8; &#xBC94;&#xC704;&#xC870;&#xAC74;&#xC5D0; &#xC758;&#xD574;&#xC11C; &#xC2A4;&#xCE94; &#xBC94;&#xC704;&#xAC00; &#xAC70;&#xC758; &#xACB0;&#xC815;&#xB098;&#xACE0;, &#xB450;&#xBC88;&#xC9F8;&#xB294; &#xD544;&#xD130; &#xC870;&#xAC74; &#xC5ED;&#xD560;&#xB9CC; &#xD55C;&#xB2E4;. &#xB9CC;&#xC57D; &#xC774; &#xACBD;&#xC6B0; &#xCCAB;&#xBC88;&#xC9F8; &#xBC94;&#xC704;&#xC870;&#xAC74;&#xC774; &#xC785;&#xB825;&#xB418;&#xC9C0; &#xC54A;&#xC744; &#xC218; &#xC788;&#xB2E4;&#xBA74; SQL&#xC744; 2&#xAC1C;&#xB85C; &#xB098;&#xB204;&#xB294;&#xAC8C; &#xD6A8;&#xACFC;&#xC801;&#xC774;&#xB2E4;. 123456789101112SELECT * FROM PRODUCT WHERE :ptype IS NULL AND COMPANY = :com AND PNAME LIKE :pname || &apos;%&apos;; UNION ALL SELECT * FROM PRODUCT WHERE :ptype IS NOT NULL AND COMPANY = :com AND PTYPE = :ptype AND PNAME LIKE :pname || &apos;%&apos;; Index &#xC124;&#xACC4; &#xAE30;&#xBCF8; &#xACF5;&#xC2DD; &#xC870;&#xAC74;&#xC808;&#xC5D0; &#xD56D;&#xC0C1; &#xC0AC;&#xC6A9;&#xB418;&#xAC70;&#xB098;, &#xC790;&#xC8FC; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xCEEC;&#xB7FC;&#xC744; &#xC120;&#xC815; = &#xC870;&#xAC74;&#xC73C;&#xB85C; &#xC790;&#xC8FC; &#xC870;&#xD68C;&#xB418;&#xB294; &#xCE7C;&#xB7FC;&#xC744; &#xC55E;&#xC73C;&#xB85C; &#xC870;&#xAC74;&#xC808;&#xC5D0; &#xC0AC;&#xC6A9;&#xB418;&#xC9C0; &#xC54A;&#xB354;&#xB77C;&#xB3C4; Sort &#xC5F0;&#xC0B0; (ORDER BY, GROUP BY)&#xB97C; &#xB300;&#xCCB4;&#xD560; &#xBAA9;&#xC801;&#xC73C;&#xB85C; &#xAD6C;&#xC131;&#xC774; &#xAC00;&#xB2A5; &#xC120;&#xD0DD;&#xB3C4;(Selectivy)&#xAC00; &#xCDA9;&#xBD84;&#xD788; &#xB0AE;&#xC9C0; &#xC54A;&#xB2E4;&#xBA74; Full Table Scan&#xBCF4;&#xB2E4; &#xB290;&#xB824;&#xC9C0;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC758;&#xBBF8;&#xAC00; &#xC5C6;&#xC74C; &#xCD94;&#xAC00; &#xACE0;&#xB824;&#xC0AC;&#xD56D; Query &#xC218;&#xD589; &#xBE48;&#xB3C4; &#xC5C5;&#xBB34;&#xC0C1; &#xC911;&#xC694;&#xB3C4; Clustering Factor &#xB370;&#xC774;&#xD130;&#xB7C9; DML &#xBD80;&#xD558; &#xC800;&#xC7A5; &#xACF5;&#xAC04; Index &#xAD00;&#xB9AC; &#xBE44;&#xC6A9;","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 3-3 Optimizer","slug":"03.04.optimizer","date":"2016-02-03T15:00:00.000Z","updated":"2017-04-24T00:04:58.000Z","comments":true,"path":"2016/02/04/03.04.optimizer/","link":"","permalink":"http://DevStarSJ.github.io/2016/02/04/03.04.optimizer/","excerpt":"","text":"3&#xACFC;&#xBAA9; SQL &#xACE0;&#xAE09; &#xD65C;&#xC6A9; &#xBC0F; Tuning 3&#xC7A5; Optimizer &#xC6D0;&#xB9AC; 3.1 Optimizer SQL&#xC744; &#xAC00;&#xC7A5; &#xBE60;&#xB974;&#xACE0; &#xD6A8;&#xC728;&#xC801;&#xC73C;&#xB85C; &#xC218;&#xD589;&#xD560; &#xCD5C;&#xC801;(&#xCD5C;&#xC800;&#xBE44;&#xC6A9;)&#xC758; &#xCC98;&#xB9AC;&#xACBD;&#xB85C;&#xB97C; &#xC0DD;&#xC131;&#xD574;&#xC8FC;&#xB294; DBMS &#xD575;&#xC2EC;&#xC5D4;&#xC9C4; Optimizer &#xC885;&#xB958; RBO (Rule-based Optimizer) : &#xADDC;&#xCE59;(&#xC6B0;&#xC120; &#xC21C;&#xC704;)&#xB97C; &#xAC00;&#xC9C0;&#xACE0; &#xC2E4;&#xD589;&#xACC4;&#xD68D; &#xC0DD;&#xC131; CBO (Cost-based Optimizer) : &#xD1B5;&#xACC4;&#xC815;&#xBCF4;&#xB97C; &#xAE30;&#xBC18;&#xC73C;&#xB85C; &#xC5EC;&#xB7EC;&#xAC00;&#xC9C0; &#xC2E4;&#xD589;&#xACC4;&#xD68D;&#xC744; &#xC0DD;&#xC131;&#xD558;&#xC5EC; &#xADF8;&#xC911; &#xCD5C;&#xC800;&#xBE44;&#xC6A9;&#xC758; &#xC2E4;&#xD589;&#xACC4;&#xD68D;&#xC744; &#xC120;&#xD0DD; &#xCD5C;&#xC801;&#xD654; &#xACFC;&#xC815; Parser : SQL Parsing. SQL&#xC758; &#xBB38;&#xBC95;(Syntax) , &#xC758;&#xBBF8; (Semantic)&#xC744; &#xD655;&#xC778; Optimizer Query Transformer : Parsing&#xB41C; SQL&#xC744; &#xD45C;&#xC900; &#xD615;&#xD0DC;&#xB85C; &#xBCC0;&#xD658; Estimator : &#xD1B5;&#xACC4;&#xC815;&#xBCF4;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xC120;&#xD0DD;&#xB3C4;, &#xCE74;&#xB514;&#xB110;&#xB9AC;&#xD2F0; &#xB4F1;&#xC73C;&#xB85C; Execution Plan&#xC758; &#xCD1D; &#xBE44;&#xC6A9;&#xC744; &#xACC4;&#xC0B0; Plan Generator : &#xD6C4;&#xBCF4;&#xAD70;&#xC774; &#xB420;&#xB9CC;&#xD55C; Execution Plan&#xC744; &#xC0DD;&#xC131; Row-Source Generator : &#xCD5C;&#xC885; &#xC120;&#xD0DD;&#xB41C; Execution Plan&#xC744; SQL &#xC5D4;&#xC9C4;&#xC774; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xB294; &#xCF54;&#xB4DC; &#xC0DD;&#xC131; SQL Engine : SQL&#xC744; &#xC2E4;&#xD589; &#xCD5C;&#xC801;&#xD654; &#xBAA9;&#xD45C; &#xC804;&#xCCB4; &#xCC98;&#xB9AC;&#xC18D;&#xB3C4; &#xCD5C;&#xC801;&#xD654; (all_rows) : &#xACB0;&#xACFC;&#xC9D1;&#xD569;&#xC744; &#xB05D;&#xAE4C;&#xC9C0; &#xC77D;&#xB294; &#xAC83;&#xC744; &#xC804;&#xC81C;. &#xB300;&#xBD80;&#xBD84; DBMS&#xC758; &#xAE30;&#xBCF8;&#xC635;&#xC158; &#xCD5C;&#xCD08; &#xC751;&#xB2F5;&#xC18D;&#xB3C4; &#xCD5C;&#xC801;&#xD654; (first_rows) : &#xACB0;&#xACFC;&#xC911; &#xC77C;&#xBD80;&#xB9CC; &#xC77D;&#xB2E4;&#xAC00; &#xBA48;&#xCD94;&#xB294; &#xAC83;&#xC744; &#xC804;&#xC81C;. 12SELECT /*+ ALL_ROWS */ ... ; -- &#xC804;&#xCCB4; &#xCC98;&#xB9AC;&#xC18D;&#xB3C4; &#xCD5C;&#xC801;&#xD654;SELECT /*+ FIRST_ROWS(10) */ ... ; -- &#xCC98;&#xC74C; 10&#xAC1C;&#xC758; row&#xB9CC; &#xC77D;&#xACE0; &#xBA48;&#xCD94;&#xB294; &#xAC83;&#xC744; &#xC804;&#xC81C;&#xB85C; &#xCD5C;&#xC801;&#xD654; Optimizer &#xD1B5;&#xACC4;&#xC720;&#xD615; Table : &#xC804;&#xCCB4; &#xB808;&#xCF54;&#xB4DC; &#xC218;, &#xCD1D; &#xBE14;&#xB85D; &#xC218;, &#xBE48; &#xBE14;&#xB85D; &#xC218;, &#xD55C; &#xD589;&#xB2F9; &#xD3C9;&#xADE0; &#xD06C;&#xAE30; &#xB4F1; Index : &#xB192;&#xC774;, &#xB9AC;&#xD504; &#xBE14;&#xB85D; &#xC218;, &#xD074;&#xB7EC;&#xC2A4;&#xD130;&#xB9C1; &#xD329;&#xD130;, &#xC778;&#xB371;&#xC2A4; &#xB808;&#xCF54;&#xB4DC; &#xC218; &#xB4F1; Column : &#xAC12;&#xC758; &#xC218;, MIN, MAX, &#xBC00;&#xB3C4;, NULL&#xAC12; &#xAC1C;&#xC218;, &#xD788;&#xC2A4;&#xD1A0;&#xADF8;&#xB7A8; &#xB4F1; System : CPU &#xC18D;&#xB3C4;, &#xD3C9;&#xADE0; I/O &#xC18D;&#xB3C4;, &#xCD08;&#xB2F9; I/O &#xCC98;&#xB9AC;&#xB7C9; &#xB4F1; &#xD1B5;&#xACC4;&#xC815;&#xBCF4;&#xB97C; &#xC774;&#xC6A9;&#xD55C; &#xBE44;&#xC6A9;&#xACC4;&#xC0B0; &#xC6D0;&#xB9AC; &#xC120;&#xD0DD;&#xB3C4; (Selectivity) : 1 / Distinct Value &#xC218; &#xCE74;&#xB514;&#xB110;&#xB9AC;&#xD2F0; (Cardinality) : &#xCD1D; Row &#xC218; X &#xC120;&#xD0DD;&#xB3C4; &#xD788;&#xC2A4;&#xD1A0;&#xADF8;&#xB7A8; (Histogram) : Column&#xC758; &#xBD84;&#xD3EC;&#xB3C4; &#xB3C4;&#xC218;&#xBD84;&#xD3EC; &#xD788;&#xC2A4;&#xD1A0;&#xADF8;&#xB7A8; : &#xAC12;&#xBCC4;&#xB85C; &#xBE48;&#xB3C4;&#xC218;(Frequency Number)&#xB97C; &#xC800;&#xC7A5; &#xB192;&#xC774;&#xADE0;&#xD615; &#xD788;&#xC2A4;&#xD1A0;&#xADF8;&#xB7A8; : &#xAC01; &#xBC84;&#xD0B7;&#xC758; &#xB192;&#xC774;&#xB97C; &#xAC19;&#xAC8C; &#xD558;&#xACE0; &#xBE48;&#xB3C4; &#xC218;&#xAC00; &#xB9CE;&#xC740; &#xAC12;(popular value)&#xB294; &#xC5EC;&#xB7EC; &#xBC84;&#xD0B7;&#xC5D0; &#xD560;&#xB2F9;. &#xCEEC;&#xB7FC;&#xC774; &#xAC00;&#xC9C4; &#xAC12;&#xC758; &#xC218;&#xAC00; &#xC544;&#xC8FC; &#xB9CE;&#xC744; &#xACBD;&#xC6B0; &#xD6A8;&#xACFC;&#xC801; &#xBE44;&#xC6A9; (Cost) I/O &#xBE44;&#xC6A9; &#xBAA8;&#xB378; : &#xC608;&#xC0C1;&#xB418;&#xB294; I/O &#xC694;&#xCCAD;(Call) &#xD69F;&#xC218;&#xB85C; &#xD3C9;&#xAC00; CPU &#xBE44;&#xC6A9; &#xBAA8;&#xB378; : I/O&#xBE44;&#xC6A9; &#xBAA8;&#xB378; + &#xC2DC;&#xAC04; &#xAC1C;&#xB150;&#xC744; &#xB354;&#xD574; &#xBE44;&#xC6A9; &#xC0B0;&#xC815; Optimizer Hint Optimizer&#xB3C4; &#xC798;&#xBABB;&#xB41C; &#xD310;&#xB2E8;&#xC744; &#xD560; &#xC218; &#xC788;&#xC73C;&#xBBC0;&#xB85C;, &#xAC1C;&#xBC1C;&#xC790;&#xAC00; &#xC9C1;&#xC811; &#xC2E4;&#xD589;&#xBC29;&#xC2DD;&#xC744; &#xC6D0;&#xD558;&#xB294;&#xB300;&#xB85C; &#xC720;&#xB3C4;&#xD558;&#xB294; &#xBC29;&#xBC95; Hint&#xAC00; &#xBB34;&#xC2DC;&#xB418;&#xB294; &#xACBD;&#xC6B0; &#xBB38;&#xBC95;&#xC801;&#xC73C;&#xB85C; &#xD2C0;&#xB9B0; &#xACBD;&#xC6B0; &#xC758;&#xBBF8;&#xC801;&#xC73C;&#xB85C; &#xD2C0;&#xB9B0; &#xACBD;&#xC6B0; : RBO&#xC5D0;&#xC11C; CBO Hint (ex. first_rows_10), unnest &#xC640; push_subq&#xB97C; &#xAC19;&#xC774; &#xC4F4; &#xACBD;&#xC6B0; &#xC798;&#xBABB;&#xB41C; &#xCC38;&#xC870; &#xC0AC;&#xC6A9; : &#xC5C6;&#xB294; Table, Index, Alias &#xC9C0;&#xC815; &#xB17C;&#xB9AC;&#xC801;&#xC73C;&#xB85C; &#xBD88;&#xAC00;&#xB2A5; : JOIN&#xC5D0; &#xB4F1;&#xCE58;(=)&#xC870;&#xAC74; &#xC5C6;&#xC774; Hash Join&#xC73C;&#xB85C; &#xC720;&#xB3C4;, Nullable &#xCE7C;&#xB7FC;&#xC5D0; &#xB300;&#xD574; Index&#xB97C; &#xD65C;&#xC6A9;&#xD574; COUNT(*) &#xACC4;&#xC0B0;&#xC2DC;&#xB3C4; Hint &#xC885;&#xB958;&#xB294; &#xBCC4;&#xB3C4;&#xB85C; &#xC815;&#xB9AC;&#xD560; &#xC608;&#xC815; 3.2 Query Transformation (&#xCFFC;&#xB9AC; &#xBCC0;&#xD658;) Optimizer&#xAC00; SQL&#xC744; &#xBD84;&#xC11D;&#xD558;&#xC5EC; &#xB3D9;&#xC77C;&#xD558;&#xC9C0;&#xB9CC; &#xB354; &#xB098;&#xC740; &#xC131;&#xB2A5;&#xC758; SQL&#xB85C; &#xC7AC;&#xC791;&#xC131; Query Transformer&#xAC00; &#xB2F4;&#xB2F9; Query &#xBCC0;&#xD658; &#xBC29;&#xC2DD; Heuristic Query &#xBCC0;&#xD658; : &#xACB0;&#xACFC;&#xB9CC; &#xBCF4;&#xC7A5;&#xB41C;&#xB2E4;&#xBA74; &#xBB34;&#xC870;&#xAC74; &#xC218;&#xD589;. Rule-based &#xCD5C;&#xC801;&#xD654; &#xAE30;&#xBC95; Cost-based Query &#xBCC0;&#xD658; : &#xBCC0;&#xD658;&#xB41C; Query&#xC758; &#xBE44;&#xC6A9;&#xC774; &#xB354; &#xB0AE;&#xC744; &#xB54C;&#xB9CC; &#xADF8;&#xAC83;&#xC744; &#xC0AC;&#xC6A9; Subquery Unnesting Nested Subquery&#xB97C; &#xD480;&#xC5B4;&#xC11C; Main-query&#xC640;&#xC758; JOIN&#xB41C; &#xD615;&#xD0DC;&#xB85C; &#xBCC0;&#xD658; Optimizer&#xB294; JOIN&#xBC29;&#xC2DD;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC5EC;&#xB7EC;&#xAC00;&#xC9C0; &#xCD5C;&#xC801;&#xD654; &#xAE30;&#xBC95;&#xC744; &#xC2DC;&#xB3C4; &#xD560; &#xC218; &#xC788;&#xB2E4;. &#xB9CC;&#xC57D; Nested Subquery&#xB97C; &#xADF8;&#xB300;&#xB85C; &#xB450;&#xACE0; &#xCD5C;&#xC801;&#xD654;&#xB97C; &#xD574;&#xC57C; &#xD55C;&#xB2E4;&#xBA74; &#xAC01;&#xAC01;&#xC758; Subquery, Main-query&#xBCC4;&#xB85C; &#xCD5C;&#xC801;&#xD654;&#xB97C; &#xD574;&#xC57C;&#xD558;&#xB294;&#xB370;, &#xC774;&#xB807;&#xAC8C; &#xBD80;&#xBD84;&#xC758; &#xCD5C;&#xC801;&#xD654;&#xAC00; &#xC804;&#xCCB4; &#xC218;&#xD589; &#xC131;&#xB2A5;&#xC758; &#xCD5C;&#xC801;&#xD654;&#xB97C; &#xBCF4;&#xC7A5;&#xD558;&#xC9C4; &#xBABB;&#xD55C;&#xB2E4;. &#xAD00;&#xB828; Hint UNNEST : Unnesting &#xD558;&#xC5EC; JOIN&#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xC720;&#xB3C4; NO_UNNEST : &#xADF8;&#xB798;&#xB3C4; &#xB454; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; Filter &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xCD5C;&#xC801;&#xD654; &#xC720;&#xB3C4; 123SELECT * FROM EMP WHERE DEPTNO IN (SELECT DEPTNO FROM DEPT); -- Main (M) : Sub (1) &#xAD00;&#xACC4;&#xC5D0;&#xC11C;&#xB294; Unnesting&#xC774; &#xB300;&#xBD80;&#xBD84; &#xC720;&#xB9AC;-- &#xBCC0;&#xD658;SELECT EMP.* FROM DEPT, EMP WHERE EMP.DEPT = DEPT.DEPTNO; Subquery&#xAC00; M&#xCABD; &#xC9D1;&#xD569;&#xC774;&#xAC70;&#xB098; Non-unique Index&#xC77C; &#xACBD;&#xC6B0; &#xC608;&#xB97C; &#xB4E4;&#xC5B4; SELECT * FROM DEPT WHERE DEPTNO IN (SELECT DEPTNO FROM EMP)&#xC640; &#xAC19;&#xC740; &#xACBD;&#xC6B0; &#xC704; &#xBC29;&#xBC95;&#xACFC; &#xAC19;&#xC774; Unnesting&#xD558;&#xBA74; &#xACB0;&#xACFC;&#xAC00; &#xB2EC;&#xB77C;&#xC9C0;&#xAC8C; &#xB41C;&#xB2E4;. (EMP&#xC5D0;&#xB294; &#xAC19;&#xC740; DEPTNO&#xAC00; &#xB9CE;&#xB2E4;.) &#xC774;&#xB7F4; &#xACBD;&#xC6B0; Optimizer&#xB294; 2 &#xAC00;&#xC9C0; &#xBC29;&#xBC95; &#xC911; &#xD558;&#xB098;&#xB97C; &#xC120;&#xD0DD;&#xD55C;&#xB2E4;. Sort Unique : Subquery&#xCABD; Table&#xC774; 1&#xCABD;&#xC784;&#xC744; &#xD638;&#xAC00;&#xC2E0;&#xD560; &#xC218; &#xC5C6;&#xB294; &#xACBD;&#xC6B0; &#xBA3C;&#xC800; Sort Unique&#xB97C; &#xC218;&#xD589;&#xD55C; &#xD6C4;&#xC5D0; JOIN Semi Join : Driving Table&#xC758; &#xD55C; row&#xAC00; Inner Table&#xC758; &#xD55C; row&#xC640; JOIN&#xC5D0; &#xC131;&#xACF5;&#xD558;&#xBA74; Outer Table&#xC758; &#xB2E4;&#xC74C; row&#xB97C; &#xC9C4;&#xD589;. Main-query &#xCABD; Table&#xC774; &#xBA3C;&#xC800; Driving&#xB420; &#xACBD;&#xC6B0; View Merging &#xC77C;&#xBC18; View, Inline View&#xB97C; JOIN&#xC73C;&#xB85C; &#xD480;&#xC5B4;&#xC11C; &#xBCC0;&#xD658; &#xC0AC;&#xB78C; &#xB208;&#xC73C;&#xB85C; &#xBCFC;&#xB550; Query&#xAC00; &#xBE14;&#xB85D;&#xD654; &#xB418;&#xC5B4; &#xBCF4;&#xAE30; &#xD3B8;&#xD558;&#xC9C0;&#xB9CC; Optimizer&#xB294; &#xAC00;&#xAE09;&#xC801; &#xD480;&#xC5B4;&#xC11C; JOIN&#xD615;&#xD0DC;&#xB85C; &#xBCC0;&#xD658;&#xD55C; &#xB4A4; &#xCD5C;&#xC801;&#xD654;&#xB97C; &#xC2DC;&#xB3C4; &#xB2E8;&#xC21C;&#xD55C; View&#xB294; Merging&#xD558;&#xC5EC;&#xB3C4; &#xC131;&#xB2A5;&#xC774; &#xB098;&#xBE60;&#xC9C0;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;. &#xBCF5;&#xC7A1;&#xD55C; &#xC5F0;&#xC0B0;&#xC744; &#xD3EC;&#xD568;&#xD558;&#xB294; View&#xB294; Merging&#xD558;&#xBA74; &#xC131;&#xB2A5;&#xC774; &#xB098;&#xBE60;&#xC9C8; &#xC218; &#xC788;&#xB2E4;. Inline View Merging &#xC608;&#xC81C; 123456789101112SELECT A.* FROM (SELECT * FROM EMP WHERE JOB = &apos;SALESMAN&apos;) A, (SELECT * FROM DEPT WHERE LOC = &apos;CHICAGO&apos;) B WHERE A.DEPTNO = B.DEPTNO;-- &#xBCC0;&#xD658;SELECT * FROM EMP A, DEPT B WHERE A.DEPTNO = B.DEPTNO AND A.JOB = &apos;SALESMAN&apos; AND B.LOC = &apos;CHICAGO&apos;; View Merging &#xC608;&#xC81C; 12345678910111213141516CREATE OR REPLACE VIEW EMP_SALESMANASSELECT * FROM EMP WHERE JOB = &apos;SALESMAN&apos;;SELECE E.* FROM EMP_SALESMAN E, DEPT D WHERE D.DEPTNO = E.DEPTNO AND E.SAL &gt;= 1500;-- &#xBCC0;&#xD658;SELECT E.* FROM EMP E, DEPT D WHERE D.DEPTNO = E.DEPTNO AND E.JOB = &apos;SALESMAN&apos; AND E.SAL &gt;= 1500; View Merging&#xC2DC; &#xC131;&#xB2A5;&#xC774; &#xB098;&#xBE60;&#xC9C8; &#xC218; &#xC788;&#xB294; &#xC5F0;&#xC0B0; GROUP BY &#xC808; DISTINCT &#xC5F0;&#xC0B0; View Merging&#xC774; &#xBD88;&#xAC00;&#xB2A5;&#xD55C; &#xC5F0;&#xC0B0; &#xC9D1;&#xD569;(SET) : UNION, UNION ALL, INTERSECT, MINUS CONNECT BY &#xC808; ROWNUM pseudo &#xCE7C;&#xB7FC; &#xC9D1;&#xACC4; &#xD568;&#xC218; (AVG, CONUT, MAX, MIN, SUM, &#x2026;) &#xBD84;&#xC11D; &#xD568;&#xC218; (Analytic Function) &#xAD00;&#xB828; Hint : MERGE, NO_MERGE Predicate Pushing (&#xC870;&#xAC74;&#xC808; &#xD478;&#xC2F1;) &#xC870;&#xAC74;&#xC808;&#xC744; &#xAC00;&#xB2A5;&#xD55C; &#xBE68;&#xB9AC; &#xCC98;&#xB9AC;&#xB418;&#xB3C4;&#xB85D; View &#xC548;&#xC73C;&#xB85C; &#xBC00;&#xC5B4;&#xB123;&#xC5B4;&#xC11C; &#xCC98;&#xB9AC;&#xB7C9;&#xC744; &#xCD5C;&#xC18C;&#xD654; &#xD558;&#xB294; &#xBC29;&#xC2DD; &#xC885;&#xB958; Predicate Pushdown : Query &#xBE14;&#xB85D; &#xBC16;&#xC5D0; &#xC788;&#xB294; &#xC870;&#xAC74;&#xC808;&#xC740; &#xC548;&#xC73C;&#xB85C; &#xBC00;&#xC5B4; &#xB123;&#xC74C; Predicate Pullup : Query &#xBE14;&#xB85D; &#xC548;&#xC758; &#xC870;&#xAC74;&#xC808;&#xC744; &#xBC16;&#xC73C;&#xB85C; &#xB0B4;&#xC624;&#xC640;&#xC11C;, &#xB2E4;&#xB978; Query &#xBE14;&#xB85D; &#xC548;&#xC73C;&#xB85C; Pushdown&#xD558;&#xB294;&#xB370; &#xC0AC;&#xC6A9; Join Predicate Pushdown : NL Join &#xC218;&#xD589;&#xC2DC; Driving Table&#xC5D0;&#xC11C; &#xC77D;&#xC740; &#xAC12;&#xC744; Inner View Query &#xCABD;&#xC73C;&#xB85C; &#xBC00;&#xC5B4; &#xB123;&#xC74C; Predicate Pushdown 123SELECT DEPTNO, AVG_SAL FROM (SELECT DEPTNO, AVG(SAL) AVG_SAL FROM EMP GROUP BY DEPTNO) WHERE DEPTNO = 30; Inline View &#xC548;&#xC5D0;&#xC11C; DEPTNO&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB9CC; GROUP BY &#xD558;&#xC5EC; &#xB370;&#xC774;&#xD130;&#xB7C9;&#xC744; &#xC904;&#xC77C; &#xC218; &#xC788;&#xB2E4;. Predicate Pullup 1234SELECT * FROM (SELECT DEPTNO, AVG(SAL) FROM EMP WHERE DEPTNO = 10 GROUP BY DEPTNO) E1, (SELECT DEPTNO, MIN(SAL), MAX(SAL) FROM EMP GROUP BY DEPTNO) E2 WHERE E1.DEPTNO = E2.DEPTNO; E1&#xC758; &#xC870;&#xAC74;&#xC744; Pullup&#xD558;&#xC5EC; E2&#xB85C; Pushdown&#xD558;&#xC5EC; &#xB370;&#xC774;&#xD130;&#xB7C9;&#xC744; &#xC904;&#xC77C; &#xC218; &#xC788;&#xB2E4;. Join Predicate Pushdown 1234SELECT D.DEPTNO, D.DNAME, E.AVG_SAL FROM DEPT D, (SELECT DEPTNO, AVG(SAL) AVG_SAL FROM EMP GROUP BY DEPTNO) E WHERE E.DEPTNO(+) = D.DEPTNO; D&#xC5D0; &#xC874;&#xC7AC;&#xD558;&#xB294; DEPTNO&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB9CC; E&#xC5D0;&#xC11C; &#xC218;&#xD589;&#xD558;&#xC5EC; &#xB370;&#xC774;&#xD130;&#xB7C9;&#xC744; &#xC904;&#xC77C; &#xC218; &#xC788;&#xB2E4;. &#xC870;&#xAC74;&#xC808; &#xC774;&#xD589;(Transitive Predicate Generation, Transitive Closure) 1234SELECT * FROM DEPT D, EMP E WHERE E.JOB = &apos;MANAGER&apos; AND E.DEPTNO = 10 AND D.DEPTNO = E.DEPTNO E&#xC758; DEPTNO = 10 &#xC870;&#xAC74;&#xC744; D&#xC5D0;&#xC11C;&#xB3C4; &#xC218;&#xD589; &#xBD88;&#xD544;&#xC694;&#xD55C; JOIN &#xC81C;&#xAC70; (Join Elimination) 1SELECT E.* FROM DEPT D, EMP E WHERE D.DEPTNO = E.DEPTNO; D&#xC758; &#xCC38;&#xC870;&#xAC00; &#xC804;&#xD600; &#xC5C6;&#xC73C;&#xBBC0;&#xB85C; &#xC81C;&#xAC70; &#xB2E8;, PK, FK&#xC758; &#xC81C;&#xC57D;&#xC870;&#xAC74;&#xC774; &#xC788;&#xC5B4;&#xC57C;&#xB9CC; &#xAC00;&#xB2A5;. PK&#xAC00; &#xC5C6;&#xB294; &#xACBD;&#xC6B0; Join Cardinality&#xB97C; &#xD30C;&#xC545;&#xD560; &#xC218; &#xC5C6;&#xC73C;&#xBBC0;&#xB85C; &#xACB0;&#xACFC;&#xAC00; &#xB2EC;&#xB77C; &#xC9C8; &#xC218; &#xC788;&#xC74C; FK&#xAC00; &#xC124;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xB2E4;&#xD558;&#xB354;&#xB77C;&#xB3C4; EMP&#xC758; DEPTNO&#xAC00; Nullable&#xC774;&#xBA74; &#xACB0;&#xACFC;&#xAC00; &#xB2EC;&#xB77C;&#xC9C8; &#xC218; &#xC788;&#xC74C; OR &#xC870;&#xAC74;&#xC744; UNION&#xC73C;&#xB85C; &#xBCC0;&#xD658; OR &#xC870;&#xAC74;&#xC744; &#xADF8;&#xB300;&#xB85C; &#xB458; &#xACBD;&#xC6B0; Full Table Scan&#xC73C;&#xB85C; &#xCC98;&#xB9AC;&#xB418;&#xAC70;&#xB098; &#xAC01;&#xAC01;&#xC758; Column&#xBCC4; Index&#xB97C; &#xD65C;&#xC6A9;&#xD558;&#xC5EC; Bitmap &#xC5F0;&#xC0B0;&#xC744; &#xD558;&#xB294; Index Combine&#xC73C;&#xB85C; &#xC791;&#xB3D9;&#xD560; &#xACBD;&#xC6B0;&#xAC00; &#xC788;&#xB2E4;. &#xAD00;&#xB828; Hint USE_CONCAT : UNION ALL &#xD45C;&#xD604; (OR-Expansion)&#xC744; &#xC720;&#xB3C4; NO_EXPAND : &#xB098;&#xB204;&#xC9C0; &#xB9D0;&#xACE0; &#xADF8;&#xB300;&#xB85C; &#xC2E4;&#xD589; &#xC9D1;&#xD569; &#xC5F0;&#xC0B0;&#xC744; JOIN &#xC5F0;&#xC0B0;&#xC73C;&#xB85C; 123SELECT JOB, MGR FROM EMPMINUSSELECT JOB, MGR FROM EMP WHERE DEPTNO = 10; &#xC704; &#xBB38;&#xC7A5;&#xC744; &#xC2E4;&#xD589;&#xD558;&#xBA74; Table Full Scan &#xD6C4; Sort Unique &#xD558;&#xB294; &#xC5F0;&#xC0B0;&#xC744; 2&#xBC88; &#xC218;&#xD589; &#xD6C4;&#xC5D0; &#xACB0;&#xACFC;&#xC9D1;&#xD569;&#xC744; &#xAD6C;&#xD558;&#xAC8C; &#xB41C;&#xB2E4;. &#xC774; &#xACBD;&#xC6B0; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xD615;&#xD0DC;&#xB85C; Query &#xBCC0;&#xD658;&#xC744; &#xD558;&#xC5EC; &#xC2E4;&#xD589;&#xC744; &#xD55C;&#xB2E4;. 12345SELECT DISTINCT JOB, MGR FROM EMP E WHERE NOT EXISTS (SELECT &apos;X&apos; FROM EMP WHERE DEPTBO = 10 AND SYS_OP_MAP_NONNULL(JOB) = SYS_OP_MAP_NONNULL(E.JOB) AND SYS_OP_MAP_NONNULL(MGR) = SYS_OP_MAP_NONNULL(E.MGR) SYS_OP_MAP_NONNULL() : null&#xB07C;&#xB9AC; &#xBE44;&#xAD50;&#xC2DC; true&#xAC12;&#xC744; &#xBC18;&#xD658;&#xD558;&#xB3C4;&#xB85D; &#xCC98;&#xB9AC; JOIN Column&#xC5D0; IS NOT NULL &#xC870;&#xAC74; &#xCD94;&#xAC00; &#xC5B4;&#xCC28;&#xD53C; NULL&#xC778; Column&#xC740; JOIN&#xC5D0; &#xC2E4;&#xD328;&#xD55C;&#xB2E4;. &#xADF8;&#xB7EC;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xBBF8;&#xB9AC; NULL&#xC778; Column&#xC5D0; &#xB300;&#xD574;&#xC11C; Filtering &#xD558;&#xBA74; &#xBD88;&#xD544;&#xC694;&#xD55C; &#xC561;&#xC138;&#xC2A4;&#xB97C; &#xC904;&#xC77C; &#xC218; &#xC788;&#xB2E4;. (Oracle&#xC758; &#xACBD;&#xC6B0; &#xD574;&#xB2F9; Column&#xC758; NULL&#xAC12; &#xBE44;&#xC911;&#xC774; 5% &#xC774;&#xC0C1;&#xC774;&#xBA74; &#xB0B4;&#xBD80;&#xC801;&#xC73C;&#xB85C; &#xCD94;&#xAC00;&#xD574;&#xC900;&#xB2E4;.) 123456SELECT EMPNO, DNAME FROM EMP E, DEPT D WHERE D.DEPTNO = E.DEPTNO AND SAL &lt;= 2900 AND E.DEPTNO IS NOT NULL -- Optimizer&#xAC00; &#xCD94;&#xAC00; AND D.DEPTNO IS NOT NULL -- Optimizer&#xAC00; &#xCD94;&#xAC00; Filter &#xC870;&#xAC74; &#xCD94;&#xAC00; 1SELECT * FROM EMP WHERE SAL BETERRN :MIN AND :MAX &#xC704; Query&#xC5D0;&#xC11C; :MIN &#xC774; :MAX&#xBCF4;&#xB2E4; &#xD06C;&#xBA74; &#xB2F9;&#xC5F0;&#xD788; &#xACB0;&#xACFC;&#xB294; &#xACF5;&#xC9D1;&#xD569;&#xC774;&#xB2E4;. &#xC774; &#xACBD;&#xC6B0; :MIN &#xAC12;&#xC774; :MAX&#xBCF4;&#xB2E4; &#xC791;&#xAC70;&#xB098; &#xAC19;&#xB2E4;&#xB294; Filter&#xC870;&#xAC74;&#xC744; &#xC784;&#xC758;&#xB85C; &#xCD94;&#xAC00;&#xD574;&#xC11C; &#xC2E4;&#xD589;&#xD574;&#xC900;&#xB2E4;. WHERE &#xBE44;&#xAD50; &#xC21C;&#xC11C; WHERE &#xC808;&#xC5D0; &#xBE44;&#xAD50;&#xD560; &#xCEEC;&#xB7FC;&#xC774; &#xB9CE;&#xC740; &#xACBD;&#xC6B0; &#xADF8; &#xC911; &#xC791;&#xC5C5;&#xB7C9;&#xC744; &#xB9CE;&#xC774; &#xC904;&#xC5EC;&#xC904;&#xAC70;&#xB77C; &#xD310;&#xB2E8;&#xD55C; &#xC870;&#xAC74;&#xBD80;&#xD130; &#xBA3C;&#xC800; &#xBE44;&#xAD50;&#xD55C;&#xB2E4;.","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 3-2 Lock과 Transaction 동시성 제어","slug":"03.03.lock","date":"2016-02-01T15:00:00.000Z","updated":"2017-04-24T00:03:45.000Z","comments":true,"path":"2016/02/02/03.03.lock/","link":"","permalink":"http://DevStarSJ.github.io/2016/02/02/03.03.lock/","excerpt":"","text":"3&#xACFC;&#xBAA9; SQL &#xACE0;&#xAE09; &#xD65C;&#xC6A9; &#xBC0F; Tuning 2&#xC7A5; Lock&#xACFC; Transaction &#xB3D9;&#xC2DC;&#xC131; &#xC81C;&#xC5B4; 2.1 Lock Shared Lock vs.&#xA0;Exclusive Lock Shared Lock (&#xACF5;&#xC720; Lock) &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xC744; &#xB54C; &#xC0AC;&#xC6A9; &#xB2E4;&#xB978; Shared Lock&#xACFC;&#xB294; &#xD638;&#xD658;&#xB418;&#xC9C0;&#xB9CC;, Exclusive Lock&#xACFC;&#xB294; &#xD638;&#xD658;&#xC774; &#xC548;&#xB428; &#xC989;, Shared Lock&#xC774; &#xAC78;&#xB824;&#xC788;&#xB294; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; Exclusive Lock&#xC740; Blocking &#xB428; Exclusive Lock (&#xBCA0;&#xD0C0;&#xC801; Lock) &#xB370;&#xC774;&#xD130;&#xB97C; &#xBCC0;&#xACBD;&#xD560; &#xB54C; &#xC0AC;&#xC6A9; &#xBAA8;&#xB4E0; &#xC885;&#xB958;&#xC758; Lock&#xACFC; &#xD638;&#xD658;&#xC774; &#xC548;&#xB428; Blocking&#xACFC; Deadlock Blocking Lock &#xACBD;&#xD569;&#xC774; &#xBC1C;&#xC0DD;&#xD558;&#xC5EC; &#xD2B9;&#xC815; &#xC138;&#xC158;&#xC774; &#xC791;&#xC5C5;&#xC744; &#xC9C4;&#xD589;&#xD558;&#xC9C0; &#xBABB;&#xD558;&#xACE0; &#xBA48;&#xCD98; &#xC0C1;&#xD0DC; Blocking &#xC0C1;&#xD0DC;&#xB97C; &#xD574;&#xC18C;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xC740; Commit or Rollback &#xBFD0; Lock&#xC5D0; &#xC758;&#xD55C; &#xC131;&#xB2A5; &#xCD5C;&#xC18C;&#xD654; &#xBC29;&#xC548; Transaction&#xC758; &#xC6D0;&#xC790;&#xC131;&#xC744; &#xD6FC;&#xC190;&#xD558;&#xC9C0; &#xC54A;&#xB294; &#xC120;&#xC5D0;&#xC11C; &#xCD5C;&#xB300;&#xD55C; &#xC9E7;&#xAC8C; &#xC815;&#xC758; &#xAC19;&#xC740; &#xB370;&#xC774;&#xD130;&#xB97C; &#xAC31;&#xC2E0;&#xD558;&#xB294; Transaction&#xC774; &#xB3D9;&#xC2DC;&#xC5D0; &#xC218;&#xD589;&#xB418;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; &#xC124;&#xACC4; Transaction Isolation Level&#xC744; &#xC9C0;&#xB098;&#xCE58;&#xAC8C; &#xC0C1;&#xD5A5; &#xC870;&#xC815;&#xD558;&#xC9C0; &#xC54A;&#xC74C; Transaction&#xC744; &#xC798; &#xC124;&#xACC4;&#xD558;&#xC5EC; &#xB300;&#xAE30; &#xD604;&#xC0C1;&#xC744; &#xD53C;&#xD558;&#xB3C4;&#xB85D; &#xD504;&#xB85C;&#xADF8;&#xB798;&#xBC0D; &#xC8FC;&#xAC04;&#xC758; &#xB300;&#xC6A9;&#xB7C9; &#xAC31;&#xC2E0;&#xC791;&#xC5C5;&#xC774; &#xBD88;&#xAC00;&#xD53C;&#xD558;&#xB2E4;&#xBA74; timeout&#xC744; &#xC774;&#xC6A9; 12SELECT * FROM T WHERE ... FOR UPDATE NOWAIT -- &#xB300;&#xAE30;&#xC5C6;&#xC774; Exception SELECT * FROM T WHERE ... FOR UPDATE WAIT 3 -- 3&#xCD08; &#xB300;&#xAE30; &#xD6C4; Exception Deadlock (&#xAD50;&#xCC29;&#xC0C1;&#xD0DC;) &#xB450; &#xC138;&#xC158;&#xC774; &#xAC01;&#xAC01; Lock&#xC744; &#xAC74; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; &#xC11C;&#xB85C;&#xC758; Lock&#xAC78;&#xB9B0; &#xB9AC;&#xC18C;&#xC2A4;&#xB97C; &#xC561;&#xC138;&#xC2A4;&#xD558;&#xB824; &#xD560; &#xACBD;&#xC6B0; &#xC601;&#xC6D0;&#xD788; &#xB300;&#xAE30;&#xC0C1;&#xD0DC;&#xC5D0; &#xBE60;&#xC9C0;&#xB294; &#xAC83; &#xC720;&#xC77C;&#xD55C; &#xD574;&#xACB0; &#xBC29;&#xBC95;&#xC740; &#xB458; &#xC911; &#xD55C; &#xC138;&#xC158;&#xC5D0; &#xC5D0;&#xB7EC;&#xB97C; &#xBC1C;&#xC0DD;&#xC2DC;&#xD0A4;&#xB294; &#xAC83; &#xD14C;&#xC774;&#xBE14; &#xC811;&#xADFC; &#xC21C;&#xC11C;&#xB97C; &#xAC19;&#xAC8C; &#xCC98;&#xB9AC;&#xD558;&#xBA74; &#xD53C;&#xD560; &#xC218; &#xC788;&#xC74C; Oracle Lock Oracle&#xC5D0;&#xC11C;&#xB294; &#xC5B4;&#xB5A0;&#xD55C; &#xC77D;&#xAE30; &#xC791;&#xC5C5;&#xB3C4; Lock&#xC5D0; &#xC601;&#xD5A5;&#xC744; &#xBC1B;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;. Undo &#xB370;&#xC774;&#xD130;&#xB97C; &#xD65C;&#xC6A9;&#xD55C; &#xB2E4;&#xC911;&#xBC84;&#xC804; &#xB3D9;&#xC2DC;&#xC131; &#xC81C;&#xC5B4; &#xBA54;&#xCEE4;&#xB2C8;&#xC998;&#xC744; &#xD65C;&#xC6A9;&#xD55C;&#xB2E4;. &#xB2E8;, SELECT &#x2026; FOR UPDATE &#xC81C;&#xC678; Row Lock &#xD56D;&#xC0C1; Exclusive Lock INSERT, UPDATE, DELETE, SELECT &#x2026; FOR UPDATE&#xB97C; &#xC218;&#xD589;&#xD55C; Transaction&#xC5D0; &#xC758;&#xD574; &#xC124;&#xC815;&#xB418;&#xBA70; &#xD574;&#xB2F9; Transaction&#xC774; Commit &#xC774;&#xB098; Rollback&#xD560;&#xB54C;&#xAE4C;&#xC9C0; &#xB2E4;&#xB978; Transaction&#xC740; &#xD574;&#xB2F9; Row&#xB97C; &#xBCC0;&#xACBD;&#xD560; &#xC218; &#xC5C6;&#xB2E4;. Table Lock Row Lock&#xC744; &#xC5BB;&#xB294; &#xC21C;&#xAC04;, &#xD574;&#xB2F9; Table&#xC5D0; &#xB300;&#xD55C; Table Lock&#xB3C4; &#xC5BB;&#xB294;&#xB2E4;. &#xD604;&#xC7AC; Transaction&#xC774; &#xAC31;&#xC2E0; &#xC911;&#xC778; Table&#xC5D0; &#xB300;&#xD574; &#xD638;&#xD658;&#xB418;&#xC9C0; &#xC54A;&#xB294; DDL &#xC218;&#xD589;&#xC744; &#xBC29;&#xC9C0;&#xD55C;&#xB2E4;. 5&#xC885;&#xB958;&#xC758; Lock&#xC774; &#xC788;&#xC74C; RS (Row Share) : X&#xC81C;&#xC678; &#xBAA8;&#xB450; &#xD5C8;&#xC6A9; RX (Row Exclusive) : RS, RX &#xD5C8;&#xC6A9; S (Share) : RS, S &#xD5C8;&#xC6A9; SRX (Share Row Exclusive) : RS &#xD5C8;&#xC6A9; X (Exclusive) : &#xBAA8;&#xB450; &#xBD88;&#xD5C8;&#xC6A9; &#xBA85;&#xC2DC;&#xC801;&#xC73C;&#xB85C; Lock Table &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC0AC;&#xC6A9; &#xD560; &#xC218;&#xB3C4; &#xC788;&#xC74C; 123LOCK TABLE emp IN ROW SHARE MODE;LOCK TABLE emp IN ROW EXCLUSIVE MODE;... 2.1 Transaction Transaction &#xD2B9;&#xC9D5; &#xC6D0;&#xC790;&#xC131; (Atomicity) : &#xC5C5;&#xBB34;&#xC0C1; &#xCD5C;&#xC18C;&#xB2E8;&#xC704; &#xC77C;&#xAD00;&#xC131; (Consistency) : &#xC2E4;&#xD589; &#xC804;&#xD6C4; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4; &#xC0C1;&#xD0DC;&#xAC00; &#xBAA8;&#xC21C;&#xB418;&#xC9C0; &#xC54A;&#xC544;&#xC57C; &#xD568; &#xACA9;&#xB9AC;&#xC131; (Isolation) : &#xC2E4;&#xD589; &#xC911; &#xB2E4;&#xB978; Transaction&#xC774; &#xC811;&#xADFC;&#xD560; &#xC218; &#xC5C6;&#xC74C; &#xC601;&#xC18D;&#xC131; (Durability) : &#xC131;&#xACF5;&#xC801;&#xC73C;&#xB85C; &#xC218;&#xD589;&#xD558;&#xBA74;, &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4;&#xC5D0; &#xC601;&#xC18D;&#xC801;&#xC73C;&#xB85C; &#xC800;&#xC7A5; &#xB0AE;&#xC740; Isolation Level&#xC5D0;&#xC11C;&#xC758; &#xD604;&#xC0C1; Dirty Read Commit&#xD558;&#xC9C0; &#xC54A;&#xC740; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xC74C;. &#xC774;&#xBBF8; &#xC77D;&#xC740; &#xB4A4; &#xB2E4;&#xC2DC; Rollback &#xB420; &#xC218; &#xC788;&#xC74C;. Non-Repeatable Read &#xD55C; Transaction &#xB0B4;&#xC758; &#xAC19;&#xC740; Query&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xAC12;&#xC774; &#xBC14;&#xB00C;&#xB294; &#xD604;&#xC0C1; &#xCC98;&#xC74C; &#xAC12;&#xC744; &#xC77D;&#xC740; &#xB4A4; &#xB2E4;&#xB978; Transaction&#xC774; &#xD574;&#xB2F9; &#xAC12;&#xC744; &#xBCC0;&#xACBD;&#xD55C; &#xACBD;&#xC6B0; Phantom Read &#xD55C; Transaction &#xB0B4;&#xC5D0; &#xAC19;&#xC740; Query&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xCC98;&#xC74C;&#xC5D0; &#xC5C6;&#xC5C8;&#xB358; &#xAC12;&#xC774; &#xC77D;&#xD788;&#xB294; &#xD604;&#xC0C1; &#xCC98;&#xC74C; &#xAC12;&#xC744; &#xC77D;&#xC740; &#xB4A4; &#xB2E4;&#xB978; Transaction&#xC774; &#xC0C8;&#xB85C;&#xC6B4; &#xAC12;&#xC744; &#xC785;&#xB825;&#xD55C; &#xACBD;&#xC6B0; Transaction Isolation Level Read Uncommitted : &#xB2E4;&#xB978; Transaction&#xC774; &#xCC98;&#xB9AC; &#xC911;&#xC778; &#xAC12;&#xC744; &#xC77D;&#xB294; &#xAC83;&#xC744; &#xD5C8;&#xC6A9; (&#xC774;&#xAC78; &#xD5C8;&#xC6A9;&#xD558;&#xB294; DB&#xB294; &#xAC70;&#xC758; &#xC5C6;&#xC74C;) Read Committed : Dirty Read &#xBC29;&#xC9C0; Repeatable Read : Non-Repeatable Read &#xBC29;&#xC9C0; Serializable Read : Phantom Read &#xBC29;&#xC9C0; 1SET TRANSACTION ISOLATION LEVEL READ SERIALIZABLE; Transaction Isolation Level&#xC744; &#xB192;&#xC77C;&#xC218;&#xB85D; Lock&#xC5D0; &#xC758;&#xC874;&#xC801;&#xC774;&#xB2E4;&#xBCF4;&#xB2C8; &#xB3D9;&#xC2DC;&#xC131;&#xC774; &#xC800;&#xD558;&#xB41C;&#xB2E4;. Oracle&#xC5D0;&#xC11C;&#xB294; &#xB2E4;&#xC911;&#xBC84;&#xC804; &#xB3D9;&#xC2DC;&#xC131; &#xC81C;&#xC5B4;(Multiversion Concurrency Control)&#xC744; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;. &#xB3D9;&#xC2DC;&#xC131; &#xC81C;&#xC5B4; (Concurrency Control) &#xBE44;&#xAD00;&#xC801; &#xB3D9;&#xC2DC;&#xC131; &#xC81C;&#xC5B4; (Pessimistic Concurrency Control) &#xAC19;&#xC740; &#xB370;&#xC774;&#xD130;&#xB97C; &#xB3D9;&#xC2DC;&#xC5D0; &#xC218;&#xC815;&#xD560; &#xAC83;&#xC774;&#xB77C;&#xACE0; &#xAC00;&#xC815; &#xBA3C;&#xC800; Lock&#xC744; &#xAC78;&#xACE0; Transaction&#xC774; &#xC644;&#xB8CC;&#xB420;&#xB54C;&#xAE4C;&#xC9C0; &#xC720;&#xC9C0; 123SELECT ... FOR UPDATE;UPDATE ...COMMIT; &#xB099;&#xAD00;&#xC801; &#xB3D9;&#xC2DC;&#xC131; &#xC81C;&#xC5B4; (Optimistic Concurrency Control) &#xAC19;&#xC740; &#xB370;&#xC774;&#xD130;&#xB97C; &#xB3D9;&#xC2DC;&#xC5D0; &#xC218;&#xC815;&#xD558;&#xC9C0; &#xC54A;&#xC744; &#xAC83;&#xC774;&#xB77C;&#xACE0; &#xAC00;&#xC815; &#xB370;&#xC774;&#xD130; &#xC77D;&#xC744; &#xB54C; Lock&#xC744; &#xAC78;&#xC9C0; &#xC54A;&#xC9C0;&#xB9CC;, &#xC218;&#xC815;&#xD560;&#xB54C; &#xBCC0;&#xACBD;&#xB418;&#xC5C8;&#xB294;&#xC9C0; &#xD655;&#xC778; 12SELECT ... INTO :a, :b, :c, :d ... ;UPDATE ... WHERE col1 = :a AND col2 = :b ...; &#xB2E4;&#xC911;&#xBC84;&#xC804; &#xB3D9;&#xC2DC;&#xC131; &#xC81C;&#xC5B4; (Multiversion Concurrency Control) &#xB370;&#xC774;&#xD130;&#xB97C; &#xBCC0;&#xACBD;&#xD560; &#xB54C;&#xB9C8;&#xB2E4; Undo &#xC601;&#xC5ED;&#xC5D0; &#xC800;&#xC7A5; Query (&#xB610;&#xB294; Transaction) &#xC2DC;&#xC791; &#xC2DC;&#xC810; &#xC774;&#xD6C4; &#xBCC0;&#xACBD;&#xB41C; &#xAC12;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; Undo &#xC601;&#xC5ED;&#xC5D0; &#xC800;&#xC7A5;&#xB41C; &#xC815;&#xBCF4;&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xC77C;&#xAD00;&#xC131; &#xC788;&#xB294; &#xBC84;&#xC804;(CR Copy)&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xC5EC; &#xC77D;&#xC74C; &#xBB38;&#xC7A5;&#xC218;&#xC900; &#xC77D;&#xAE30; &#xC77C;&#xAD00;&#xC131; (Statement-Level Read Consistency) &#xB2E8;&#xC77C; SQL &#xB0B4;&#xC5D0;&#xC11C;&#xC758; &#xC77C;&#xAD00;&#xC131; &#xC720;&#xC9C0; Query &#xC2DC;&#xC791;&#xC2DC;&#xC810; &#xC774;&#xD6C4; &#xBCC0;&#xACBD;&#xAC12;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; CR Copy &#xAC12;&#xC744; &#xC77D;&#xC74C; &#xD2B8;&#xB79C;&#xC7AD;&#xC158; &#xC218;&#xC900; &#xC77D;&#xAE30; &#xC778;&#xAD00;&#xC131; (Transaction-Level Read Consistency) Transaction &#xC2DC;&#xC791;&#xC2DC;&#xC810; &#xC774;&#xD6C4; &#xBCC0;&#xACBD;&#xAC12;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; CR Copy &#xAC12;&#xC744; &#xC77D;&#xC74C; Snapshot too old Undo &#xC601;&#xC5ED;&#xC758; &#xC815;&#xBCF4;&#xAC00; &#xB2E4;&#xB978; Transaction&#xC5D0; &#xC758;&#xD574; &#xC7AC;&#xC0AC;&#xC6A9;&#xB428;&#xC73C;&#xB85C; CR Copy&#xB97C; &#xC0DD;&#xC131;&#xD560; &#xC218; &#xC5C6;&#xC744; &#xACBD;&#xC6B0; &#xBC1C;&#xC0DD; &#xC904;&#xC77C; &#xC218; &#xC788;&#xB294; &#xBC29;&#xBC95; Undo &#xC601;&#xC5ED; &#xD06C;&#xAE30; &#xC99D;&#xAC00; Commit&#xC744; &#xC790;&#xC8FC;&#xD558;&#xC9C0; &#xC54A;&#xC74C; fetch across commit &#xD615;&#xD0DC;&#xC758; &#xD504;&#xB85C;&#xADF8;&#xB7A8; &#xC791;&#xC131;&#xC744; &#xD53C;&#xD568; Transation&#xC774; &#xBAB0;&#xB9AC;&#xB294; &#xC2DC;&#xAC04;&#xB300;&#xC5D0; &#xC624;&#xB798; &#xAC78;&#xB9AC;&#xB294; Query &#xC218;&#xD589;&#xC744; &#xD53C;&#xD568; &#xD070; Table&#xC744; &#xC77C;&#xC815; &#xBC94;&#xC704;&#xB85C; &#xB098;&#xC6B0;&#xC5B4; &#xC77C;&#xACE0; &#xB2E8;&#xACC4;&#xC801;&#xC73C;&#xB85C; &#xC2E4;&#xD589;&#xD558;&#xB3C4;&#xB85D; &#xCF54;&#xB529; (&#xB2E8; &#xC77C;&#xAD00;&#xC131; &#xBB38;&#xC81C;&#xB294; &#xC5C6;&#xC5B4;&#xC57C; &#xD568;) &#xC624;&#xB79C; &#xC2DC;&#xAC04;&#xC5D0; &#xAC78;&#xCCD0; &#xAC19;&#xC740; Block&#xC744; &#xC5EC;&#xB7EC; &#xBC88; &#xBC29;&#xBB38;&#xD558;&#xB294; NL JOIN &#xB610;&#xB294; Index&#xB97C; &#xACBD;&#xC720;&#xD55C; Table &#xC561;&#xC138;&#xC2A4;&#xB97C; &#xCCB4;&#xD06C;&#xD558;&#xACE0; &#xD68C;&#xD53C;&#xD560;&#xC218; &#xC788;&#xB294; &#xBC29;&#xBC95; &#xCC3E;&#xC74C; (JOIN &#xBC29;&#xBC95; &#xBCC0;&#xACBD;, Full Table Scan) ORDER BY&#xB97C; &#xAC15;&#xC81C;&#xB85C; &#xC0BD;&#xC785;&#xD558;&#xC5EC; Sort&#xC5F0;&#xC0B0;&#xC744; &#xAC15;&#xC81C;&#xB85C; &#xBC1C;&#xC0DD; &#xB300;&#xB7C9; UPDATE&#xD6C4; &#xBC14;&#xB85C; &#xD574;&#xB2F9; Table &#xB610;&#xB294; Index&#xB97C; Full Scan&#xD558;&#xB3C4;&#xB85D; Query &#xC218;&#xD589; &#xAD00;&#xB828; &#xB0B4;&#xC6A9; Slide Oracle Transaction Isolation Level : http://www.slideshare.net/seokjoonyun9/2015-0515-oracle-transaction-concurrency-control-read-consistency Oracle Concurrency Control : http://www.slideshare.net/seokjoonyun9/20150522-oracle-ways-of-concurrency-control Oracle Snapshot too Old : http://www.slideshare.net/seokjoonyun9/oracle-architecture2015-0424-bblock-cleanout-and-snapshottooold Oracle Consistency : http://www.slideshare.net/seokjoonyun9/2015-0409-consistency","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 3-1-2 SQL Parsing, DB Call, Block I/O","slug":"03.02.sql.parsing","date":"2016-01-31T15:00:00.000Z","updated":"2017-04-24T00:03:00.000Z","comments":true,"path":"2016/02/01/03.02.sql.parsing/","link":"","permalink":"http://DevStarSJ.github.io/2016/02/01/03.02.sql.parsing/","excerpt":"","text":"3&#xACFC;&#xBAA9; SQL &#xACE0;&#xAE09; &#xD65C;&#xC6A9; &#xBC0F; Tuning 1&#xC7A5; Architecture &#xAE30;&#xBC18; Tuning 1.2 SQL Parsing SQL Parsing &#xACFC;&#xC815; &#xC0AC;&#xC6A9;&#xC790; &#xC785;&#xB825; SQL Semantic &#xAC80;&#xC0AC; : &#xBB38;&#xBC95;&#xC801; &#xC624;&#xB958;, &#xAC1D;&#xCCB4; &#xC874;&#xC7AC; &#xC5EC;&#xBD80; Library Cache&#xC5D0;&#xC11C; &#xAC80;&#xC0C9; : Hash&#xAD6C;&#xC870;&#xB85C; &#xAD00;&#xB9AC;. SQL&#xC758; Hash&#xAC12;&#xC758; Bucket&#xC744; &#xCC3E;&#xC544;&#xBD04; Soft Parsing : Cache&#xC5D0;&#xC11C; &#xCC3E;&#xC544;&#xC11C; &#xBC14;&#xB85C; &#xC2E4;&#xD589;&#xB2E8;&#xACC4;&#xB85C; &#xB118;&#xC5B4;&#xAC10; Hard Parsing : Cache&#xC5D0;&#xC11C; &#xCC3E;&#xC9C0; &#xBABB;&#xD574;&#xC11C; &#xCD5C;&#xC801;&#xD654; &#xACFC;&#xC815;&#xC744; &#xAC70;&#xCE58;&#xACE0; &#xC2E4;&#xD589;&#xB2E8;&#xACC4;&#xB85C; &#xB118;&#xC5B4;&#xAC10; &#xCC3E;&#xC9C0; &#xBABB;&#xD588;&#xC744; &#xACBD;&#xC6B0; &#xCD5C;&#xC801;&#xD654; &#xC218;&#xD589; &#xCD5C;&#xC801;&#xD654; &#xACB0;&#xACFC;&#xB97C; Library Cache&#xC758; Hash Bucket chain&#xC5D0; &#xC5F0;&#xACB0; &#xD574;&#xB2F9; Execution Plan&#xC744; &#xC2E4;&#xD589; Optimizer : &#xC0AC;&#xC6A9;&#xC790; SQL&#xC744; &#xAC00;&#xC7A5; &#xBE60;&#xB974;&#xACE0; &#xD6A8;&#xC728;&#xC801;&#xC778; &#xCC98;&#xB9AC;&#xACBD;&#xB85C;&#xB97C; &#xC120;&#xD0DD;&#xD574; &#xC8FC;&#xB294; DBMS&#xC758; &#xD575;&#xC2EC;&#xC5D4;&#xC9C4; C aching &#xB41C; SQL &#xACF5;&#xC720; &#xACF5;&#xC720;&#xC870;&#xAC74; : &#xADF8;&#xB0E5; &#xBB34;&#xC870;&#xAC74; &#xAC19;&#xC740; SQL&#xBB38;&#xC774;&#xC5B4;&#xC57C; &#xD55C;&#xB2E4;. &#xACF5;&#xBC31;, &#xC904;&#xBC14;&#xAFC8;&#xC774; &#xB2E4;&#xB978; &#xACBD;&#xC6B0; : X &#xB300;&#xC18C;&#xBB38;&#xC790;&#xAC00; &#xB2E4;&#xB978; &#xACBD;&#xC6B0; : X &#xC8FC;&#xC11D;&#xC774; &#xB2E4;&#xB978; &#xACBD;&#xC6B0; : X OWNER&#xBA85;&#xC2DC; &#xC5EC;&#xBD80; (EMP &#xC640; SCOTT.EMP) : X Optimizer Hint &#xC5EC;&#xBD80; : X WHERE &#xC808;&#xC758; literal&#xAC12;&#xC774; &#xB2E4;&#xB978; &#xACBD;&#xC6B0; : X &#xC194;&#xC9C1;&#xD788; 1 ~ 5&#xB294; &#xAC01; &#xBD80;&#xC11C;&#xBCC4; SQL&#xD45C;&#xC900;&#xC744; &#xC815;&#xD558;&#xBA74; &#xB418;&#xB294;&#xB370; 6&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; Bind Variable&#xC744; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xBC16;&#xC5D0; &#xC5C6;&#xB2E4;. Bind Variable&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; SQL &#xC7AC;&#xC0AC;&#xC6A9;&#xC728;&#xC774; &#xC88B;&#xC544;&#xC9C4;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; Bind Variable&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xC2E4;&#xD589;&#xACC4;&#xD68D; &#xC0DD;&#xC131;&#xC2DC; &#xD1B5;&#xACC4;&#xC815;&#xBCF4;&#xB97C; &#xD65C;&#xC6A9;&#xD558;&#xC9C0; &#xBABB;&#xD55C;&#xB2E4;. (&#xB2F9;&#xC5F0;&#xD55C; &#xC598;&#xAE30;&#xB2E4;. &#xC5B4;&#xB5A4; &#xAC12;&#xC774; &#xB4E4;&#xC5B4;&#xC62C;&#xC9C0; &#xBAA8;&#xB974;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xADF8;&#xB0E5; &#xADE0;&#xB4F1;&#xD558;&#xB2E4;&#xACE0; &#xC0DD;&#xAC01;&#xD558;&#xACE0; &#xC2E4;&#xD589;&#xACC4;&#xD68D;&#xC744; &#xC791;&#xC131;&#xD55C;&#xB2E4;.) Bind Variable&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xB294;&#xAC8C; &#xC88B;&#xC740; &#xACBD;&#xC6B0; DW, OLAP &#xD658;&#xACBD;&#xC5D0;&#xC11C;&#xC758; Long Running Query : Parsing &#xC18C;&#xC720;&#xC2DC;&#xAC04;&#xC5D0; &#xBE44;&#xD574; Execution &#xC2DC;&#xAC04;&#xC774; &#xD6E8;&#xC52C; &#xAE38;&#xBA70;, Parsing&#xB3C4; &#xC790;&#xC8FC; &#xC77C;&#xC5B4;&#xB098;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;. WHERE&#xC808;&#xC758; &#xCE7C;&#xB7FC; Distinct &#xAC12;&#xC774; &#xC801;&#xC744; &#xACBD;&#xC6B0; : &#xADF8;&#xB9CC;&#xD07C; &#xBD84;&#xD3EC;&#xAC00; &#xADE0;&#xC77C;&#xD558;&#xC9C0; &#xC54A;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; Histogram&#xC744; &#xD65C;&#xC6A9;&#xD558;&#xB294;&#xAC8C; &#xC720;&#xB9AC;&#xD558;&#xB2E4;. Bind Variable Peeking (Sniffing) SQL&#xC774; &#xCC98;&#xC74C; &#xC2E4;&#xD589;&#xB420;&#xB54C; Bind Variable &#xAC12;&#xC744; &#xC0B4;&#xC9DD; &#xD6D4;&#xCCD0;&#xBCF4;&#xACE0; Execution Plan&#xC744; &#xC791;&#xC131; &#xB4A4;&#xC5D0; &#xC5B4;&#xB5BB;&#xAC8C; &#xBD84;&#xD3EC;&#xAC00; &#xBC14;&#xB014;&#xC9C0; &#xBAA8;&#xB974;&#xBBC0;&#xB85C; &#xC0C1;&#xB2F9;&#xD788; &#xC704;&#xD5D8;&#xD55C; &#xAE30;&#xB2A5; &#xC660;&#xB9CC;&#xD574;&#xC11C;&#xB294; &#xD574;&#xB2F9; &#xAE30;&#xB2A5;&#xC744; &#xBE44;&#xD65C;&#xC131;&#xD654; &#xD558;&#xB294;&#xAC8C; &#xC88B;&#xC74C; 1ALTER SYSTEM SET &quot;_optim_peek_user_binds&quot; = FALSE; Static SQL, Dynamic SQL Static SQL : code &#xC0AC;&#xC774;&#xC5D0; SQL&#xBB38;&#xC744; &#xC9C1;&#xC811; &#xAE30;&#xC220; (Pro*C, Power Builder, SQLJ &#xB4F1;&#x2026; ). Compile &#xB2E8;&#xACC4;&#xC5D0;&#xC11C; SQL &#xAD6C;&#xBB38;&#xCCB4;&#xD06C;&#xAC00; &#xAC00;&#xB2A5; Dynamic SQL : String &#xD0C0;&#xC785; &#xBCC0;&#xC218;&#xC5D0; SQL&#xBB38;&#xC744; &#xC800;&#xC7A5; (&#xD604;&#xC7AC; &#xB300;&#xBD80;&#xBD84;&#xC758; &#xACBD;&#xC6B0;) Application Cursor Caching SQL&#xBB38;&#xC744; &#xD55C;&#xBC88; Parsing&#xD55C; &#xD6C4; Bind Variable &#xAC12;&#xB9CC; &#xBC14;&#xAFD4;&#xAC00;&#xBA74;&#xC11C; &#xBC18;&#xBCF5;&#xC801;&#xC73C;&#xB85C; &#xC218;&#xD589; Java&#xC5D0;&#xC11C; .setImplicitCachingEnabled(true)&#xB85C; &#xD55C;&#xB2E4;&#xB358;&#xC9C0; Statement&#xB97C; &#xB2EB;&#xC9C0; &#xC54A;&#xACE0; &#xC7AC;&#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xBC29;&#xBC95; Parse Call &#xD55C;&#xBC88;&#xC5D0; Execute Call&#xC774; &#xC5EC;&#xB7EC;&#xBC88; &#xC77C;&#xC5B4;&#xB0A8; (&#xC77C;&#xBC18;&#xC801;&#xC778; &#xACBD;&#xC6B0;&#xB294; Parse, Execute Call&#xC758; &#xC218;&#xAC00; &#xAC19;&#xC74C;) 1.3 Database Call&#xACFC; &#xB124;&#xD2B8;&#xC6CC;&#xD06C; &#xBD80;&#xD558; Call&#xC758; &#xC885;&#xB958; SQL Cursor &#xC791;&#xC5C5; &#xC694;&#xCCAD;&#xC5D0; &#xB530;&#xB978; &#xAD6C;&#xBD84; Parse Call : SQL Parsing&#xC744; &#xC694;&#xCCAD; Execute Call : SQL &#xC2E4;&#xD589;&#xC744; &#xC694;&#xCCAD; Fetch Call : SELECT&#xBB38;&#xC758; &#xACB0;&#xACFC; &#xB370;&#xC774;&#xD130; &#xC804;&#xC1A1;&#xC744; &#xC694;&#xCCAD; Call &#xBC1C;&#xC0DD; &#xC704;&#xCE58;&#xC5D0; &#xB530;&#xB978; &#xAD6C;&#xBD84; User Call : DBMS&#xC678;&#xBD80;&#xB85C;&#xBD80;&#xD130; &#xC694;&#xCCAD; Recursive Call : DBMS&#xB0B4;&#xBD80;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD558;&#xB294; Call SQL Parsing &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xB370;&#xC774;&#xD130; &#xB515;&#xC154;&#xB108;&#xB9AC; &#xC870;&#xD68C; &#xC0AC;&#xC6A9;&#xC790; &#xC815;&#xC758; &#xD568;&#xC218;/&#xD504;&#xB85C;&#xC2DC;&#xC800; &#xB0B4;&#xC5D0;&#xC11C;&#xC758; SQL&#xC218;&#xD589; User Call&#xACFC; &#xC131;&#xB2A5; User Call&#xC740; &#xC2DC;&#xC2A4;&#xD15C; &#xD655;&#xC7A5;&#xC131;&#xC744; &#xB5A8;&#xC5B4;&#xB728;&#xB9AC;&#xB294; &#xAC00;&#xC7A5; &#xD070; &#xC694;&#xC778; &#xC911; &#xD558;&#xB098;&#xC774;&#xBBC0;&#xB85C; &#xCD5C;&#xC18C;&#xD654; &#xD558;&#xB824;&#xB294; &#xB178;&#xB825;&#xC774; &#xC911;&#xC694;&#xD558;&#xB2E4;. 1. One SQL &#xAD6C;&#xD604; : Loop Query&#xB97C; &#xD574;&#xC18C; 1&#xBC88;&#xC758; Call&#xB85C; &#xD574;&#xACB0;&#xB418;&#xB294; Query&#xB294; 5&#xBC88;&#xC758; Call&#xB85C; &#xD574;&#xACB0;&#xB418;&#xB294; Query&#xC5D0; &#xBE44;&#xD574; 5&#xBC30;&#xC758; &#xD655;&#xC7A5;&#xC131;&#xC744; &#xAC16;&#xB294; &#xAC83;&#xC774;&#xB2E4;. 2. Array Processing : Array &#xB2E8;&#xC704; Fetch, Bulk Insert/Update/Delete INSERT &#xD560;&#xB54C; Array&#xC5D0; &#xACC4;&#xC18D; &#xB2F4;&#xB2E4;&#xAC00; 1,000&#xAC74;&#xC774; &#xC313;&#xC77C; &#xB54C;&#xB9C8;&#xB2E4; executeBatch() &#xC2E4;&#xD589; (Java) SELECT &#xD560;&#xB54C; .setFetchSize(1000)&#xC73C;&#xB85C; 1,000&#xAC74; &#xB2E8;&#xC704;&#xB85C; Fetch (Java) 3. &#xBD80;&#xBD84;&#xBC94;&#xC704;&#xCC98;&#xB9AC; &#xC6D0;&#xB9AC; &#xD65C;&#xC6A9; SQL*Plus&#xC5D0;&#xC11C; set arraysize 100&#xC73C;&#xB85C; &#xD560; &#xACBD;&#xC6B0; 301&#xBC88;&#xC758; Fetch Call&#xB85C; 30,000 rows&#xB97C; &#xC77D;&#xB294; &#xAC83;&#xC744; Trace&#xC5D0;&#xC11C; &#xD655;&#xC778;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xB9CC;&#xC57D; 10&#xAC1C;&#xC758; record&#xB97C; &#xB2F4;&#xB294; block&#xC774; 3&#xAC1C; &#xC788;&#xB294; &#xACBD;&#xC6B0; ArraySize&#xB97C; 3&#xC73C;&#xB85C; &#xD560; &#xACBD;&#xC6B0; &#xCD1D; 10&#xBC88;&#xC758; Fetch Call&#xC774; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0;&#xB9CC;, Block I/O&#xB294; 12&#xBC88;&#xC774; &#xB41C;&#xB2E4;. (&#xC65C;&#xB0D0;&#xBA74; 4&#xBC88;&#xC9F8; Call&#xC758; &#xACBD;&#xC6B0; Block 1&#xC5D0;&#xC11C; 1 record&#xB9CC; &#xC77D;&#xACE0;, Block 2&#xC5D0;&#xC11C; 2 record&#xB9CC; &#xC77D;&#xB294;&#xB2E4;. &#xC989; 2&#xBC88;&#xC758; Block I/O&#xAC00; &#xBC1C;&#xC0DD;&#xD55C; &#xAC83;&#xC774;&#xB2E4;.) &#xC989;, ArraySize&#xB97C; &#xBB34;&#xC791;&#xC815; &#xD0A4;&#xC6B4;&#xB2E4;&#xACE0; &#xC88B;&#xC740;&#xAC8C; &#xC544;&#xB2C8;&#xB2E4;. 4. &#xD6A8;&#xACFC;&#xC801;&#xC778; &#xD654;&#xBA74; &#xD398;&#xC774;&#xC9C0; &#xCC98;&#xB9AC; Web&#xC5D0;&#xC11C; Page &#xB2E8;&#xC704;&#xB85C; &#xAC8C;&#xC2DC;&#xBB3C;&#xC744; &#xBCF4;&#xC5EC;&#xC904; &#xACBD;&#xC6B0; &#xCC98;&#xC74C;&#xBD80;&#xD130; &#xB2E4; &#xC77D;&#xC5B4;&#xC11C; Fetch&#xD558;&#xBA74;&#xC11C; &#xD544;&#xC694;&#xD55C; &#xAC83;&#xB9CC; &#xBCF4;&#xC5EC;&#xC8FC;&#xAC8C; &#xB41C;&#xB2E4;&#xBA74; &#xC131;&#xB2A5;&#xC5D0; &#xCE58;&#xBA85;&#xC801;&#xC774;&#xB2E4;. &#xD544;&#xC694;&#xD55C; Page&#xBD80;&#xBD84;&#xB9CC; &#xC77D;&#xB3C4;&#xB85D; &#xC218;&#xC815;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. (&#xB4A4;&#xC5D0;&#xC11C; &#xC790;&#xC138;&#xD788; &#xB2E4;&#xB8E8;&#xACA0;&#xB2E4;.) 5. &#xBD84;&#xC0B0; Query &#xC6D0;&#xACA9;&#xC5D0; &#xC788;&#xB294; DB &#xAC04;&#xC758; Table&#xC744; JOIN&#xD560; &#xACBD;&#xC6B0; &#xC131;&#xB2A5;&#xC744; &#xB192;&#xC77C; &#xC218; &#xC788;&#xB294; &#xBC29;&#xC548;&#xC740; ? &#xC2E4;&#xD589;&#xACC4;&#xD68D;&#xC744; &#xBCF4;&#xACE0; &#xB2E4;&#xC74C;&#xC758; Rows&#xC218;&#xB97C; &#xD655;&#xC778;&#xD55C;&#xB2E4;. &#xC2E4;&#xC81C; &#xACB0;&#xACFC; &#xB370;&#xC774;&#xD130; &#xAC01; Table &#xBCC4;&#xB85C; &#xD544;&#xD130; &#xC870;&#xAC74;&#xC73C;&#xB85C; &#xAC78;&#xB7EC;&#xC9C0;&#xB294; &#xB370;&#xC774;&#xD130; REMOTE&#xB85C; &#xC6D0;&#xACA9;&#xC73C;&#xB85C; &#xC804;&#xC1A1;&#xB41C; &#xB370;&#xC774;&#xD130; /*+ driving_site(&#xD14C;&#xC774;&#xBE14;&#xBA85;) */ Hint&#xB97C; &#xD65C;&#xC6A9;&#xD558;&#xC5EC; &#xC5B4;&#xB290; Server&#xC5D0;&#xC11C; JOIN&#xC744; &#xC218;&#xD589;&#xD558;&#xACE0; &#xB098;&#xBA38;&#xC9C0; Server&#xC5D0;&#xC11C; &#xC6D0;&#xACA9;&#xC73C;&#xB85C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC804;&#xC1A1;&#xD558;&#xB3C4;&#xB85D; &#xC870;&#xC808;&#xD55C;&#xB2E4;. &#xACB0;&#xB860;&#xC801;&#xC73C;&#xB85C; &#xB124;&#xD2B8;&#xC6CC;&#xD06C;&#xB97C; &#xD1B5;&#xD574; &#xB370;&#xC774;&#xD130; &#xC804;&#xC1A1;&#xB7C9;&#xC744; &#xC904;&#xC774;&#xB294;&#xAC8C; &#xD575;&#xC2EC;&#xC774;&#xB2E4;. 6. User-defined Function/Procedure Built-In Function/Procedure : Native code&#xB85C; &#xC644;&#xC804; compile&#xB41C; &#xD615;&#xD0DC;&#xC774;&#xBBC0;&#xB85C; &#xC5C4;&#xCCAD; &#xBE60;&#xB974;&#xB2E4;. User-defined Function/Procedure : &#xC2E4;&#xD589;&#xD560;&#xB54C;&#xB9C8;&#xB2E4; Virtual Machine&#xC5D0;&#xC11C; &#xBCC4;&#xB3C4; &#xC2E4;&#xD589; &#xC5D4;&#xC9C4;&#xC744; &#xD1B5;&#xD574; &#xD638;&#xCD9C;&#xB418;&#xBBC0;&#xB85C; &#xB290;&#xB9AC;&#xB2E4;. &#xD2B9;&#xD788;&#xB098; &#xB0B4;&#xBD80;&#xC801;&#xC73C;&#xB85C; &#xB610;&#xB2E4;&#xB978; Query&#xAC00; &#xC788;&#xC744; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; Execute Call, Fetch Call&#xC774; &#xC7AC;&#xADC0;&#xC801;&#xC73C;&#xB85C; &#xC77C;&#xC5B4;&#xB09C;&#xB2E4;. &#xADF8;&#xB7EC;&#xBBC0;&#xB85C; &#xB2E4;&#xC74C;&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB9CC; &#xC81C;&#xD55C;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xD560; &#xAC83;&#xC744; &#xAD8C;&#xC7A5;&#xD55C;&#xB2E4;. &#xC18C;&#xB7C9;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC870;&#xD68C;&#xD560; &#xACBD;&#xC6B0; &#xBD80;&#xBD84;&#xBC94;&#xC704;&#xCC98;&#xB9AC;&#xAC00; &#xAC00;&#xB2A5;&#xD55C; &#xC0C1;&#xD669; &#xAC00;&#xAE09;&#xC801;&#xC73C;&#xB85C; One SQL&#xB85C; &#xAD6C;&#xD604;&#xD558;&#xACE0;&#xC790; &#xB178;&#xB825;&#xD558;&#xB294;&#xAC8C; &#xC88B;&#xB2E4;. (JOIN, Scalar-Subquery) &#xADF8; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xBCC4;&#xB3C4;&#xC758; Logic&#xC774; &#xD544;&#xC694;&#xD55C; &#xAC83;&#xC744; &#xB530;&#xB85C; Table&#xB85C; &#xAD6C;&#xD604;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xB3C4; &#xC788;&#xB2E4;. ex. &#xD734;&#xBB34;&#xC77C;&#xC744; &#xAC80;&#xC0AC;&#xD558;&#xB294; Function &#xB300;&#xC2E0; &#xC5C5;&#xBB34;&#xC77C; Table&#xC744; &#xC0DD;&#xC131;&#xD574;&#xB450;&#xACE0; EXISTS&#xB85C; &#xBE44;&#xAD50; 1.4 DB I/O &#xC6D0;&#xB9AC; Block I/O &#xBAA8;&#xB4E0; DBMS&#xB294; Block&#xB2E8;&#xC704; I/O&#xB97C; &#xD55C;&#xB2E4; 1&#xAC1C;&#xC758; record&#xB97C; &#xC77D;&#xB354;&#xB77C;&#xB3C4; &#xD574;&#xB2F9; Block &#xC804;&#xCCB4;&#xB97C; &#xC77D;&#xB294;&#xB2E4;. Buffer Cache, Disk&#xC0C1;&#xC758; Datafile &#xBAA8;&#xB450; Block &#xB2E8;&#xC704; I/O&#xB85C; &#xC77D;&#xB294;&#xB2E4;. Datafile -&gt; DB Buffer Cache&#xB85C; Block&#xC744; &#xC801;&#xC7AC;&#xD560; &#xB54C; Datafile&#xC5D0;&#xC11C; Block&#xC744; &#xC9C1;&#xC811; &#xC77D;&#xACE0; &#xC4F8;&#xB54C; DB Buffer Cache&#xC5D0;&#xC11C; Block&#xC744; &#xC77D;&#xACE0; &#xC4F8;&#xB54C; DB Buffer Cache -&gt; Datafile&#xB85C; &#xB2E4;&#xC2DC; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC4F8;&#xB54C; Buffer Cache Hit Ratio 1BCHR = (&#xBC84;&#xD37C; &#xCE90;&#xC2DC;&#xC5D0;&#xC11C; &#xBC14;&#xB85C; &#xCC3E;&#xC740; Block&#xC218; / &#xCD1D; &#xC77D;&#xC740; Block&#xC218;) X 100 Fetch Call &#xC5D0;&#xC11C; disk : 18 , query : 822 &#xC77C; &#xACBD;&#xC6B0; &#xCD1D; &#xC77D;&#xC740; Block&#xC218;&#xB294; 822, &#xBC84;&#xD37C; &#xCE90;&#xC2DC;&#xC5D0;&#xC11C; &#xC77D;&#xC740; &#xC218;&#xB294; 822 - 18 = 804 &#xC774;&#xBBC0;&#xB85C; BCHR = 97.8%&#xAC00; &#xB41C;&#xB2E4;. Sequential I/O vs.&#xA0;Random I/O Sequential I/O : Index&#xC5D0;&#xC11C; Leaf Node&#xB97C; &#xB530;&#xB77C; Scan&#xD558;&#xB294; &#xAC83;&#xACFC; Full Table Scan Random I/O : Index&#xC5D0;&#xC11C; &#xD55C; &#xAC74;&#xC744; &#xC77D;&#xAE30; &#xC704;&#xD574; &#xD55C; Block&#xC529; &#xC811;&#xADFC;&#xD558;&#xB294; &#xBC29;&#xC2DD; Sequential &#xC561;&#xC138;&#xC2A4;&#xC758; &#xBE44;&#xC911;&#xC744; &#xB192;&#xC774;&#xACE0; Random &#xC561;&#xC138;&#xC2A4;&#xC758; &#xBC1C;&#xC0DD;&#xB7C9;&#xC744; &#xC904;&#xC774;&#xB294;&#xAC8C; I/O &#xD29C;&#xB2DD;&#xC758; &#xD575;&#xC2EC;&#xC774;&#xB2E4;. Sequential &#xC561;&#xC138;&#xC2A4;&#xC758; &#xD6A8;&#xC728;&#xC744; &#xB192;&#xC77C;&#xB824;&#xBA74; &#xCD1D; &#xC77D;&#xC740; &#xAC74;&#xC218; &#xC911; &#xACB0;&#xACFC;&#xC9D1;&#xD569;&#xC73C;&#xB85C; &#xC120;&#xD0DD;&#xB418;&#xB294; &#xBE44;&#xC911;&#xC744; &#xB192;&#xC5EC;&#xC57C; &#xD55C;&#xB2E4;. &#xC989; &#xAC19;&#xC740; &#xACB0;&#xACFC;&#xB97C; &#xC5BB;&#xAE30; &#xC704;&#xD574; &#xC5BC;&#xB9C8;&#xB098; &#xC801;&#xC740; record&#xB97C; &#xC77D;&#xB290;&#xB0D0;&#xB85C; &#xD310;&#xB2E8;&#xD55C;&#xB2E4;. Index&#xC758; &#xCEEC;&#xB7FC; &#xBC0F; &#xADF8; &#xC21C;&#xC11C;&#xB97C; &#xC870;&#xC815;&#xD558;&#xB294;&#xAC8C; &#xAC00;&#xC7A5; &#xC88B;&#xC740; &#xBC29;&#xBC95;&#xC774;&#xB2E4;. Single Block I/O vs.&#xA0;MultiBlock I/O Index : Single Block I/O (10g&#xC774;&#xD6C4; Index Range Scan, Index Full Scan&#xC5D0;&#xC11C;&#xB294; MultiBlock I/O&#xB85C;&#xB3C4; &#xAC00;&#xB2A5;) Table : MultiBlock I/O &#xB300;&#xB7C9;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xC744; &#xB550; MultiBlock I/O&#xAC00; I/O Call&#xC744; &#xC904;&#xC77C; &#xC218; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC720;&#xB9AC;&#xD558;&#xB2E4;. I/O &#xD6A8;&#xC728;&#xD654; &#xC6D0;&#xB9AC; &#xD544;&#xC694;&#xD55C; &#xCD5C;&#xC18C; Block&#xB9CC; &#xC77D;&#xB3C4;&#xB85D; SQL &#xC791;&#xC131; &#xCD5C;&#xC801;&#xC758; Optimizer &#xD329;&#xD130; &#xC81C;&#xACF5; &#xC804;&#xB7B5;&#xC801; Index &#xAD6C;&#xC131; DBMS&#xAC00; &#xC81C;&#xACF5;&#xD558;&#xB294; &#xAE30;&#xB2A5; &#xD65C;&#xC6A9; : Index, Partition, Cluster, Window &#xD568;&#xC218; &#xD544;&#xC694;&#xD558;&#xB2E4;&#xBA74; Optimizer Hint&#xB97C; &#xD65C;&#xC6A9;&#xD558;&#xC5EC; &#xCD5C;&#xC801;&#xC758; &#xC561;&#xC138;&#xC2A4; &#xACBD;&#xB85C;&#xB85C; &#xC720;&#xB3C4; &#xC804;&#xCCB4;&#xCC98;&#xB9AC; &#xCD5C;&#xC801;&#xD654;, &#xCD5C;&#xCD08; &#xC751;&#xB2F5;&#xC18D;&#xB3C4; &#xCD5C;&#xC801;&#xD654; &#xBC0F; &#xADF8;&#xBC16;&#xC5D0; &#xD30C;&#xB77C;&#xBA54;&#xD130;&#xB4E4; &#xD1B5;&#xACC4;&#xC815;&#xBCF4; &#xC81C;&#xACF5;","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 3-1-1 Oracle Architecture","slug":"03.01.architecture","date":"2016-01-28T15:00:00.000Z","updated":"2017-04-24T00:01:39.000Z","comments":true,"path":"2016/01/29/03.01.architecture/","link":"","permalink":"http://DevStarSJ.github.io/2016/01/29/03.01.architecture/","excerpt":"","text":"3&#xACFC;&#xBAA9; SQL &#xACE0;&#xAE09; &#xD65C;&#xC6A9; &#xBC0F; Tuning 1&#xC7A5; Architecture &#xAE30;&#xBC18; Tuning 1.1 Oracle Architecture Database : Disk&#xC5D0; &#xC800;&#xC7A5;&#xB41C; data &#xC9D1;&#xD569; Datafile Redo Log File Control File Instance : SGA(Shared Global Memory)&#xC640; &#xC774;&#xB97C; &#xC5D1;&#xC138;&#xC2A4;&#xD558;&#xB294; process &#xC9D1;&#xD569; Memory PGA (Process Global Area) Process &#xD639;&#xC740; Thread &#xC758; &#xAC1C;&#xBCC4;&#xC801;&#xC778; &#xBA54;&#xBAA8;&#xB9AC; &#xACF5;&#xAC04; &#xC0AC;&#xC6A9;&#xC790;&#xB9C8;&#xB2E4; &#xAC1C;&#xBCC4;&#xC801;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xACF5;&#xAC04; Data Sort, Session, Cursor &#xC815;&#xBCF4; &#xC800;&#xC7A5; SGA (System Global Area) Oracle Process &#xB4E4;&#xC774; &#xC811;&#xADFC;&#xD558;&#xB294; &#xD070; &#xACF5;&#xC720; &#xBA54;&#xBAA8;&#xB9AC; Serve Process&#xC640; Backgroung Process&#xAC00; &#xACF5;&#xC6A9;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9; DB Buffer Cache, Shared Pool(Library Cache + Dictionay Cache), Log Buffer, Large Pool, Java Pool &#xC9C1;&#xB82C;&#xD654; &#xB9E4;&#xCEE4;&#xB2C8;&#xC998; &#xD65C;&#xC6A9; (&#xC5EC;&#xB7EC; Process&#xAC00; &#xB3D9;&#xC2DC;&#xC5D0; &#xC0AC;&#xC6A9;) : Latch, Buffer Lock, Library Cache Lock/Pin Processes Server Process : &#xC0AC;&#xC6A9;&#xC790;&#xC758; &#xBA85;&#xB839;&#xC5B4; &#xCC98;&#xB9AC; SQL Parsing &#xBC0F; &#xCD5C;&#xC801;&#xD654; Cursor&#xB97C; &#xC5F4;&#xC5B4;&#xC11C; block&#xC744; read &#xC77D;&#xC740; data&#xB97C; &#xC815;&#xB82C;&#xD574;&#xC11C; client&#xAC00; &#xC694;&#xCCAD;&#xD55C; &#xACB0;&#xACFC;&#xC9D1;&#xD569;&#xC744; &#xC0DD;&#xC131;&#xD558;&#xC5EC; network&#xB85C; &#xC804;&#xC1A1; Background Process : User&#xC758; &#xC5F0;&#xACB0; &#xC720;&#xBB34;&#xC640; &#xC0C1;&#xAD00;&#xC5C6;&#xC774; Background&#xB85C; &#xC2E4;&#xD589; SMON (System Monitor) : DBMS&#xC758; CEO (&#xBAA8;&#xB4E0; &#xC791;&#xC5C5; &#xCD1D;&#xAD00;&#xB9AC;), &#xC784;&#xC2DC; segment,extent &#xC815;&#xB9AC;, dictionary &#xAD00;&#xB9AC;, &#xC7AC;&#xC2DC;&#xC791;&#xC2DC; Instance &#xBCF5;&#xAD6C; &#xB2F4;&#xB2F9; PMON (Process Monitor) : Server Process &#xAD00;&#xB9AC;, &#xC798;&#xBABB;&#xB41C; Process &#xD30C;&#xAD34; &#xBC0F; &#xC790;&#xC6D0;&#xBCF5;&#xAD6C;, &#xC798;&#xBABB;&#xB41C; Trasaction &#xBB38;&#xC81C; &#xD574;&#xACB0; DBWn (Databaser Writers) : Buffer Cache&#xC758; Dirty Block&#xC744; Datafile(disk)&#xC5D0; &#xC800;&#xC7A5; LGWR (Log Writer) : Log Buffer Entry(&#xC2B9;&#xC778;&#xB41C; transaction)&#xB97C; Redo Logfile&#xC5D0; &#xAE30;&#xB85D; ARCn (Archiver) : &#xAF49; &#xCC2C; Redo Log&#xAC00; &#xB36E;&#xC5B4; &#xC4F0;&#xC5EC;&#xC9C0;&#xAE30; &#xC804;&#xC5D0; Archive Log Directory&#xB85C; Backup CKPT (Check Point) &#xC774;&#xC804; CP &#xC774;&#xD6C4; &#xBCC0;&#xACBD;&#xC0AC;&#xD56D;&#xC744; datafile&#xC5D0; &#xAE30;&#xB85D;&#xD558;&#xACE0;&#xB85D; &#xD2B8;&#xB9AC;&#xAC70;&#xB9C1; &#xADF8; &#xC815;&#xBCF4;&#xB4E4;&#xC744; control file/datafile&#xC758; header&#xC5D0; &#xAE30;&#xB85D; (&#xC800;&#xC7A5;&#xB41C; data&#xB97C; &#xC77C;&#xCE58;&#xC2DC;&#xD0A4;&#xB294; &#xC791;&#xC5C5;) &#xC7A5;&#xC560; &#xBCF5;&#xAD6C;&#xC2DC; CP &#xC774;&#xD6C4; Log &#xB370;&#xC774;&#xD130;&#xB9CC; disk&#xC5D0; &#xAE30;&#xB85D;&#xD568; RECO (Recoverer Process) : &#xBD84;&#xC0B0; &#xC2DC;&#xC2A4;&#xD15C;&#xAC04;&#xC758; Transaction&#xC744; &#xB9DE;&#xCDB0;&#xC8FC;&#xB294; &#xC5ED;&#xD560; &#xC608;&#xB97C; &#xB4E4;&#xC5B4;&#xC11C; &#xC11C;&#xC6B8;&#xC5D0; &#xC788;&#xB294; &#xC740;&#xD589;&#xACFC; &#xBD80;&#xC0B0;&#xC5D0; &#xC788;&#xB294; &#xC740;&#xD589;&#xAC04;&#xC5D0; &#xC774;&#xCCB4; &#xC791;&#xC5C5;&#xC744; &#xBB3C;&#xB9AC;&#xC801;&#xC73C;&#xB85C; &#xB2E4;&#xB978; DB Server &#xAC04;&#xC758; two-phase commit (&#xC591;&#xCABD; &#xBAA8;&#xB450; prepare-phase &#xD55C; &#xB4A4;, &#xB458; &#xB2E4; commit &#xD55C; &#xAC83;&#xC774; &#xD655;&#xC778;&#xB418;&#xC9C0; &#xC54A;&#xC73C;&#xBA74; RECO&#xAC00; rollback &#xC2DC;&#xD0B4;.) 1&#xAC1C;&#xC758; Instance&#xB294; 1&#xAC1C;&#xC758; Database&#xB9CC; &#xC561;&#xC138;&#xC2A4; &#xB2E8;, RAC(Real Application Cluster)&#xC5D0;&#xC11C;&#xB294; &#xC5EC;&#xB7EC; Instance&#xAC00; &#xD558;&#xB098;&#xC758; Database &#xC561;&#xC138;&#xC2A4; &#xAC00;&#xB2A5; 1&#xAC1C;&#xC758; Instance&#xAC00; &#xC5EC;&#xB7EC; Database&#xB97C; &#xC561;&#xC138;&#xC2A4; &#xD560; &#xC218;&#xB294; &#xC5C6;&#xC74C; 1.2 DMBS &#xC5F0;&#xACB0;&#xBC29;&#xC2DD; &#xC804;&#xC6A9; &#xC11C;&#xBC84;(Dedicated Server) &#xBC29;&#xC2DD; Listener&#xAC00; &#xC5F0;&#xACB0;&#xC694;&#xCCAD;&#xC744; &#xBC1B;&#xC73C;&#xBA74; Server Process&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xC5EC; &#xC0AC;&#xC6A9;&#xC790;&#xC5D0;&#xAC8C; &#xC81C;&#xACF5; DBMS&#xC5D0; &#xD070; &#xBD80;&#xB2F4;&#xC744; &#xC8FC;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xD1B5;&#xC0C1; Connectin Pooling &#xAE30;&#xBC95;&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xBC18;&#xBCF5; &#xC7AC;&#xC0AC;&#xC6A9;&#xD568; &#xACF5;&#xC720; &#xC11C;&#xBC84;(Shared Server) &#xBC29;&#xC2DD; Connection Pooling&#xC744; DBMS &#xB0B4;&#xBD80;&#xC5D0; &#xAD6C;&#xD604; &#xC0AC;&#xC6A9;&#xC790;&#xB294; Server Process&#xC5D0; &#xC9C1;&#xC811; &#xC5F0;&#xACB0;&#xD558;&#xB294;&#xAC8C; &#xC544;&#xB2C8;&#xB77C; Dispatcher&#xC5D0; &#xC5F0;&#xACB0;&#xC744; &#xD568; Dispatcher&#xAC00; Request Queue&#xC5D0; &#xB4F1;&#xB85D;&#xD558;&#xACE0;, Response Queue&#xC5D0;&#xC11C; &#xB2F5;&#xBCC0;&#xC744; &#xAC00;&#xC838;&#xC640;&#xC11C; &#xC0AC;&#xC6A9;&#xC790;&#xC5D0;&#xAC8C; &#xC804;&#xB2EC; 1.3 File &#xAD6C;&#xC870; 1. Datafile Block &gt; Extent &gt; Segment &gt; Tablespace &lt;-(1 : N)-&gt; Datafile Block Record&#xC758; &#xC9D1;&#xD569; data I/O &#xB2E8;&#xC704; (Oracle&#xC740; 2KB ~ 64KB, MS-SQL&#xC740; 8KB) &#xD558;&#xB098;&#xC758; record&#xB9CC; &#xD544;&#xC694;&#xD558;&#xB354;&#xB77C;&#xB3C4; disk&#xC5D0;&#xC11C; buffer&#xB85C; block &#xB2E8;&#xC704;&#xB85C; &#xC77D;&#xC74C; Optimizer &#xAC00; Index/Table Scan&#xC744; &#xACB0;&#xC815;&#xD558;&#xB294; &#xAE30;&#xC900;&#xC740; record&#xC218;&#xAC00; &#xC544;&#xB2CC; block&#xC218; Extent Block&#xC758; &#xC9D1;&#xD569; Tablespace&#xB85C;&#xBD80;&#xD130; &#xACF5;&#xAC04;&#xC744; &#xD560;&#xB2F9;&#xBC1B;&#xB294; &#xB2E8;&#xC704; (Oracle &#xB2E4;&#xC591;&#xD55C; &#xD06C;&#xAE30;, MS-SQL 64KB) Uniform Extent : Oracle&#xC740; Extent&#xB0B4;&#xC758; Block&#xC740; &#xD558;&#xB098;&#xC758; Object&#xAC00; &#xB3C5;&#xC810; Mixed Extent : MS-SQL&#xC740; &#xC5EC;&#xB7EC; Object&#xAC00; &#xB098;&#xB204;&#xC5B4; &#xC0AC;&#xC6A9; Segemt Extent&#xC758; &#xC9D1;&#xD569; Table, Index, Undo &#xB4F1;&#xC758; Object&#xAC00; &#xC800;&#xC7A5;&#xB418;&#xB294; &#xACF5;&#xAC04; Object&#xC640; Segment&#xB294; 1:1&#xAD00;&#xACC4; &#xC774;&#xC9C0;&#xB9CC;, Partition&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; 1 : M &#xAD00;&#xACC4; 1&#xAC1C;&#xC758; Segment&#xB294; &#xC5EC;&#xB7EC; datafile&#xC5D0; &#xAC78;&#xCCD0; &#xC800;&#xC7A5;&#xC774; &#xAC00;&#xB2A5; (disk I/O &#xACBD;&#xD569;&#xC744; &#xBD84;&#xC0B0;) Tablespace Segment&#xB97C; &#xB2F4;&#xB294; &#xCEE8;&#xD14C;&#xC774;&#xB108;, &#xC5EC;&#xB7EC; datafile&#xB85C; &#xAD6C;&#xC131; 2. Temporary Tablespace (&#xC784;&#xC2DC; &#xB370;&#xC774;&#xD130; &#xD30C;&#xC77C;) &#xB300;&#xB7C9;&#xC758; Sort(ORDER BY, Sort Merge JOIN), Hash(Hash JOIN) &#xC791;&#xC5C5; &#xC911; &#xBA54;&#xBAA8;&#xB9AC;&#xAC00; &#xBD80;&#xC871;&#xD55C; &#xACBD;&#xC6B0; &#xC911;&#xAC04; &#xACB0;&#xACFC;&#xC9D1;&#xD569; &#xC800;&#xC7A5; &#xC784;&#xC2DC; &#xB370;&#xC774;&#xD130;&#xC774;&#xBBC0;&#xB85C; Redo &#xC815;&#xBCF4;&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xC9C0; &#xC54A;&#xC74C;. &#xBCF5;&#xAD6C;&#xAC00; &#xC548;&#xB418;&#xACE0; &#xBC31;&#xC5C5;&#xB3C4; &#xD544;&#xC694;&#xC5C6;&#xC74C;. Oracle&#xC740; &#xC5EC;&#xB7EC;&#xAC1C; &#xC0DD;&#xC131;&#xD558;&#xC5EC; &#xC0AC;&#xC6A9;&#xC790;&#xBCC4;&#xB85C; &#xD560;&#xB2F9;&#xC774; &#xAC00;&#xB2A5; (MS-SQL&#xC740; 1&#xAC1C;&#xC758; tempdb&#xB97C; &#xC804;&#xC5ED;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;) 12CREATE TEMPORARY TABLESPACE big_temp;ALTER USER scott TEMPORARY TABLESPACE big_temp; 3. Logfile Fast Commit &#xB9E4;&#xCEE4;&#xB2C8;&#xC998; &#xAC31;&#xC2E0;&#xC791;&#xC5C5; &#xB0B4;&#xC6A9;&#xC744; &#xBA54;&#xBAA8;&#xB9AC;&#xC0C1; Buffer Block&#xC5D0;&#xB9CC; &#xAE30;&#xB85D;&#xD55C;&#xCCB4; disk&#xC5D0; &#xAE30;&#xB85D;&#xB418;&#xC9C0; &#xC54A;&#xC558;&#xB354;&#xB77C;&#xB3C4; Redo Log&#xB97C; &#xBBFF;&#xACE0; &#xBE60;&#xB974;&#xAC8C; Commit &#xC7A5;&#xC560;&#xBC1C;&#xC0DD;&#xC2DC; Logfile&#xC744; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xC5B8;&#xC81C;&#xB4E0; &#xBCF5;&#xAD6C;&#xAC00; &#xAC00;&#xB2A5; Online Redo Log (MS-SQL&#xC5D0;&#xC11C;&#xB294; Transaction Log) &#xB370;&#xC774;&#xD130; &#xC720;&#xC2E4; &#xB300;&#xBE44;&#xC6A9;&#xC73C;&#xB85C; &#xC218;&#xD589;&#xD588;&#xB358; Transaction&#xC744; &#xAE30;&#xB85D; &#xC0AC;&#xACE0; &#xBC1C;&#xC0DD;&#xC2DC; &#xB9C8;&#xC9C0;&#xB9C9; CP&#xC774;&#xD6C4; &#xC791;&#xC5C5; &#xB0B4;&#xC6A9;&#xC744; &#xC7AC;&#xD604; (&#xCE90;&#xC2DC; &#xBCF5;&#xAD6C;) &#xCD5C;&#xC18C; 2&#xAC1C; &#xC774;&#xC0C1;&#xC758; &#xD30C;&#xC77C;&#xB85C; &#xAD6C;&#xC131;. &#xD558;&#xB098;&#xC758; &#xD30C;&#xC77C;&#xC774; &#xAF49; &#xCC28;&#xBA74; &#xB2E4;&#xB978; &#xD30C;&#xC77C;&#xB85C; Log Switching. &#xBAA8;&#xB4E0; &#xD30C;&#xC77C; &#xAF49;&#xCC28;&#xBA74; &#xCCAB;&#xBC88;&#xC9F8; &#xD30C;&#xC77C; &#xC7AC;&#xC0AC;&#xC6A9; (Round-robin) Archived(=Offline) Redo Log (MS-SQL&#xC5D0;&#xB294; &#xC5C6;&#xC74C;) Online Redo Log&#xAC00; &#xC7AC;&#xC0AC;&#xC6A9;&#xB418;&#xAE30; &#xC804; &#xB2E4;&#xB978; &#xC704;&#xCE58;&#xB85C; &#xBC31;&#xC5C5;&#xD574; &#xB454; &#xD30C;&#xC77C; 4. Memory 4.1 SGA (System Global Area) DB Buffer Cache Datafile&#xC5D0;&#xC11C; &#xC77D;&#xC740; Block&#xC758; Cache Area Buffer Lock&#xC744; &#xC774;&#xC6A9;&#xD55C; &#xC9C1;&#xB82C;&#xD654; Buffer &#xC0C1;&#xD0DC; Free Buffer : Clean &#xC0C1;&#xD0DC;&#xC774;&#xAC70;&#xB098; disk&#xC640; &#xB0B4;&#xC6A9;&#xC774; &#xAC19;&#xC544;&#xC11C; &#xC5B8;&#xC81C;&#xB4E0;&#xC9C0; &#xB36E;&#xC5B4;&#xC368;&#xB3C4; &#xBB34;&#xBC29; Dirty Buffer : &#xBCC0;&#xACBD;&#xC774; &#xBC1C;&#xC0DD;&#xD588;&#xC9C0;&#xB9CC; disk&#xC5D0; &#xAE30;&#xB85D;&#xB418;&#xAE30; &#xC804;&#xC778; &#xC0C1;&#xD0DC;. &#xC7AC;&#xC0AC;&#xC6A9;&#xD558;&#xB824;&#xBA74; disk&#xC5D0; &#xAE30;&#xB85D;&#xD558;&#xC5EC; Free Buffer&#xB85C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC57C; &#xD568; Pinned Buffer : &#xD604;&#xC7AC; I/O&#xAC00; &#xC9C4;&#xD589;&#xC911; Buffer &#xC7AC;&#xC0AC;&#xC6A9; &#xC54C;&#xACE0;&#xB9AC;&#xC998; LRT (Least Recently Used) &#xC54C;&#xACE0;&#xB9AC;&#xC998; &#xC0AC;&#xC6A9; LRU &#xCCB4;&#xC778;&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xC0AC;&#xC6A9;&#xBE48;&#xB3C4; &#xC21C;&#xC73C;&#xB85C; &#xC704;&#xCE58;&#xB97C; &#xC62E;&#xAE40; Free Buffer&#xAC00; &#xD544;&#xC694;&#xD560; &#xB54C; LRU End &#xCABD; (&#xAC00;&#xC7A5; &#xC561;&#xC138;&#xC2A4; &#xBE48;&#xB3C4;&#xAC00; &#xB0AE;&#xC74C;) &#xBD80;&#xD130; &#xC0AC;&#xC6A9; Shared Pool Library Cache SQL&#xBB38;, Execution Plan, Stored Procedure&#xB97C; &#xC800;&#xC7A5; Soft Parsing: &#xD574;&#xB2F9; SQL&#xBB38;&#xC5D0; &#xB300;&#xD55C; Execution Plan&#xC774; Shared Pool&#xC5D0; &#xC788;&#xC5B4;&#xC11C; &#xBC14;&#xB85C; &#xC7AC;&#xC0AC;&#xC6A9; Hard Parsing : Shared Pool&#xC5D0; &#xB0B4;&#xC6A9;&#xC774; &#xC5C6;&#xC5B4;&#xC11C; Optimizer&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; Execution Plan&#xC744; &#xB2E4;&#xC2DC; &#xC0DD;&#xC131; Dictionary Cache &#xB9D0;&#xADF8;&#xB300;&#xB85C; &#xB515;&#xC154;&#xB108;&#xB9AC; &#xC815;&#xBCF4;&#xB97C; &#xCE90;&#xC2DC; (&#xC5EC;&#xB7EC; Object&#xC758; &#xBA54;&#xD0C0;&#xC815;&#xBCF4;) Log Buffer DB Buffer Cache&#xC758; &#xBAA8;&#xB4E0; &#xBCC0;&#xACBD;&#xC0AC;&#xD56D;&#xC744; &#xC800;&#xC7A5; DB Block Buffer&#xC5D0; &#xAE30;&#xB85D;&#xD558;&#xAE30; &#xC804;&#xC5D0; Redo Log Buffer&#xC5D0; &#xBA3C;&#xC800; &#xAE30;&#xB85D;. LGWR&#xC774; &#xC8FC;&#xAE30;&#xC801;&#xC73C;&#xB85C; Redo Logfile&#xC5D0; &#xAE30;&#xB85D;. &#xB2A6;&#xC5B4;&#xB3C4; commit &#xC2DC;&#xC810;&#xC5D0;&#xB294; &#xAE30;&#xB85D; (Log Force at commit) Dirty Buffer&#xB97C; datafile&#xC5D0; &#xAE30;&#xB85D;&#xD558;&#xAE30; &#xC804;&#xC5D0; &#xD56D;&#xC0C1; Log Buffer&#xB97C; &#xBA3C;&#xC800; Logfile&#xC5D0; &#xAE30;&#xB85D; (Write Ahead Logging) &#xC65C;&#xB0D0;&#xBA74; &#xC778;&#xC2A4;&#xD134;&#xC2A4; &#xC7A5;&#xC560; &#xBC1C;&#xC0DD;&#xC2DC; commit&#xD558;&#xC9C0; &#xC54A;&#xC740; transaction&#xC744; rollback&#xD558;&#xAE30; &#xC704;&#xD568;. &#xB9CC;&#xC57D; datafile&#xC744; &#xBA3C;&#xC800; &#xAE30;&#xB85D;&#xD574; &#xBCF4;&#xB9AC;&#xBA74; &#xCD5C;&#xC885; commit &#xB418;&#xC9C0; &#xC54A;&#xC740; transaction&#xC774; &#xBC18;&#xC601;&#xB418;&#xC5B4;&#xC9D0;. 4.1 PGA (Process Global Area) UGA (User Global Area) Session&#xBCC4;&#xB85C; &#xD560;&#xB2F9; Dedicated Server (&#xC804;&#xC6A9; &#xC11C;&#xBC84;) &#xBC29;&#xC2DD;&#xC5D0;&#xC11C;&#xB294; PGA&#xC5D0; &#xD560;&#xB2F9; (1:1) Shared Server (&#xACF5;&#xC720; &#xC11C;&#xBC84;) &#xBC29;&#xC2DD;&#xC5D0;&#xC11C;&#xB294; SGA&#xC5D0; &#xD560;&#xB2F9; : Large Pool (&#xC124;&#xC815;&#xB418;&#xC5C8;&#xC744; &#xACBD;&#xC6B0;). &#xADF8;&#xB807;&#xC9C0; &#xC54A;&#xC744;&#xB550; Shared Pool CGA (Call Global Area) DB Call (Parse, Execute, Fetch)&#xC774; &#xC9C4;&#xD589;&#xB418;&#xB294; &#xB3D9;&#xC548;&#xB9CC; &#xD544;&#xC694;&#xD55C; &#xB370;&#xC774;&#xD130; Recursive Call&#xC774; &#xBC1C;&#xC0DD;&#xD558;&#xBA74; &#xADF8; &#xC548;&#xC758; (Parse, Execute, Fetch)&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB3C4; &#xCD94;&#xAC00;&#xB85C; &#xD560;&#xB2F9; Call&#xC774; &#xB05D;&#xB098;&#xBA74; &#xBC14;&#xB85C; &#xD574;&#xC81C;&#xB418;&#xC5B4; PGA&#xB85C; &#xBC18;&#xD658; Sort Area Sort &#xC791;&#xC5C5;&#xC774; &#xC9C4;&#xD589;&#xB418;&#xB294; &#xB3D9;&#xC548; &#xC870;&#xAE08;&#xC529; Chunk &#xB2E8;&#xC704;&#xB85C; &#xD560;&#xB2F9; DML&#xC740; &#xD558;&#xB098;&#xC758; Execute4 Call&#xC5D0;&#xC11C; &#xCC98;&#xB9AC;&#xAC00; &#xC644;&#xB8CC;&#xB418;&#xBBC0;&#xB85C; CGA&#xC5D0; &#xD560;&#xB2F9; SELECT&#xC758; &#xACBD;&#xC6B0; &#xC911;&#xB2E8; &#xB2E8;&#xACC4;&#xC5D0;&#xC11C;&#xB294; CGA&#xC5D0; &#xD560;&#xB2F9;&#xB418;&#xACE0;, &#xCD5C;&#xC885; &#xACB0;&#xACFC;&#xC9D1;&#xD569; &#xCD9C;&#xB825;&#xD558;&#xAE30; &#xC804;&#xC5D0;&#xB294; UGA&#xC5D0; &#xD560;&#xB2F9; 5. Wait Event DBMS &#xB0B4;&#xBD80; Process&#xB4E4;&#xC774; &#xAE30;&#xB2E4;&#xB824;&#xC57C; &#xD560; &#xC0C1;&#xD669;&#xC5D0;&#xC11C; sleep&#xC0C1;&#xD0DC;&#xB85C; &#xB300;&#xAE30;&#xD558;&#xAC8C; &#xB418;&#xB294;&#xB370;, &#xADF8; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xC720; &#xBA54;&#xBAA8;&#xB9AC; &#xC601;&#xC5ED;&#xC5D0; &#xC800;&#xC7A5;&#xB428;. Respone Time Analysis Session &#xB610;&#xB294; &#xC2DC;&#xC2A4;&#xD15C; &#xC804;&#xCCB4;&#xC5D0; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xBCD1;&#xBAA9; &#xD604;&#xC0C1;&#xACFC; &#xADF8; &#xC6D0;&#xC778;&#xC744; &#xCC3E;&#xC544; &#xD574;&#xACB0; 12Response Time = Service Time + Wait Time = CPU Time + Queue Time CPU Time : Parsing&#xC5D0; &#xC18C;&#xBE44;&#xD55C; &#xC2DC;&#xAC04;&#xC778;&#xC9C0; Query &#xC790;&#xCCB4; &#xC218;&#xD589;&#xC2DC;&#xAC04;&#xC778;&#xC9C0; &#xBD84;&#xC11D; Wait Time : &#xAC01;&#xAC01; &#xBC1C;&#xC0DD;&#xD55C; Wait Event&#xB97C; &#xBD84;&#xC11D;&#xD574; &#xAC00;&#xC7A5; &#xB9CE;&#xC740; &#xC2DC;&#xAC04;&#xC744; &#xC18C;&#xBE44;&#xD55C; &#xC774;&#xBCA4;&#xD2B8; &#xC911;&#xC2EC;&#xC73C;&#xB85C; &#xD574;&#xACB0;&#xBC29;&#xC548; &#xBAA8;&#xC0C9; Wait Event &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC; &#xCE90;&#xC2DC; &#xBD80;&#xD558; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC; &#xCE90;&#xC2DC;&#xC5D0;&#xC11C; SQL &#xCEE4;&#xC11C;&#xB97C; &#xCC3E;&#xACE0; &#xCD5C;&#xC801;&#xD654;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD55C; &#xACBD;&#xD569; latch: shared pool latch: library cache &#xC218;&#xD589;&#xC911;&#xC778; SQL&#xC774; &#xCC38;&#xC870;&#xD558;&#xB294; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC5D0; &#xB2E4;&#xB978; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; DDL&#xC744; &#xC218;&#xD589;&#xD560; &#xACBD;&#xC6B0; library cache lock library cache pin DB Call&#xACFC; &#xB124;&#xD2B8;&#xC6CC;&#xD06C; &#xBD80;&#xD558; : application, network &#xAC04;&#xC758; &#xC18C;&#xBAA8;&#xC2DC;&#xAC04; SQL*Net message from client : DB &#xACBD;&#xD569;&#xACFC; &#xC0C1;&#xAD00;&#xC5C6;&#xC74C;. client&#xB85C;&#xBD80;&#xD130; &#xB2E4;&#xC74C; &#xBA85;&#xB839;&#xC774; &#xC62C;&#xB54C;&#xAE4C;&#xC9C0; Idle &#xC0C1;&#xD0DC;&#xB85C; &#xB300;&#xAE30; SQL*Net message to client SQL*Net more data from client SQL*Net more data to client Disk I/O &#xBD80;&#xD558; db file sequential read : Single Block I/O &#xC218;&#xD589;&#xC2DC; &#xBC1C;&#xC0DD; db file scattered read : Multi Block I/O &#xC218;&#xD589;&#xC2DC; &#xBC1C;&#xC0DD; direct patch read direct patch write direct patch write temp direct path read temp db file parallel read Buffer Cache &#xACBD;&#xD569; latch: cache buffers chains latch: cache buffers lru chaine buffer busy waits free buffer waits Lock &#xAD00;&#xB828; Wait Event enq: TM - contention enq: TX - row lock contention enq: TX - index contention enq: TX - index contention enq: TX - allocate ITL entry enq: TX contention latch free : latch&#xB97C; &#xC5EC;&#xB7EC;&#xBC88;(2000&#xBC88; &#xAC00;&#xB7C9;) &#xC694;&#xCCAD;&#xD588;&#xC9C0;&#xB9CC; &#xACC4;&#xC18D; &#xC0AC;&#xC6A9; &#xC911;&#xC778; &#xACBD;&#xC6B0; &#xC7A0;&#xC2DC; Wait &#xC0C1;&#xD0DC;&#xB85C; &#xBE60;&#xC9D0; &#xB354; &#xC790;&#xC138;&#xD55C; &#xB0B4;&#xC6A9;&#xC744; &#xC54C;&#xACE0; &#xC2F6;&#xC73C;&#xBA74; &#xC544;&#xB798; slide&#xB97C; &#xCC38;&#xACE0;&#xD558;&#xC138;&#xC694;. &#xB354; &#xC790;&#xC138;&#xD55C; &#xB0B4;&#xC6A9;&#xC740; Oracle &#xC131;&#xB2A5; &#xACE0;&#xB3C4;&#xD654; &#xC6D0;&#xB9AC;&#xC640; &#xD574;&#xBC95; &#xCC45;&#xC744; &#xCC38;&#xACE0;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. Oracle Architecture : http://www.slideshare.net/seokjoonyun9/warevalley-orange-db-study2015-0320-oracle-architecture DB Buffer Cache : http://www.slideshare.net/seokjoonyun9/2015-0327-db-buffer-cache Redo Log : http://www.slideshare.net/seokjoonyun9/2015-0403-redo-undo Transaction Isolation Level : http://www.slideshare.net/seokjoonyun9/2015-0409-consistency Wait Event : http://www.slideshare.net/seokjoonyun9/oracle-architecture2015-0429-wait-event-and-sharedpool Oracle Lock : http://www.slideshare.net/seokjoonyun9/2015-0529-oracle-lock TX Lock : http://www.slideshare.net/seokjoonyun9/20150605-oracle-tx-lock","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 2-3 Optimizing SQL","slug":"02.07.optimizer","date":"2016-01-26T15:00:00.000Z","updated":"2017-04-24T00:00:38.000Z","comments":true,"path":"2016/01/27/02.07.optimizer/","link":"","permalink":"http://DevStarSJ.github.io/2016/01/27/02.07.optimizer/","excerpt":"","text":"2&#xACFC;&#xBAA9; SQL &#xAE30;&#xBCF8; &#xBC0F; &#xD65C;&#xC6A9; 20&#xBB38;&#xC81C; &#xAC01; &#xC0C1;&#xD669;&#xBCC4;&#xB85C; SQL&#xBB38; &#xC791;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD560; &#xC815;&#xB3C4;&#xB85C; &#xC5F0;&#xC2B5;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xAE30;&#xBCF8;&#xC801;&#xC778; SQL&#xBB38;&#xBC95; &#xBC0F; &#xD568;&#xC218;&#xB294; &#xC0DD;&#xB7B5;&#xD558;&#xACE0; Tuning&#xC5D0; &#xD65C;&#xC6A9;&#xB420;&#xC218; &#xC788;&#xB294; &#xAC83; &#xC704;&#xC8FC;&#xB85C; &#xC815;&#xB9AC;&#xD558;&#xACE0;&#xC790; &#xD569;&#xB2C8;&#xB2E4;. 3&#xC7A5; SQL &#xCD5C;&#xC801;&#xD654; &#xAE30;&#xBCF8; &#xC6D0;&#xB9AC; &#xC5EC;&#xAE30;&#xC11C;&#xB294; &#xAC04;&#xB2E8;&#xD788; &#xB2E4;&#xB8E8;&#xACE0; 3&#xACFC;&#xBAA9;&#xC5D0;&#xC11C; &#xC790;&#xC138;&#xD788; &#xB2E4;&#xB8F0; &#xC608;&#xC815;&#xC774;&#xBBC0;&#xB85C; &#xADF8;&#xB0E5; &#xB118;&#xC5B4;&#xAC00;&#xB3C4; &#xB429;&#xB2C8;&#xB2E4;. (&#xC544;&#xB9C8; SQPD&#xC758; &#xACBD;&#xC6B0; 2&#xACFC;&#xBAA9;&#xAE4C;&#xC9C0;&#xAC00; &#xBC94;&#xC704;&#xC774;&#xBBC0;&#xB85C; SQLD&#xC6A9; &#xBB38;&#xC81C;&#xB97C; &#xB0B4;&#xAE30;&#xC704;&#xD55C; &#xC6A9;&#xB3C4;&#xC778;&#xB4EF; &#xD569;&#xB2C8;&#xB2E4;.) Optimizer Optimizer : SQL&#xBB38;&#xC5D0; &#xB300;&#xD55C; &#xCD5C;&#xC801;&#xC758; &#xC2E4;&#xD589; &#xBC29;&#xBC95;&#xC744; &#xACB0;&#xC815;&#xD558;&#xB294; &#xC5ED;&#xD560; Execution Plan (&#xC2E4;&#xD589;&#xACC4;&#xD68D;) : Optimizer&#xAC00; &#xC0DD;&#xC131;&#xD55C; &#xCD5C;&#xC801;&#xC758; &#xC2E4;&#xD589; &#xACC4;&#xD68D; Optimizer &#xC885;&#xB958; RBO (Rule-based Optimizer) : &#xADDC;&#xCE59;(&#xC6B0;&#xC120; &#xC21C;&#xC704;)&#xB97C; &#xAC00;&#xC9C0;&#xACE0; &#xC2E4;&#xD589;&#xACC4;&#xD68D; &#xC0DD;&#xC131; CBO (Cost-based Optimizer) : &#xD1B5;&#xACC4;&#xC815;&#xBCF4;&#xB97C; &#xAE30;&#xBC18;&#xC73C;&#xB85C; &#xC5EC;&#xB7EC;&#xAC00;&#xC9C0; &#xC2E4;&#xD589;&#xACC4;&#xD68D;&#xC744; &#xC0DD;&#xC131;&#xD558;&#xC5EC; &#xADF8;&#xC911; &#xCD5C;&#xC800;&#xBE44;&#xC6A9;&#xC758; &#xC2E4;&#xD589;&#xACC4;&#xD68D;&#xC744; &#xC120;&#xD0DD; Rule-based Optimizer &#xADDC;&#xCE59; Single row by rowid Sigle row by cluster join Single row by hash cluster key with unique or primary key Single row by unique or primary key Cluster join Hash cluster key Indexed cluster key Composite index Single column sindex Bounded range search on indexed columns Unbounded range search on indexed columns Sort merge join MAX or MIN of indexed column ORDER BY on indexed column Full table scan &#xC694;&#xC57D;&#xD558;&#xC790;&#xBA74; &gt; Single row (rowid &lt; unique or primary key) &lt;&lt; Index ( Equal (composite &lt; single) &lt;&lt; Range (bounded &lt; unbounded) ) &lt;&lt; Full table scan Index 1. B-Tree Index &#xAD6C;&#xC131; Root Block : Branch Block &#xC911; &#xAC00;&#xC7A5; &#xC0C1;&#xC704; Block Branch Block : &#xB2E4;&#xC74C; &#xB2E8;&#xACC4;&#xB97C; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; Pointer&#xB97C; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xC74C; Leaf Block : Index&#xB97C; &#xAD6C;&#xC131;&#xD558;&#xB294; &#xCE7C;&#xB7FC;&#xC758; &#xB370;&#xC774;&#xD130;&#xC640; rowid, &#xC778;&#xC811;&#xD55C; Leaf Block&#xC758; Pointer&#xB97C; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xC74C; 2. Cluster Index (MS-SQL) , IOT (Oracle) PK&#xC21C;&#xC73C;&#xB85C; &#xC800;&#xC7A5;. Index&#xC758; Leaf Block&#xC5D0; Table &#xC758; &#xBAA8;&#xB4E0; &#xB370;&#xC774;&#xD130; &#xC800;&#xC7A5; 3. Bitmap Index &#xC77C;&#xC885;&#xC758; Hash + Linked List &#xD615;&#xD0DC; 4. FBI (Function-Based Index) &#xD568;&#xC218;&#xAC12; &#xC21C;&#xC73C;&#xB85C; Index&#xC5D0; &#xC800;&#xC7A5; Full Table Scan vs Index Scan Optimizer &#xAC00; Full Table Scan&#xC744; &#xD558;&#xB294; &#xACBD;&#xC6B0; SQL&#xC5D0; &#xC870;&#xAC74;(WHERE)&#xC774; &#xC5C6;&#xC744; &#xACBD;&#xC6B0; &#xC870;&#xAC74;&#xC740; &#xC788;&#xB294;&#xB370; &#xC0AC;&#xC6A9; &#xAC00;&#xB2A5;&#xD55C; INDEX&#xAC00; &#xC5C6;&#xB294; &#xACBD;&#xC6B0; Optimizer&#xAC00; &#xD310;&#xB2E8;&#xD558;&#xC5EC; Full Table Scan&#xC774; &#xB354; &#xC720;&#xB9AC;&#xD560;&#xB54C; : Index&#xB294; Single Block I/O, Table&#xC740; Multi Block I/O &#xAE30;&#xD0C0; : &#xBCD1;&#xB82C;&#xCC98;&#xB9AC;, Hint &#xB4F1;&#x2026; Index Scan &#xC885;&#xB958; Index Unique Scan : Unique Index&#xC5D0;&#xC11C; = &#xC870;&#xAC74;&#xC73C;&#xB85C; &#xAC80;&#xC0C9; Index Range Scan : &#xC870;&#xAC74;&#xC774; = &#xAC00; &#xC544;&#xB2C8;&#xAC70;&#xB098; Non-unique Index&#xB97C; &#xC774;&#xC6A9; Index Range Scan Descending : MIN, MAX &#xAC12;&#xB4F1;&#xC744; &#xC27D;&#xAC8C; &#xCC3E;&#xAE30; &#xC704;&#xD574;&#xC11C; &#xC0AC;&#xC6A9; Index Fast Scan : &#xAC80;&#xC0C9;&#xD558;&#xB294; &#xBAA8;&#xB4E0; &#xCEEC;&#xB7FC;&#xC774; Index&#xC5D0; &#xD3EC;&#xD568;&#xB41C; &#xACBD;&#xC6B0; Table&#xC744; &#xCC3E;&#xC9C0;&#xC54A;&#xACE0; Index&#xB9CC;&#xC73C;&#xB85C; &#xAC80;&#xC0C9; Index Skip Scan : Index&#xC758; &#xC120;&#xB450; &#xCEEC;&#xB7FC;&#xC774; &#xAC80;&#xC0C9; &#xC870;&#xAC74;&#xC5D0; &#xC5C6;&#xC744; &#xACBD;&#xC6B0; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xBC29;&#xBC95; JOIN NL Join (Nested-loop) Driving Table&#xC744; &#xBA3C;&#xC800; &#xC77D;&#xC740; &#xB2E4;&#xC74C;&#xC5D0; Outer Table&#xACFC; JOIN Driving Table&#xC5D0;&#xC11C; &#xC870;&#xAC74;&#xC5D0; &#xB9DE;&#xB294; &#xBAA8;&#xB4E0; row &#xB9CC;&#xD07C; JOIN&#xC774; &#xC774;&#xB8E8;&#xC5B4;&#xC9C0;&#xBBC0;&#xB85C; &#xC120;&#xD589; &#xD14C;&#xC774;&#xBE14;&#xC5D0;&#xC11C; &#xC791;&#xC5C5;&#xB7C9;&#xC744; &#xC904;&#xC774;&#xB294; &#xAC83;&#xC774; &#xC911;&#xC694; &#xC591;&#xCABD; &#xC911; &#xD55C;&#xCABD;&#xB9CC; Index&#xAC00; &#xC788;&#xB294; &#xACBD;&#xC6B0; Outer Table&#xCABD;&#xC758; Index&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xC774; &#xC720;&#xB9AC; (Driving&#xC740; Full Scan) JOIN &#xACFC;&#xC815;&#xC740; random access Sort Merge Join Join &#xCE7C;&#xB7FC;&#xC744; &#xAE30;&#xC900;&#xC73C;&#xB85C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC815;&#xB82C;&#xD55C; &#xB4A4;&#xC5D0; JOIN&#xC744; &#xC218;&#xD589; &#xB300;&#xB7C9;&#xC758; JOIN&#xC77C; &#xACBD;&#xC6B0; NL Join&#xC758; random access&#xBCF4;&#xB2E4; &#xC720;&#xB9AC; Hash Join &#xC120;&#xD589; &#xD14C;&#xC774;&#xBE14;(Build Input)&#xC5D0;&#xC11C; JOIN&#xD558;&#xB294; &#xCEEC;&#xB7FC;&#xC758; Hash&#xAC12;&#xC744; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0; &#xC0DD;&#xC131; &#xD6C4;&#xD589; &#xD14C;&#xC774;&#xBE14;(Prove Input)&#xC5D0; Hash&#xAC12;&#xC744; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0;&#xC11C; &#xCC3E;&#xC544;&#xC11C; JOIN &#xBC94;&#xC704; &#xAC80;&#xC0C9;&#xC740; &#xBD88;&#xAC00;&#xB2A5; &#xD558;&#xACE0; = &#xC870;&#xAC74;&#xC73C;&#xB85C;&#xB9CC; &#xAC00;&#xB2A5;","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 2-2-5 PL/SQL","slug":"02.06.plsql","date":"2016-01-25T16:00:00.000Z","updated":"2017-04-23T23:59:20.000Z","comments":true,"path":"2016/01/26/02.06.plsql/","link":"","permalink":"http://DevStarSJ.github.io/2016/01/26/02.06.plsql/","excerpt":"","text":"2&#xACFC;&#xBAA9; SQL &#xAE30;&#xBCF8; &#xBC0F; &#xD65C;&#xC6A9; 20&#xBB38;&#xC81C; &#xAC01; &#xC0C1;&#xD669;&#xBCC4;&#xB85C; SQL&#xBB38; &#xC791;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD560; &#xC815;&#xB3C4;&#xB85C; &#xC5F0;&#xC2B5;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xAE30;&#xBCF8;&#xC801;&#xC778; SQL&#xBB38;&#xBC95; &#xBC0F; &#xD568;&#xC218;&#xB294; &#xC0DD;&#xB7B5;&#xD558;&#xACE0; Tuning&#xC5D0; &#xD65C;&#xC6A9;&#xB420;&#xC218; &#xC788;&#xB294; &#xAC83; &#xC704;&#xC8FC;&#xB85C; &#xC815;&#xB9AC;&#xD558;&#xACE0;&#xC790; &#xD569;&#xB2C8;&#xB2E4;. 2&#xC7A5; SQL &#xD65C;&#xC6A9; (#5) PL/SQL (Procedural Language/SQL) &#xD2B9;&#xC9D5; Block &#xAD6C;&#xC870;&#xB85C; &#xB418;&#xC5B4; &#xC788;&#xC5B4; &#xAC01; &#xAE30;&#xB2A5;&#xBCC4;&#xB85C; &#xBAA8;&#xB4C8;&#xD654;&#xAC00; &#xAC00;&#xB2A5; &#xBCC0;&#xC218;, &#xC0C1;&#xC218; &#xB4F1;&#xC744; &#xC120;&#xC5B8;&#xD558;&#xC5EC; SQL &#xBB38;&#xC7A5; &#xAC04; &#xAC12;&#xC744; &#xAD50;&#xD658; IF, LOOP &#xB4F1;&#xC758; &#xC808;&#xCC28;&#xD615; &#xC5B8;&#xC5B4;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC774; &#xAC00;&#xB2A5; DBMS &#xC815;&#xC758; &#xC5D0;&#xB7EC;/&#xC0AC;&#xC6A9;&#xC790; &#xC815;&#xC758; &#xC5D0;&#xB7EC;&#xB97C; &#xC0AC;&#xC6A9; Oracle&#xC5D0; &#xB0B4;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xC73C;&#xBBC0;&#xB85C; &#xB2E4;&#xB978; Oracle Server&#xB85C; &#xC62E;&#xAE38;&#xC218; &#xC788;&#xC74C; &#xC5EC;&#xB7EC; SQL&#xBB38;&#xC7A5;&#xC744; Block&#xC73C;&#xB85C; &#xBB36;&#xC5B4;&#xC11C; &#xD55C;&#xBC88;&#xC5D0; &#xC11C;&#xBC84;&#xB85C; &#xBCF4;&#xB0B4;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xD1B5;&#xC2E0;&#xB7C9;&#xC744; &#xC904;&#xC77C;&#xC218; &#xC788;&#xC74C; Server&#xC5D0;&#xC11C; &#xC218;&#xD589;&#xB418;&#xBBC0;&#xB85C; Application&#xC758; &#xC131;&#xB2A5;&#xC744; &#xD5A5;&#xC0C1; &#xAD6C;&#xC870; DECLARE : BEGIN ~ END &#xC0AC;&#xC774;&#xC5D0; &#xBCC0;&#xC218;, &#xC778;&#xC218;&#xC5D0; &#xB300;&#xD55C; &#xC815;&#xC758; &#xBC0F; &#xB370;&#xC774;&#xD130; &#xD0C0;&#xC785; &#xC120;&#xC5B8; BEGIN : PL/SQL &#xC2DC;&#xC791; EXCEPTION : BEGIN ~ END &#xC5D0;&#xC11C; &#xC2E4;&#xD589;&#xB418;&#xB294; SQL&#xBB38;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD55C; &#xC5D0;&#xB7EC;&#xB97C; &#xCC98;&#xB9AC; (&#xC120;&#xD0DD;&#xD56D;&#xBAA9;) END : PL/SQL &#xC885;&#xB8CC; &#xBB38;&#xBC95; (Syntax) &#xC0DD;&#xC131; 1234567891011121314CREATE [OR REPLACE] PROCEDURE &#xBA85;&#xCE6D;{ argument1 [mode] data_type1, argument2 [mode] data_type2, ...}IS [AS]...BEGIN...EXCEPTION...END;/ mode : IN (&#xC785;&#xB825;) , OUT (&#xCD9C;&#xB825;) , INOUT(&#xC785;&#xCD9C;&#xB825;) &#xC0AD;&#xC81C; 1DROP PROCEDURE &#xBA85;&#xCE6D;; &#xC608;&#xC81C; DEPT table&#xC5D0; &#xC0C8;&#xB85C;&#xC6B4; &#xBD80;&#xC11C;&#xB97C; &#xC785;&#xB825;&#xD558;&#xB294;&#xB370;,&#xBD80;&#xC11C;&#xBC88;&#xD638;&#xAC00; &#xC774;&#xBBF8; &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xC744;&#xB54C;&#xB9CC; &#xC785;&#xB825;&#xD558;&#xACE0; &#xC874;&#xC7AC;&#xD560; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xADF8;&#xB0E5; &#xC885;&#xB8CC;&#xB418;&#xB294; PROCEDURE&#xB97C; &#xC791;&#xC131;&#xD574;&#xBCF4;&#xC790;. 123456789101112131415161718192021222324CREATE OR REPLACE PROCEDURE INPUT_DEPT( v_deptno in NUMBER, v_dname in VARCHAR2, v_loc in VARCHAR2, v_result out VARCHAR2)ISis_exist NUMBER := 0;BEGIN SELECT COUNT(*) INTO is_exist FROM DEPT WHERE DEPTNO = v_deptno AND ROWNUM = 1; IF is_exist &gt; 0 THEN v_result := &apos;&#xC774;&#xBBF8; &#xB4F1;&#xB85D;&#xB41C; &#xBD80;&#xC11C;&#xBC88;&#xD638;&apos;; ELSE INSERT INTO DEPT (DEPTNO, DNAME, LOC) VALUES (v_deptno, v_dname, v_loc); COMMIT; v_result := &apos;&#xC785;&#xB825; &#xC644;&#xB8CC;&apos;; END IF;EXCEPTION WHEN OTHERS THEN ROLLBACK; v_result := &apos;&#xC5D0;&#xB7EC; &#xBC1C;&#xC0DD;&apos;;END;/ &#xC2E4;&#xD589;&#xC744; &#xC2DC;&#xCF1C; &#xBCF4;&#xACA0;&#xB2E4;. 1EXECUTE INPUT_DEPT(10,&apos;DEV&apos;,&apos;SEOUL&apos;,:result) 1EXECUTE INPUT_DEPT(60,&apos;NEW_DEV&apos;,&apos;SANGAM&apos;,:result) User Defined Function Function&#xB294; Procedure&#xC640;&#xB294; &#xB2E4;&#xB974;&#xAC8C; &#xBC18;&#xB4DC;&#xC2DC; 1&#xAC1C;&#xC758; &#xAC12;&#xC744; RETURN&#xD574;&#xC57C; &#xD55C;&#xB2E4;. (SUM, NVL &#xAC19;&#xC740; &#xB0B4;&#xC7A5; &#xD568;&#xC218;&#xB97C; &#xC0DD;&#xAC01;&#xD558;&#xBA74; &#xC774;&#xD574;&#xAC00; &#xC27D;&#xB2E4;.) ABS &#xD568;&#xC218; &#xAD6C;&#xD604; : &#xC808;&#xB300;&#xAC12;&#xC744; RETURN 1234567891011121314CREATE OR REPLACE FUNCTION ABS_NUM(v_input IN NUMBER) RETURN NUMBERIS v_return NUMBER := 0;BEGIN if v_input &gt;= 0 THEN v_return := v_input; ELSE v_return := v_input * -1; END IF; RETURN v_return;END;/ 1SELECT ABS_NUM(-20), ABS_NUM(3) FROM DUAL; Trigger &#xD2B9;&#xC815; Table&#xC5D0; DML (INSERT, UPDATE, DELETE)&#xBB38;&#xC774; &#xC218;&#xD589;&#xD588;&#xC744; &#xB54C; &#xC790;&#xB3D9;&#xC73C;&#xB85C; &#xB3D9;&#xC791; (&#xC0AC;&#xC6A9;&#xC790; &#xC2E4;&#xD589;&#xC774; &#xC544;&#xB2CC; DBMS&#xAC00; &#xC2E4;&#xD589;) DBMS&#xC5D0;&#xC11C; &#xC2E4;&#xD589;&#xC744; &#xD558;&#xB294; &#xAC83;&#xC774;&#xBBC0;&#xB85C; DB&#xC5D0; &#xBC14;&#xB85C; &#xC801;&#xC6A9;&#xB428;. (COMMIT, ROLLBACK&#xC774; &#xBD88;&#xAC00;) Syntax (&#xBB38;&#xBC95;) 123456CREATE [OR REPLACE] TRIGGER trigger_name -- TRIGGER &#xBA85;&#xCE6D;BEFORE | AFTER -- &#xC544;&#xB798; &#xC791;&#xC5C5;&#xC774; &#xC77C;&#xC5B4;&#xB098;&#xAE30; &#xC804;(BEFORE) &#xB610;&#xB294; &#xD6C4;(AFTER)&#xC5D0; &#xC2E4;&#xD589;INSERT | UPDATE | DELETE ON table_name -- &#xD574;&#xB2F9; table&#xC5D0; &#xD574;&#xB2F9; &#xC791;&#xC5C5;&#xC774; &#xC77C;&#xC5B4;&#xB0AC;&#xC744; &#xACBD;&#xC6B0;[ FOR EACH ROW ] -- &#xD589; &#xD2B8;&#xB9AC;&#xAC70; (&#xD589; &#xB370;&#xC774;&#xD130; &#xC81C;&#xC5B4;&#xAC00;&#xB2A5;), &#xC5C6;&#xC73C;&#xBA74; &#xBB38;&#xC7A5; &#xD2B8;&#xB9AC;&#xAC70; (&#xAC01; &#xD589; &#xB370;&#xC774;&#xD130; &#xC81C;&#xC5B4; &#xBD88;&#xAC00;)[ WHEN (condition) ] -- &#xD574;&#xB2F9; &#xC870;&#xAC74;&#xC5D0; &#xB9DE;&#xC744;&#xB54C;&#xC5D0;&#xB9CC; &#xC2E4;&#xD589;PL/SQL block... &#xD589;&#xC758; &#xB370;&#xC774;&#xD130;&#xB294; :NEW.column_name , :OLD.column_name &#xC73C;&#xB85C; &#xC81C;&#xC5B4;&#xAC00; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. INSERT : :NEW (&#xC785;&#xB825;&#xB418;&#xB294; ROW) UPDATE : :NEW (&#xBCC0;&#xACBD;&#xB41C; &#xC0C8;&#xB85C;&#xC6B4; &#xAC12;), :OLD (&#xBCC0;&#xACBD; &#xC804;&#xC758; &#xAC12;) DELTE : :OLD (&#xC0AD;&#xC81C;&#xB41C; &#xAC12;) &#xC608; &#xC1FC;&#xD551;&#xBAB0;&#xC758; &#xACBD;&#xC6B0; - &#xD558;&#xB8E8; &#xC218;&#xB9CC;&#xAC74;&#xC758; &#xC8FC;&#xBB38;&#xC774; &#xB4E4;&#xC5B4;&#xC634; - &#xC9C1;&#xC6D0;&#xB4E4;&#xC740; &#xC77C;&#xC790;&#xBCC4;, &#xC0C1;&#xD488;&#xBCC4; &#xCD1D; &#xD310;&#xB9E4;&#xC218;&#xB7C9; &#xBC0F; &#xC8FC;&#xBB38;&#xC2E4;&#xC801;&#xC73C;&#xB85C; &#xC628;&#xB77C;&#xC778;&#xC73C;&#xB85C; &#xC870;&#xD68C;&#xD568; &#xC774;&#xB7F4; &#xACBD;&#xC6B0; &#xB9E4;&#xBC88; &#xC218;&#xB9CC;&#xAC74;&#xC758; &#xB370;&#xC774;&#xD130;&#xB85C; &#xC9D1;&#xACC4;&#xB97C; &#xB0BC;&#xB824;&#xBA74; &#xC11C;&#xBC84; &#xBD80;&#xD558;&#xAC00; &#xD06C;&#xB2E4;. Trigger&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xC8FC;&#xBB38;&#xC774; &#xB4E4;&#xC5B4;&#xC62C; &#xB54C;&#xB9C8;&#xB2E4; &#xC9D1;&#xACC4;&#xB97C; &#xACC4;&#xC0B0;&#xD558;&#xC5EC; &#xBCC4;&#xB3C4; Table&#xC5D0; &#xBCF4;&#xAD00;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. Table &#xC0DD;&#xC131; 123456789101112131415CREATE TABLE ORDER_LIST( ORDER_DATE CHAR(8) NOT NULL, PRODUCT VARCHAR2(10) NOT NULL, QTY NUMBER NOT NULL, AMOUNT NUMBER NOT NULL);CREATE TABLE SALES_PER_DATE( SALE_DATE CHAR(8) NOT NULL, PRODUCT VARCHAR2(10) NOT NULL, QTY NUMBER NOT NULL, AMOUNT NUMBER NOT NULL); Trigger &#xC0DD;&#xC131; 1234567891011121314151617181920212223CREATE OR REPLACE TRIGGER SUM_SALES AFTER INSERT ON ORDER_LIST -- ORDER_LIST table&#xC5D0; INSERT &#xC791;&#xC5C5; &#xD6C4;&#xC5D0; FOR EACH ROW -- &#xD589; &#xD2B8;&#xB9AC;&#xAC70;&#xB85C; &#xC2E4;&#xD589;DECLARE o_date ORDER_LIST.ORDER_DATE%TYPE; o_prod ORDER_LIST.PRODUCT%TYPE;BEGIN o_date := :NEW.ORDER_DATE; o_prod := :NEW.PRODUCT; UPDATE SALES_PER_DATE SET QTY = QTY + :NEW.QTY, AMOUNT = AMOUNT + :NEW.AMOUNT WHERE SALE_DATE = o_date AND PRODUCT = o_prod; IF SQL%NOTFOUND THEN INSERT INTO SALES_PER_DATE VALUES (o_date, o_prod, :NEW.QTY, :NEW.AMOUNT); END IF;END;/ &#xB370;&#xC774;&#xD130; &#xC785;&#xB825; &#xBC0F; &#xACB0;&#xACFC; &#xD655;&#xC778; 1234567INSERT INTO ORDER_LIST VALUES (&apos;20160127&apos;,&apos;Orange&apos;, 2, 10000);INSERT INTO ORDER_LIST VALUES (&apos;20160127&apos;,&apos;Orange&apos;, 5, 20000);INSERT INTO ORDER_LIST VALUES (&apos;20160127&apos;,&apos;PetaSQL&apos;, 1, 100);INSERT INTO ORDER_LIST VALUES (&apos;20160127&apos;,&apos;ChakraMAX&apos;, 1, 1000);SELECT * FROM ORDER_LIST;SELECT * FROM SALES_PER_DATE;","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 2-2-4 DCL","slug":"02.05.dcl","date":"2016-01-25T15:00:00.000Z","updated":"2017-04-23T23:57:57.000Z","comments":true,"path":"2016/01/26/02.05.dcl/","link":"","permalink":"http://DevStarSJ.github.io/2016/01/26/02.05.dcl/","excerpt":"","text":"2&#xACFC;&#xBAA9; SQL &#xAE30;&#xBCF8; &#xBC0F; &#xD65C;&#xC6A9; 20&#xBB38;&#xC81C; &#xAC01; &#xC0C1;&#xD669;&#xBCC4;&#xB85C; SQL&#xBB38; &#xC791;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD560; &#xC815;&#xB3C4;&#xB85C; &#xC5F0;&#xC2B5;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xAE30;&#xBCF8;&#xC801;&#xC778; SQL&#xBB38;&#xBC95; &#xBC0F; &#xD568;&#xC218;&#xB294; &#xC0DD;&#xB7B5;&#xD558;&#xACE0; Tuning&#xC5D0; &#xD65C;&#xC6A9;&#xB420;&#xC218; &#xC788;&#xB294; &#xAC83; &#xC704;&#xC8FC;&#xB85C; &#xC815;&#xB9AC;&#xD558;&#xACE0;&#xC790; &#xD569;&#xB2C8;&#xB2E4;. 2&#xC7A5; SQL &#xD65C;&#xC6A9; (#4) DCL (Data Control Langeage) USER &#xC0DD;&#xC131; &#xBC0F; &#xAD8C;&#xD55C; &#xAD00;&#xB9AC;&#xC5D0; &#xAD00;&#xD55C; &#xB0B4;&#xC6A9; DBMS&#xBCC4;&#xB85C; &#xAD6C;&#xC870; &#xBC0F; &#xB0B4;&#xC6A9;&#xC774; &#xB9CE;&#xC774; &#xB2E4;&#xB984; (&#xC5EC;&#xAE30;&#xC11C;&#xB294; Oracle &#xC704;&#xC8FC;&#xB85C; &#xC9C4;&#xD589;) USER &#xC0DD;&#xC131; 1CREATE USER &#xC0AC;&#xC6A9;&#xC790;&#xBA85; IDENTIFIED BY &#xBE44;&#xBC00;&#xBC88;&#xD638;; &#xAD8C;&#xD55C;&#xBD80;&#xC5EC; 12GRANT &#xAD8C;&#xD55C; TO &#xC0AC;&#xC6A9;&#xC790;; -- &#xAD8C;&#xD55C; &#xBD80;&#xC5EC;REVOKE &#xAD8C;&#xD55C; FROM &#xC0AC;&#xC6A9;&#xC790;; -- &#xAD8C;&#xD55C; &#xD68C;&#xC218; &#xC55E;&#xC11C; &#xBCF8; &#xC0AC;&#xC6A9;&#xC790; &#xC0DD;&#xC131; &#xC791;&#xC5C5;&#xC744; &#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; CREATE USER &#xAD8C;&#xD55C;&#xC774; &#xD544;&#xC694;&#xD568; 1GRANT CREATE USER TO &#xC0AC;&#xC6A9;&#xC790;&#xBA85;; &#xD558;&#xC9C0;&#xB9CC; &#xC0DD;&#xC131;&#xB41C; USER&#xB294; session &#xC5F0;&#xACB0;&#xB3C4; &#xBABB;&#xD55C;&#xB2E4;. 1GRANT CREATE SESSION TO &#xC0AC;&#xC6A9;&#xC790;&#xBA85;; session &#xC5F0;&#xACB0;&#xC744; &#xD558;&#xC600;&#xB2E4; &#xD558;&#xB354;&#xB77C;&#xB3C4; table &#xC0DD;&#xC131; &#xAD8C;&#xD55C;&#xC774; &#xC5C6;&#xB2E4;. 1GRANT CREATE TABLE TO &#xC0AC;&#xC6A9;&#xC790;&#xBA85;; OBJECT &#xAD8C;&#xD55C; &#xAD00;&#xB9AC; 1GRANT &#xAD8C;&#xD55C; ON &#xC624;&#xBE0C;&#xC81D;&#xD2B8; TO &#xC0AC;&#xC6A9;&#xC790;; OBJECT &#xBCC4; &#xAD8C;&#xD55C;&#xBAA9;&#xB85D; 1234- Table : DELETE, INSERT, SELECT, UPDATE, ALTER, INDEX, REFERENCES- View : DELETE, INSERT, SELECT, UPDATE- SEQUENCE : SELECT, ALTER- PROCEDURE : EXECUTE &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; &#xC790;&#xC2E0;&#xC774; &#xC0DD;&#xC131;&#xD558;&#xC9C0; &#xC54A;&#xC740; object&#xC5D0;&#xB294; &#xC811;&#xADFC;&#xC774; &#xBD88;&#xAC00;&#xB2A5;&#xD558;&#xB2E4;. object &#xC0DD;&#xC131;&#xC790;&#xAC00; &#xADF8;&#xAC83;&#xC744; &#xD65C;&#xC6A9;&#xD560; &#xC0AC;&#xB78C;&#xC5D0;&#xAC8C; &#xAD8C;&#xD55C;&#xC744; &#xBD80;&#xC5EC;&#xD574;&#xC57C;&#xB9CC; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. Role &#xC0AC;&#xC6A9;&#xC790;&#xB97C; &#xC0C8;&#xB85C; &#xC0DD;&#xC131;&#xD560;&#xB54C;&#xB9C8;&#xB2E4; &#xAD8C;&#xD55C;&#xC744; &#xB2E4; &#xBD80;&#xC5EC;&#xD558;&#xB294; &#xAC83;&#xC740; &#xBC88;&#xAC70;&#xB85C;&#xC6B4; &#xC791;&#xC5C5;&#xC774;&#xB2E4;. Role&#xC744; &#xC0DD;&#xC131;&#xD558;&#xC5EC; Role&#xC5D0;&#xB2E4;&#xAC00; &#xC5EC;&#xB7EC;&#xAC00;&#xC9C0; &#xC5ED;&#xD560;&#xC744; &#xBD80;&#xC5EC;&#xD558;&#xACE0;, &#xC0AC;&#xC6A9;&#xC790;&#xC5D0;&#xAC8C; &#xD574;&#xB2F9; Role&#xC5D0; &#xB300;&#xD55C; &#xAD8C;&#xD55C;&#xC744; &#xC8FC;&#xBA74; &#xD55C;&#xBC29;&#xC5D0; &#xD574;&#xACB0;&#xB41C;&#xB2E4;. 123CREATE ROLE ROLE&#xBA85;&#xCE6D; -- ROLE &#xC0DD;&#xC131;GRANT &#xAD8C;&#xD55C;[, ...] TO ROLE&#xBA85;&#xCE6D; -- ROLE&#xC5D0; &#xAD8C;&#xD55C; &#xBD80;&#xC5EC;GRANT ROLE&#xBA85;&#xCE6D; TO &#xC0AC;&#xC6A9;&#xC790; -- &#xC0AC;&#xC6A9;&#xC790;&#xC5D0;&#xAC8C; ROLE &#xBD80;&#xC5EC;","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 2-2-3 Window function","slug":"02.04.window","date":"2016-01-24T16:00:00.000Z","updated":"2017-04-23T23:58:30.000Z","comments":true,"path":"2016/01/25/02.04.window/","link":"","permalink":"http://DevStarSJ.github.io/2016/01/25/02.04.window/","excerpt":"","text":"2&#xACFC;&#xBAA9; SQL &#xAE30;&#xBCF8; &#xBC0F; &#xD65C;&#xC6A9; 20&#xBB38;&#xC81C; &#xAC01; &#xC0C1;&#xD669;&#xBCC4;&#xB85C; SQL&#xBB38; &#xC791;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD560; &#xC815;&#xB3C4;&#xB85C; &#xC5F0;&#xC2B5;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xAE30;&#xBCF8;&#xC801;&#xC778; SQL&#xBB38;&#xBC95; &#xBC0F; &#xD568;&#xC218;&#xB294; &#xC0DD;&#xB7B5;&#xD558;&#xACE0; Tuning&#xC5D0; &#xD65C;&#xC6A9;&#xB420;&#xC218; &#xC788;&#xB294; &#xAC83; &#xC704;&#xC8FC;&#xB85C; &#xC815;&#xB9AC;&#xD558;&#xACE0;&#xC790; &#xD569;&#xB2C8;&#xB2E4;. 2&#xC7A5; SQL &#xD65C;&#xC6A9; (#3) WINDOW FUNCTION (&#xC708;&#xB3C4;&#xC6B0; &#xD568;&#xC218;) &#xD589;&#xACFC; &#xD589;&#xAC04;&#xC744; &#xBE44;&#xAD50;, &#xC5F0;&#xC0B0;&#xD558;&#xB294; &#xD568;&#xC218; &#xC885;&#xB958; &#xC21C;&#xC704; &#xAD00;&#xB828; : RANK, DENSE_RANK, ROW_NUMBER &#xC9D1;&#xACC4; &#xAD00;&#xB828; : SUM, MAX, MIN, AVG, COUNT &#xC21C;&#xC11C; &#xAD00;&#xB828; : FIRST_VALUE, LAST_VALUE, LAG, LEAD &#xBE44;&#xC728; &#xAD00;&#xB828; : CUME_DIST, PERCENT_RANK, NTILE, RATIO_TO_REPORT &#xD1B5;&#xACC4; &#xBD84;&#xC11D; (&#xC21C;&#xD615; &#xBD84;&#xC11D; &#xD3EC;&#xD568;) : CORP, COVAR_POP, STDDEV &#xB4F1;&#x2026; (&#xC5EC;&#xAE30;&#xC11C;&#xB294; &#xB2E4;&#xB8E8;&#xC9C0; &#xC54A;&#xC74C;) &#xBB38;&#xBC95; (syntax) 123SELECT &#xD568;&#xC218;&#xBA85; (&#xC778;&#xC790;) OVER ([PARTITION BY &#xCE7C;&#xB7FC;] [ORDER BY &#xC808;] [WINDOWING &#xC808;]) FROM &#xD14C;&#xC774;&#xBE14;; PARTITION BY &#xC808; : &#xC804;&#xCCB4; &#xC9D1;&#xD569;&#xC744; &#xAE30;&#xC900;&#xC5D0; &#xC758;&#xD574; &#xC18C;&#xADF8;&#xB8F9;&#xC73C;&#xB85C; &#xBD84;&#xB9AC; ORDER BY &#xC808; : &#xC21C;&#xC704; &#xC9C0;&#xC815;&#xC2DC; &#xADF8; &#xC21C;&#xC11C; WINDOWING &#xC808; : &#xD568;&#xC218;&#xC758; &#xB300;&#xC0C1;&#xC744; &#xC9C0;&#xC815; ROWS : &#xBB3C;&#xB9AC;&#xC801;&#xC778; &#xD589;&#xC218;&#xB97C; &#xC9C0;&#xC815; RANGE : &#xB17C;&#xB9AC;&#xC801;&#xC778; &#xAC12;&#xC5D0; &#xC758;&#xD55C; &#xBC94;&#xC704; &#xC9C0;&#xC815; 123456789-- BETWEEN &#xC0AC;&#xC6A9; &#xD0C0;&#xC785;ROWS | RANGE BETWEEN UNBOUNDED PRECEDING | CURRENT ROW | VALUE_EXPR PRECEDING/FOLLOWINGAND UNBOUNDED FOLLOWING | CURRENT ROW | VALUE_EXPR PRECEDING/FOLLOWING-- BETWEEN &#xBBF8;&#xC0AC;&#xC6A9; &#xD0C0;&#xC785;ROWS | RANGE UNBOUNDED PRECEDING | CURRENT ROW | VALUE_EXPR PRECEDING 1. &#xC21C;&#xC704; &#xD568;&#xC218; RANK : &#xD2B9;&#xC815; &#xCE7C;&#xB7FC;&#xC5D0; &#xB300;&#xD55C; &#xC21C;&#xC704;&#xB97C; &#xAD6C;&#xD568; 1234SELECT JOB, ENAME, SAL, RANK() OVER (ORDER BY SAL DESC) ALL_RANK, -- SAL&#xC758; DESC &#xC21C;&#xC11C;&#xB85C; RANK RANK() OVER (PARTITION BY JOB ORDER BY SAL DESC) JOB_RANK -- JOB&#xBCC4;&#xB85C; SAL&#xC758; DESC &#xC21C;&#xC11C;&#xB85C; RANK FROM SCOTT.EMP; &#xD55C;&#xBB38;&#xC7A5;&#xC5D0; RANK&#xAC00; 2&#xAC1C; &#xC774;&#xC0C1;&#xC77C; &#xACBD;&#xC6B0; &#xBA3C;&#xC800; &#xB098;&#xC628;&#xAC83;&#xC744; &#xAE30;&#xC900;&#xC73C;&#xB85C; ORDER BY&#xB41C; &#xACB0;&#xACFC;&#xAC00; &#xB098;&#xC628;&#xB2E4;. JOB_RANK&#xB97C; &#xBA3C;&#xC800; &#xC37C;&#xC744; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; ORDER BY JOB, SAL DESC &#xC640; &#xAC19;&#xC740; &#xC21C;&#xC11C;&#xB85C; &#xACB0;&#xACFC;&#xAC00; &#xB098;&#xC628;&#xB2E4;. DENSE_RANK : &#xB3D9;&#xC77C;&#xD55C; &#xC21C;&#xC704;&#xB97C; &#xD558;&#xB098;&#xC758; &#xAC74;&#xC218;&#xB85C; &#xACC4;&#xC0B0;&#xD55C;&#xB2E4;. ROW_NUMBER : &#xB3D9;&#xC77C;&#xD55C; &#xC21C;&#xC704;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB3C4; &#xB4F1;&#xC218;&#xB97C; &#xB530;&#xB85C; &#xB9E4;&#xAE34;&#xB2E4;. (Oracle&#xC758; &#xACBD;&#xC6B0; rowid&#xAC00; &#xB0AE;&#xC740;&#xAC8C; &#xBA3C;&#xC800; &#xB098;&#xC634;) 12345SELECT JOB, ENAME, SAL, RANK() OVER (ORDER BY SAL DESC) RANK, DENSE_RANK() OVER (ORDER BY SAL DESC) DENSE_RANK, ROW_NUMBER() OVER (ORDER BY SAL DESC) ROW_NUMBER FROM SCOTT.EMP; &#xC55E;&#xC758; &#xACB0;&#xACFC;&#xB97C; &#xBCF4;&#xBA74; - RANK&#xC758; &#xACBD;&#xC6B0; 2&#xC704;&#xAC00; 2&#xAC1C;&#xC774;&#xACE0; &#xB2E4;&#xC74C;&#xC774; 4&#xC704;&#xC778;&#xB370;, - DENSE_RANK&#xB294; 2&#xC704;&#xAC00; 2&#xAC1C;&#xC774;&#xACE0; &#xB2E4;&#xC74C;&#xC774; 3&#xC704;&#xC774;&#xB2E4;. - ROW_NUMBER&#xB294; 1 ~ 14&#xB85C; &#xBAA8;&#xB4E0; row&#xC758; &#xC21C;&#xC704;&#xAC00; &#xB2E4;&#xB974;&#xB2E4;. 2. &#xC9D1;&#xACC4; &#xD568;&#xC218; SUM : &#xD30C;&#xD2F0;&#xC158;&#xBCC4; &#xC708;&#xB3C4;&#xC6B0;&#xC758; &#xD569; 123SELECT DEPTNO, ENAME, SAL, SUM(SAL) OVER (PARTITION BY DEPTNO) &quot;&#xBD80;&#xC11C;&#xBCC4; &#xC5F0;&#xBD09;&#xD569;&#xACC4;&quot; FROM SCOTT.EMP; &#xC704; &#xC608;&#xC81C;&#xB294; &#xBCC4;&#xB85C; &#xC5B4;&#xB835;&#xC9C0; &#xC54A;&#xB2E4;. &#xC774;&#xC81C; &#xBD80;&#xC11C;&#xBCC4;&#xB85C; SAL &#xC21C;&#xC11C;&#xB85C; ORDER BY&#xD55C; &#xB2E4;&#xC74C;&#xC5D0; &#xBD80;&#xC11C;&#xBCC4; &#xC5F0;&#xBD09;&#xD569;&#xACC4; &#xB300;&#xC2E0; &#xBD80;&#xC11C;&#xBCC4; &#xC5F0;&#xBD09;&#xB204;&#xACC4;&#xB85C; &#xCD9C;&#xB825;&#xD574;&#xBCF4;&#xACA0;&#xB2E4;. 1234SELECT DEPTNO, ENAME, SAL, SUM(SAL) OVER (PARTITION BY DEPTNO ORDER BY SAL RANGE UNBOUNDED PRECEDING) &quot;&#xBD80;&#xC11C;&#xBCC4; &#xC5F0;&#xBD09;&#xB204;&#xACC4;&quot;, RANK() OVER (PARTITION BY DEPTNO ORDER BY SAL) IDX FROM SCOTT.EMP; RANGE UNBOUNDED PRECEDING : &#xC790;&#xC2E0;(ROW)&#xC744; &#xAE30;&#xC900;&#xC73C;&#xB85C; &#xC55E;&#xCABD;(PRECEDING)&#xC73C;&#xB85C; &#xD604;&#xC7AC; PARTITION &#xB0B4;&#xC758; &#xBAA8;&#xB4E0;&#xAC12;(UNBOUNDED) &#xB3D9;&#xC77C;&#xD55C; RANK&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xB204;&#xACC4;&#xAC12;&#xB3C4; &#xB3D9;&#xC77C;&#xD558;&#xAC8C; &#xCDE8;&#xAE09;&#xD558;&#xC5EC; &#xB450; &#xAC12;&#xC744; &#xBAA8;&#xB450; &#xB354;&#xD558;&#xAC8C; &#xB41C;&#xB2E4;. MIN, MAX : &#xD30C;&#xD2F0;&#xC158;&#xBCC4; &#xC708;&#xB3C4;&#xC6B0;&#xC758; &#xCD5C;&#xC18C;, &#xCD5C;&#xB300;&#xAC12; 1234SELECT DEPTNO, ENAME, SAL, MIN(SAL) OVER (PARTITION BY DEPTNO ORDER BY SAL) MIN_DEPT, MAX(SAL) OVER (PARTITION BY DEPTNO) MAX_DEPT FROM SCOTT.EMP; AVG : &#xD30C;&#xD2F0;&#xC158;&#xBCC4; &#xC708;&#xB3C4;&#xC6B0;&#xC758; &#xD3C9;&#xADE0;&#xAC12; 123SELECT DEPTNO, ENAME, SAL, HIREDATE, ROUND(AVG(SAL) OVER (PARTITION BY DEPTNO ORDER BY HIREDATE ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING)) AVG FROM SCOTT.EMP; ROW BETWEEN 1 PRECEDING AND 1 FOLLOWING : &#xC790;&#xC2E0;(ROW)&#xC744; &#xAE30;&#xC900;&#xC73C;&#xB85C; &#xC55E;&#xCABD;(PRECEDING) 1&#xAC1C;&#xC640; &#xB4A4;&#xCABD;(FOLLOWING) 1&#xAC1C;&#xC758; ROW&#xB9CC;&#xC744; &#xB300;&#xC0C1;&#xC73C;&#xB85C; &#xD568;. &#xB9CC;&#xC57D; PARTITION &#xB0B4;&#xC5D0; &#xC55E;&#xC5D0; &#xAC12;&#xC774; &#xC5C6;&#xC73C;&#xBA74; &#xB4A4;&#xC5D0; &#xAC12;&#xACFC; &#xC790;&#xC2E0;&#xC758; 2&#xAC1C;&#xC5D0; &#xB300;&#xD55C; &#xD3C9;&#xADE0;&#xB9CC; &#xACC4;&#xC0B0;. COUNT : &#xD30C;&#xD2F0;&#xC158;&#xBCC4; &#xAC1C;&#xC218;&#xB97C; &#xAD6C;&#xD568; 123SELECT DEPTNO, ENAME, SAL, COUNT(*) OVER (ORDER BY SAL RANGE BETWEEN 100 PRECEDING AND 100 FOLLOWING) COUNT FROM SCOTT.EMP; RANGE BETWEEN 100 PRECEDING AND 100 FOLLOWING : &#xAC12;&#xC73C;&#xB85C; &#xC55E;&#xB4A4; 100 &#xC0AC;&#xC774;&#xC5D0; &#xC788;&#xB294; &#xAC83;&#xB9CC;&#xC744; &#xB300;&#xC0C1;&#xC73C;&#xB85C; &#xD568;. &#xC989; &#xC790;&#xC2E0;&#xC758; &#xC5F0;&#xBD09;&#xBCF4;&#xB2E4; +- 100 &#xC0AC;&#xC774;&#xC758; &#xC0AC;&#xC6D0;&#xC218;&#xB97C; &#xCE21;&#xC815; 3. &#xC21C;&#xC11C; &#xD568;&#xC218; FIRST_VALUE : &#xD30C;&#xD2F0;&#xC158;&#xB0B4;&#xC5D0;&#xC11C; &#xAC00;&#xC7A5; &#xBA3C;&#xC800; &#xB098;&#xC628; &#xAC12; (MIN&#xC73C;&#xB85C; &#xBE44;&#xC2B7;&#xD558;&#xAC8C; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;) LAST_VALUE : &#xD30C;&#xD2F0;&#xC158;&#xB0B4;&#xC5D0;&#xC11C; &#xAC00;&#xC7A5; &#xB098;&#xC911;&#xC5D0; &#xB098;&#xC628; &#xAC12; (MAX &#xB85C; &#xBE44;&#xC2B7;&#xD558;&#xAC8C; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;) &#xAC01; &#xBD80;&#xC11C;&#xBCC4; &#xAC00;&#xC7A5; &#xC5F0;&#xBD09;&#xC774; &#xB9CE;&#xC740; &#xC0AC;&#xB78C;(RICH)&#xC640; &#xAC00;&#xC7A5; &#xC5F0;&#xBD09;&#xC774; &#xC801;&#xC740; &#xC0AC;&#xB78C;(POOR)&#xB97C; &#xAD6C;&#xD574;&#xBCF4;&#xC790;. &#xCC38;&#xACE0;&#xB85C; &#xB2E4;&#xC74C; SQL&#xC740; &#xACB0;&#xACFC;&#xAC00; &#xC774;&#xC0C1;&#xD558;&#xAC8C; &#xB098;&#xC628;&#xB2E4;. 1234SELECT DEPTNO, ENAME, SAL, FIRST_VALUE(ENAME) OVER (PARTITION BY DEPTNO ORDER BY SAL) POOR, LAST_VALUE (ENAME) OVER (PARTITION BY DEPTNO ORDER BY SAL) RICH FROM SCOTT.EMP; FIRST_VALUE&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC81C;&#xB300;&#xB85C; &#xB098;&#xC654;&#xB294;&#xB370;, LAST_VALUE&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xBB54;&#xAC00; &#xC880; &#xC774;&#xC0C1;&#xD558;&#xB2E4;. &#xD30C;&#xD2F0;&#xC158; &#xB0B4;&#xC5D0;&#xC11C; &#xD604;&#xC7AC;(ROW)&#xB97C; &#xAE30;&#xC900;&#xC73C;&#xB85C;&#xB9CC; &#xACC4;&#xC0B0;&#xC774; &#xB418;&#xC5C8;&#xB2E4;. LAST_VALUE&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xBC94;&#xC704;&#xB97C; &#xBA85;&#xC2DC;&#xC801;&#xC73C;&#xB85C; &#xC9C0;&#xC815;&#xD574;&#xC8FC;&#xBA74; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xCD9C;&#xB825;&#xB41C;&#xB2E4;. 12345SELECT DEPTNO, ENAME, SAL, FIRST_VALUE(ENAME) OVER (PARTITION BY DEPTNO ORDER BY SAL) POOR, LAST_VALUE (ENAME) OVER (PARTITION BY DEPTNO ORDER BY SAL ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) RICH FROM SCOTT.EMP; &#xC774; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; SAL &#xC21C;&#xC73C;&#xB85C; &#xC815;&#xB82C;&#xB418;&#xC5C8;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC758;&#xBBF8;&#xC801;&#xC73C;&#xB85C; UNBOUNDED PRECEDING &#xB300;&#xC2E0;&#xC5D0; CURRENT ROW&#xB97C; &#xC801;&#xC5B4;&#xB3C4; &#xACB0;&#xACFC;&#xB294; &#xAC19;&#xB2E4;. LAG : &#xC774;&#xC804; &#xBA87; &#xBC88;&#xC9F8; &#xD589;&#xC758; &#xAC12;&#xC744; &#xAC00;&#xC838;&#xC628;&#xB2E4;. LEAD : &#xC774;&#xD6C4; &#xBA87; &#xBC88;&#xC9F8; &#xD589;&#xC758; &#xAC12;&#xC744; &#xAC00;&#xC838;&#xC628;&#xB2E4;. 1234SELECT DEPTNO, ENAME, SAL, LAG (SAL) OVER (PARTITION BY DEPTNO ORDER BY SAL) LAG, LEAD(SAL) OVER (PARTITION BY DEPTNO ORDER BY SAL) LEAD FROM SCOTT.EMP; LAG, LEAD &#xD568;&#xC218;&#xB294; &#xC778;&#xC790;&#xB97C; 3&#xAC1C;&#xAE4C;&#xC9C0; &#xAC00;&#xC9C8;&#xC218; &#xC788;&#xB2E4;. 1LAG(&#xCEEC;&#xB7FC;, &#xBA87;&#xCE78; = 1, ISNULL = NULL) &#xCCAB;&#xBC88;&#xC9F8; &#xC778;&#xC790; : &#xC5B4;&#xB290; &#xCEEC;&#xB7FC; &#xAC12;&#xC744; &#xCD9C;&#xB825;&#xD560;&#xC9C0; &#xC9C0;&#xC815; &#xB450;&#xBC88;&#xC9F8; &#xC778;&#xC790; : &#xBA87;&#xCE78; &#xC55E; (&#xB610;&#xB294; &#xB4A4;)&#xC758; &#xAC12;&#xC744; &#xAC00;&#xC838;&#xC62C;&#xC9C0; &#xC9C0;&#xC815; (default = 1) &#xC138;&#xBC88;&#xC9F8; &#xC778;&#xC790; : NULL&#xC77C; &#xACBD;&#xC6B0; &#xC5B4;&#xB5BB;&#xAC8C; &#xCD9C;&#xB825;&#xD560;&#xC9C0; &#xC9C0;&#xC815; (default = NULL) 123456SELECT DEPTNO, ENAME, SAL, LAG (SAL,1,0) OVER (ORDER BY SAL) LAG_1, LAG (SAL,2,0) OVER (ORDER BY SAL) LAG_2, LEAD(SAL,1,0) OVER (ORDER BY SAL) LEAD_1, LEAD(SAL,2,0) OVER (ORDER BY SAL) LEAD_2 FROM SCOTT.EMP; 4. &#xBE44;&#xC728; &#xD568;&#xC218; RATIO_TO_REPORT : &#xD30C;&#xD2F0;&#xC158;&#xB0B4; &#xC804;&#xCCB4; SUM&#xAC12; &#xB300;&#xBE44; &#xBC31;&#xBD84;&#xC728; &#xBE44;&#xC728; (0 ~ 1) &#xC804; &#xC9C1;&#xC6D0;&#xB4E4;&#xC758; &#xC5F0;&#xBD09;&#xC744; &#xC804;&#xCCB4;&#xC5F0;&#xBD09; &#xB300;&#xBE44; &#xC5BC;&#xB9C8;&#xB098; &#xCC28;&#xC9C0;&#xD558;&#xB294;&#xC9C0;&#xB97C; &#xAD6C;&#xD574;&#xBCF4;&#xC790;. 123SELECT ENAME, SAL, JOB, ROUND(RATIO_TO_REPORT(SAL) OVER(),3) AS RATIO FROM EMP PERCENT_RANK : &#xD30C;&#xD2F0;&#xC158;&#xB0B4;&#xC758; &#xC21C;&#xC11C;&#xBCC4; &#xBC31;&#xBD84;&#xC728;. (&#xCC98;&#xC74C;&#xAC12; = 0, &#xB9C8;&#xC9C0;&#xB9C9;&#xAC12; = 1) CUME_DIST : &#xD30C;&#xD2F0;&#xC158;&#xB0B4;&#xC758; &#xC804;&#xCCB4;&#xAC74;&#xC218;&#xC5D0;&#xC11C; &#xC790;&#xC2E0;&#xBCF4;&#xB2E4; &#xC791;&#xAC70;&#xB098; &#xAC19;&#xC740; &#xAC74;&#xC218;&#xC5D0; &#xB300;&#xD55C; &#xB204;&#xC801;&#xBC31;&#xBD84;&#xC728; &#xB450; &#xD568;&#xC218;&#xAC00; &#xBE44;&#xC2B7;&#xD55C;&#xB370; &#xAC12;&#xC774; &#xC57D;&#xAC04; &#xCC28;&#xC774;&#xAC00; &#xB09C;&#xB2E4;. PERCENT_RANK&#xB294; 0 &#xBD80;&#xD130; &#xC2DC;&#xC791;&#xD558;&#xBBC0;&#xB85C; &#xD30C;&#xD2F0;&#xC158;&#xB0B4;&#xC758; &#xAC1C;&#xC218; - 1 &#xB4F1;&#xBD84;&#xD558;&#xACE0;, CUME_DIST&#xB294; &#xAC1C;&#xC218;&#xB9CC;&#xD07C; &#xB4F1;&#xBD84;&#xD55C;&#xB2E4;. &#xAC01; &#xBD80;&#xC11C;&#xBCC4; &#xC5F0;&#xBD09; &#xC21C;&#xC704;&#xB97C; &#xBE44;&#xC728;&#xB85C; &#xAD6C;&#xD574;&#xBCF8;&#xB2E4;&#xBA74; 1234SELECT DEPTNO, ENAME, SAL, PERCENT_RANK() OVER (PARTITION BY DEPTNO ORDER BY SAL DESC) AS PERCENT_RANK, ROUND(CUME_DIST() OVER (PARTITION BY DEPTNO ORDER BY SAL DESC),2) AS CUME_DIST FROM EMP NTILE : &#xD30C;&#xD2F0;&#xC158;&#xB0B4;&#xC758; &#xC804;&#xCCB4; &#xAC74;&#xC218;&#xB97C; N &#xB4F1;&#xBD84; &#xC804;&#xCCB4; &#xC0AC;&#xC6D0;&#xC744; &#xC5F0;&#xBD09; &#xAE30;&#xC900;&#xC73C;&#xB85C; 4 LEVEL&#xB85C; &#xAE09;&#xC218;&#xB97C; &#xB9E4;&#xAE38;&#xACBD;&#xC6B0; 123SELECT ENAME, SAL, NTILE(4) OVER (ORDER BY SAL DESC) AS GRADE FROM EMP;","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 2-2-2 GROUP function","slug":"02.03.group","date":"2016-01-24T15:00:00.000Z","updated":"2017-04-23T23:56:12.000Z","comments":true,"path":"2016/01/25/02.03.group/","link":"","permalink":"http://DevStarSJ.github.io/2016/01/25/02.03.group/","excerpt":"","text":"2&#xACFC;&#xBAA9; SQL &#xAE30;&#xBCF8; &#xBC0F; &#xD65C;&#xC6A9; 20&#xBB38;&#xC81C; &#xAC01; &#xC0C1;&#xD669;&#xBCC4;&#xB85C; SQL&#xBB38; &#xC791;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD560; &#xC815;&#xB3C4;&#xB85C; &#xC5F0;&#xC2B5;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xAE30;&#xBCF8;&#xC801;&#xC778; SQL&#xBB38;&#xBC95; &#xBC0F; &#xD568;&#xC218;&#xB294; &#xC0DD;&#xB7B5;&#xD558;&#xACE0; Tuning&#xC5D0; &#xD65C;&#xC6A9;&#xB420;&#xC218; &#xC788;&#xB294; &#xAC83; &#xC704;&#xC8FC;&#xB85C; &#xC815;&#xB9AC;&#xD558;&#xACE0;&#xC790; &#xD569;&#xB2C8;&#xB2E4;. 2&#xC7A5; SQL &#xD65C;&#xC6A9; (#2) &#xD45C;&#xC900;&#xC5D0;&#xC11C; &#xC815;&#xD55C; &#xB370;&#xC774;&#xD130; &#xBD84;&#xC11D; 3&#xAC00;&#xC9C0; &#xD568;&#xC218;&#xAD70; Aggregate function : &#xC55E;&#xC5D0;&#xC11C; &#xBCF8; GROUP BY &#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD55C; &#xC9D1;&#xACC4;&#xD568;&#xC218; (SUM, AVG, MIN, MAX, &#x2026;) Group function : &#xB2E8;&#xACC4;&#xBCC4; &#xC18C;&#xACC4;&#xB97C; &#xACC4;&#xC0B0;. SQL&#xC744; &#xD55C;&#xBC88;&#xB9CC; &#xC77D;&#xC5B4; &#xBE60;&#xB974;&#xAC8C; &#xBCF4;&#xACE0;&#xC11C; &#xC791;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB3C4;&#xB85D; &#xB3C4;&#xC640;&#xC8FC;&#xB294; &#xD568;&#xC218;&#xB4E4; (ROLLUP, CUBE, GROUPING SET) Window function : &#xD589;&#xAC04;&#xC758; &#xBE44;&#xAD50;, &#xAD00;&#xACC4;&#xB97C; &#xC9C0;&#xC6D0;. DW&#xC5D0;&#xC11C; &#xBC1C;&#xC804;&#xD55C; &#xAE30;&#xB2A5; (RANK&#xB85C; &#xB300;&#xD45C;&#xB428;. &#xD568;&#xC218;&#xBA85;&#xC740; &#xC55E;&#xC758; &#xAC83;&#xB4E4;&#xACFC; &#xAC19;&#xC9C0;&#xB9CC; &#xC0AC;&#xC6A9;&#xBC95;&#xC774; &#xB2E4;&#xB984;) GROUP FUNCTION (&#xADF8;&#xB8F9;&#xD568;&#xC218;) &#xC194;&#xC9C1;&#xD788; SQL &#xC791;&#xC131;&#xC2DC; &#xC0AC;&#xC6A9;&#xD560; &#xB9CC;&#xD55C; &#xD568;&#xC218;&#xB294; ROLLUP &#xD558;&#xB098;&#xBFD0;&#xC774;&#xB2E4;. &#xB098;&#xBA38;&#xC9C0;&#xB294; &#xC2DC;&#xD5D8;&#xC5D0; &#xB098;&#xC62C; &#xC218; &#xC788;&#xC73C;&#xBBC0;&#xB85C; &#xADF8;&#xB0E5; &#xC5B4;&#xB5A4; &#xC5ED;&#xD560;&#xC744; &#xD55C;&#xB2E4;&#xB294; &#xC815;&#xB3C4;&#xB9CC; &#xC54C;&#xC544;&#xB450;&#xBA74; &#xB420;&#xB4EF;&#xD558;&#xB2E4;. 1. ROLLUP &#xC18C;&#xADF8;&#xB8F9;&#xAC04;&#xC758; &#xC18C;&#xACC4;(subtotal)&#xB97C; &#xACC4;&#xC0B0; &#xBD80;&#xC11C;&#xBCC4; &#xC5C5;&#xBB34;&#xBCC4; &#xC778;&#xC6D0;&#xC218;&#xC640; &#xC5F0;&#xBD09;&#xC758; &#xC18C;&#xACC4;&#xB97C; &#xC77C;&#xBC18;&#xC801;&#xC740; query&#xB85C; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; &#xC791;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. 12345SELECT DNAME, JOB, COUNT(*) AS TOTAL_EMP, SUM(SAL) AS SUM_SAL FROM DEPT A, EMP B WHERE A.DEPTNO = B.DEPTNO GROUP BY DNAME, JOB ORDER BY DNAME, JOB; &#xC704; &#xC608;&#xC81C;&#xC758; &#xACBD;&#xC6B0; &#xBD80;&#xC11C;&#xBCC4;, &#xC5C5;&#xBB34;&#xBCC4;&#xC758; &#xB300;&#xD55C; &#xC18C;&#xACC4;&#xB97C; &#xAD6C;&#xD588;&#xB2E4;. &#xC5EC;&#xAE30;&#xB2E4;&#xAC00; &#xBD80;&#xC11C;&#xBCC4; &#xC18C;&#xACC4; &#xC640; &#xC804;&#xCCB4; &#xD569;&#xACC4;&#xAE4C;&#xC9C0; &#xAC19;&#xC774; &#xCD9C;&#xB825;&#xD558;&#xB824;&#xBA74; &#xC5B4;&#xB5BB;&#xAC8C; &#xD574;&#xC57C;&#xD560;&#xAE4C; ? &#xBD80;&#xC11C;&#xBCC4; &#xC18C;&#xACC4;&#xB97C; &#xAD6C;&#xD558;&#xB294; SQL&#xACFC; &#xC804;&#xCCB4; &#xD569;&#xACC4;&#xB97C; &#xAD6C;&#xD558;&#xB294; SQL&#xC744; &#xAC01;&#xAC01; &#xD638;&#xCD9C;&#xD574;&#xC11C; &#xC804;&#xCCB4;&#xB97C; UNION ALL &#xD558;&#xB294; &#xBC29;&#xBC95;&#xC774; &#xAC00;&#xC7A5; &#xC190;&#xC26C;&#xC6B4; &#xBC29;&#xBC95;&#xC774;&#xB2E4;. 123456789101112SELECT DNAME, JOB, COUNT(*) AS TOTAL_EMP, SUM(SAL) AS SUM_SAL, 1 AS DEPTH FROM DEPT A, EMP B WHERE A.DEPTNO = B.DEPTNO GROUP BY DNAME, JOB UNION ALLSELECT DNAME, &apos;TOTAL&apos; AS JOB, COUNT(*) AS TOTAL_EMP, SUM(SAL) AS SUM_SAL, 2 AS DEPTH FROM DEPT A, EMP B WHERE A.DEPTNO = B.DEPTNO GROUP BY DNAME UNION ALLSELECT &apos;TOTAL&apos; AS DNAME, &apos;&apos; AS JOB, COUNT(*) AS TOTAL_EMP, SUM(SAL) AS SUM_SAL, 3 AS DEPTH FROM EMP &#xADF8; &#xACB0;&#xACFC;&#xB4E4;&#xC744; &#xB2E4;&#xC2DC; &#xC21C;&#xC11C;&#xB300;&#xB85C; &#xD560;&#xB824;&#xBA74; UNION ALL&#xB85C; &#xBB36;&#xC740; &#xAC83;&#xC744; subquery&#xB85C; &#xD574;&#xC11C; SELECT&#xBB38;&#xC744; &#xD55C;&#xBC88; &#xB354; &#xC368;&#xC57C; &#xD55C;&#xB2E4;. &#xC704; SQL&#xC744; &#xADF8;&#xB0E5; A&#xB77C;&#xACE0; &#xD558;&#xACA0;&#xB2E4;. 123SELECT DNAME, JOB, TOTAL_EMP, SUM_SAL FROM (SELECT ... ) A ORDER BY DNAME, DEPTH, JOB; &#xC0C1;&#xB2F9;&#xD788; &#xBCF5;&#xC7A1;&#xD55C; &#xACFC;&#xC815;&#xC744; &#xAC70;&#xCCD0;&#xC11C; &#xC18C;&#xACC4;&#xB97C; &#xAD6C;&#xD588;&#xB294;&#xB370;, &#xADF8;&#xB0E5; ROLLUP&#xC744; &#xC774;&#xC6A9;&#xD558;&#xBA74; &#xC27D;&#xAC8C; &#xC791;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. 12345SELECT DNAME, JOB, COUNT(*) AS TOTAL_EMP, SUM(SAL) AS SUM_SAL FROM EMP A, DEPT B WHERE A.DEPTNO = B.DEPTNO GROUP BY ROLLUP (DNAME, JOB) ORDER BY DNAME, JOB; GROUPING &#xD568;&#xC218; : &#xD574;&#xB2F9; &#xCEEC;&#xB7FC;&#xC744; &#xAE30;&#xC900;&#xC73C;&#xB85C; &#xC18C;&#xACC4;&#xB97C; &#xD55C; &#xACB0;&#xACFC;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; GROUPING(&#xCEEC;&#xB7FC;) = 1&#xC744; &#xCD9C;&#xB825;&#xD55C;&#xB2E4;. &#xC704; &#xACB0;&#xACFC;&#xC5D0;&#xC11C; &#xAC01; &#xBD80;&#xC11C;&#xBCC4; &#xD569;&#xACC4;&#xB97C; &#xCD9C;&#xB825;&#xD558;&#xB294; row&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; GROUPING(JOB) = 1 &#xC774; &#xB418;&#xBA70;, &#xCD1D; &#xACC4;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; GROUPING(DNAME) = 1, GROUPING(JOB) = 1 &#xC774; &#xCD9C;&#xB825;&#xB41C;&#xB2E4;. &#xC774; &#xD568;&#xC218;&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; &#xADF8;&#xB8F9;&#xBCC4; &#xC18C;&#xACC4;, &#xCD1D; &#xD569;&#xACC4;&#xB97C; &#xCD9C;&#xB825;&#xD558;&#xB294; row&#xC5D0; &#xBCC4;&#xB3C4; label&#xC744; &#xC8FC;&#xACE0;&#xC790; &#xD560; &#xACBD;&#xC6B0; &#xC791;&#xC131;&#xBC95;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xB2E4;. 1234567SELECT DECODE (GROUPING(DNAME), 1, &apos;Total DEPT&apos;, DNAME) AS DNAME, DECODE (GROUPING(JOB), 1, &apos;Total JOB&apos; , JOB) AS JOB, COUNT(*) AS TOTAL_EMP, SUM(SAL) AS SUM_SAL FROM EMP A, DEPT B WHERE A.DEPTNO = B.DEPTNO GROUP BY ROLLUP (DNAME, JOB); ROLLUP&#xC744; &#xBD80;&#xBD84;&#xC801;&#xC73C;&#xB85C; &#xC801;&#xC6A9; &#xC18C;&#xACC4;&#xC5D0;&#xC11C; &#xC81C;&#xC678; &#xD56D;&#xC0C1; &#xBAA8;&#xB4E0; GROUP BY&#xC5D0; &#xC0AC;&#xC6A9;&#xB41C; &#xCEEC;&#xB7FC;&#xC5D0; &#xB300;&#xD574;&#xC11C; ROLLUP&#xC744; &#xD574;&#xC57C;&#xD558;&#xB294; &#xAC83;&#xC740; &#xC544;&#xB2C8;&#xB2E4;. &#xB9CC;&#xC57D; DNAME, JOB &#xBCC4;&#xB85C; GROUP BY&#xB97C; &#xD558;&#xB418; &#xBD80;&#xC11C;&#xBCC4; &#xC18C;&#xACC4;&#xB97C; &#xD544;&#xC694;&#xD558;&#xC9C0;&#xB9CC;, &#xC804;&#xCCB4; &#xD569;&#xACC4;&#xB294; &#xD544;&#xC694;&#xC5C6;&#xC744; &#xACBD;&#xC6B0; GROUP BY DNAME, ROLLUP(JOB) &#xB77C;&#xACE0; &#xC4F0;&#xBA74; &#xC704; &#xACB0;&#xACFC;&#xC5D0;&#xC11C; &#xB9C8;&#xC9C0;&#xB9C9;&#xC904;&#xC778; Total DEPT&#xAC00; &#xCD9C;&#xB825;&#xB418;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;. 2&#xAC1C; &#xC774;&#xC0C1;&#xC758; &#xCEEC;&#xB7FC;&#xC73C;&#xB85C; &#xAD6C;&#xBD84; &#xC704;&#xC758; &#xACBD;&#xC6B0; DNAME, JOB&#xAC00; &#xC885;&#xC18D;&#xAD00;&#xACC4;&#xC774;&#xB2E4;. DNAME &#xC548;&#xC5D0;&#xC11C; JOB&#xBCC4;&#xB85C; &#xAD6C;&#xBD84;&#xD558;&#xC600;&#xB2E4;. &#xB9CC;&#xC57D; DNAME &#xC544;&#xB798;&#xC5D0; JOB, MGR&#xC774; &#xAC19;&#xC740; &#xAC83;&#xB07C;&#xB9AC; &#xBB36;&#xC5B4;&#xC11C; &#xC18C;&#xACC4;&#xB97C; &#xAD6C;&#xD558;&#xACE0;&#xC790; &#xD560;&#xB54C;&#xC5D0;&#xB294; &#xB450; &#xCEEC;&#xB7FC; &#xC774;&#xC0C1;&#xC744; &#xAD04;&#xD638;&#xB85C; &#xBB36;&#xC73C;&#xBA74; &#xB41C;&#xB2E4;. GROUP BY ROLLUP( DNAME, (JOB, MGR)) &#xC774;&#xB77C;&#xACE0; &#xC4F0;&#xBA74; JOB, MGR&#xC744; &#xACC4;&#xCE35;&#xC9D3;&#xC9C0;&#xC54A;&#xACE0;, JOB, MGR&#xC774; &#xBAA8;&#xB450; &#xAC19;&#xC740; &#xAC83;&#xC744; &#xD558;&#xB098;&#xC758; &#xADF8;&#xB8F9;&#xC73C;&#xB85C; &#xBB36;&#xC5B4;&#xC11C; &#xC18C;&#xACC4;&#xB97C; &#xAD6C;&#xD55C;&#xB2E4;. 2. CUBE &#xACB0;&#xD569; &#xAC00;&#xB2A5;&#xD55C; &#xBAA8;&#xB4E0; &#xAC12;&#xC5D0; &#xB300;&#xD558;&#xC5EC; &#xB2E4;&#xCC28;&#xC6D0; &#xC9D1;&#xACC4;&#xB97C; &#xC0DD;&#xC131;&#xD55C;&#xB2E4;. &#xC704; ROLLUP&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD55C; &#xC608;&#xC81C;&#xC5D0;&#xC11C; ROLLUP&#xB300;&#xC2E0; CUBE&#xB97C; &#xC4F8; &#xACBD;&#xC6B0; : GROUP BY CUBE(DNAME, JOB) - DNAME &#xBCC4; JOB&#xC758; &#xC18C;&#xACC4; - JOB &#xBCC4; DNAME&#xC758; &#xC18C;&#xACC4; - &#xC804;&#xCCB4; &#xD569;&#xACC4; &#xB97C; &#xBAA8;&#xB450; &#xCD9C;&#xB825;&#xD55C;&#xB2E4;. &#xC989;, CUBE &#xB0B4;&#xC758; &#xCEEC;&#xB7FC;&#xB4E4;&#xC758; &#xC21C;&#xC11C;&#xB97C; &#xBC14;&#xAFD4;&#xAC00;&#xBA74;&#xC11C; ROLLUP&#xC744; &#xC218;&#xD589;&#xD55C; &#xB4A4;&#xC5D0; UNION &#xD55C;&#xAC83;&#xACFC; &#xAC19;&#xC740; &#xACB0;&#xACFC;&#xC774;&#xB2E4;. &#xADF8;&#xB9CC;&#xD07C; &#xC5F0;&#xC0B0;&#xB7C9;&#xC774; &#xB9CE;&#xB2E4;. &#xB610; &#xB2E4;&#xB978; &#xCC28;&#xC774;&#xC810;&#xC740; GROUPING &#xD568;&#xC218;&#xC758; &#xACBD;&#xC6B0; ROLLUP&#xC5D0;&#xC11C;&#xB294; &#xACC4;&#xCE35;&#xC774; &#xC788;&#xC73C;&#xBBC0;&#xB85C; GROUPING(DNAME) = 1 &#xC774;&#xBA74;&#xC11C; GROUPING(JOB) = 0 &#xC778; &#xAC12;&#xC774; &#xC5C6;&#xC5C8;&#xB2E4;. CUBE&#xC5D0;&#xC11C;&#xB294; GROUPING(DNAME) = 1 &#xC774;&#xBA74;&#xC11C; GROUPING(JOB) = 0&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. JOB&#xBCC4; all DNAME&#xC5D0; &#xB300;&#xD55C; &#xC18C;&#xACC4;&#xC758; &#xACBD;&#xC6B0;&#xC774;&#xB2E4;. 3. GROUPING SETS &#xB2E4;&#xC591;&#xD55C; &#xC18C;&#xACC4;&#xB4E4;&#xC744; &#xD55C;&#xBC88;&#xC758; SQL&#xB85C; &#xAD6C;&#xD558;&#xB294;&#xB370; &#xC0AC;&#xC6A9;&#xB41C;&#xB2E4;. &#xB098;&#xC5F4;&#xD55C; &#xCEEC;&#xB7FC;&#xB4E4;&#xC744; &#xD3C9;&#xB4F1;&#xD55C; &#xAD00;&#xACC4;&#xC774;&#xBBC0;&#xB85C; &#xC21C;&#xC11C;&#xB97C; &#xBC14;&#xAFD4;&#xB3C4; &#xC0C1;&#xAD00;&#xC5C6;&#xB2E4;. &#xC704; &#xC608;&#xC81C;&#xC5D0;&#xC11C; GROUPING SETS&#xB97C; &#xC4F8; &#xACBD;&#xC6B0; : GROUP BY GROUPING SETS(DNAME, JOB) - DNAME&#xBCC4; &#xC18C;&#xACC4; - JOB&#xBCC4; &#xC18C;&#xACC4; &#xB97C; UNION ALL &#xD574;&#xC900; &#xACB0;&#xACFC;&#xB97C; &#xCD9C;&#xB825;&#xD574;&#xC900;&#xB2E4;. GROUPING SET&#xB3C4; 2&#xAC1C; &#xC774;&#xC0C1;&#xC758; &#xCEEC;&#xB7FC;&#xC73C;&#xB85C; &#xAD6C;&#xBD84;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. ROLLUP&#xC5D0;&#xC11C; &#xBCF8;&#xAC83; &#xAC19;&#xC774; &#xAD04;&#xD638;&#xB85C; &#xCEEC;&#xB7FC;&#xB4E4;&#xC744; &#xBB36;&#xC5B4;&#xC8FC;&#xBA74; &#xB41C;&#xB2E4;. GROUP BY GROUPING SETS ( (DNAME, JOB, MGR) , (DNAME, JOB) , DNAME ) &#xC774;&#xB77C;&#xACE0; &#xD560; &#xACBD;&#xC6B0; - DNAME-JOB-MGR &#xBCC4; &#xC18C;&#xACC4; - DNAME-JOB &#xBCC4; &#xC18C;&#xACC4; - DNAME &#xBCC4; &#xC18C;&#xACC4; &#xC758; &#xACB0;&#xACFC;&#xB4E4;&#xC744; UNION ALL &#xD55C; &#xAC83;&#xACFC; &#xAC19;&#xC740; &#xACB0;&#xACFC;&#xB97C; &#xCD9C;&#xB825;&#xD574;&#xC900;&#xB2E4;.","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 2-2-1 SET, Hierarchical Query, Sub-query","slug":"02.02.sql.adv","date":"2016-01-22T15:00:00.000Z","updated":"2017-04-23T23:55:32.000Z","comments":true,"path":"2016/01/23/02.02.sql.adv/","link":"","permalink":"http://DevStarSJ.github.io/2016/01/23/02.02.sql.adv/","excerpt":"","text":"2&#xACFC;&#xBAA9; SQL &#xAE30;&#xBCF8; &#xBC0F; &#xD65C;&#xC6A9; 20&#xBB38;&#xC81C; &#xAC01; &#xC0C1;&#xD669;&#xBCC4;&#xB85C; SQL&#xBB38; &#xC791;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD560; &#xC815;&#xB3C4;&#xB85C; &#xC5F0;&#xC2B5;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xAE30;&#xBCF8;&#xC801;&#xC778; SQL&#xBB38;&#xBC95; &#xBC0F; &#xD568;&#xC218;&#xB294; &#xC0DD;&#xB7B5;&#xD558;&#xACE0; Tuning&#xC5D0; &#xD65C;&#xC6A9;&#xB420;&#xC218; &#xC788;&#xB294; &#xAC83; &#xC704;&#xC8FC;&#xB85C; &#xC815;&#xB9AC;&#xD558;&#xACE0;&#xC790; &#xD569;&#xB2C8;&#xB2E4;. 2&#xC7A5; SQL &#xD65C;&#xC6A9; (#1) 1. &#xC9D1;&#xD569; &#xC5F0;&#xC0B0;&#xC790; (SET) UNON : &#xD569;&#xC9D1;&#xD569;, &#xC911;&#xBCF5;&#xB41C; &#xD589;&#xC740; &#xC81C;&#xAC70; UNION ALL : &#xD569;&#xC9D1;&#xD569;, &#xC911;&#xBCF5;&#xB41C; &#xD589;&#xC744; &#xADF8;&#xB300;&#xB85C; &#xD45C;&#xC2DC;&#xD558;&#xB294; &#xB300;&#xC2E0;&#xC5D0; &#xC131;&#xB2A5;&#xC774; &#xBE60;&#xB984; INTERSECT : &#xAD50;&#xC9D1;&#xD569;, &#xC911;&#xBCF5;&#xB41C; &#xD589; &#xC81C;&#xAC70; MINUS : &#xCC28;&#xC9D1;&#xD569;, &#xC55E;&#xC758; SQL &#xACB0;&#xACFC;&#xC5D0;&#xC11C; &#xB4A4;&#xC758; &#xACB0;&#xACFC;&#xB97C; &#xC81C;&#xAC70;&#xD55C;&#xB2E4;. (&#xC624;&#xB77C;&#xD074; &#xC774;&#xC678;&#xC758; &#xB300;&#xBD80;&#xBD84;&#xC740; EXCEPT&#xB85C; &#xC0AC;&#xC6A9;&#xD568;) &#xC194;&#xC9C1;&#xD788; UNION&#xACFC; UNION ALL&#xC758; &#xCC28;&#xC774;&#xB9CC; &#xC774;&#xD574;&#xD558;&#xACE0; &#xC788;&#xC73C;&#xBA74; &#xB41C;&#xB2E4;. UNION &#xACFC; UNION ALL&#xC758; &#xACB0;&#xACFC;&#xAC00; &#xAC19;&#xB2E4;&#xB294;&#xAC83;&#xC774; &#xBCF4;&#xC7A5;&#xB418;&#xBA74; &#xBB34;&#xC870;&#xAC74; UNION ALL&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xC774; &#xC131;&#xB2A5;&#xC774; &#xB6F0;&#xC5B4;&#xB098;&#xB2E4;. INTERSECT &#xB294; EXISTS &#xB098; IN &#xC11C;&#xBE0C;&#xCFFC;&#xB9AC;&#xB85C; &#xBCC0;&#xACBD;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. (&#xADF8;&#xB7EC;&#xBBC0;&#xB85C; &#xC4F8;&#xC77C;&#xC774; &#xAC70;&#xC758; &#xC5C6;&#xB2E4;.) MINUS &#xB294; &#xADF8;&#xB0E5; WHERE&#xC758; &#xC870;&#xAC74;&#xC5D0;&#xC11C; &#xB17C;&#xB9AC;&#xC801;&#xC73C;&#xB85C; &#xC81C;&#xC678;&#xC2DC;&#xD0A4;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. (&#xC2EC;&#xC9C0;&#xC5B4; &#xCD9C;&#xB825;&#xD558;&#xC9C0; &#xC54A;&#xC544;&#xB3C4; &#xB420; ROW&#xC640; &#xAC70;&#xAE30;&#xC11C; &#xBE7C;&#xC57C;&#xD560; ROW&#xB4E4;&#xC744; &#xC77D;&#xC5B4;&#xC57C; &#xD558;&#xBBC0;&#xB85C; &#xC131;&#xB2A5;&#xC744; &#xC0DD;&#xAC01;&#xD574;&#xC11C;&#xB294; &#xC808;&#xB300;&#xB85C; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xC548;&#xB41C;&#xB2E4;.) 2. &#xACC4;&#xCE35;&#xD615; &#xC9C8;&#xC758; (Hierarchical Query) &#xACC4;&#xCE35;&#xD615; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC870;&#xD68C;&#xD560;&#xB54C; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;. &#xACC4;&#xCE35;&#xD615; &#xB370;&#xC774;&#xD130; : &#xB3D9;&#xC77C; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xACC4;&#xCE35;&#xC801;&#xC73C;&#xB85C; &#xC0C1;&#xC704;, &#xD558;&#xC704; &#xB370;&#xC774;&#xD130;&#xAC00; &#xD3EC;&#xD568;&#xB41C; &#xB370;&#xC774;&#xD130; ex. EMP Table&#xC5D0; EMPNO, MANAGER &#xAC00; &#xC788;&#xC73C;&#xBA70; EMPNO&#xB294; &#xD574;&#xB2F9; &#xC0AC;&#xC6D0;&#xC758; &#xC0AC;&#xC6D0;&#xBC88;&#xD638;, MANAGER&#xB294; &#xD574;&#xB2F9; &#xC0AC;&#xC6D0;&#xC758; &#xBD80;&#xC11C;&#xC7A5; &#xC0AC;&#xC6D0;&#xBC88;&#xD638;&#xC778; &#xACBD;&#xC6B0; &#xACC4;&#xCE35;&#xD615; &#xC9C8;&#xC758;&#xB294; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC740; &#xBAA8;&#xC591;&#xC774;&#xB2E4;. (Oracle &#xAE30;&#xC900;) &#xC9C8;&#xC758; &#xAD6C;&#xBB38; 123456SELECT ... FROM table name WHERE (filter condition) START WITH (root condition) -- START WITH MANAGER IS NULL CONNECT BY [NOCYCLE] (hierarchical condition) -- CONNECT BY NOCYCLE PRIOR EMPNO = MANAGER [ORDER SIBLINGS BY columns...] START WITH : &#xC2DC;&#xC791;&#xC870;&#xAC74;. root data&#xAC00; &#xB418;&#xB294; &#xC870;&#xAC74;&#xC744; &#xC801;&#xB294;&#xB2E4;. CONNECT BY : &#xBD80;&#xBAA8;&#xC640; &#xC790;&#xC2DD;&#xC758; &#xAD00;&#xACC4;&#xB97C; &#xC801;&#xB294;&#xB2E4;. PRIOR &#xD0A4;&#xC6CC;&#xB4DC;&#xB294; &#xC804;&#xAC1C;&#xBC29;&#xD5A5; &#xC0C1; &#xC774;&#xC804; &#xB808;&#xCF54;&#xB4DC;&#xB97C; &#xAC00;&#xB9AC;&#xD0A8;&#xB2E4;. ORDER SIBLINGS BY :(&#xAC19;&#xC740; &#xBD80;&#xBAA8;&#xB97C; &#xAC00;&#xC9C4;) &#xD615;&#xC7AC; node &#xC758; ORDER BY&#xC774;&#xB2E4;. SELECT, FROM, WHERE &#xB4F1;&#xC740; &#xC77C;&#xBC18; SQL&#xBB38;&#xBC95;&#xACFC; &#xB3D9;&#xC77C;&#xD558;&#xB2E4;. &#xAC00;&#xC0C1; &#xCE7C;&#xB7FC; LEVEL : ROOT = 1, LEAF&#xBC29;&#xD5A5;&#xC73C;&#xB85C; 1&#xC529; &#xC99D;&#xAC00; CONNECT_BY_ISLEAF : LEAF&#xC774;&#xBA74; 1, &#xC790;&#xC2DD;&#xC774; &#xC788;&#xC73C;&#xBA74; 0 CONNECT_BY_ISCYCLE : &#xC790;&#xC2DD;&#xC744; &#xAC00;&#xC9C0;&#xBA74;&#xC11C;, &#xC790;&#xC2E0;&#xC774; &#xC790;&#xAE30; &#xC870;&#xC0C1;&#xC5D0;&#xB3C4; &#xC788;&#xC73C;&#xBA74; 1, &#xC544;&#xB2C8;&#xBA74; 0 (CYCLE &#xC635;&#xC158;&#xC5D0;&#xC11C;&#xB9CC; &#xD5C8;&#xC6A9;) &#xC804;&#xC6A9; &#xD568;&#xC218; SYS_CONNECT_BY_PATH(column, separator) : Root&#xBD80;&#xD130; &#xD604;&#xC7AC;&#xAE4C;&#xC9C0;&#xC758; &#xACBD;&#xB85C;&#xB97C; &#xD45C;&#xC2DC;&#xD55C;&#xB2E4;. CONNECT_BY_ROOT column : root &#xB370;&#xC774;&#xD130;&#xC758; &#xCE7C;&#xB7FC;&#xC744; &#xD45C;&#xC2DC;&#xD55C;&#xB2E4;. START WITH &#xC870;&#xAC74;&#xACFC; CONNECT BY &#xC870;&#xAC74;&#xC744; &#xC5B4;&#xB5BB;&#xAC8C; &#xD558;&#xB0D0;&#xC5D0; &#xB530;&#xB77C;&#xC11C; &#xBD80;&#xBAA8; -&gt; &#xC790;&#xC2DD; &#xBC29;&#xD5A5; &#xB610;&#xB294; &#xC790;&#xC2DD; -&gt; &#xBD80;&#xBAA8; &#xBC29;&#xD5A5;&#xC73C;&#xB85C;&#xC758; &#xC804;&#xAC1C;&#xAC00; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xBD80;&#xBAA8; -&gt; &#xC790;&#xC2DD; &#xBC29;&#xD5A5;&#xC804;&#xAC1C; START WITH : ROOT &#xC870;&#xAC74; CONNECT BY : PRIOR &#xC790;&#xC2DD;ID = &#xBD80;&#xBAA8;ID &#xC774; &#xBD80;&#xBD84; &#xD574;&#xC11D;&#xC774; &#xC880; &#xD574;&#xAE54;&#xB9B4;&#xC218; &#xC788;&#xB294;&#xB370;, EMPNO, MANAGER&#xC758; &#xACBD;&#xC6B0; PRIOR EMPNO = MANAGER &#xB85C; &#xC368;&#xC57C;&#xD55C;&#xB2E4;. &#xADF8;&#xB0E5; START WITH &#xC870;&#xAC74;&#xC758; row&#xC640; &#xC804;&#xAC1C;&#xBC29;&#xD5A5; &#xBC14;&#xB85C; &#xB2E4;&#xC74C; row&#xC758; &#xBE44;&#xAD50;&#xC870;&#xAC74;&#xC744; &#xC801;&#xB294;&#xB2E4;&#xACE0; &#xC0DD;&#xAC01;&#xD558;&#xBA74; &#xB428;. 12345SELECT LPAD(&apos; &apos;, 4 * (LEVEL-1)) || LEVEL AS &quot;LEVEL&quot;, EMPNO, MGR, CONNECT_BY_ISLEAF AS LEAF FROM SCOTT.EMP START WITH MGR IS NULLCONNECT BY PRIOR EMPNO = MGRORDER SIBLINGS BY EMPNO; &#xC790;&#xC2DD; -&gt; &#xBD80;&#xBAA8; &#xBC29;&#xD5A5;&#xC804;&#xAC1C; START WITH : LEAF &#xC870;&#xAC74; CONNECT BY : PRIOR &#xBD80;&#xBAA8;ID = &#xC790;&#xC2DD;ID 1234SELECT LEVEL, EMPNO, MGR FROM SCOTT.EMP START WITH EMPNO = 7369 CONNECT BY PRIOR MGR = EMPNO; 3. SELF JOIN &#xC774;&#xAC83;&#xB3C4; &#xC124;&#xBA85;&#xD574;&#xC57C; &#xD560;&#xAE4C; ? &#xADF8;&#xB0E5; &#xAC19;&#xC740; &#xD14C;&#xC774;&#xBE14; 2&#xAC1C;&#xB97C; JOIN, alias &#xD544;&#xC218;(&#xADF8;&#xB798;&#xC57C; &#xC11C;&#xB85C; &#xB2E4;&#xB978; view&#xC778;&#xB4EF; &#xC81C;&#xC5B4;&#xAC00; &#xAC00;&#xB2A5;&#xD558;&#xB2C8;&#xAE50;) 4. Subquery SQL&#xBB38; &#xC548;&#xC5D0; &#xD3EC;&#xD568;&#xB418;&#xB294; SQL&#xBB38;&#xC744; &#xC758;&#xBBF8;&#xD55C;&#xB2E4;. &#xBC18;&#xB4DC;&#xC2DC; (&#xAD04;&#xD638;)&#xB85C; &#xAC10;&#xC2F8;&#xC57C;&#xD55C;&#xB2E4;. ORDER BY&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xBABB;&#xD55C;&#xB2E4;. (&#xBA54;&#xC778; &#xCFFC;&#xB9AC;&#xC758; &#xB9C8;&#xC9C0;&#xB9C9;&#xC5D0; &#xD55C;&#xBC88;&#xB9CC; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;.) &#xBD84;&#xB958; &#xB3D9;&#xC791; &#xBC29;&#xC2DD; &#xBE44;&#xC5F0;&#xAD00; (Un-Correlated) : &#xBA54;&#xC778;&#xCFFC;&#xB9AC;&#xC758; &#xCEEC;&#xB7FC;&#xC744; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xC9C0; &#xC54A;&#xC74C;. &#xBA54;&#xC778;&#xCFFC;&#xB9AC;&#xC5D0; &#xACB0;&#xACFC;&#xB97C; &#xC81C;&#xACF5;&#xD558;&#xAE30; &#xC704;&#xD55C; &#xBAA9;&#xC801; &#xC5F0;&#xAD00; (Correlated) : &#xBA54;&#xC778;&#xCFFC;&#xB9AC;&#xC758; &#xCE7C;&#xB7FC;&#xC744; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xC74C;. &#xBA54;&#xC778;&#xCFFC;&#xB9AC;&#xAC00; &#xBA3C;&#xC800; &#xC218;&#xD589;&#xB418;&#xBA74;&#xC11C; &#xC11C;&#xBE0C;&#xCFFC;&#xB9AC;&#xC5D0;&#xC11C; &#xC870;&#xAC74; &#xCCB4;&#xD06C;&#xD560; &#xBAA9;&#xC801; &#xBC18;&#xD658;&#xB418;&#xB294; &#xB370;&#xC774;&#xD130; &#xD615;&#xD0DC; Single row : &#xACB0;&#xACFC;&#xAC00; 1&#xAC74; &#xC774;&#xD558; (&#xB2E8;&#xC77C;&#xD589; &#xBE44;&#xAD50;&#xC5F0;&#xC0B0;&#xC790;) Multi row : &#xACB0;&#xACFC;&#xAC00; &#xC5EC;&#xB7EC; &#xAC74; (IN, ALL, ANY, SOME, EXISTS &#xC5F0;&#xC0B0;&#xC790;) Multi column : &#xACB0;&#xACFC;&#xAC00; &#xC5EC;&#xB7EC; &#xCEEC;&#xB7FC; (&#xBA54;&#xC778;&#xCFFC;&#xB9AC;&#xC640; &#xBE44;&#xAD50;&#xD558;&#xC790;&#xACE0; &#xD558;&#xB294; &#xCEEC;&#xB7FC;&#xC758; &#xC704;&#xCE58;&#xC640; &#xAC1C;&#xC218;&#xAC00; &#xAC19;&#xC544;&#xC57C;&#xD568;) Scalar Subquery : 1&#xAC1C;&#xC758; data (1 row 1 column)&#xB9CC; &#xBC18;&#xD658;. SQL&#xBB38; &#xC911; column&#xC774; &#xC704;&#xCE58;&#xD560; &#xC218; &#xC788;&#xB294; &#xB300;&#xBD80;&#xBD84;&#xC758; &#xACF3;&#xC5D0; &#xC0AC;&#xC6A9; &#xAC00;&#xB2A5; &#xC77C;&#xB2E8; &#xC774; 2&#xAC00;&#xC9C0; &#xBD84;&#xB958;&#xBC29;&#xC2DD;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xBA3C;&#xC800; &#xC774;&#xD574;&#xB97C; &#xD558;&#xACE0;, &#xC774;&#xC81C; &#xC704;&#xCE58;&#xC5D0; &#xB530;&#xB77C; &#xC62C; &#xC218; &#xC788;&#xB294; &#xD615;&#xD0DC;&#xB97C; &#xC0B4;&#xD3B4;&#xBCF4;&#xACA0;&#xB2E4;. 1. WHERE&#xC5D0; &#xC704;&#xCE58; Single row SCOTT&#xC774; &#xC18D;&#xD55C; &#xBD80;&#xC11C;&#xC758; &#xC9C1;&#xC6D0;&#xBAA9;&#xB85D;&#xC744; &#xBCF4;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; &#xBA3C;&#xC800; SCOTT&#xC758; DEPTNO&#xB97C; &#xAC00;&#xC838;&#xC640;&#xC11C; &#xD574;&#xB2F9; &#xAC12;&#xACFC; &#xAC19;&#xC740; &#xC9C1;&#xC6D0;&#xB4E4;&#xC744; &#xC870;&#xD68C;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. 12SELECT * FROM EMP WHERE DEPTNO = (SELECT DEPTNO FROM EMP WHERE ENAME = &apos;SCOTT&apos;) -- &#xBA3C;&#xC800; &#xC218;&#xD589; Multi row SALEMAN job&#xC774; &#xC788;&#xB294; &#xBD80;&#xC11C;&#xC640; &#xD574;&#xB2F9; &#xBD80;&#xC11C;&#xC5D0; &#xC788;&#xB294; CLERK job&#xC758; &#xBAA9;&#xB85D;&#xC744; &#xBCF4;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; &#xBA3C;&#xC800; SALEMAN &#xC774; &#xC18D;&#xD55C; &#xBD80;&#xC11C;&#xC758; DEPTNO&#xB97C; &#xAD6C;&#xD55C; &#xB4A4;, &#xD574;&#xB2F9; &#xAC12;&#xACFC; &#xAC19;&#xC740; &#xBD80;&#xC11C;&#xC778;&#xC6D0;&#xC911; CLERK&#xB97C; &#xCC3E;&#xC544;&#xC57C; &#xD55C;&#xB2E4;. 123SELECT * FROM EMP WHERE JOB = &apos;CLERK&apos; AND DEPTNO IN (SELECT DISTINCT DEPTNO FROM EMP WHERE JOB = &apos;SALESMAN&apos;) -- &#xBA3C;&#xC800; &#xC218;&#xD589; Multi column &#xAC01; &#xD300;&#xBCC4; &#xCD5C;&#xACE0;&#xC5F0;&#xBD09;&#xC790;&#xB97C; &#xCD9C;&#xB825;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; &#xBA3C;&#xC800; &#xAC01; &#xD300;&#xBCC4; &#xCD5C;&#xACE0;&#xC5F0;&#xBD09;&#xC790;&#xC5D0; &#xB300;&#xD574;&#xC11C; GROUP BY&#xB85C; &#xAD6C;&#xD55C; &#xB4A4; &#xD574;&#xB2F9; &#xCE7C;&#xB7FC;&#xC815;&#xBCF4;&#xC640; &#xAC19;&#xC740; &#xC9C1;&#xC6D0;&#xC815;&#xBCF4;&#xB97C; &#xCD9C;&#xB825;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. 12SELECT * FROM EMP WHERE (DEPTNO, SAL) IN (SELECT DEPTNO, MAX(SAL) AS SAL FROM EMP GROUP BY DEPTNO) -- &#xBA3C;&#xC800; &#xC218;&#xD589; &#xC5F0;&#xAD00; &#xC11C;&#xBE0C;&#xCFFC;&#xB9AC; (Correlated subuery) &#xBA54;&#xC778;&#xCFFC;&#xB9AC; &#xCE7C;&#xB7FC;&#xC774; &#xC11C;&#xBE0C;&#xCFFC;&#xB9AC; &#xB0B4;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB41C;&#xB2E4;. &#xBA54;&#xC778;&#xCFFC;&#xB9AC;&#xAC00; &#xBA3C;&#xC800; &#xC218;&#xD589;&#xB418;&#xBA74;&#xC11C; row&#xB9C8;&#xB2E4; &#xC11C;&#xBE0C;&#xCFFC;&#xB9AC;&#xB97C; &#xD55C;&#xBC88;&#xC529; &#xC218;&#xD589;&#xD558;&#xBBC0;&#xB85C; &#xC131;&#xB2A5;&#xC0C1;&#xC5D0;&#xB294; &#xC88B;&#xC9C0;&#xC54A;&#xB2E4;. &#xAC01; &#xBD80;&#xC11C;&#xBCC4; &#xD3C9;&#xADE0;&#xC601;&#xBD09; &#xC774;&#xC0C1;&#xC744; &#xBC1B;&#xB294; &#xC9C1;&#xC6D0;&#xC815;&#xBCF4;&#xB97C; &#xCD9C;&#xB825;&#xD558;&#xACE0;&#xC790; &#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; &#xB9E4; &#xC9C1;&#xC6D0;&#xC815;&#xBCF4;&#xB9C8;&#xB2E4; &#xD574;&#xB2F9; &#xC9C1;&#xC6D0;&#xC758; &#xC5F0;&#xBD09;&#xC774; &#xD574;&#xB2F9; &#xBD80;&#xC11C;&#xC758; &#xD3C9;&#xADE0;&#xC774;&#xC0C1;&#xC778;&#xC9C0;&#xB97C; &#xBE44;&#xAD50;(check)&#xD574;&#xC57C; &#xD55C;&#xB2E4;. 12SELECT * FROM EMP A -- &#xBA54;&#xC778;&#xCFFC;&#xB9AC;&#xAC00; &#xBA3C;&#xC800; &#xC218;&#xD589;&#xB418;&#xBA74;&#xC11C; &#xB9E4; ROW&#xB9C8;&#xB2E4; &#xC544;&#xB798; &#xC11C;&#xBE0C;&#xCFFC;&#xB9AC; &#xC218;&#xD589; WHERE SAL &gt;= (SELECT AVG(SAL) AS SAL FROM EMP B WHERE B.DEPTNO = A.DEPTNO GROUP BY B.DEPTNO) 2. SELECT&#xC5D0; &#xC704;&#xCE58; (Scalar Subquery) &#xB300;&#xBD80;&#xBD84; &#xC5F0;&#xAD00;(correlated) &#xAD00;&#xACC4;&#xB85C; &#xD638;&#xCD9C;&#xD55C;&#xB2E4;. &#xBE44;&#xC5F0;&#xAD00;&#xC73C;&#xB85C; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;&#xBA74; &#xADF8;&#xB0E5; Inline View&#xB85C; &#xD558;&#xB294;&#xAC8C; &#xB354; &#xD6A8;&#xACFC;&#xC801;&#xC774;&#xB2E4;. &#xC9C1;&#xC6D0;&#xC815;&#xBCF4;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xBA74;&#xC11C; &#xC18C;&#xC18D;&#xBD80;&#xC11C;&#xC758; &#xD3C9;&#xADE0;&#xC5F0;&#xBD09;&#xB3C4; &#xAC19;&#xC774; &#xCD9C;&#xB825;&#xD560; &#xACBD;&#xC6B0; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xB2E4;. 1234SELECT DEPTNO, ENAME, SAL, ROUND((SELECT AVG(SAL) FROM EMP B WHERE B.DEPTNO = A.DEPTNO GROUP BY B.DEPTNO)) AS AVG_SAL FROM EMP A ORDER BY DEPTNO, SAL; 3. FROM&#xC5D0; &#xC704;&#xCE58; (Inline View) View&#xB098; Table&#xC774; &#xC62C;&#xC218; &#xC788;&#xB294; &#xC704;&#xCE58;&#xC5D0;&#xB294; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xD574;&#xB2F9; query&#xB0B4;&#xC5D0;&#xC11C;&#xB294; &#xB9C8;&#xCE58; dynamic view&#xCC98;&#xB7FC; &#xC0AC;&#xC6A9;&#xB41C;&#xB2E4;. &#xC0AC;&#xC6A9;&#xC0C1; &#xC544;&#xBB34;&#xB7F0; &#xC81C;&#xC57D;&#xC744; &#xBC1B;&#xC9C0;&#xC54A;&#xACE0; SELECT&#xBB38;&#xC744; &#xC790;&#xC720;&#xB86D;&#xAC8C; &#xC4F8; &#xC218; &#xC788;&#xB2E4;. (ORDER BY&#xB3C4; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;.) &#xBC14;&#xB85C; &#xC704;&#xC5D0; &#xC5F0;&#xAD00;&#xAD00;&#xACC4;&#xB85C; &#xD638;&#xCD9C;&#xB41C; Scalar subquery&#xB294; &#xC131;&#xB2A5;&#xC774; &#xC88B;&#xC9C0; &#xC54A;&#xC73C;&#xBBC0;&#xB85C; inline view&#xB85C; &#xACE0;&#xCCD0;&#xBCF4;&#xC790;. &#xAC01; &#xBD80;&#xC11C;&#xBCC4; &#xD3C9;&#xADE0;&#xC5F0;&#xBD09;&#xC744; dynamic view&#xB85C; &#xAD6C;&#xD55C; &#xB2E4;&#xC74C; JOIN&#xC744; &#xD558;&#xBA74; &#xB41C;&#xB2E4;. 12345SELECT A.DEPTNO, A.ENAME, A.SAL, B.AVG_SAL FROM EMP A, (SELECT DEPTNO, ROUND(AVG(SAL)) AS AVG_SAL FROM EMP GROUP BY DEPTNO) B WHERE A.DEPTNO = B.DEPTNO ORDER BY DEPTNO, SAL; TOP-N &#xCFFC;&#xB9AC; data&#xB97C; &#xC815;&#xB82C;&#xD558;&#xACE0; &#xADF8; &#xC911; &#xC77C;&#xBD80;&#xB9CC; &#xCD94;&#xCD9C;&#xD558;&#xACE0;&#xC790; &#xD560;&#xB54C;&#xB294; inline view&#xB85C; ORDER BY&#xB97C; &#xD55C; &#xB4A4; ROWNUM&#xC73C;&#xB85C; &#xCD94;&#xCD9C;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. MANAGER &#xC911; &#xC5F0;&#xBD09; BEST 2&#xB97C; &#xC21C;&#xC11C;&#xB300;&#xB85C; &#xCD9C;&#xB825;&#xD558;&#xACE0;&#xC790; &#xD560; &#xACBD;&#xC6B0; (MANAGER&#xB294; &#xCD1D; 3&#xBA85;) 123SELECT * FROM (SELECT * FROM SCOTT.EMP WHERE JOB = &apos;MANAGER&apos; ORDER BY SAL DESC) WHERE ROWNUM &lt;= 2; 4. HAVING&#xC5D0; &#xC704;&#xCE58; WHERE&#xC5D0; &#xC704;&#xCE58;&#xC640; &#xD06C;&#xAC8C; &#xB2E4;&#xB974;&#xC9C0;&#xC54A;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xC9D1;&#xACC4;&#xD568;&#xC218; &#xC0AC;&#xC6A9;&#xC2DC; &#xADF8; &#xACB0;&#xACFC;&#xB97C; filtering &#xD558;&#xB294; &#xAC83;&#xC774;&#xBBC0;&#xB85C; &#xC758;&#xBBF8;&#xC0C1; &#xD544;&#xC694;&#xD560; &#xACBD;&#xC6B0; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. &#xBD80;&#xC11C;&#xBCC4; &#xD3C9;&#xADE0;&#xC5F0;&#xBD09;&#xC774; &#xC804;&#xCCB4;&#xD3C9;&#xADE0;&#xC5F0;&#xBD09;&#xBCF4;&#xB2E4; &#xD070; &#xBD80;&#xC11C;&#xBA85;&#xC744; &#xCD9C;&#xB825;&#xD558;&#xACE0;&#xC790; &#xD560; &#xACBD;&#xC6B0; 1234567SELECT C.DNAME, B.AVG_SAL FROM DEPT C, (SELECT A.DEPTNO, ROUND(AVG(A.SAL)) AS AVG_SAL FROM EMP A GROUP BY DEPTNO HAVING AVG(A.SAL) &gt;= (SELECT AVG(SAL) FROM EMP)) B WHERE C.DEPTNO = B.DEPTNO; 5. UPDATE&#xC758; SET&#xC5D0; &#xC704;&#xCE58; UPDATE &#xD560; TABLE&#xACFC; JOIN&#xD558;&#xC5EC; &#xC5EC;&#xB7EC; row&#xC5D0; &#xB300;&#xD55C; UPDATE&#xB97C; &#xD55C;&#xBC88;&#xC5D0; &#xC218;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. DEPT table&#xC5D0; AVG_SAL(&#xD3C9;&#xADE0;&#xC5F0;&#xBD09;) &#xCEEC;&#xB7FC;&#xC744; &#xCD94;&#xAC00;&#xD55C; &#xB4A4; &#xD574;&#xB2F9; &#xAC12;&#xC744; &#xD55C;&#xBC88;&#xC5D0; &#xB123;&#xACE0;&#xC790; &#xD558;&#xB294; &#xACBD;&#xC6B0; 12UPDATE DEPT A SET AVG_SAL = (SELECT AVG(SAL) AS AVG_SAL FROM EMP B WHERE B.DEPTNO = A.DEPTNO GROUP BY B.DEPTNO); 6. INSERT&#xC758; VALUES&#xC5D0; &#xC704;&#xCE58; &#xC8FC;&#xB85C; &#xC0C8;&#xB85C;&#xC6B4; &#xAC12;&#xC744; &#xCD94;&#xAC00;&#xD560; &#xB54C; &#xAE30;&#xC874;&#xC5D0; &#xC800;&#xC7A5;&#xB41C; &#xB9C8;&#xC9C0;&#xB9C9; &#xC77C;&#xB828;&#xBC88;&#xD638;(s/n)&#xC758; &#xB2E4;&#xC74C; &#xBC88;&#xD638;&#xB85C; &#xC800;&#xC7A5;&#xD558;&#xACE0;&#xC790; &#xD560;&#xB54C; &#xC0AC;&#xC6A9;&#xD558;&#xBA70; &#xD3B8;&#xD558;&#xB2E4;. 12INSERT INTO EMP (EMPNO, ENAME)VALUES ((SELECT MAX(EMPNO) + 1 FROM EMP), &apos;LUNA&apos;); 5. View SELECT &#xC9C8;&#xC758;&#xBB38;&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xAC00;&#xC0C1;&#xC758; table&#xC744; &#xC120;&#xC5B8;&#xD558;&#xB294; &#xAC83;&#xC774;&#xB2E4;. &#xC2E4;&#xC81C;&#xB85C; &#xBB3C;&#xB9AC;&#xC801;&#xC73C;&#xB85C; &#xD574;&#xB2F9; table&#xC774; &#xC0DD;&#xC131;&#xB418;&#xB294; &#xAC83;&#xC774; &#xC544;&#xB2C8;&#xB77C; &#xC218;&#xD589;&#xD560;&#xB54C;&#xB9C8;&#xB2E4; DBMS &#xB0B4;&#xBD80;&#xC801;&#xC73C;&#xB85C; View&#xC758; &#xC815;&#xC758;&#xB97C; &#xCC38;&#xC870;&#xD558;&#xC5EC; &#xCFFC;&#xB9AC;&#xB97C; &#xC7AC;&#xC815;&#xC758;&#xD55C;&#xB2E4;. View&#xC758; &#xC7A5;&#xC810; &#xB3C5;&#xB9BD;&#xC131; : Table&#xC758; &#xAD6C;&#xC870;&#xAC00; &#xBCC0;&#xACBD;&#xB418;&#xC5B4;&#xB3C4;, View&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; application&#xC740; &#xBCC0;&#xACBD;&#xD558;&#xC9C0; &#xC54A;&#xC544;&#xB3C4; &#xB41C;&#xB2E4;. (&#xBB3C;&#xB860; View&#xB97C; &#xBCC0;&#xACBD;&#xD574;&#xC918;&#xC57C; &#xD558;&#xC9C0;&#xB9CC;) &#xD3B8;&#xB9AC;&#xC131; : &#xC790;&#xC8FC; &#xC774;&#xC6A9;&#xB418;&#xB294; &#xBCF5;&#xC7A1;&#xD55C; query&#xB97C; &#xBBF8;&#xB9AC; view&#xB85C; &#xC815;&#xC758;&#xD574;&#xB450;&#xBA74; &#xD3B8;&#xB9AC;&#xD558;&#xAC8C; &#xC7AC;&#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xBCF4;&#xC548;&#xC131; : &#xBCF4;&#xC548;&#xC0C1; &#xC228;&#xAE30;&#xACE0; &#xC2F6;&#xC740; &#xB370;&#xC774;&#xD130;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; view &#xC0DD;&#xC131;&#xC2DC; &#xD574;&#xB2F9; &#xC815;&#xBCF4;&#xB97C; &#xC81C;&#xC678;&#xD558;&#xACE0; view&#xB97C; &#xBC30;&#xD3EC;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. View &#xC0DD;&#xC131;&#xBC29;&#xBC95; 123CREATE VIEW &#xBDF0;&#xBA85;&#xCE6D;ASSELECT ...","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 2-1 SQL 기본","slug":"02.01.sql.basic","date":"2016-01-20T15:00:00.000Z","updated":"2017-04-23T23:54:15.000Z","comments":true,"path":"2016/01/21/02.01.sql.basic/","link":"","permalink":"http://DevStarSJ.github.io/2016/01/21/02.01.sql.basic/","excerpt":"","text":"2&#xACFC;&#xBAA9; SQL &#xAE30;&#xBCF8; &#xBC0F; &#xD65C;&#xC6A9; 20&#xBB38;&#xC81C; &#xAC01; &#xC0C1;&#xD669;&#xBCC4;&#xB85C; SQL&#xBB38; &#xC791;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD560; &#xC815;&#xB3C4;&#xB85C; &#xC5F0;&#xC2B5;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xAE30;&#xBCF8;&#xC801;&#xC778; SQL&#xBB38;&#xBC95; &#xBC0F; &#xD568;&#xC218;&#xB294; &#xC0DD;&#xB7B5;&#xD558;&#xACE0; Tuning&#xC5D0; &#xD65C;&#xC6A9;&#xB420;&#xC218; &#xC788;&#xB294; &#xAC83; &#xC704;&#xC8FC;&#xB85C; &#xC815;&#xB9AC;&#xD558;&#xACE0;&#xC790; &#xD569;&#xB2C8;&#xB2E4;. 1&#xC7A5; SQL &#xAE30;&#xBCF8; 1.1 SQL &#xC885;&#xB958; DML (Data Manipulation Language) : &#xB370;&#xC774;&#xD130; &#xC870;&#xC791;&#xC5B4; SELECT : &#xC870;&#xD68C; INSERT, UPDATE, DELETE : &#xB370;&#xC774;&#xD130;&#xC5D0; &#xBCC0;&#xD615;&#xC744; &#xAC00;&#xD558;&#xB294; &#xBA85;&#xB839;&#xC5B4; DDL (Data Definition Language) : &#xB370;&#xC774;&#xD130; &#xC815;&#xC758;&#xC5B4; CREATE, ALTER, DROP, RENAME : &#xD14C;&#xC774;&#xBE14; &#xB4F1;&#xC758; &#xB370;&#xC774;&#xD130; &#xAD6C;&#xC870;&#xB97C; &#xC0DD;&#xC131;, &#xBCC0;&#xACBD;, &#xC0AD;&#xC81C;&#xD558;&#xB294; &#xBA85;&#xB839;&#xC5B4; DCL (Data Control Language) : &#xB370;&#xC774;&#xD130; &#xC81C;&#xC5B4;&#xC5B4; GRANT, REVOKE : DB &#xBC0F; &#xAC1D;&#xCCB4;&#xC758; &#xC811;&#xADFC;, &#xC0AC;&#xC6A9; &#xAD8C;&#xD55C;&#xC744; &#xC8FC;&#xACE0; &#xD68C;&#xC218;&#xD558;&#xB294; &#xBA85;&#xB839;&#xC5B4; TCL (Transaction Control Language) : &#xD2B8;&#xB79C;&#xC7AD;&#xC158; &#xC81C;&#xC5B4;&#xC5B4; COMMIT, ROLLBACK : &#xD2B8;&#xB79C;&#xC7AD;&#xC158;&#xC744; &#xC81C;&#xC5B4;&#xD558;&#xB294; &#xBA85;&#xB839;&#xC5B4; 1.2 CREATE TABLE 1. &#xAE30;&#xBCF8;&#xC801;&#xC778; &#xC0DD;&#xC131;&#xBC95; 123456CREATE TABLE &#xD14C;&#xC774;&#xBE14;&#xBA85; ( &#xCEEC;&#xB7FC;&#xBA85; DATATYPE [DEFAULT &#xD615;&#xC2DD;], ... CONSTRAINT &#xD14C;&#xC774;&#xBE14;&#xBA85;_PK PRIMARY KEY (&#xCEEC;&#xB7FC;, ...), CONSTRAINT &#xD14C;&#xC774;&#xBE14;&#xBA85;_FK FOREIGN KEY (&#xCEEC;&#xB7FC;, ...) REFERENCES &#xD14C;&#xC774;&#xBE14;2(&#xCEEC;&#xB7FC;, ...)); 2. CTAS (Create Table as Select) Oracle 12CREATE TABLE EMP_COPYAS SELECT * FROM SCOTT.EMP; MS-SQL 1SELECT * INTO EMP_COPY FROM SCOTT.EMP; NOT NULL &#xC81C;&#xC57D;&#xC870;&#xAC74;&#xC744; &#xC81C;&#xC678;&#xD558;&#xACE0;&#xB294; &#xBAA8;&#xB450; &#xC0AD;&#xC81C; 1.3 TRUNCATE TABLE vs DROP TABLE, DELETE TABLE TRUNCATE TABLE DROP TABLE&#xACFC;&#xC758; &#xCC28;&#xC774;&#xC810; : Table&#xC744; &#xC0AD;&#xC81C;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xBAA8;&#xB4E0; row&#xB4E4;&#xC744; &#xC81C;&#xAC70;&#xD55C;&#xB2E4;. DELETE TABLE&#xACFC;&#xC758; &#xCC28;&#xC774;&#xC810; : &#xC2DC;&#xC2A4;&#xD15C; &#xBD80;&#xD558;&#xAC00; &#xD6E8;&#xC52C; &#xC801;&#xC778; &#xB300;&#xC2E0;&#xC5D0; &#xBCF5;&#xAD6C;&#xAC00; &#xBD88;&#xAC00;&#xB2A5;&#xD558;&#xB2E4;. (rollback &#xBD88;&#xAC00;) 1.4 TRANSACTION &#xD2B9;&#xC9D5; &#xC6D0;&#xC790;&#xC131; (atomicity) : &#xBAA8;&#xB450; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xC2E4;&#xD589;&#xB418;&#xAC70;&#xB098;, &#xC2E4;&#xD589;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xC0C1;&#xD0DC;&#xB85C; &#xB418;&#xAC70;&#xB098; (all or nothing ) &#xC77C;&#xAD00;&#xC131; (consistency) : &#xC2E4;&#xD589;&#xC804;&#xC5D0; &#xC798;&#xBABB;&#xB41C; &#xC0C1;&#xD0DC;&#xAC00; &#xC544;&#xB2C8;&#xC5C8;&#xB2E4;&#xBA74;, &#xC2E4;&#xD589;&#xD6C4;&#xC5D0;&#xB3C4; &#xC798;&#xBABB;&#xC774; &#xC788;&#xC73C;&#xBA74; &#xC548;&#xB428; &#xACE0;&#xB9BD;&#xC131; (isolation) : &#xB3C4;&#xC911;&#xC5D0; &#xB2E4;&#xB978; &#xD2B8;&#xB79C;&#xC7AD;&#xC158;&#xC758; &#xC601;&#xD5A5;&#xC744; &#xBC1B;&#xC9C0; &#xC54A;&#xC74C; &#xC9C0;&#xC18D;&#xC131; (durability) : &#xC218;&#xD589;&#xD6C4; &#xAC31;&#xC2E0;&#xD55C; &#xB0B4;&#xC6A9;&#xC740; &#xC601;&#xAD6C;&#xC801;&#xC73C;&#xB85C; &#xC800;&#xC7A5; &#xBA85;&#xB839;&#xC5B4; COMMIT : &#xBCC0;&#xACBD;&#xB41C; &#xC0C1;&#xD0DC;&#xB97C; DB&#xC5D0; &#xBC18;&#xC601; ROLLBACK : &#xD2B8;&#xB79C;&#xC7AD;&#xC158; &#xC218;&#xD589; &#xC774;&#xC804; &#xC0C1;&#xD0DC;&#xB85C; &#xB418;&#xB3CC;&#xB9BC; SAVEPOINT [&#xC800;&#xC7A5;&#xBA85;&#xCE6D;] : &#xD604;&#xC2DC;&#xC810;&#xAE4C;&#xC9C0;&#xB9CC; ROLLBACK&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB3C4;&#xB85D; SAVEPOINT &#xC9C0;&#xC815; (MS-SQL&#xC5D0;&#xC11C;&#xB294; SAVE TRANSACTION [&#xC800;&#xC7A5;&#xBA85;&#xCE6D;]) ROLLBACK TO [&#xC800;&#xC7A5;&#xBA85;&#xCE6D;] : &#xD574;&#xB2F9; SAVEPOINT &#xAE4C;&#xC9C0; ROLLBACK (MS-SQL&#xC5D0;&#xC11C;&#xB294; ROLLBACK TRANSACTION [&#xC800;&#xC7A5;&#xBA85;&#xCE6D;]) 1.5 ROWNUM (Oracle), TOP (MS-SQL) ROWNUM : SQL &#xCC98;&#xB9AC;&#xACB0;&#xACFC; &#xAC01; &#xD589;&#xC758; &#xC784;&#xC2DC; &#xC77C;&#xB828;&#xBC88;&#xD638; 1&#xAC1C;&#xC758; &#xD589;&#xB9CC; &#xCD9C;&#xB825;&#xD560; &#xACBD;&#xC6B0; 123SELECT ... FROM ... WHERE ROWNUM = 1;SELECT ... FROM ... WHERE ROWNUM &lt;= 1;SELECT ... FROM ... WHERE ROWNUM &lt; 2; n&#xAC1C;&#xC758; &#xD589;&#xC744; &#xCD9C;&#xB825;&#xD560; &#xACBD;&#xC6B0; 12SELECT ... FROM ... WHERE ROWNUM &lt;= n;SELECT ... FROM ... WHERE ROWNUM &lt; n+1; TOP : &#xCD9C;&#xB825;&#xACB0;&#xACFC;&#xC758; &#xD589; &#xC218;&#xB97C; &#xC81C;&#xD55C; 1SELECT TOP( n [PERCENT] [WITH TIES] ) ... FROM ...; n : n&#xC758; &#xAC2F;&#xC218; &#xB9CC;&#xD07C; &#xD589;&#xC744; &#xCD9C;&#xB825; PERCENT : n % &#xB9CC;&#xD07C; &#xCD9C;&#xB825; WITH TIES : &#xB9C8;&#xC9C0;&#xB9C9; &#xD589;&#xACFC; &#xB3D9;&#xC77C;&#xD55C; &#xAC12;&#xACFC; &#xB3D9;&#xC77C;&#xD55C; &#xAC12;&#xC740; &#xCD94;&#xAC00;&#xB85C; &#xAC19;&#xC774; &#xCD9C;&#xB825; 1.6 CASE &#xD504;&#xB85C;&#xADF8;&#xB798;&#xBC0D;&#xC758; IF-THEN-ELSE&#xC640; &#xBE44;&#xC2B7;&#xD55C; &#xD45C;&#xD604;&#xC2DD;&#xC785;&#xB2C8;&#xB2E4;. 1. &#xB2E8;&#xC21C;&#xBE44;&#xAD50; : &#xD574;&#xB2F9; &#xAC12;&#xC5D0; &#xB530;&#xB77C; &#xBD84;&#xB958; 1234CASE value WHEN 1 THEN &apos;one&apos; WHEN 2 THEN &apos;two&apos; ELSE NULLEND 2. &#xC870;&#xAC74;&#xBE44;&#xAD50; : &#xD574;&#xB2F9; &#xC870;&#xAC74;&#xC5D0; &#xB530;&#xB77C; &#xBD84;&#xB958; 1234CASE WHEN value = 1 THEN &apos;one&apos; WHEN value = 2 THEN &apos;two&apos; ELSE NULLEND 3. DECODE : &#xB2E8;&#xC21C;&#xBE44;&#xAD50;&#xB97C; &#xBCF4;&#xB2E4; &#xC9E7;&#xAC8C; &#xD45C;&#xD55C;&#xD558;&#xB294; Oracle &#xD568;&#xC218; 1DECODE(value, 1,&apos;one&apos;, 2,&apos;two&apos;, NULL) 1.7 NULL NULL &#xAD00;&#xB828; &#xBB38;&#xC81C;&#xB294; &#xBC18;&#xB4DC;&#xC2DC; &#xCD9C;&#xC81C;&#xB41C;&#xB2E4;. NVL (Oracle), ISNULL (MS-SQL) &#xD574;&#xB2F9; &#xAC12;&#xC774; NULL&#xC77C; &#xACBD;&#xC6B0; 2&#xBC88;&#xC9F8; &#xC778;&#xC790;&#xC758; &#xAC12;&#xC744; &#xCD9C;&#xB825;&#xD55C;&#xB2E4;. 12SELECT NVL(SAL,0) FROM EMP; -- OracleSELECT ISNULL(SAL,0) FROM EMP; -- MS-SQL COALESCE &#xC778;&#xC218; &#xC911; &#xCD5C;&#xCD08;&#xB85C; NULL&#xC774; &#xC544;&#xB2CC; &#xAC12;&#xC744; &#xCD9C;&#xB825;&#xD55C;&#xB2E4;. &#xBAA8;&#xB450; NULL&#xC778; &#xACBD;&#xC6B0; NULL&#xC774; &#xCD9C;&#xB825;&#xB41C;&#xB2E4;. 1SELECT ENAME, COMM, SAL, COALESCE(COMM, SAL) COAL FROM EMP; &#xC704; &#xBB38;&#xC7A5;&#xC740; &#xC544;&#xB798;&#xC758; CASE&#xBB38;&#xC73C;&#xB85C; &#xD45C;&#xD604;&#xD55C; &#xAC83;&#xACFC; &#xAC19;&#xB2E4;. 123456SELECT ENAME, COMM, SAL, CASE WHEN COMM IS NOT NULL THEN COMM WHEN SAL IS NOT NULL THEN SAL ELSE NULL END COAL FROM EMP; 1.8 &#xC9D1;&#xACC4;&#xD568;&#xC218; (Aggregate function) GROUP &#xB2F9; &#xB2E8; 1&#xAC1C;&#xC758; &#xAC12;&#xB9CC; &#xCD9C;&#xB825;&#xD558;&#xB294; &#xD568;&#xC218; SELECT , HAVING, ORDER BY &#xC808;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xB2E4;. &#xC9D1;&#xACC4;&#xD568;&#xC218;&#xC5D0; &#xB4E4;&#xC5B4;&#xC628; NULL&#xAC12;&#xC740; &#xACC4;&#xC0B0;&#xC5D0; &#xD3EC;&#xD568;&#xC2DC;&#xD0A4;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;. (&#xCC38;&#xACE0;&#xB85C; &#xC0B0;&#xC220;&#xC5F0;&#xC0B0;&#xC5D0; NULL &#xAC12;&#xC774; &#xD3EC;&#xD568;&#xB418;&#xC5B4; &#xC788;&#xC73C;&#xBA74; &#xACB0;&#xACFC;&#xB294; &#xBB34;&#xC870;&#xAC74; NULL&#xC774;&#xB2E4;.) SELECT GROUP BY&#xC5D0; &#xBA85;&#xC2DC;&#xB41C; &#xCEEC;&#xB7FC;, &#xC9D1;&#xACC4;&#xD568;&#xC218;&#xC758; &#xACB0;&#xACFC;&#xAC12; &#xB9CC; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. GROUP BY &#xC5EC;&#xAE30;&#xC5D0; &#xBA85;&#xC2DC;&#xD55C; &#xCEEC;&#xB7FC;, &#xD45C;&#xD604;&#xC2DD; &#xB2E8;&#xC704;&#xB85C; &#xC9D1;&#xACC4;&#xD568;&#xC218;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xACC4;&#xC0B0;&#xD55C;&#xB2E4;. WHERE &#xC5EC;&#xAE30;&#xC5D0; &#xC801;&#xC740; &#xC870;&#xAC74;&#xC5D0; &#xBD80;&#xD569;&#xD558;&#xB294; row&#xB9CC; &#xC9D1;&#xACC4;&#xD568;&#xC218; &#xACC4;&#xC0B0;&#xC5D0; &#xCC38;&#xC5EC;&#xD55C;&#xB2E4;. (GROUP BY &#xC774;&#xC804; &#xD544;&#xD130;&#xB9C1; &#xC5ED;&#xD560;) HAVING &#xC9D1;&#xACC4;&#xB41C; &#xACB0;&#xACFC; &#xC911; HAVING &#xC808;&#xC758; &#xC870;&#xAC74;&#xC5D0; &#xB9CC;&#xC871;&#xD558;&#xB294; &#xAC83;&#xB9CC; &#xCD9C;&#xB825;&#xD55C;&#xB2E4;. (GROUP BY &#xC774;&#xD6C4; &#xD544;&#xD130;&#xB9C1; &#xC5ED;&#xD560;) 1234567SELECT D.DEPTNO, MAX(DNAME) AS DNAME, SUM(SAL) AS SUM, AVG(SAL) AS AVG FROM DEPT D, EMP E WHERE D.DEPTNO = E.DEPTNO AND D.DEPTNO IN (10, 30) -- DEPTNO&#xAC00; 10, 30 &#xC778;&#xAC83;&#xB9CC; &#xC9D1;&#xACC4;&#xB85C; &#xACC4;&#xC0B0; GROUP BY D.DNAMEHAVING SUM(SAL) &gt;= 10000 -- &#xACC4;&#xC0B0;&#xB41C; &#xACB0;&#xACFC;&#xC911; 10000&#xC774; &#xB118;&#xB294; &#xAC83;&#xB9CC; &#xCD9C;&#xB825; ORDER BY SUM(SAL); SELECT &#xBB38;&#xC7A5; &#xC2E4;&#xD589;&#xC21C;&#xC11C; FROM : &#xB300;&#xC0C1; Table &#xAC80;&#xC0C9; WHERE : &#xAC80;&#xC0C9; &#xB300;&#xC0C1;&#xC774; &#xC544;&#xB2CC; &#xB370;&#xC774;&#xD130; &#xC81C;&#xAC70; GROUP BY : &#xC9D1;&#xACC4;&#xD560; &#xB2E8;&#xC704;&#xB85C; &#xADF8;&#xB8F9;&#xD654; HAVING : &#xC9D1;&#xACC4;&#xD55C; &#xAC83;&#xC911; &#xC870;&#xAC74;&#xC5D0; &#xB9DE;&#xB294; &#xAC83;&#xB9CC; &#xC120;&#xD0DD; SELECT : &#xCD9C;&#xB825;&#xD560; &#xAC12;&#xB4E4;&#xC744; &#xACC4;&#xC0B0; &#xBC0F; &#xD568;&#xC218;&#xC801;&#xC6A9; ORDER BY : &#xB370;&#xC774;&#xD130;&#xB97C; &#xC815;&#xB82C;&#xD558;&#xC5EC;&#xC11C; &#xCD9C;&#xB825; CASE - GROUP BY 1&#xC815;&#xADDC;&#xD654;&#xB85C; &#xBAA8;&#xB378;&#xB9C1;&#xB41C; &#xD14C;&#xC774;&#xBE14;&#xB4E4;&#xC5D0;&#xC11C; &#xBCF4;&#xACE0;&#xC11C;&#xB97C; &#xB9CC;&#xB4E4;&#xB54C; &#xB9CE;&#xC774; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xAE30;&#xBC95;&#xC774;&#xB2E4;. &#xC608;&#xB97C; &#xB4E4;&#xC5B4;&#xC11C; &#xAC01; &#xBD80;&#xC11C;&#xBCC4;&#xB85C; &#xC785;&#xC0AC;&#xC6D4;&#xBCC4; &#xAE09;&#xC5EC;&#xD569;&#xACC4;&#xAC00; &#xD544;&#xC694;&#xD55C; &#xACBD;&#xC6B0;&#xAC00; &#xC788;&#xB2E4;&#xACE0; &#xAC00;&#xC815;&#xD588;&#xC744; &#xB54C; &#xBA3C;&#xC800; &#xBD80;&#xC11C;, &#xC0AC;&#xC6D0;&#xBA85;, &#xC785;&#xC0AC;&#xC6D4;, &#xAE09;&#xC5EC;&#xB97C; &#xCD9C;&#xB825;&#xD574;&#xBCF4;&#xC790;. 123SELECT ENAME, DEPTNO, EXTRACT(MONTH FROM HIREDATE) M, SAL FROM SCOTT.EMP ORDER BY SAL DESC; &#xC704; &#xBB38;&#xC7A5;&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xAC01; &#xC6D4;&#xBCC4;&#xB85C; &#xCEEC;&#xB7FC;&#xC744; &#xC0DD;&#xC131;&#xD558;&#xC5EC; &#xD574;&#xB2F9; &#xC6D4;&#xC5D0; &#xAE09;&#xC5EC;&#xB97C; &#xCD9C;&#xB825;&#xD574;&#xBCF4;&#xC790;. (CASE&#xB791; &#xAE30;&#xB2A5;&#xC774; &#xAC19;&#xC740; DECODE&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xACA0;&#xB2E4;.) 12345678910111213141516SELECT ENAME, DEPTNO, DECODE(M, 1,SAL) AS M01, DECODE(M, 2,SAL) AS M02, DECODE(M, 3,SAL) AS M03, DECODE(M, 4,SAL) AS M04, DECODE(M, 5,SAL) AS M05, DECODE(M, 6,SAL) AS M06, DECODE(M, 7,SAL) AS M07, DECODE(M, 8,SAL) AS M08, DECODE(M, 9,SAL) AS M09, DECODE(M,10,SAL) AS M10, DECODE(M,11,SAL) AS M11, DECODE(M,12,SAL) AS M12 FROM (SELECT ENAME, DEPTNO, EXTRACT(MONTH FROM HIREDATE) M, SAL FROM SCOTT.EMP ) ORDER BY DEPTNO, ENAME; &#xC774;&#xC81C; &#xC704; &#xBB38;&#xC7A5;&#xC744; &#xBD80;&#xC11C;&#xBCC4;&#xB85C; GROUP BY &#xD558;&#xB294;&#xAC74; &#xC5B4;&#xB835;&#xC9C0; &#xC54A;&#xC744; &#xAC83;&#xC774;&#xB2E4;. &#xCC38;&#xACE0;&#xB85C; NULL&#xC778; &#xACBD;&#xC6B0; 0&#xC73C;&#xB85C; &#xD45C;&#xC2DC;&#xD558;&#xB3C4;&#xB85D; NVL&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC600;&#xB2E4;. 12345678910111213141516SELECT DEPTNO, NVL(SUM(DECODE(M, 1,SAL)),0) AS M01, NVL(SUM(DECODE(M, 2,SAL)),0) AS M02, NVL(SUM(DECODE(M, 3,SAL)),0) AS M03, NVL(SUM(DECODE(M, 4,SAL)),0) AS M04, NVL(SUM(DECODE(M, 5,SAL)),0) AS M05, NVL(SUM(DECODE(M, 6,SAL)),0) AS M06, NVL(SUM(DECODE(M, 7,SAL)),0) AS M07, NVL(SUM(DECODE(M, 8,SAL)),0) AS M08, NVL(SUM(DECODE(M, 9,SAL)),0) AS M09, NVL(SUM(DECODE(M,10,SAL)),0) AS M10, NVL(SUM(DECODE(M,11,SAL)),0) AS M11, NVL(SUM(DECODE(M,12,SAL)),0) AS M12 FROM (SELECT ENAME, DEPTNO, EXTRACT(MONTH FROM HIREDATE) M, SAL FROM SCOTT.EMP ) GROUP BY DEPTNO; 1.9 JOIN JOIN&#xC740; &#xD55C;&#xBC88;&#xC5D0; 2&#xAC1C;&#xC758; &#xC9D1;&#xD569;&#xAC04;&#xC5D0;&#xB9CC; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. FROM A, B, C, D &#xAC00; &#xC788;&#xB354;&#xB77C;&#xB3C4; &#xC774; &#xC911; 2&#xAC1C;&#xB97C; &#xBA3C;&#xC800; JOIN&#xD558;&#xACE0; &#xADF8; &#xACB0;&#xACFC;&#xB97C; &#xB2E4;&#xC74C;&#xACFC; JOIN&#xD558;&#xB294; &#xC2DD;&#xC73C;&#xB85C; &#xCC98;&#xB9AC;&#xB41C;&#xB2E4;. JOIN&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; 2&#xC7A5;&#xC5D0;&#xC11C; &#xC790;&#xC138;&#xD788; &#xB2E4;&#xB8E8;&#xB824;&#xD588;&#xC73C;&#xB098;&#x2026; &#xAC70;&#xAE30;&#xC5D0; &#xC2DC;&#xAC04;&#xC744; &#xBE7C;&#xC558;&#xACA8;&#xC11C;&#xB294; &#xC548;&#xB420;&#xB4EF;&#xD558;&#xC5EC; &#xADF8;&#xB0E5; &#xC5EC;&#xAE30;&#xC11C; &#xAC04;&#xB2E8;&#xD788; &#xB2E4;&#xB8E8;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. JOIN &#xC5F0;&#xC0B0; EQUI JOIN &#xC77C;&#xBC18;&#xC801;&#xC73C;&#xB85C; PK - FK &#xC758; &#xAD00;&#xACC4;&#xC5D0;&#xC11C; &#xB9CE;&#xC774; &#xC774;&#xB8E8;&#xC5B4;&#xC9C4;&#xB2E4;. WHERE &#xC808;&#xC774;&#xB098; ON &#xC808;&#xC5D0;&#xC11C; = &#xC5F0;&#xC0B0;&#xC73C;&#xB85C; JOIN &#xD55C;&#xB2E4;. Non EQUI JOIN =&#xC5F0;&#xC0B0;&#xC774; &#xC544;&#xB2CC; &#xC5F0;&#xC0B0;&#xC73C;&#xB85C; JOIN&#xC744; &#xC218;&#xD589;&#xD55C;&#xB2E4;. ( BETWEEN, &gt;, &gt;=, &lt;, &lt;=, &lt;&gt;, != ) &#xC608;&#xB97C; &#xB4E4;&#xC5B4; SALGRADE Table&#xC5D0; &#xAC01; &#xAE09;&#xC5EC;&#xAD6C;&#xAC04;&#xBCC4; GRADE&#xAC00; &#xC800;&#xC7A5;&#xB41C; &#xACBD;&#xC6B0;, EMP&#xC758; &#xAC01; &#xC0AC;&#xC6D0;&#xBCC4;&#xB85C; &#xAE09;&#xC5EC;&#xB4F1;&#xAE09;&#xC744; &#xAD6C;&#xD558;&#xACE0;&#xC790;&#xD560;&#xB54C; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; &#xC791;&#xC131;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. 1234SELECT E.ENAME, E.DEPTNO, E.SAL, G.GRADE FROM SCOTT.EMP E, SCOTT.SALGRADE G WHERE E.SAL BETWEEN G.LOSAL AND G.HISAL ORDER BY SAL DESC; JOIN &#xC885;&#xB958; INNER JOIN &#xC591;&#xCABD; Table &#xBAA8;&#xB450; &#xC870;&#xAC74;&#xC5D0; &#xD574;&#xB2F9;&#xB418;&#xB294; &#xB370;&#xC774;&#xD130;&#xB9CC; &#xCD9C;&#xB825; (&#xAD50;&#xC9D1;&#xD569;) Natural JOIN : INNER JOIN &#xC5D0;&#xC11C; &#xC911;&#xBCF5;&#xB41C; &#xCEEC;&#xB7FC;&#xC740; &#xD55C;&#xBC88;&#xB9CC; &#xCD9C;&#xB825;&#xB428; &#xBAA8;&#xB4E0; &#xC77C;&#xCE58;&#xB41C; &#xCE7C;&#xB7FC;&#xC5D0; &#xB300;&#xD574;&#xC11C; JOIN &#xB418;&#xC9C0;&#xB9CC;, USING&#xC73C;&#xB85C; &#xC6D0;&#xD558;&#xB294; &#xCEEC;&#xB7FC;&#xB9CC; &#xC120;&#xD0DD;&#xC774; &#xAC00;&#xB2A5; (&#xC2E4;&#xC81C;&#xB85C; &#xD574;&#xBCF4;&#xB2C8; USING &#xC548;&#xC4F0;&#xBA74; ERROR) 12345SELECT * FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO;SELECT * EMP E INNER JOIN DEPT D ON E.DEPTNO = D.DEPTNO;SELECT * FROM EMP NATUAL JOIN DEPT USING (DEPTNO); OUTER JOIN LEFT OUTER JOIN : &#xC67C;&#xCABD; Table&#xC758; &#xBAA8;&#xB4E0; row &#xCD9C;&#xB825;, &#xC624;&#xB978;&#xCABD; Table&#xC5D0;&#xB294; &#xC870;&#xAC74;&#xC5D0; &#xB9DE;&#xC73C;&#xBA74; &#xCD9C;&#xB825;&#xD558;&#xACE0; &#xC544;&#xB2C8;&#xBA74; NULL RIGHT OUTER JOIN : &#xC624;&#xB978;&#xCABD; Table&#xC758; &#xBAA8;&#xB4E0; row &#xCD9C;&#xB825;, &#xC67C;&#xCABD; Table&#xC5D0;&#xB294; &#xC870;&#xAC74;&#xC5D0; &#xB9DE;&#xC73C;&#xBA74; &#xCD9C;&#xB825;&#xD558;&#xACE0; &#xC544;&#xB2C8;&#xBA74; NULL FULL OUTER JOIN : &#xC88C;,&#xC6B0;&#xCE21;&#xC744; &#xBAA8;&#xB450; &#xC77D;&#xC5B4;&#xC11C; &#xC11C;&#xB85C; &#xC0C1;&#xB300;&#xC5D0;&#xAC8C; &#xC788;&#xC73C;&#xBA74; &#xCD9C;&#xB825; &#xC5C6;&#xC73C;&#xBA74; NULL (LEFT OUTER&#xC640; RIGHT OUTER&#xB97C; UNION &#xD55C;&#xAC70;&#xB791; &#xACB0;&#xACFC;&#xAC00; &#xAC19;&#xC74C;) 12345SELECT * FROM SCOTT.EMP E LEFT JOIN SCOTT.DEPT D ON E.DEPTNO = D.DEPTNO;SELECT * FROM SCOTT.EMP E RIGHT JOIN SCOTT.DEPT D ON E.DEPTNO = D.DEPTNO;SELECT * FROM SCOTT.EMP E FULL JOIN SCOTT.DEPT D ON E.DEPTNO = D.DEPTNO; CROSS JOIN (CARTESIAN PRODUCT) &#xC591;&#xCABD; Table&#xC758; &#xBAA8;&#xB4E0; row &#xB4E4;&#xC744; &#xBAA8;&#xB450; &#xAD00;&#xACC4;&#xC9D3;&#xB294;&#xB2E4;. (A&#xC5D0; 10&#xAC1C; row, B&#xC5D0; 5&#xAC1C; row&#xAC00; &#xC788;&#xC744; &#xACBD;&#xC6B0; &#xACB0;&#xACFC;&#xB294; 10 x 5 = 50&#xAC1C;&#xAC00; &#xB41C;&#xB2E4;.) 123SELECT * FROM SCOTT.EMP CROSS JOIN SCOTT.DEPT;SELECT * FROM SCOTT.EMP, SCOTT.DEPT;","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 1-2 데이터 모델과 성능","slug":"01.02.modeling_performance","date":"2016-01-19T16:00:00.000Z","updated":"2017-04-23T23:58:36.000Z","comments":true,"path":"2016/01/20/01.02.modeling_performance/","link":"","permalink":"http://DevStarSJ.github.io/2016/01/20/01.02.modeling_performance/","excerpt":"","text":"1&#xACFC;&#xBAA9; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xB9C1;&#xC758; &#xC774;&#xD574; 10&#xBB38;&#xC81C; &#xC678;&#xC6B0;&#xAE30; &#xBCF4;&#xB2E4;&#xB294; &#xBC18;&#xBCF5;&#xC801;&#xC73C;&#xB85C; &#xC77D;&#xC5B4;&#xC11C; &#xC804;&#xBC18;&#xC801;&#xC778; &#xB0B4;&#xC6A9;&#xC744; &#xC774;&#xD574;&#xD558;&#xB294; &#xC218;&#xC900;&#xC5D0;&#xC11C; &#xB9C8;&#xBB34;&#xB9AC; &#xD558;&#xB294;&#xAC83;&#xC744; &#xBAA9;&#xD45C;&#xB85C; &#xC7A1;&#xC544;&#xC57C; &#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC81C; 2&#xC7A5; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xACFC; &#xC131;&#xB2A5; 1&#xC808; &#xC131;&#xB2A5; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xB9C1;&#xC758; &#xAC1C;&#xC694; &#xC131;&#xB2A5; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xB9C1;&#xC774;&#xB780; ? &#xC131;&#xB2A5;&#xD5A5;&#xC0C1;&#xC744; &#xBAA9;&#xC801;&#xC73C;&#xB85C; &#xBAA8;&#xB378;&#xB9C1; &#xD558;&#xB294; &#xAC83; &#xC218;&#xD589;&#xC2DC;&#xC810;&#xC740; ? &#xBE60;&#xB974;&#xBA74; &#xBE60;&#xB97C;&#xC218;&#xB85D; &#xC88B;&#xB2E4;. &#xBD84;&#xC11D;/&#xC124;&#xACC4; &#xB2E8;&#xACC4;&#xC5D0;&#xC11C;&#xB294; &#xC6B4;&#xC601;&#xB54C;&#xBCF4;&#xB2E4; &#xB354; &#xC801;&#xC740; &#xBE44;&#xC6A9;&#xC73C;&#xB85C; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. &#xC131;&#xB2A5; &#xBAA8;&#xB378;&#xB9C1; &#xACE0;&#xB824;&#xC0AC;&#xD56D; &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; &#xC815;&#xADDC;&#xD654;&#xB97C; &#xC218;&#xD589;&#xD574;&#xB193;&#xACE0; &#xC2DC;&#xC791;&#xD55C;&#xB2E4;. &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4; &#xC6A9;&#xB7C9;&#xC0B0;&#xC815; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4; &#xD2B8;&#xB79C;&#xC7AD;&#xC158; &#xC720;&#xD615; &#xD30C;&#xC545; &#xC6A9;&#xB7C9;&#xACFC; &#xD2B8;&#xB79C;&#xC7AD;&#xC158; &#xC720;&#xD615;&#xC5D0; &#xB530;&#xB77C; &#xBC18;&#xC815;&#xADDC;&#xD654; &#xC218;&#xD589; &#xC774;&#xB825;&#xBAA8;&#xB378;&#xC758; &#xC870;&#xC815;, PK/FK &#xC870;&#xC815;, &#xC288;&#xD37C;&#xD0C0;&#xC785;/&#xC11C;&#xBE0C;&#xD0C0;&#xC785; &#xC870;&#xC815; &#xC131;&#xB2A5;&#xAD00;&#xC810;&#xC758; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378; &#xAC80;&#xC99D; &#xC77C;&#xB2E8; &#xC815;&#xADDC;&#xD654;&#xB97C; &#xC644;&#xBCBD;&#xD558;&#xAC8C; &#xD574;&#xB193;&#xACE0; &#xC2DC;&#xC791;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. &#xADF8; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; &#xC5B4;&#xB290; &#xC5D4;&#xD130;&#xD2F0;&#xC5D0; &#xD2B8;&#xB79C;&#xC7AD;&#xC158;&#xC774; &#xB4E4;&#xC5B4;&#xC624;&#xB294;&#xC9C0; &#xC54C;&#xC544;&#xBD10;&#xC57C; &#xD558;&#xB294;&#xB370;, &#xAC00;&#xC7A5; &#xAC04;&#xB2E8;&#xD55C; &#xBC29;&#xBC95;&#xC774; &#xC6A9;&#xB7C9;&#xC774; &#xC9D1;&#xC911;&#xC801;&#xC73C;&#xB85C; &#xB298;&#xC5B4;&#xB098;&#xB294; &#xC5D4;&#xD130;&#xD2F0;&#xB97C; &#xCC3E;&#xB294; &#xAC83;&#xC774;&#xB2E4;. &#xD2B8;&#xB79C;&#xC7AD;&#xC158; &#xC720;&#xD615;&#xB3C4; &#xD30C;&#xC545;&#xD560; &#xD544;&#xC694;&#xAC00; &#xC788;&#xB294;&#xB370;, CRUD, &#xC2DC;&#xD000;&#xC2A4; &#xB2E4;&#xC774;&#xC5B4;&#xADF8;&#xB7A8; &#xB4F1;&#xC744; &#xCC38;&#xC870;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. &#xD30C;&#xC545;&#xB41C; &#xD2B8;&#xB79C;&#xC7AD;&#xC158; &#xC720;&#xD615;&#xC73C;&#xB85C; SQL&#xBB38;&#xC7A5;&#xC758; &#xC870;&#xC778;&#xAD00;&#xACC4; &#xD14C;&#xC774;&#xBE14;&#xC758; &#xCE7C;&#xB7FC;&#xB4E4;&#xC744; &#xD30C;&#xC545;&#xD560; &#xC218; &#xC788;&#xC73C;&#xBA70;, &#xC774;&#xB807;&#xAC8C; &#xBAA8;&#xC740; &#xC790;&#xB8CC;&#xB97C; &#xADFC;&#xAC70;&#xB85C; &#xBC18;&#xC815;&#xADDC;&#xD654;&#xB97C; &#xC801;&#xC6A9;&#xD55C;&#xB2E4;. &#xADF8; &#xB2E4;&#xC74C;&#xC5D0; &#xC131;&#xB2A5;&#xC744; &#xACE0;&#xB824;&#xD558;&#xC57C; PK/FK&#xB97C; &#xC131;&#xB2A5;&#xC774; &#xC6B0;&#xC218;&#xD55C; &#xC21C;&#xC11C;&#xB300;&#xB85C; &#xCE7C;&#xB7FC; &#xC21C;&#xC11C;&#xB97C; &#xC870;&#xC815;&#xD55C;&#xB2E4;. &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378; &#xADDC;&#xCE59;&#xBCF4;&#xB2E4;&#xB294; &#xC131;&#xB2A5;&#xC801;&#xC778; &#xCE21;&#xBA74;&#xC744; &#xCDA9;&#xBD84;&#xD788; &#xACE0;&#xB824;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. 2&#xC808; &#xC815;&#xADDC;&#xD654;&#xC640; &#xC131;&#xB2A5; &#xC77C;&#xBC18;&#xC801;&#xC73C;&#xB85C; &#xC815;&#xADDC;&#xD654;&#xB97C; &#xD558;&#xBA74; &#xC870;&#xD68C;&#xC2DC; JOIN&#xC774; &#xB298;&#xC5B4;&#xB098;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC131;&#xB2A5;&#xC774; &#xC800;&#xD558;&#xB418;&#xACE0;, DML (INSERT, UPDATE, DELETE) &#xC5F0;&#xC0B0;&#xC758; &#xC131;&#xB2A5;&#xC774; &#xD5A5;&#xC0C1;&#xB41C;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xBAA8;&#xB4E0; &#xC870;&#xD68C;&#xC5D0;&#xC11C; &#xC131;&#xB2A5;&#xC774; &#xC800;&#xD558;&#xB418;&#xB294; &#xAC83;&#xC740; &#xC544;&#xB2C8;&#xACE0;, &#xC815;&#xADDC;&#xD654;&#xB97C; &#xD574;&#xC57C;&#xB9CC; &#xC131;&#xB2A5;&#xC774; &#xD5A5;&#xC0C1;&#xB418;&#xB294; &#xACBD;&#xC6B0;&#xB3C4; &#xC544;&#xC8FC; &#xB9CE;&#xB2E4;. &#xC815;&#xADDC;&#xD654;&#xAC00; &#xB354; &#xBE60;&#xB978; &#xC0AC;&#xB840; 1 : &#xCEEC;&#xB7FC;&#xC774; &#xB9CE;&#xC744; &#xACBD;&#xC6B0; (&#xBC84;&#xD37C; &#xB0AD;&#xBE44;) &#xC6D0;&#xB798; (&#xBC18;&#xC815;&#xADDC;&#xD654;&#xB41C;) &#xD14C;&#xC774;&#xBE14;&#xC5D0;&#xB294; &#xCEEC;&#xB7FC;&#xC774; 10&#xAC1C;&#xAC00; &#xC788;&#xC5C8;&#xB2E4;. &#xC870;&#xD68C;&#xC2DC; &#xD574;&#xB2F9; &#xD14C;&#xC774;&#xBE14;&#xC5D0;&#xC11C; PK&#xB97C; &#xC81C;&#xC678;&#xD558;&#xACE0; 2&#xAC1C;&#xC758; &#xCEEC;&#xB7FC;&#xB9CC; &#xC790;&#xC8FC; &#xC77D;&#xD78C;&#xB2E4;. &#xC624;&#xB79C;&#xAE30;&#xAC04; &#xB3D9;&#xC548;&#xC758; &#xC774;&#xB825;&#xC911; PK &#xD3EC;&#xD568; &#xADF8; 3&#xAC1C;&#xC758; &#xCEEC;&#xB7FC;&#xB9CC; &#xC790;&#xC8FC; &#xC77D;&#xC744; &#xACBD;&#xC6B0;&#xB77C;&#xBA74;, &#xB098;&#xBA38;&#xC9C0; &#xCEEC;&#xB7FC;&#xB4E4;&#xC744; PK&#xAC12;&#xC5D0; &#xC885;&#xC18D;&#xC801;&#xC778; &#xD14C;&#xC774;&#xBE14;&#xB85C; &#xB530;&#xB85C; &#xBD84;&#xB9AC;&#xB97C; &#xD558;&#xB294; &#xAC83;&#xC774; &#xC720;&#xB9AC;&#xD558;&#xB2E4;. &#xC815;&#xADDC;&#xD654;&#xAC00; &#xB354; &#xBE60;&#xB978; &#xC0AC;&#xB840; 2 : DISTINCT&#xB97C; &#xC368;&#xC57C; &#xD560; &#xACBD;&#xC6B0; &#xC77C;&#xC790;&#xBCC4; &#xAC70;&#xB798;&#xBB3C;&#xAC74; (100&#xB9CC;&#xAC74;) : &#xBB3C;&#xAC74;&#xBC88;&#xD638;(PK), &#xC77C;&#xC790;, &#xC2DC;&#xAC04;, &#xC7A5;&#xC18C;, &#x2026; &#xC77C;&#xC790;&#xBCC4; &#xAC70;&#xB798;&#xB0B4;&#xC5ED; (2&#xB9CC;&#xAC74;) : (&#xC77C;&#xC790;, &#xC7A5;&#xC18C;) (PK) &#xAE08;&#xC561;, &#xAC74;&#xC218;, &#x2026; &#xAD11;&#xD654;&#xBB38;&#xC5D0;&#xC11C; &#xAC70;&#xB798;&#xB41C; &#xAE08;&#xC561;&#xC744; &#xAD6C;&#xD558;&#xB294; SQL&#xBB38;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xB2E4;. 12345SELECT B.&#xAE08;&#xC561; FROM (SELECT DISTINCT &#xC77C;&#xC790;, &#xC7A5;&#xC18C; FROM &#xC77C;&#xC790;&#xBCC4;&#xAC70;&#xB798;&#xBB3C;&#xAC74; WHERE &#xC7A5;&#xC18C; = &apos;&#xAD11;&#xD654;&#xBB38;`) A, -- 100&#xB9CC;&#xAC74;&#xC744; DISTINCT &#xC77C;&#xC790;&#xBCC4;&#xAC70;&#xB798;&#xB0B4;&#xC5ED; B WHERE A.&#xC77C;&#xC790; = B.&#xC77C;&#xC790; AND A.&#xC7A5;&#xC18C; = B.&#xC7A5;&#xC18C; &#xB9CC;&#xC57D; &#xC704;&#xC5D0;&#xC11C; DISTICT &#xD55C; &#xACB0;&#xACFC;&#xAC00; 5&#xCC9C;&#xAC74;&#xC774;&#xB77C;&#xBA74;, (&#xC77C;&#xC790;, &#xC7A5;&#xC18C;) &#xB97C; &#xBCC4;&#xB3C4;&#xC758; &#xD14C;&#xC774;&#xBE14;&#xB85C; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xAC83;&#xC774; &#xC720;&#xB9AC;&#xD558;&#xB2E4;. &#xC77C;&#xC790;&#xBCC4; &#xAC70;&#xB798;&#xBB3C;&#xAC74; (100&#xB9CC;&#xAC74;) : &#xBB3C;&#xAC74;&#xBC88;&#xD638;(PK), &#xC77C;&#xC790;(FK), &#x2026; &#xAC70;&#xB798; (5&#xCC9C;&#xAC74;) : &#xC77C;&#xC790;(PK), &#xC2DC;&#xAC04;, &#xC7A5;&#xC18C; &#xC77C;&#xC790;&#xBCC4; &#xAC70;&#xB798;&#xB0B4;&#xC5ED; (2&#xB9CC;&#xAC74;) : (&#xC77C;&#xC790;(FK), &#xC7A5;&#xC18C;) (PK) , &#xAE08;&#xC561;, &#xAC74;&#xC218;, &#x2026; 12345SELECT B.&#xAE08;&#xC561; FROM &#xAC70;&#xB798; A, &#xC77C;&#xC790;&#xBCC4;&#xAC70;&#xB798;&#xB0B4;&#xC5ED; B WHERE A.&#xC7A5;&#xC18C; = &apos;&#xAD11;&#xD654;&#xBB38;&apos; -- 5&#xCC9C;&#xAC74; AND A.&#xC77C;&#xC790; = B.&#xC77C;&#xC790; AND A.&#xC7A5;&#xC18C; = B.&#xC7A5;&#xC18C; &#xC815;&#xADDC;&#xD654;&#xAC00; &#xB354; &#xBE60;&#xB978; &#xC0AC;&#xB840; 3 : &#xB3D9;&#xC77C;&#xD55C; &#xC18D;&#xC131; &#xD615;&#xC2DD;&#xC774; &#xC5EC;&#xB7EC;&#xAC1C; &#xB098;&#xC5F4;&#xB41C; &#xACBD;&#xC6B0; &#xD55C; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xC18D;&#xC131;1, &#xC18D;&#xC131;2, &#xC18D;&#xC131;3, &#x2026; &#xC774; &#xC5EC;&#xB7EC;&#xAC1C; &#xC788;&#xACE0;, &#xAC01;&#xAC01;&#xC5D0; INDEX&#xAC00; &#xAC78;&#xB824; &#xC788;&#xB294; &#xACBD;&#xC6B0;&#xB97C; &#xB9D0;&#xD55C;&#xB2E4;. &#xC774;&#xB7F0; &#xACBD;&#xC6B0; DML &#xC791;&#xC5C5;&#xC5D0;&#xC11C;&#xC758; &#xC131;&#xB2A5;&#xC800;&#xD558; &#xB54C;&#xBB38;&#xC5D0; INDEX&#xB97C; &#xB450;&#xC9C0; &#xC54A;&#xAC70;&#xB098;, 1&#xAC1C; &#xC815;&#xB3C4;&#xB9CC; &#xB9CC;&#xB4DC;&#xB294; &#xACBD;&#xC6B0;&#xAC00; &#xB9CE;&#xB2E4;. &#xAC01; &#xC18D;&#xC131;&#xC5D0; &#xBD80;&#xD569;&#xD558;&#xB294; &#xB370;&#xC774;&#xD130;&#xB97C; &#xCC3E;&#xB294; SQL&#xBB38;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xB2E4;. 123456SELECT ... FROM &#xC7A5;&#xBE44; WHERE &#xC18D;&#xC131;1 = &apos;1&apos; OR &#xC18D;&#xC131;2 = &apos;2&apos; OR &#xC18D;&#xC131;3 = &apos;3&apos; ... &#xAC01;&#xAC01;&#xC758; &#xC18D;&#xC131;&#xC5D0; &#xBAA8;&#xB450; INDEX&#xB97C; &#xAC78;&#xC5B4;&#xB454; &#xACBD;&#xC6B0;&#xAC00; &#xC544;&#xB2C8;&#xB77C;&#xBA74; Full Scan&#xC774;&#xB098; Index Range Scan&#xC73C;&#xB85C; &#xB113;&#xC740; &#xBC94;&#xC704;&#xB97C; &#xCC3E;&#xC544;&#xC57C; &#xD55C;&#xB2E4;. &#xC704; Table&#xC744; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xBA3C;&#xC800; &#xC815;&#xADDC;&#xD654;&#xB97C; &#xC218;&#xD589;&#xD55C;&#xB2E4;. &#xC7A5;&#xBE44; : &#xC7A5;&#xBE44;&#xCF54;&#xB4DC;(PK), &#x2026; (&#xC18D;&#xC131;&#xB4E4;&#xC740; &#xBAA8;&#xB450; &#xC81C;&#xC678;) &#xC18D;&#xC131; : (&#xC7A5;&#xBE44;&#xCF54;&#xB4DC;(FK), &#xC18D;&#xC131;&#xCF54;&#xB4DC;) (PK), &#xC18D;&#xC131;&#xAC12; &#xC704; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C;&#xB294; &#xC18D;&#xC131; &#xD14C;&#xC774;&#xBE14;&#xC5D0; PK&#xB85C; &#xC778;&#xD558;&#xC5EC; INDEX&#xAC00; &#xC0DD;&#xC131;&#xB418;&#xC5B4; &#xC788;&#xC73C;&#xBBC0;&#xB85C; &#xC870;&#xD68C;&#xC2DC; &#xC131;&#xB2A5;&#xC774; &#xD5A5;&#xC0C1;&#xB41C;&#xB2E4;. &#xC870;&#xD68C;&#xB294; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; &#xC218;&#xD589;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. 123456SELECT ... FROM &#xC7A5;&#xBE44; A, &#xC18D;&#xC131; B WHERE A.&#xC7A5;&#xBE44;&#xCF54;&#xB4DC; = B.&#xC7A5;&#xBE44;&#xCF54;&#xB4DC; AND ( (B.&#xC18D;&#xC131;&#xCF54;&#xB4DC; = &apos;1&apos; AND B.&#xC18D;&#xC131;&#xAC12; = &apos;1&apos;) OR (B.&#xC18D;&#xC131;&#xCF54;&#xB4DC; = &apos;2&apos; AND B.&#xC18D;&#xC131;&#xAC12; = &apos;2&apos;) OR (B.&#xC18D;&#xC131;&#xCF54;&#xB4DC; = &apos;3&apos; AND B.&#xC18D;&#xC131;&#xAC12; = &apos;3&apos;) ) &#xC704;&#xC640; &#xAC19;&#xC774; &#xC18D;&#xC131;1, 2, 3 &#xBFD0;&#xB9CC; &#xC544;&#xB2C8;&#xB77C; &#xC774;&#xB825; &#xAC19;&#xC740; &#xB370;&#xC774;&#xD130;&#xB97C; &#xD568;&#xAED8; &#xBCF4;&#xAD00;&#xD558;&#xBA74;&#xC11C; &#xC7A5;&#xAE30;&#xC7AC;&#xACE0; 1&#xAC1C;&#xC6D4; &#xC218;&#xB7C9;,&#xAE08;&#xC561; , 2&#xAC1C;&#xC6D4; &#xC218;&#xB7C9;,&#xAE08;&#xC561; , 3&#xAC1C;&#xC6D4; &#xC218;&#xB7C9;,&#xAE08;&#xC561; &#xACFC; &#xAC19;&#xC740; &#xD615;&#xC2DD;&#xC758; &#xCEEC;&#xB7FC;&#xC774; &#xC788;&#xB294;&#xACBD;&#xC6B0; &#xC7AC;&#xACE0;&#xAE30;&#xAC04; &#xBCC4; &#xC218;&#xB7C9;,&#xAE08;&#xC561; &#xC744; &#xBCC4;&#xB3C4; &#xD14C;&#xC774;&#xBE14;&#xB85C; &#xBD84;&#xB9AC;&#xD558;&#xB294; &#xAC83;&#xC774; &#xC720;&#xB9AC;&#xD558;&#xB2E4;. 3&#xC808; &#xBC18;&#xC815;&#xADDC;&#xD654;&#xC640; &#xC131;&#xB2A5; &#xBC18;&#xC815;&#xADDC;&#xD654;&#xB780; ? &#xC131;&#xB2A5;&#xD5A5;&#xC0C1;, &#xAC1C;&#xBC1C;, &#xC6B4;&#xC601;&#xC758; &#xD3B8;&#xB9AC;&#xB97C; &#xC704;&#xD558;&#xC5EC; &#xB370;&#xC774;&#xD130; &#xC911;&#xBCF5;&#xC744; &#xAC01;&#xC624;&#xD558;&#xACE0; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xD1B5;&#xD569;&#xD558;&#xB294; &#xAC83;&#xC744; &#xC758;&#xBBF8;&#xD55C;&#xB2E4;. &#xB2E8;&#xC21C;&#xD788; JOIN&#xC774; &#xADC0;&#xCC2E;&#xC544;&#xC11C; &#xCEEC;&#xB7FC;&#xB4E4;&#xC744; &#xD1B5;&#xD569;&#xD558;&#xB2E4;&#xAC00;&#xB294; &#xB370;&#xC774;&#xD130;&#xC758; &#xBB34;&#xACB0;&#xC131;&#xC744; &#xAE68;&#xD2B8;&#xB9AC;&#xAC8C; &#xB41C;&#xB2E4;. 3.1 &#xBC18;&#xC815;&#xADDC;&#xD654; &#xC801;&#xC6A9;&#xBC29;&#xBC95; &#xBC18;&#xC815;&#xADDC;&#xD654; &#xB300;&#xC0C1;&#xC870;&#xC0AC; &#xC790;&#xC8FC; &#xC0AC;&#xC6A9;&#xB418;&#xB294; table&#xC5D0; range-scan&#xC744; &#xD558;&#xB294; &#xACBD;&#xC6B0; &#xB300;&#xB7C9;&#xC758; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC788;&#xB294; table&#xC5D0; range-scan&#xC744; &#xD558;&#xB294; &#xACBD;&#xC6B0; &#xD1B5;&#xACC4;&#xC131; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xC5D0;&#xC11C; &#xD1B5;&#xACC4;&#xC815;&#xBCF4;&#xB97C; &#xD544;&#xC694;&#xB85C; &#xD560;&#xB54C; -&gt; &#xBCC4;&#xB3C4;&#xC758; &#xD1B5;&#xACC4;&#xD14C;&#xC774;&#xBE14; &#xC0DD;&#xC131; (&#xBC18;&#xC815;&#xADDC;&#xD654;) &#xC9C0;&#xB098;&#xCE58;&#xAC8C; &#xB9CE;&#xC740; JOIN&#xC73C;&#xB85C; &#xC870;&#xD68C; &#xC791;&#xC5C5;&#xC774; &#xAE30;&#xC220;&#xC801;&#xC73C;&#xB85C; &#xC5B4;&#xB824;&#xC6CC; &#xC9C8;&#xB54C; &#xB300;&#xC548; &#xAC80;&#xD1A0; (&#xBC18;&#xC815;&#xADDC;&#xD654;&#xAC00; &#xC544;&#xB2CC; &#xB2E4;&#xB978; &#xBC29;&#xBC95;&#xB4E4;) &#xC9C0;&#xB098;&#xCE58;&#xAC8C; &#xB9CE;&#xC740; JOIN -&gt; View &#xC0DD;&#xC131; &#xB300;&#xB7C9;&#xC758; &#xB370;&#xC774;&#xD130; &#xCC98;&#xB9AC;, &#xBD80;&#xBD84;&#xCC98;&#xB9AC;&#xAC00; &#xC720;&#xB9AC;&#xD55C; &#xACBD;&#xC6B0; -&gt; &#xD074;&#xB7EC;&#xC2A4;&#xD130;&#xB9C1; &#xC801;&#xC6A9; &#xB610;&#xB294; INDEX &#xC870;&#xC815; (&#xB2E8; DML&#xC774; &#xC801;&#xACE0; &#xC870;&#xD68C; &#xC704;&#xC8FC;&#xC758; &#xD14C;&#xC774;&#xBE14;&#xC5D0;&#xB9CC; &#xD6A8;&#xACFC;&#xC801;) &#xB300;&#xB7C9;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; PK &#xC131;&#xACA9;&#xC5D0; &#xB530;&#xB77C; &#xBD84;&#xB9AC;&#xAC00; &#xAC00;&#xB2A5;&#xD55C; &#xACBD;&#xC6B0;&#xB77C;&#xBA74; -&gt; &#xD30C;&#xD2F0;&#xC154;&#xB2DD; &#xAE30;&#xBC95; &#xC801;&#xC6A9;&#xD574;&#xC11C; &#xBB3C;&#xB9AC;&#xC801;&#xC73C;&#xB85C; &#xBD84;&#xB9AC; Application &#xB85C;&#xC9C1;&#xC744; &#xBCC0;&#xACBD;&#xD558;&#xC5EC; &#xC131;&#xB2A5; &#xAC1C;&#xC120; &#xBC18;&#xC815;&#xADDC;&#xD654; &#xC801;&#xC6A9; &#xD14C;&#xC774;&#xBE14; &#xBC18;&#xC815;&#xADDC;&#xD654; &#xC18D;&#xC131; &#xBC18;&#xC815;&#xADDC;&#xD654; &#xAD00;&#xACC4; &#xBC18;&#xC815;&#xADDC;&#xD654; 3.2 &#xBC18;&#xC815;&#xADDC;&#xD654; &#xAE30;&#xBC95; &#xD14C;&#xC774;&#xBE14; &#xBC18;&#xC815;&#xADDC;&#xD654; &#xD14C;&#xC774;&#xBE14; &#xBCD1;&#xD569; : 1:1 , 1:M , &#xC288;&#xD37C;/&#xC11C;&#xBE0C;&#xD0C0;&#xC785; &#xAD00;&#xACC4;&#xC758; &#xD14C;&#xC774;&#xBE14;&#xB4E4;&#xC744; &#xBCD1;&#xD569;&#xD558;&#xC5EC; &#xC131;&#xB2A5;&#xD5A5;&#xC0C1; &#xD14C;&#xC774;&#xBE14; &#xBD84;&#xD560; &#xC218;&#xC9C1;&#xBD84;&#xD560; : &#xCEEC;&#xB7FC;&#xB2E8;&#xC704;&#xB85C; &#xD14C;&#xC774;&#xBE14;&#xC744; 1:1&#xB85C; &#xBD84;&#xB9AC;&#xD558;&#xC5EC; &#xD2B8;&#xB79C;&#xC7AD;&#xC158;&#xC744; &#xBD84;&#xC0B0; (&#xD2B8;&#xB79C;&#xC7AD;&#xC158;&#xC758; &#xC720;&#xD615;&#xC774; &#xC120;&#xD589;&#xB418;&#xC5B4;&#xC57C; &#xD568;) &#xC218;&#xD3C9;&#xBD84;&#xD560; : row &#xB2E8;&#xC704;&#xB85C; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xBD84;&#xB9AC;&#xD558;&#xC5EC; &#xD2B8;&#xB79C;&#xC7AD;&#xC158;&#xC744; &#xBD84;&#xC0B0; &#xD14C;&#xC774;&#xBE14; &#xCD94;&#xAC00; &#xC911;&#xBCF5;&#xD14C;&#xC774;&#xBE14; &#xCD94;&#xAC00; : &#xC6D0;&#xACA9; &#xB4F1;&#xC758; &#xD658;&#xACBD;&#xC5D0;&#xC11C; &#xC11C;&#xBC84;&#xAC00; &#xB2E4;&#xB978; &#xACBD;&#xC6B0; &#xB3D9;&#xC77C;&#xD55C; &#xD14C;&#xC774;&#xBE14; &#xC911;&#xBCF5;&#xC0DD;&#xC131; &#xD1B5;&#xACC4;&#xD14C;&#xC774;&#xBE14; &#xCD94;&#xAC00; : &#xD1B5;&#xACC4;&#xAC12;&#xC744; &#xBBF8;&#xB9AC; &#xACC4;&#xC0B0;&#xD574; &#xB460; &#xC774;&#xB825;&#xD14C;&#xC774;&#xBE14; &#xCD94;&#xAC00; : &#xB9C8;&#xC2A4;&#xD130; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xB808;&#xCF54;&#xB4DC;&#xB97C; &#xC911;&#xBCF5;&#xC73C;&#xB85C; &#xC774;&#xB825;&#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xC800;&#xC7A5; &#xBD80;&#xBD84;&#xD14C;&#xC774;&#xBE14; &#xCD94;&#xAC00; : &#xC790;&#xC8FC; &#xC774;&#xC6A9;&#xD558;&#xB294; &#xC9D1;&#xC911;&#xD654;&#xB41C; &#xCE7C;&#xB7FC;&#xB4E4;&#xC744; &#xBAA8;&#xC544;&#xB193;&#xC740; &#xBCC4;&#xB3C4; &#xD14C;&#xC774;&#xBE14; &#xC0DD;&#xC131; &#xCEEC;&#xB7FC; &#xBC18;&#xC815;&#xADDC;&#xD654; &#xC911;&#xBCF5;&#xCE7C;&#xB7FC; &#xCD94;&#xAC00; : JOIN&#xC744; &#xC904;&#xC774;&#xAE30; &#xC704;&#xD568; &#xD30C;&#xC0DD;&#xCE7C;&#xB7FC; &#xCD94;&#xAC00; : &#xBBF8;&#xB9AC; &#xACC4;&#xC0B0;&#xD558;&#xC5EC; &#xC800;&#xC7A5; &#xC774;&#xB825;&#xD14C;&#xC774;&#xBE14; &#xCE7C;&#xB7FC;&#xCD94;&#xAC00; : &#xC774;&#xB825;&#xD14C;&#xC774;&#xBE14;&#xC740; &#xB300;&#xC6A9;&#xB7C9;&#xC774;&#xBBC0;&#xB85C; &#xCC98;&#xB9AC;&#xC18D;&#xB3C4;&#xAC00; &#xB290;&#xB9BC;. &#xADF8; &#xC911; &#xC790;&#xC8FC; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xCEEC;&#xB7FC;&#xC744; &#xCD94;&#xAC00; (&#xCD5C;&#xADFC;&#xAC12;, &#xC2DC;&#xC791;, &#xC885;&#xB8CC;&#xC77C;&#xC790;&#x2026;) PK&#xC5D0; &#xC758;&#xD55C; &#xCE7C;&#xB7FC;&#xCD94;&#xAC00; : &#xBCF5;&#xD569;&#xC758;&#xBBF8; &#xB2E8;&#xC77C;PK&#xC758; &#xACBD;&#xC6B0;, &#xADF8; &#xC911; &#xD2B9;&#xC815; &#xAC12;&#xB9CC; &#xC790;&#xC8FC; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;&#xBA74; &#xC77C;&#xBC18;&#xC18D;&#xC131;&#xC73C;&#xB85C; &#xCD94;&#xAC00; &#xC751;&#xC6A9;&#xC2DC;&#xC2A4;&#xD15C; &#xC624;&#xC791;&#xB3D9;&#xC744; &#xC704;&#xD55C; &#xCE7C;&#xB7FC;&#xCD94;&#xAC00; : &#xC798;&#xBABB; &#xCC98;&#xB9AC;&#xB418;&#xC5C8;&#xC744; &#xACBD;&#xC6B0;&#xB97C; &#xB300;&#xBE44;&#xD55C; &#xBC31;&#xC5C5;&#xC6A9; &#xCE7C;&#xB7FC; &#xAD00;&#xACC4; &#xBC18;&#xC815;&#xADDC;&#xD654; &#xC911;&#xBCF5;&#xAD00;&#xACC4; &#xCD94;&#xAC00; : &#xC5EC;&#xB7EC; &#xACBD;&#xB85C;&#xB97C; &#xAC70;&#xCCD0;&#xC57C; &#xD558;&#xB294; JOIN&#xC744; &#xC904;&#xC774;&#xACE0;&#xC790; &#xAD00;&#xACC4;&#xCD94;&#xAC00; &#xBC18;&#xC815;&#xADDC;&#xD654;&#xAC00; &#xB354;&#xBE60;&#xB978; &#xC0AC;&#xB840; 1 : &#xC774;&#xB825;&#xD14C;&#xC774;&#xBE14;&#xC758; &#xCD5C;&#xADFC;&#xAC12;&#xC774; &#xD544;&#xC694;&#xD55C; &#xACBD;&#xC6B0; &#xACE0;&#xAC1D; Table : &#xACE0;&#xAC1D;&#xBC88;&#xD638;(PK), &#xACE0;&#xAC1D;&#xBA85; &#xC804;&#xD654;&#xBC88;&#xD638; Table : (&#xACE0;&#xAC1D;&#xBC88;&#xD638;(FK), &#xC21C;&#xBC88;) (PK) , &#xC804;&#xD654;&#xBC88;&#xD638; &#xBA54;&#xC77C;&#xC8FC;&#xC18C; Table : (&#xACE0;&#xAC1D;&#xBC88;&#xD638;(FK), &#xC21C;&#xBC88;) (PK) , &#xBA54;&#xC77C;&#xC8FC;&#xC18C; &#xACE0;&#xAC1D;&#xC758; &#xC804;&#xD654;&#xBC88;&#xD638;, &#xBA54;&#xC77C;&#xC8FC;&#xC18C;&#xC758; &#xBCC0;&#xACBD;&#xC774;&#xB825;&#xAE4C;&#xC9C0; &#xAC19;&#xC774; &#xAD00;&#xB9AC;&#xD574;&#xC57C; &#xD560; &#xACBD;&#xC6B0; &#xC704;&#xC640; &#xAC19;&#xC774; &#xC804;&#xD654;&#xBC88;&#xD638;, &#xBA54;&#xC77C;&#xC8FC;&#xC18C;&#xB97C; &#xBCC4;&#xB3C4;&#xC758; Table&#xB85C; &#xAD00;&#xB9AC;&#xD558;&#xC5EC;&#xC57C; &#xD55C;&#xB2E4;. &#xC774; &#xACBD;&#xC6B0; &#xD2B9;&#xC815; &#xACE0;&#xAC1D;&#xC758; &#xAC00;&#xC7A5; &#xCD5C;&#xADFC; &#xC804;&#xD654;&#xBC88;&#xD638;&#xC640; &#xBA54;&#xC77C;&#xC8FC;&#xC18C;&#xB97C; &#xC54C;&#xACE0; &#xC2F6;&#xB2E4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; SQL&#xBB38;&#xC744; &#xC791;&#xC131;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. 123456789101112SELECT A.&#xACE0;&#xAC1D;&#xBA85;, D.&#xC804;&#xD654;&#xBC88;&#xD638;, G.&#xBA54;&#xC77C;&#xC8FC;&#xC18C; FROM &#xACE0;&#xAC1D; A, (SELECT B.&#xACE0;&#xAC1D;&#xBC88;&#xD638; B.&#xC804;&#xD654;&#xBC88;&#xD638; FROM &#xC804;&#xD654;&#xBC88;&#xD638; B, (SELECT MAX(&#xC21C;&#xBC88;) FROM &#xC804;&#xD654;&#xBC88;&#xD638; WHERE &#xACE0;&#xAC1D;&#xBC88;&#xD638; = :custNo) C WHERE B.&#xACE0;&#xAC1D;&#xBC88;&#xD638; = C.&#xACE0;&#xAC1D;&#xBC88;&#xD638;) D, (SELECT E.&#xACE0;&#xAC1D;&#xBC88;&#xD638; E.&#xBA54;&#xC77C;&#xC8FC;&#xC18C; FROM &#xBA54;&#xC77C;&#xC8FC;&#xC18C; E, (SELECT MAX(&#xC21C;&#xBC88;) FROM &#xBA54;&#xC77C;&#xC8FC;&#xC18C; WHERE &#xACE0;&#xAC1D;&#xBC88;&#xD638; = :custNo) F WHERE E.&#xACE0;&#xAC1D;&#xBC88;&#xD638; = F.&#xACE0;&#xAC1D;&#xBC88;&#xD638;) G, WHERE A.&#xACE0;&#xAC1D;&#xBC88;&#xD638; = D.&#xACE0;&#xAC1D;&#xBC88;&#xD638; AND A.&#xACE0;&#xAC1D;&#xBC88;&#xD638; = G.&#xACE0;&#xAC1D;&#xBC88;&#xD638; &#xACE0;&#xAC1D; Table&#xC5D0; &#xCD5C;&#xADFC;&#xC804;&#xD654;&#xBC88;&#xD638;, &#xCD5C;&#xADFC;&#xBA54;&#xC77C;&#xC8FC;&#xC18C; &#xCE7C;&#xB7FC;&#xC744; &#xCD94;&#xAC00;&#xD558;&#xC5EC; &#xAD00;&#xB9AC;&#xD560; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; SQL&#xBB38;&#xC744; &#xB354; &#xC27D;&#xAC8C; &#xC791;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. 123SELECT &#xACE0;&#xAC1D;&#xBA85;, &#xCD5C;&#xADFC;&#xC804;&#xD654;&#xBC88;&#xD638;, &#xCD5C;&#xADFC;&#xBA54;&#xC77C;&#xC8FC;&#xC18C; FROM &#xACE0;&#xAC1D; WHERE &#xACE0;&#xAC1D;&#xBC88;&#xD638; = :custNo &#xBC18;&#xC815;&#xADDC;&#xD654;&#xAC00; &#xB354;&#xBE60;&#xB978; &#xC0AC;&#xB840; 2 : &#xC6D0;&#xACA9;&#xC11C;&#xBC84;&#xC640; JOIN&#xD560; &#xACBD;&#xC6B0; &#xC11C;&#xBC84; A &#xBD80;&#xC11C; Table : &#xBD80;&#xC11C;&#xCF54;&#xB4DC;(PK), &#xBD80;&#xC11C;&#xBA85; &#xC811;&#xC218; Table : (&#xC811;&#xC218;&#xBC88;&#xD638;, &#xBD80;&#xC11C;&#xCF54;&#xB4DC;(FK))(PK), &#x2026; &#xC11C;&#xBC84; B &#xC5F0;&#xACC4; Table : (&#xC5F0;&#xACC4;&#xBC88;&#xD638;, (&#xC811;&#xC218;&#xBC88;&#xD638;, &#xBD80;&#xC11C;&#xCF54;&#xB4DC;)(FK))(PK), &#xC5F0;&#xACC4;&#xC0C1;&#xD0DC;, &#xC5F0;&#xACC4;&#xC77C;&#xC790;, &#x2026; &#xD2B9;&#xC815; &#xC77C;&#xC790; &#xC0AC;&#xC774;&#xC758; &#xBD80;&#xC11C;&#xBA85;&#xC5D0; &#xB530;&#xB978; &#xC5F0;&#xACC4;&#xC0C1;&#xD0DC;&#xB97C; &#xC54C;&#xACE0; &#xC2F6;&#xC740; &#xACBD;&#xC6B0; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; SQL&#xC744; &#xC791;&#xC131;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. 12345SELECT A.&#xBD80;&#xC11C;&#xBA85;, C.&#xC5F0;&#xACC4;&#xC0C1;&#xD0DC; FROM &#xBD80;&#xC11C; A, &#xC811;&#xC218; B, &#xC5F0;&#xACC4; C WHERE A.&#xBD80;&#xC11C;&#xCF54;&#xB4DC; = B.&#xBD80;&#xC11C;&#xCF54;&#xB4DC; AND B.&#xBD80;&#xC11C;&#xCF54;&#xB4DC; = C.&#xBD80;&#xC11C;&#xCF54;&#xB4DC; AND B.&#xC811;&#xC218;&#xBC88;&#xD638; = C.&#xC811;&#xC218;&#xBC88;&#xD638; -- &#xC11C;&#xBC84;A&#xC640; &#xC11C;&#xBC84;B&#xC758; &#xC6D0;&#xACA9; JOIN&#xC774; &#xBC1C;&#xC0DD; AND C.&#xC5F0;&#xACC4;&#xC77C;&#xC790; BETWEEN :startdate AND :enddate &#xC6D0;&#xACA9; JOIN&#xC774; &#xC77C;&#xC5B4;&#xB098;&#xC11C; &#xC131;&#xB2A5;&#xC774; &#xC800;&#xD558; &#xB420;&#xC218; &#xC788;&#xB2E4;. &#xBD80;&#xC11C;&#xBA85; &#xCE7C;&#xB7FC;&#xC744; &#xC5F0;&#xACC4; Table&#xC5D0; &#xC911;&#xBCF5;&#xC0DD;&#xC131;&#xD558;&#xBA74; &#xC6D0;&#xACA9;JOIN&#xC744; &#xC5C6;&#xC568;&#xC218; &#xC788;&#xB2E4;. 123SELECT &#xBD80;&#xC11C;&#xBA85;, &#xC5F0;&#xACC4;&#xC0C1;&#xD0DC; FROM &#xC5F0;&#xACC4; WHERE &#xC5F0;&#xACC4;&#xC77C;&#xC790; BETWEEN :startdate AND :enddate &#xD558;&#xC9C0;&#xB9CC;, &#xBC18;&#xC815;&#xADDC;&#xD654;&#xB97C; &#xD560; &#xACBD;&#xC6B0; &#xB370;&#xC774;&#xD130; &#xC785;&#xB825;, &#xC218;&#xC815;, &#xC0AD;&#xC81C;&#xC2DC; &#xC131;&#xB2A5;&#xC774; &#xC800;&#xD558; &#xB41C;&#xB2E4;&#xB294; &#xC810;&#xC744; &#xBA85;&#xC2EC;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. 4&#xC808; &#xB300;&#xB7C9; &#xB370;&#xC774;&#xD130;&#xC5D0; &#xB530;&#xB978; &#xC131;&#xB2A5; 4.1 &#xCE7C;&#xB7FC; &#xC218;&#xAC00; &#xB9CE;&#xC740; &#xACBD;&#xC6B0; &#xB9CE;&#xC740; DISK I/O &#xBC0F; buffer miss&#xB97C; &#xBC1C;&#xC0DD;&#xC2DC;&#xD0A8;&#xB2E4;. : &#xB808;&#xCF54;&#xB4DC; &#xD06C;&#xAE30;&#xAC00; &#xAC70;&#xC838;&#xC11C; &#xBE14;&#xB85D; &#xB2F9; &#xC801;&#xC81C;&#xB41C; &#xB808;&#xCF54;&#xB4DC; &#xC218;&#xAC00; &#xC904;&#xC5B4;&#xB4E0;&#xB2E4;. 200&#xAC1C;&#xAC00; &#xB118;&#xB294; &#xCEEC;&#xB7FC;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; &#xD55C;&#xBC88;&#xC5D0; &#xB2E4; &#xC870;&#xD68C;&#xD560; &#xC77C;&#xC774; &#xACFC;&#xC5F0; &#xC5BC;&#xB9C8;&#xB098; &#xB420;&#xAE4C; ? &#xD654;&#xBA74;&#xC5D0; &#xB2E4; &#xD45C;&#xD604;&#xC740; &#xAC00;&#xB2A5;&#xD55C;&#xAC00; ? &#xD14C;&#xC774;&#xBE14;&#xC744; &#xBD84;&#xB9AC;&#xC2DC;&#xD0A4;&#xB294; &#xBC29;&#xBC95;&#xC774; &#xC788;&#xB2E4;. &#xB3C4;&#xC11C;&#xAD00;&#xC5D0;&#xC11C; &#xAD00;&#xB9AC;&#xD558;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; table&#xC744; &#xC0B4;&#xD3B4;&#xBCF4;&#xC790;. &#xB3C4;&#xC11C;&#xC815;&#xBCF4; Table : &#xB3C4;&#xC11C;&#xBC88;&#xD638;(PK), &#xC704;&#xCE58;, &#xC218;&#xB7C9;, &#xCC45;&#xC815;&#xBCF4;&#xAD00;&#xB828; &#xCE7C;&#xB7FC; 10&#xC5EC;&#xAC1C;, &#xC804;&#xC790;&#xCD9C;&#xD310;&#xAD00;&#xB828; &#xCE7C;&#xB7FC; 10&#xC5EC;&#xAC1C;, &#xB300;&#xCCB4;&#xC81C;&#xD488;&#xAD00;&#xB828; &#xCE7C;&#xB7FC; 10&#xC5EC;&#xAC1C;, &#x2026; &#xC704;&#xC758; &#xACBD;&#xC6B0; &#xC804;&#xC790;&#xCD9C;&#xD310;&#xAD00;&#xB828; &#xC815;&#xBCF4;&#xB098; &#xB300;&#xCCB4;&#xC81C;&#xD488;&#xAD00;&#xB828; &#xC815;&#xBCF4;&#xB294; &#xC790;&#xC8FC; &#xC774;&#xC6A9;&#xB418;&#xC9C0; &#xC54A;&#xB294; &#xD56D;&#xBAA9;&#xC774;&#xB77C;&#xBA74; &#xBCC4;&#xB3C4;&#xC758; table&#xB85C; &#xBD84;&#xB9AC;&#xD558;&#xB294;&#xAC8C; &#xD6A8;&#xACFC;&#xC801;&#xC774;&#xB2E4;. &#xB3C4;&#xC11C;&#xC815;&#xBCF4; Table : &#xB3C4;&#xC11C;&#xBC88;&#xD638;(PK), &#xC704;&#xCE58;, &#xC218;&#xB7C9;, &#xCC45;&#xC815;&#xBCF4;&#xAD00;&#xB828; &#xCE7C;&#xB7FC; 10&#xC5EC;&#xAC1C;, &#x2026; &#xC804;&#xC790;&#xCD9C;&#xD310; Table : &#xB3C4;&#xC11C;&#xBC88;&#xD638;(FK, PK), &#xC804;&#xC790;&#xCD9C;&#xD310;&#xAD00;&#xB828; &#xCE7C;&#xB7FC; 10&#xC5EC;&#xAC1C; &#xB300;&#xCCB4;&#xC81C;&#xD488; Table : &#xB3C4;&#xC11C;&#xBC88;&#xD638;(FK, PK), &#xB300;&#xCCB4;&#xC81C;&#xD488;&#xAD00;&#xB828; &#xCE7C;&#xB7FC; 10&#xC5EC;&#xAC1C; 4.2 &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xB370;&#xC774;&#xD130;&#xAC00; &#xB9CE;&#xC740; &#xACBD;&#xC6B0; &#xD30C;&#xD2F0;&#xC158;(partition)&#xC744; &#xC801;&#xC6A9;&#xD558;&#xC5EC; &#xB808;&#xCF54;&#xB4DC;&#xB97C; &#xBD84;&#xB9AC;&#xD558;&#xBA74; &#xB41C;&#xB2E4;. &#xD30C;&#xD2F0;&#xC158; &#xC885;&#xB958; Range Partition : PK&#xAC12;&#xC758; &#xBC94;&#xC704;&#xBCC4;&#xB85C; &#xBD84;&#xB9AC; (ex. &#xD578;&#xB4DC;&#xD3F0;&#xC694;&#xAE08; Table&#xC758; &#xACBD;&#xC6B0; &#xC694;&#xAE08;&#xC77C;&#xC790;&#xB97C; &#xBC94;&#xC704;&#xB85C; &#xD558;&#xC5EC; &#xB9E4; &#xB2EC;&#xB9C8;&#xB2E4; &#xD30C;&#xD2F0;&#xC158; &#xBD84;&#xB9AC;) List Partition : PK&#xC758; &#xD2B9;&#xC815;&#xAC12;&#xBCC4;&#xB85C; &#xBD84;&#xB9AC; (ex. &#xD578;&#xB4DC;&#xD3F0;&#xB300;&#xB9AC;&#xC810; Table&#xC758; &#xACBD;&#xC6B0; &#xC0AC;&#xC5C5;&#xC18C;&#xC758; &#xC704;&#xCE58;&#xC9C0;&#xC5ED; &#xBCC4;&#xB85C; &#xD30C;&#xD2F0;&#xC158; &#xBD84;&#xB9AC;) Hash Partition : PK&#xC758; &#xD574;&#xC26C;&#xAC12;&#xC73C;&#xB85C; &#xBD84;&#xB9AC; (&#xBC94;&#xC704; &#xAC80;&#xC0C9;&#xC774; &#xC548;&#xB418;&#xBA70;, &#xB370;&#xC774;&#xD130; &#xBCF4;&#xAD00;&#xC8FC;&#xAE30;&#xB97C; &#xD1B5;&#xD55C; &#xC0AD;&#xC81C; &#xB4F1;&#xC758; &#xAD00;&#xB9AC;&#xAC00; &#xC5B4;&#xB835;&#xB2E4;.) 4.3 &#xD14C;&#xC774;&#xBE14;&#xC758; &#xC218;&#xD3C9;/&#xC218;&#xC9C1; &#xBD84;&#xD560; &#xC808;&#xCC28; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xB9C1; &#xC644;&#xC131; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4; &#xC6A9;&#xB7C9;&#xC0B0;&#xC815; &#xC5B4;&#xB290; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xB370;&#xC774;&#xD130;&#xAC00; &#xB300;&#xC6A9;&#xB7C9;&#xD654; &#xB418;&#xB294;&#xC9C0; &#xBD84;&#xC11D; &#xB300;&#xB7C9; &#xB370;&#xC774;&#xD130;&#xAC00; &#xCC98;&#xB9AC;&#xB418;&#xB294; &#xD14C;&#xC774;&#xBE14;&#xC758; &#xD2B8;&#xB79C;&#xC7AD;&#xC158; &#xCC98;&#xB9AC; &#xD328;&#xD134; &#xBD84;&#xC11D; &#xB300;&#xC6A9;&#xB7C9;&#xD654; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xCEEC;&#xB7FC;&#xC218;&#xAC00; &#xB9CE;&#xC740;&#xAC00; ? &#xB300;&#xC6A9;&#xB7C9;&#xD654; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xB808;&#xCF54;&#xB4DC;&#xC218;&#xAC00; &#xB9CE;&#xC740;&#xAC00; ? &#xCEEC;&#xB7FC; &#xB2E8;&#xC704; &#xC9D1;&#xC911;&#xD654;, &#xB85C;&#xC6B0; &#xB2E8;&#xC704; &#xC9D1;&#xC911;&#xD654;&#xB97C; &#xBD84;&#xC11D;&#xD558;&#xC5EC; &#xD14C;&#xC774;&#xBE14; &#xBD84;&#xB9AC; &#xAC80;&#xD1A0; &#xD2B8;&#xB79C;&#xC7AD;&#xC158;&#xC5D0;&#xC11C; &#xB9CE;&#xC740; &#xCEEC;&#xB7FC;&#xB4E4;&#xC744; &#xD56D;&#xC0C1; &#xB2E4; &#xC0AC;&#xC6A9;&#xD558;&#xB294;&#xAC00; ? &#xD14C;&#xC774;&#xBE14; &#xBD84;&#xB9AC;&#xAC00; &#xAC00;&#xB2A5;&#xD55C;&#xAC00; ? &#xD2B8;&#xB79C;&#xC7AD;&#xC158;&#xC5D0;&#xC11C; &#xD2B9;&#xC815; &#xBC94;&#xC704; &#xB2E8;&#xC704;&#xB85C; &#xC791;&#xC5C5;&#xC744; &#xB9CE;&#xC774; &#xD558;&#xB294;&#xAC00; ? &#xD574;&#xB2F9; &#xBC94;&#xC704;&#xBCC4;&#xB85C; &#xD30C;&#xD2F0;&#xC154;&#xB2DD;&#xC774; &#xAC00;&#xB2A5;&#xD55C;&#xAC00; ? 5&#xC808; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4; &#xAD6C;&#xC870;&#xC640; &#xC131;&#xB2A5; 5.1 &#xC288;&#xD37C;/&#xC11C;&#xBE0C;&#xD0C0;&#xC785; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xB9C1; &#xACF5;&#xD1B5;&#xBD80;&#xBD84;&#xC744; &#xC288;&#xD37C;&#xD0C0;&#xC785;&#xC73C;&#xB85C; &#xBAA8;&#xB378;&#xB9C1;&#xD558;&#xACE0; &#xC774;&#xB97C; &#xC0C1;&#xC18D;&#xBC1B;&#xC544;&#xC11C; &#xCC28;&#xC774;&#xAC00; &#xC788;&#xB294; &#xC18D;&#xC131;&#xBCC4;&#xB85C; &#xBCC4;&#xB3C4;&#xC758; &#xC11C;&#xBE0C;&#xC5D4;&#xD130;&#xD2F0;&#xB85C; &#xAD6C;&#xBD84; &#xB17C;&#xB9AC;&#xC801; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xB9C1;, &#xBD84;&#xC11D;&#xB2E8;&#xACC4;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB428; &#xBB3C;&#xB9AC;&#xC801;&#xC73C;&#xB85C;&#xB294; 3&#xAC00;&#xC9C0; &#xD615;&#xD0DC;&#xB85C; &#xAD6C;&#xD604;&#xD568; ( One to One Type (1:1) , Plus Type (&#xC288;&#xD37C;+&#xC11C;&#xBE0C;), Single Type (All in One) ) &#xD2B8;&#xB79C;&#xC7AD;&#xC158;&#xC758; &#xC720;&#xD615;&#xC744; &#xBCF4;&#xACE0; &#xAC01;&#xAC01;&#xC758; &#xD615;&#xD0DC;&#xB85C; &#xAD6C;&#xD604;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. 1. &#xAC1C;&#xBCC4;&#xB85C; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xD2B8;&#xB79C;&#xC7AD;&#xC158;&#xC5D0;&#xB294; &#xAC1C;&#xBCC4;&#xB85C; &#xAD6C;&#xD604;&#xD558;&#xB294;&#xAC8C; &#xC720;&#xB9AC; (1:1) &#xBD80;&#xB3D9;&#xC0B0;&#xAC70;&#xB798; &#xAD00;&#xB9AC; &#xC5B4;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xC5D0;&#xC11C; &#xACC4;&#xC57D; &#xB0B4;&#xC5ED;&#xC5D0; &#xC774;&#xD574;&#xAD00;&#xACC4;&#xC790;&#xB4E4;(&#xB9E4;&#xC218;&#xC778;,&#xB9E4;&#xB3C4;&#xC778;,&#xC911;&#xAC1C;&#xC778;)&#xC774; &#xD45C;&#xC2DC;&#xAC00; &#xB418;&#xACE0; &#xC0C1;&#xC138;&#xB97C; &#xB20C;&#xB800;&#xC744; &#xACBD;&#xC6B0; &#xD574;&#xB2F9; &#xC778;&#xBB3C;&#xC5D0; &#xB300;&#xD55C; &#xC0C1;&#xC138;&#xC815;&#xBCF4;&#xAC00; &#xB098;&#xC624;&#xB294; &#xACBD;&#xC6B0;&#xB77C;&#xBA74; &#xC774;&#xD574;&#xAD00;&#xACC4;&#xC790;&#xB4E4;&#xC744; &#xBCC4;&#xB3C4;&#xC758; &#xD14C;&#xC774;&#xBE14;&#xB85C; &#xAD00;&#xB9AC;&#xD558;&#xB294; &#xAC83;&#xC774; &#xC88B;&#xC2B5;&#xB2C8;&#xB2E4;. &#xACC4;&#xC57D; Table : &#xACC4;&#xC57D;&#xBC88;&#xD638;(PK), &#x2026; , &#xC911;&#xAC1C;&#xC778;&#xBC88;&#xD638;(FK), &#xB9E4;&#xB3C4;&#xC778;&#xBC88;&#xD638;(FK), &#xB9E4;&#xC218;&#xC778;&#xBC88;&#xD638;(FK) &#xC774;&#xD574;&#xAD00;&#xACC4;&#xC790; Table : &#xC774;&#xD574;&#xAD00;&#xACC4;&#xC790;&#xBC88;&#xD638;(FK) , &#xC5ED;&#xD560;, &#x2026; 2. &#xC288;&#xD30C;&#xD0C0;&#xC785;+&#xC11C;&#xBE0C;&#xD0C0;&#xC785;&#xC5D0; &#xB300;&#xD574; &#xBC1C;&#xC0DD;&#xB418;&#xB294; &#xD2B8;&#xB79C;&#xC7AD;&#xC158;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xC288;&#xD37C;&#xD0C0;&#xC785;+&#xC11C;&#xBE0C;&#xD0C0;&#xC785;&#xC73C;&#xB85C; &#xAD6C;&#xBD84; &#xC704; &#xC608;&#xC81C;&#xC5D0;&#xC11C; &#xC911;&#xAC1C;&#xC778;&#xC774; 10&#xB9CC;&#xBA85;, &#xB9E4;&#xC218;&#xC778;&#xC774; 500&#xB9CC;&#xBA85;, &#xB9E4;&#xB3C4;&#xC778;&#xC774; 500&#xB9CC;&#xBA85;&#xC778; &#xACBD;&#xC6B0; (&#xC989;, &#xC774;&#xD574;&#xAD00;&#xACC4;&#xC790; Table&#xC740; 1010&#xB9CC;&#xAC74;) &#xC911;&#xAC1C;&#xC778;&#xC5D0; &#xB300;&#xD55C; &#xCC98;&#xB9AC;&#xAC00; &#xD544;&#xC694;&#xD55C; &#xACBD;&#xC6B0; &#xCD5C;&#xB300;10&#xB9CC;&#xAC74;&#xC758; &#xB370;&#xC774;&#xD130;&#xAC00; &#xD544;&#xC694;&#xD55C;&#xB370; &#xCD5C;&#xB300;1010&#xB9CC;&#xAC74;&#xC744; &#xC77D;&#xC744; &#xACBD;&#xC6B0;&#xB3C4; &#xBC1C;&#xC0DD;&#xD560; &#xC218; &#xC788;&#xB2E4;. &#xC774;&#xB7F4;&#xB54C;&#xB294; &#xC288;&#xD37C;/&#xC11C;&#xBE0C;&#xD0C0;&#xC785;&#xC73C;&#xB85C; &#xBD84;&#xB9AC;&#xD558;&#xB294; &#xAC83;&#xC774; &#xC88B;&#xB2E4;. &#xACC4;&#xC57D; Table : &#xACC4;&#xC57D;&#xBC18;&#xD638;(PK), &#x2026; &#xC774;&#xD574;&#xAD00;&#xACC4;&#xC790; Table : &#xACC4;&#xC57D;&#xBC88;&#xD638;(PK), &#xC911;&#xAC1C;&#xC778;&#xBC88;&#xD638;(FK), &#xB9E4;&#xB3C4;&#xC778;&#xBC88;&#xD638;(FK), &#xB9E4;&#xC218;&#xC778;&#xBC88;&#xD638;(FK) &#xC911;&#xAC1C;&#xC778; Table : &#xC911;&#xAC1C;&#xC778;&#xBC88;&#xD638;(PK), &#x2026; &#xB9E4;&#xB3C4;&#xC778; Table : &#xB9E4;&#xB3C4;&#xC778;&#xBC88;&#xD638;(PK), &#x2026; &#xB9E4;&#xC218;&#xC778; Table : &#xB9E4;&#xC218;&#xC778;&#xBC88;&#xD638;(PK), &#x2026; 3. &#xC804;&#xCCB4;&#xB97C; &#xD558;&#xB098;&#xB85C; &#xBB36;&#xC5B4;&#xC11C; &#xD2B8;&#xB79C;&#xC7AD;&#xC158;&#xC774; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xACBD;&#xC6B0; &#xD56D;&#xC0C1; &#xACC4;&#xC57D;&#xAD00;&#xB828; &#xC0AC;&#xD56D;&#xC744; &#xC870;&#xD68C;&#xD558;&#xB294;&#xB370;, &#xAC01; &#xC774;&#xD574;&#xAD00;&#xACC4;&#xC790;&#xB4E4;&#xC758; &#xC815;&#xBCF4;&#xAE4C;&#xC9C0; &#xB3D9;&#xC2DC;&#xC5D0; &#xD654;&#xBA74;&#xC5D0; &#xCD9C;&#xB825;&#xC774; &#xB418;&#xB294; &#xACBD;&#xC6B0;&#xB77C;&#xBA74; &#xD558;&#xB098;&#xC758; &#xD14C;&#xC774;&#xBE14;&#xB85C; &#xAD00;&#xB9AC;&#xD558;&#xB294;&#xAC8C; &#xC720;&#xB9AC;&#xD558;&#xB2E4;. &#xACC4;&#xC57D; Table : &#xACC4;&#xC57D;&#xBC88;&#xD638;(PK), &#x2026; , &#xC911;&#xAC1C;&#xC778; &#xC815;&#xBCF4;&#xB4E4;, &#xB9E4;&#xB3C4;&#xC778; &#xC815;&#xBCF4;&#xB4E4;), &#xB9E4;&#xC218;&#xC778; &#xC815;&#xBCF4;&#xB4E4; 5.2 INDEX &#xD2B9;&#xC131;&#xC744; &#xACE0;&#xB824;&#xD55C; PK/FK &#xC124;&#xC815; PK&#xB294; Unique Index&#xB97C; &#xC790;&#xB3D9;&#xC73C;&#xB85C; &#xC0DD;&#xC131;&#xD55C;&#xB2E4;. &#xC774;&#xD558; &#xC0DD;&#xB7B5; (&#xC790;&#xC138;&#xD55C; &#xB0B4;&#xC6A9;&#xC740; &#xB4A4;&#xC5D0; &#xB098;&#xC62C; Index &#xBD80;&#xBD84;&#xC744; &#xCC38;&#xC870;) FK&#xB3C4; Index&#xB97C; &#xC0DD;&#xC131;&#xD55C;&#xB2E4;. FK&#xAC00; &#xC5C6;&#xC5B4;&#xB3C4; WHERE &#xC808;&#xC5D0;&#xC11C; &#xC870;&#xAC74;&#xC744; &#xC801;&#xC5B4;&#xC8FC;&#xB294; &#xAC83;&#xC73C;&#xB85C; SQL &#xC791;&#xC131;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xC9C0;&#xB9CC;, Full Table Scan&#xC774; &#xB420; &#xC218; &#xC788;&#xB2E4;. &#xAC00;&#xB2A5;&#xD558;&#xBA74; &#xC77C;&#xB2E8; FK&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xAC83;&#xC744; &#xAE30;&#xBCF8; &#xC815;&#xCC45;&#xC73C;&#xB85C;&#xD558;&#xACE0;, &#xD2B8;&#xB79C;&#xC7AD;&#xC158;&#xC744; &#xBD84;&#xC11D;&#xD558;&#xC5EC; &#xAC70;&#xC758; &#xD65C;&#xC6A9;&#xB418;&#xC9C0; &#xC54A;&#xC744;&#xB54C;&#xB294; &#xC9C0;&#xC6B0;&#xB294; &#xAC83;&#xC774; &#xC801;&#xC808;&#xD55C; &#xBC29;&#xBC95;&#xC774;&#xB2E4;. 6&#xC808; &#xBD84;&#xC0B0; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4;&#xC640; &#xC131;&#xB2A5; 6.1 &#xBD84;&#xC0B0; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4;&#xC758; &#xD22C;&#xBA85;&#xC131;(transparency) : 6&#xAC00;&#xC9C0; &#xC870;&#xAC74;&#xC744; &#xB9CC;&#xC871;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. &#xBD84;&#xD560; &#xD22C;&#xBA85;&#xC131; (&#xB2E8;&#xD3B8;&#xD654;) : &#xD558;&#xB098;&#xC758; &#xB17C;&#xB9AC;&#xC801;&#xC778; relation&#xC774; &#xC5EC;&#xB7EC; &#xB2E8;&#xD3B8;&#xC73C;&#xB85C; &#xBD84;&#xD560;&#xB418;&#xC5B4; &#xAC01; &#xB2E8;&#xD3B8;&#xC758; &#xC0AC;&#xBCF8;&#xC774; &#xC5EC;&#xB7EC; site&#xC5D0; &#xC800;&#xC7A5; &#xC704;&#xCE58; &#xD22C;&#xBA85;&#xC131; : &#xC704;&#xCE58;&#xC815;&#xBCF4;&#xB294; system catalog&#xC5D0; &#xC720;&#xC9C0;&#xB418;&#xC5B4;&#xC57C; &#xD558;&#xBA70;, &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xB370;&#xC774;&#xD130; &#xC0AC;&#xC6A9;&#xC2DC;&#xB294; &#xBA85;&#xC2DC;&#xD560; &#xD544;&#xC694;&#xAC00; &#xC5C6;&#xC5B4;&#xC57C; &#xD568; &#xC9C0;&#xC5ED;&#xC0AC;&#xC0C1; &#xD22C;&#xBA85;&#xC131; : &#xC9C0;&#xC5ED;DBMS&#xC640; &#xBB3C;&#xB9AC;&#xC801; DB &#xC0AC;&#xC774;&#xC758; Mapping &#xBCF4;&#xC7A5;. &#xC9C0;&#xC5ED;&#xC2DC;&#xC2A4;&#xD15C;&#xACFC; &#xBB34;&#xAD00;&#xD55C; &#xC774;&#xB984; &#xC0AC;&#xC6A9; &#xAC00;&#xB2A5; &#xC911;&#xBCF5; &#xD22C;&#xBA85;&#xC131; : DB &#xAC1D;&#xCCB4;&#xAC00; &#xC5EC;&#xB7EC; site&#xC5D0; &#xC911;&#xBCF5;&#xB418;&#xC5B4; &#xC788;&#xB294;&#xC9C0; &#xC54C; &#xD544;&#xC694;&#xAC00; &#xC5C6;&#xC74C; &#xC7A5;&#xC560; &#xD22C;&#xBA85;&#xC131; : DBMS&#xC758; &#xC7A5;&#xC560;&#xC640; &#xBB34;&#xAD00;&#xD558;&#xAC8C; Transaction &#xC77C;&#xAD00;&#xC131; &#xC720;&#xC9C0; &#xBCD1;&#xD589; &#xD22C;&#xBA85;&#xC131; : &#xB2E4;&#xC218; Transaction &#xC218;&#xD589;&#xC2DC; &#xC77C;&#xAD00;&#xC131; &#xC720;&#xC9C0;, &#xBD84;&#xC0B0; 2&#xB2E8;&#xACC4; Locking&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xAD6C;&#xD604; 6.2 &#xC7A5;&#xB2E8;&#xC810; &#xC7A5;&#xC810; &#xC2E0;&#xB8B0;&#xC131;, &#xAC00;&#xC6A9;&#xC131; &#xBE60;&#xB978; &#xC751;&#xB2F5; &#xC18D;&#xB3C4;&#xC640; &#xD1B5;&#xC2E0;&#xBE44;&#xC6A9; &#xC808;&#xAC10; &#xAC01; &#xC9C0;&#xC5ED; &#xC0AC;&#xC6A9;&#xC790;&#xC758; &#xC694;&#xAD6C; &#xC218;&#xC6A9; &#xC99D;&#xB300; &#xC9C0;&#xC5ED; &#xC790;&#xCE58;&#xC131;, &#xC810;&#xC99D;&#xC801; &#xC2DC;&#xC2A4;&#xD15C; &#xC6A9;&#xB7C9; &#xD655;&#xC7A5; &#xB2E8;&#xC810; &#xC18C;&#xD504;&#xD2B8;&#xC6E8;&#xC5B4; &#xAC1C;&#xBC1C; &#xBE44;&#xC6A9; &#xCC98;&#xB9AC; &#xBE44;&#xC6A9; &#xC124;&#xACC4;, &#xAD00;&#xB9AC;&#xC758; &#xBCF5;&#xC7A1;&#xC131;&#xACFC; &#xBE44;&#xC6A9; &#xBD88;&#xADDC;&#xCE59;&#xD55C; &#xC751;&#xB2F5;&#xC18D;&#xB3C4; &#xD1B5;&#xC81C;&#xAC00; &#xC5B4;&#xB824;&#xC6C0; 6.3 &#xC801;&#xC6A9; &#xAE30;&#xBC95; 1. &#xD14C;&#xC774;&#xBE14; &#xBD84;&#xC0B0; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xC704;&#xCE58;&#xBCC4;&#xB85C; &#xBD84;&#xC0B0; (ex. &#xC790;&#xC7AC;&#xD488;&#xBAA9;&#xC740; &#xBCF8;&#xC0AC;, &#xC0DD;&#xC0B0;&#xC81C;&#xD488;&#xC740; &#xC9C0;&#xC0AC;) 2. &#xD14C;&#xC774;&#xBE14; &#xBD84;&#xD560;(fragmentation) &#xBD84;&#xC0B0; &#xC218;&#xD3C9;&#xBD84;&#xD560; : &#xC9C0;&#xC0AC;&#xBCC4;&#xB85C; &#xAC01;&#xAC01; &#xB2E4;&#xB978; PK&#xB97C; &#xAC00;&#xC9C4; &#xB808;&#xCF54;&#xB4DC;&#xB4E4;&#xC744; &#xC800;&#xC7A5;. &#xD1B5;&#xD569;&#xCC98;&#xB9AC;&#xC2DC; &#xC218;&#xD589;&#xC18D;&#xB3C4;&#xAC00; &#xB290;&#xB824;&#xC9D0; &#xC218;&#xC9C1;&#xBD84;&#xD560; : &#xC0AC;&#xC774;&#xD2B8;&#xBCC4;&#xB85C; &#xB3D9;&#xC77C;&#xD55C; PK&#xB97C; &#xAC00;&#xC9C4; &#xB808;&#xCF54;&#xB4DC;&#xB97C; &#xC800;&#xC7A5;&#xD558;&#xB098; &#xCEEC;&#xB7FC;&#xC744; &#xBD84;&#xB9AC;&#xD574;&#xC11C; &#xC800;&#xC7A5; (ex. &#xBCF8;&#xC0AC;&#xC5D0;&#xB294; &#xB2E8;&#xAC00;&#xB97C; &#xC800;&#xC7A5;, &#xAC01; &#xC9C0;&#xC0AC;&#xC5D0;&#xB294; &#xC9C0;&#xC0AC;&#xBCC4; &#xC7AC;&#xACE0;&#xB7C9;&#xC744; &#xC800;&#xC7A5;) 3. &#xD14C;&#xC774;&#xBE14; &#xBCF5;&#xC81C;(replication) &#xBD84;&#xC0B0; &#xB3D9;&#xC77C;&#xD55C; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xC5EC;&#xB7EC; &#xACF3;&#xC5D0;&#xC11C; &#xB3D9;&#xC2DC;&#xC5D0; &#xC0DD;&#xC131;&#xD558;&#xC5EC; &#xAD00;&#xB9AC; &#xBD80;&#xBD84;&#xBCF5;&#xC81C;(segment replication) : &#xD1B5;&#xD569;&#xBCF8;&#xC740; &#xBCF8;&#xC0AC;&#xC5D0; &#xC788;&#xACE0;, &#xAC01; &#xC9C0;&#xC0AC;&#xBCC4;&#xB85C; &#xC218;&#xD3C9;&#xBD84;&#xD560; &#xD615;&#xD0DC;. &#xB370;&#xC774;&#xD130; &#xC785;&#xB825;&#xC740; &#xC9C0;&#xC0AC;&#xC5D0;&#xC11C; &#xD558;&#xACE0;, &#xBCF8;&#xC0AC;&#xC5D0;&#xC11C; &#xC9C0;&#xC0AC; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xD1B5;&#xD569; &#xAD11;&#xC5ED;&#xBCF5;&#xC81C; (broadcast replication) : &#xBCF8;&#xC0AC;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC9C0;&#xC0AC;&#xC5D0;&#xC11C;&#xB3C4; &#xB3D9;&#xC77C;&#xD558;&#xAC8C; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xC74C;. &#xBCF8;&#xC0AC;&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xC785;&#xB825;&#xC744;&#xD558;&#xACE0;, &#xC8FC;&#xAE30;&#xBCC4;&#xB85C; &#xD574;&#xB2F9; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC9C0;&#xC0AC;&#xB85C; &#xBCF5;&#xC0AC; 4. &#xD14C;&#xC774;&#xBE14; &#xC694;&#xC57D;(summarization) &#xBD84;&#xC0B0; &#xBD84;&#xC11D;&#xC694;&#xC57D; (rollup replication) : &#xC9C0;&#xC0AC;&#xBCC4;&#xB85C; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xC694;&#xC57D;&#xC815;&#xBCF4;&#xB97C; &#xBCF8;&#xC0AC;&#xC5D0;&#xC11C; &#xD1B5;&#xD569;&#xD558;&#xC5EC; &#xC9C0;&#xC0AC;&#xB85C; &#xC804;&#xC1A1; (&#xBAA8;&#xB4E0; &#xC9C0;&#xC0AC;&#xAC00; &#xB3D9;&#xC77C; &#xC815;&#xBCF4;) &#xD1B5;&#xD569;&#xC694;&#xC57D; (consolidation replication) : &#xC9C0;&#xC0AC;&#xBCC4;&#xB85C; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xB2E4;&#xB978; &#xC815;&#xBCF4;&#xB97C; &#xBCF8;&#xC0AC;&#xC5D0;&#xC11C; &#xD1B5;&#xD569;&#xD558;&#xC5EC; &#xAD00;&#xB9AC; (&#xBAA8;&#xB4E0; &#xC9C0;&#xC0AC;&#xAC00; &#xB2E4;&#xB978; &#xC815;&#xBCF4;) 6.4 &#xBD84;&#xC0B0; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4;&#xB97C; &#xD1B5;&#xD55C; &#xC131;&#xB2A5; &#xD5A5;&#xC0C1; &#xC0AC;&#xB840; &#xC778;&#xC0AC;&#xD300;DB&#xC5D0;&#xB9CC; &#xC9C1;&#xC6D0; &#xC815;&#xBCF4;&#xAC00; &#xC788;&#xB294; &#xACBD;&#xC6B0; &#xC5C5;&#xBB34;DB&#xC5D0;&#xC11C;&#xB294; &#xD56D;&#xC0C1; &#xC778;&#xC0AC;&#xD300;DB&#xB97C; JOIN&#xD574;&#xC57C;&#xD568;. &#xC9C1;&#xC6D0; &#xC815;&#xBCF4;&#xB97C; &#xAC01; &#xC5C5;&#xBB34;DB&#xB85C; &#xBCF5;&#xC0AC;&#xB97C; &#xD558;&#xBA74; &#xC131;&#xB2A5;&#xC774; &#xD5A5;&#xC0C1; &#xB428; &#xC131;&#xB2A5;&#xC774; &#xC911;&#xC694;&#xD55C; &#xC0AC;&#xC774;&#xD2B8;&#xC5D0; &#xC801;&#xC6A9; master &#xC131;&#xACA9;&#xC758; table&#xC744; &#xBD84;&#xC0B0;&#xD558;&#xBA74; &#xC131;&#xB2A5;&#xC774; &#xD5A5;&#xC0C1;&#xB428; &#xC2E4;&#xC2DC;&#xAC04; &#xB3D9;&#xAE30;&#xD654;&#xAC00; &#xC694;&#xAD6C;&#xB418;&#xC9C0; &#xC54A;&#xC73C;&#xBA74; &#xC720;&#xB9AC;. &#xD2B9;&#xC815;&#xC2DC;&#xAC04;&#xC5D0; batch&#xB85C; &#xB3D9;&#xAE30;&#xD654; &#xD2B9;&#xC815; &#xC11C;&#xBC84;&#xC5D0; &#xBD80;&#xD558;&#xAC00; &#xC9D1;&#xC911;&#xB420;&#xB584; &#xBD84;&#xC0B0;&#xC2DC;&#xD0AC;&#xC218; &#xC788;&#xC74C; &#xBC31;&#xC5C5;&#xC0AC;&#xC774;&#xD2B8;&#xB97C; &#xAD6C;&#xC131;&#xD560; &#xB54C; &#xBD84;&#xC0B0;&#xAE30;&#xB2A5;&#xC744; &#xC801;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xC74C;","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"SQLP 1-1 데이터 모델링","slug":"01.01.modeling","date":"2016-01-19T15:00:00.000Z","updated":"2017-04-23T23:57:23.000Z","comments":true,"path":"2016/01/20/01.01.modeling/","link":"","permalink":"http://DevStarSJ.github.io/2016/01/20/01.01.modeling/","excerpt":"","text":"1&#xACFC;&#xBAA9; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xB9C1;&#xC758; &#xC774;&#xD574; 10&#xBB38;&#xC81C; &#xC678;&#xC6B0;&#xAE30; &#xBCF4;&#xB2E4;&#xB294; &#xBC18;&#xBCF5;&#xC801;&#xC73C;&#xB85C; &#xC77D;&#xC5B4;&#xC11C; &#xC804;&#xBC18;&#xC801;&#xC778; &#xB0B4;&#xC6A9;&#xC744; &#xC774;&#xD574;&#xD558;&#xB294; &#xC218;&#xC900;&#xC5D0;&#xC11C; &#xB9C8;&#xBB34;&#xB9AC; &#xD558;&#xB294;&#xAC83;&#xC744; &#xBAA9;&#xD45C;&#xB85C; &#xC7A1;&#xC544;&#xC57C; &#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC81C; 1&#xC7A5; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xB9C1;&#xC758; &#xC774;&#xD574; 1&#xC808; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xC758; &#xC774;&#xD574; &#xBAA8;&#xB378;&#xB9C1;&#xC758; &#xD2B9;&#xC9D5; &#xCD94;&#xC0C1;&#xD654; : &#xC77C;&#xC815;&#xD55C; &#xD615;&#xC2DD;&#xC5D0; &#xB9DE;&#xCD94;&#xC5B4; &#xD45C;&#xD604; &#xB2E8;&#xC21C;&#xD654; : &#xC57D;&#xC18D;&#xB41C; &#xADDC;&#xC57D;&#xC5D0; &#xC758;&#xD574; &#xC81C;&#xD55C; &#xBA85;&#xD655;&#xD654; : &#xC560;&#xB9E4;&#xBAA8;&#xD638;&#xD568;&#xC744; &#xC81C;&#xAC70; &#xC815;&#xD655;&#xD558;&#xAC8C; &#xAE30;&#xC220; &#xBAA8;&#xB378;&#xB9C1;&#xC758; 3&#xAC00;&#xC9C0; &#xAD00;&#xC810; &#xB370;&#xC774;&#xD130; &#xAD00;&#xC810; (what) : &#xC5C5;&#xBB34;&#xAC00; &#xC5B4;&#xB5A4; &#xB370;&#xC774;&#xD130;&#xC640; &#xAD00;&#xB824;&#xC774; &#xC788;&#xB294;&#xC9C0;, &#xB370;&#xC774;&#xD130;&#xAC04;&#xC758; &#xAD00;&#xACC4;&#xAC00; &#xBB34;&#xC5C7;&#xC778;&#xC9C0; &#xD504;&#xB85C;&#xC138;&#xC2A4; &#xAD00;&#xC810; (how) : &#xC5C5;&#xBB34;&#xAC00; &#xC2E4;&#xC81C;&#xD558;&#xACE0; &#xC788;&#xB294; &#xC77C;&#xC774; &#xBB34;&#xC5C7;&#xC778;&#xC9C0;, &#xBB34;&#xC5C7;&#xC744; &#xD574;&#xC57C; &#xD558;&#xB294;&#xC9C0; &#xB370;&#xC774;&#xD130;&#xC640; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xC758; &#xC0C1;&#xAD00;&#xAD00;&#xC810; (interaction) : &#xC5C5;&#xBB34;&#xAC00; &#xCC98;&#xB9AC;&#xB428;&#xC5D0; &#xB530;&#xB77C; &#xB370;&#xC774;&#xD130;&#xB294; &#xC5B4;&#xB5BB;&#xAC8C; &#xC601;&#xD5A5;&#xC744; &#xBC1B;&#xACE0; &#xC788;&#xB294;&#xC9C0; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xB9C1;&#xC774;&#xB780;&#x2026; &#xC815;&#xBCF4;&#xC2DC;&#xC2A4;&#xD15C;&#xC744; &#xAD6C;&#xCD95;&#xD558;&#xAE30; &#xC704;&#xD55C; &#xB370;&#xC774;&#xD130;&#xAD00;&#xC810;&#xC758; &#xC5C5;&#xBB34; &#xBD84;&#xC11D; &#xAE30;&#xBC95; &#xD604;&#xC2E4;&#xC138;&#xACC4;&#xC758; &#xB370;&#xC774;&#xD130;(what)&#xC5D0; &#xB300;&#xD574; &#xC57D;&#xC18D;&#xB41C; &#xD45C;&#xAE30;&#xBC95;&#xC5D0; &#xC758;&#xD574; &#xD45C;&#xD604;&#xD558;&#xB294; &#xACFC;&#xC815; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4;&#xB97C; &#xAD6C;&#xCD95;&#xD558;&#xAE30; &#xC704;&#xD55C; &#xBD84;&#xC11D;/&#xC124;&#xACC4;&#xC758; &#xACFC;&#xC815; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xC758; &#xC911;&#xC694;&#xC131; &#xD30C;&#xAE09;&#xD6A8;&#xACFC;(leverage) : &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xC774; &#xC798;&#xBABB;&#xB418;&#xC5B4;&#xC11C; &#xB098;&#xC911;&#xC5D0; &#xBCC0;&#xACBD;&#xB420;&#xB54C;&#xC5D0;&#xB294; &#xC804;&#xCCB4; &#xC2DC;&#xC2A4;&#xD15C;&#xC5D0; &#xD070; &#xBCC0;&#xACBD; &#xC0AC;&#xD56D;&#xC774; &#xBC1C;&#xC0DD;&#xD568; &#xBCF5;&#xC7A1;&#xD55C; &#xC815;&#xBCF4; &#xC694;&#xAD6C;&#xC0AC;&#xD56D;&#xC758; &#xAC04;&#xACB0;&#xD55C; &#xD45C;&#xD604;(conciseness) : &#xC694;&#xAD6C;&#xC0AC;&#xD56D;&#xC744; &#xC815;&#xD655;&#xD558;&#xACE0; &#xAC04;&#xACB0;&#xD558;&#xAC8C; &#xD45C;&#xD604;. &#xC694;&#xAD6C;&#xC0AC;&#xD56D; &#xD30C;&#xC545;&#xC2DC; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xC744; &#xB9AC;&#xBDF0;&#xD558;&#xB294; &#xAC83;&#xC774; &#xB354; &#xBE60;&#xB984;. &#xB370;&#xC774;&#xD130; &#xD488;&#xC9C8;(data quality) : &#xAE30;&#xAC04;&#xC774; &#xC624;&#xB798;&#xB418;&#xACE0; &#xC313;&#xC778; &#xB370;&#xC774;&#xD130;&#xB97C; &#xD65C;&#xC6A9;&#xD558;&#xB824;&#xBA74; &#xD488;&#xC9C8;&#xC774; &#xC911;&#xC694;. (&#xC815;&#xD655;&#xC131;, &#xC911;&#xBCF5;&#xB370;&#xC774;&#xD130; &#xB4F1;&#x2026;). &#xD488;&#xC9C8;&#xC774; &#xC548;&#xC88B;&#xC73C;&#xBA74; &#xD65C;&#xC6A9;&#xD558;&#xC9C0; &#xBABB;&#xD55C; &#xC4F0;&#xB808;&#xAE30;&#xAC00; &#xB420;&#xC218; &#xC788;&#xC74C; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xB9C1;&#xC758; &#xC720;&#xC758;&#xC810; &#xC911;&#xBCF5;(duplication) : &#xC5EC;&#xB7EC; &#xACF3;&#xC5D0; &#xAC19;&#xC740; &#xC815;&#xBCF4; &#xC800;&#xC7A5;&#xD558;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; &#xBE44;&#xC720;&#xC5F0;&#xC131;(inflexibility) : &#xB370;&#xC774;&#xD130; &#xC815;&#xC758;&#xC640; &#xC0AC;&#xC6A9; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xB97C; &#xBD84;&#xB9AC;. &#xAC01;&#xAC01;&#xC758; &#xC791;&#xC740; &#xBCC0;&#xD654;&#xAC00; &#xC11C;&#xB85C;&#xC5D0;&#xAC8C; &#xC601;&#xD5A5;&#xC744; &#xBBF8;&#xCE58;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; &#xBE44;&#xC77C;&#xAD00;&#xC131;(inconsistency) : &#xC11C;&#xB85C; &#xC601;&#xD5A5;&#xC744; &#xBBF8;&#xCE58;&#xB294; &#xB370;&#xC774;&#xD130;&#xAC04; &#xC0C1;&#xD638; &#xC5F0;&#xAD00; &#xAD00;&#xACC4;&#xC5D0; &#xB300;&#xD55C; &#xBA85;&#xD655;&#xD55C; &#xC815;&#xC758;&#xAC00; &#xD544;&#xC694; (ex. &#xB0A9;&#xBD80;&#xC774;&#xB825;&#xACFC; &#xC2E0;&#xC6A9;&#xC0C1;&#xD0DC;) &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xB9C1;&#xC758; 3&#xB2E8;&#xACC4; &#xC9C4;&#xD589; (&#xCD94;&#xC0C1;&#xD654; &#xC218;&#xC900;&#xC5D0; &#xB530;&#xB77C;) &#xAC1C;&#xB150;&#xC801; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;(conceptual) &#xCD94;&#xC0C1;&#xD654; &#xC218;&#xC900;&#xC774; &#xB192;&#xACE0; &#xC5C5;&#xBB34;&#xC911;&#xC2E0;&#xC801;&#xC774;&#xACE0; &#xD3EC;&#xAD04;&#xC801;&#xC778; &#xC218;&#xC900;&#xC758; &#xBAA8;&#xB378;&#xB9C1; &#xC9C4;&#xD589;. &#xC804;&#xC0AC;&#xC801; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xB9C1;, EA&#xC218;&#xB9BD;&#xC2DC; &#xB9CE;&#xC774; &#xC774;&#xC6A9; &#xC5D4;&#xD2F0;&#xD2F0; - &#xAD00;&#xACC4; &#xB2E4;&#xC774;&#xC5B4;&#xADF8;&#xB7A8; &#xC0DD;&#xC131; &#xC804;&#xC0AC;&#xC801; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xB9C1; (enterprise) &#xC911;&#xC694;&#xD55C; 2&#xAC00;&#xC9C0; &#xAE30;&#xB2A5; &#xC0AC;&#xC6A9;&#xC790;&#xC640; &#xC2DC;&#xC2A4;&#xD15C; &#xAC1C;&#xBC1C;&#xC790;&#xAC00; &#xB370;&#xC774;&#xD130; &#xC694;&#xAD6C; &#xC0AC;&#xD56D;&#xC744; &#xBC1C;&#xACAC;&#xD558;&#xB294; &#xAC83;&#xC744; &#xC9C0;&#xC6D0; &#xD604; &#xC2DC;&#xC2A4;&#xD15C;&#xC774; &#xC5B4;&#xB5BB;&#xAC8C; &#xBCC0;&#xD615;&#xB418;&#xC5B4;&#xC57C; &#xD558;&#xB294;&#xC9C0;&#xB97C; &#xC774;&#xD574;&#xD558;&#xB294;&#xB370; &#xC720;&#xC6A9; &#xB17C;&#xB9AC;&#xC801; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378; (logical) &#xC2DC;&#xC2A4;&#xD15C;&#xC73C;&#xB85C; &#xAD6C;&#xCD95;&#xD558;&#xACE0;&#xC790; &#xD558;&#xB294; &#xC5C5;&#xBB34;&#xC5D0; &#xB300;&#xD55C; Key, &#xC18D;&#xC131;, &#xAD00;&#xACC4; &#xB4F1;&#xC744; &#xC815;&#xD655;&#xD558;&#xAC8C; &#xD45C;&#xD604;, &#xC7AC;&#xC0AC;&#xC6A9;&#xC131;&#xC774; &#xB192;&#xC74C; &#xC2DD;&#xBCC4;&#xC790; &#xD655;&#xC815;, &#xC815;&#xADDC;&#xD654;, M:M &#xAD00;&#xACC4; &#xD574;&#xC18C;, &#xCC38;&#xC870; &#xBB34;&#xACB0;&#xC131; &#xADDC;&#xCE59; &#xC815;&#xC758; &#xB4F1; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4; &#xC124;&#xACC4; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xC758; input&#xC73C;&#xB85C; &#xBE44;&#xC988;&#xB2C8;&#xC2A4; &#xC815;&#xBCF4;&#xC758; &#xB17C;&#xB9AC;&#xC801;&#xC778; &#xAD6C;&#xC870;&#xC640; &#xADDC;&#xCE59;&#xC744; &#xBA85;&#xD655;&#xD558;&#xAC8C; &#xD45C;&#xD604;&#xD558;&#xB294; &#xAE30;&#xBC95; &#xB610;&#xB294; &#xACFC;&#xC815; &#xBB3C;&#xB9AC;&#xC801; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378; (physical) &#xC2E4;&#xC81C;&#xB85C; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4;&#xC5D0; &#xC774;&#xC2DD;&#xD560; &#xC218; &#xC788;&#xB3C4;&#xB85D; &#xC131;&#xB2A5;, &#xC800;&#xC7A5; &#xB4F1; &#xBB34;&#xB9AC;&#xC801;&#xC778; &#xC131;&#xACA9;&#xC744; &#xACE0;&#xB824;&#xD558;&#xC5EC; &#xC124;&#xACC4; &#xBB3C;&#xB9AC;&#xC801; &#xC2A4;&#xD0A4;&#xB9C8; : &#xB370;&#xC774;&#xD130;&#xAC00; &#xBB3C;&#xB9AC;&#xC801;&#xC73C;&#xB85C; &#xCEF4;&#xD4E8;&#xD130;&#xC5D0; &#xC5B4;&#xB5BB;&#xAC8C; &#xC800;&#xC7A5;&#xB420; &#xAC83;&#xC778;&#xAC00;&#xC5D0; &#xB300;&#xD55C; &#xC815;&#xC758; &#xD14C;&#xC774;&#xBE14;, &#xCE7C;&#xB7FC; &#xB4F1;&#xC758; &#xC800;&#xC7A5;&#xAD6C;&#xC870;&#xC640; &#xC800;&#xC7A5; &#xC7A5;&#xCE58;, &#xC811;&#xADFC; &#xBC29;&#xBC95; &#xB4F1; &#xB370;&#xC774;&#xD130; &#xB3C5;&#xB9BD;&#xC131;&#xC758; &#xD544;&#xC694;&#xC131; &lt;-&gt; &#xB370;&#xC774;&#xD130; &#xC885;&#xC18D;&#xC131; &#xC720;&#xC9C0;&#xBCF4;&#xC218; &#xBE44;&#xC6A9;&#xC99D;&#xAC00; &#xB370;&#xC774;&#xD130; &#xC911;&#xBCF5;&#xC131; &#xC99D;&#xAC00; &#xB370;&#xC774;&#xD130;&#xBCF5;&#xC7A1;&#xB3C4; &#xC99D;&#xAC00; &#xC694;&#xAD6C;&#xC0AC;&#xD56D; &#xB300;&#xC751; &#xC800;&#xD558; &#xB370;&#xC774;&#xD130; &#xB3C5;&#xB9BD;&#xC131; &#xD655;&#xBCF4;&#xC2DC; &#xD6A8;&#xACFC; &#xAC01; View&#xC758; &#xB3C5;&#xB9BD;&#xC131;&#xC744; &#xC720;&#xC9C0;&#xD558;&#xACE0; &#xACC4;&#xCE35;&#xBCC4; View&#xC5D0; &#xC601;&#xD5A5;&#xC744; &#xC8FC;&#xC9C0; &#xC54A;&#xACE0; &#xBCC0;&#xACBD; &#xAC00;&#xB2A5; &#xB2E8;&#xACC4;&#xBCC4; Schema&#xC5D0; &#xB530;&#xB77C; DDL&#xACFC; DML&#xAC00; &#xB2E4;&#xB984;&#xC744; &#xC81C;&#xACF5; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4; 3&#xB2E8;&#xACC4; &#xAD6C;&#xC870; &#xC678;&#xBD80;&#xB2E8;&#xACC4; (External Schema) : &#xC0AC;&#xC6A9;&#xC790; &#xAD00;&#xC810; DB&#xC758; &#xAC1C;&#xAC1C; user&#xB098; application&#xC774; &#xC811;&#xADFC;&#xD558;&#xB294; DB &#xC815;&#xC758; &#xAC1C;&#xB150;&#xC801;&#xB2E8;&#xACC4; (Conceptual Schema) : &#xD1B5;&#xD569; &#xAD00;&#xC810; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xCC98;&#xB9AC;&#xD558;&#xB294; &#xB370;&#xC774;&#xD130; &#xC720;&#xD615;&#xC758; &#xACF5;&#xD1B5;&#xC801;&#xC778; &#xC0AC;&#xD56D;&#xC744; &#xCC98;&#xB9AC;&#xD558;&#xB294; &#xD1B5;&#xD569;&#xB41C; &#xBDF0;&#xB97C; &#xC2A4;&#xD0A4;&#xB9C8; &#xAD6C;&#xC870;&#xB85C; &#xB514;&#xC790;&#xC778;&#xD55C; &#xD615;&#xD0DC; &#xBAA8;&#xB4E0; &#xC0AC;&#xC6A9;&#xC790; &#xAD00;&#xC810;&#xC744; &#xD1B5;&#xD569;&#xD55C; &#xC870;&#xC9C1; &#xC804;&#xCCB4;&#xC758; DB &#xBAA8;&#xB4E0; user&#xC640; application&#xC774; &#xD544;&#xC694;&#xB85C;&#xD558;&#xB294; &#xB370;&#xC774;&#xD130;&#xB97C; &#xD1B5;&#xD569;&#xD55C; &#xC870;&#xC9C1; &#xC804;&#xCCB4;&#xC758; DB&#xB97C; &#xAE30;&#xC220; DB&#xC5D0; &#xC800;&#xC7A5;&#xB418;&#xB294; &#xB370;&#xC774;&#xD130;&#xC640; &#xADF8;&#xB4E4;&#xAC04;&#xC758; &#xAD00;&#xACC4;&#xB97C; &#xD45C;&#xD604;&#xD558;&#xB294; &#xC2A4;&#xD0A4;&#xB9C8; &#xB0B4;&#xBD80;&#xC801;&#xB2E8;&#xACC4; (Internal Schema) : &#xBB3C;&#xB9AC;&#xC801; &#xC800;&#xC7A5;&#xAD6C;&#xC870; &#xB17C;&#xB9AC;&#xC801;, &#xBB3C;&#xB9AC;&#xC9C1; &#xB3C5;&#xB9BD;&#xC131; &#xB3C5;&#xB9BD;&#xC131; &#xB0B4;&#xC6A9; &#xD2B9;&#xC9D5; &#xB17C;&#xB9AC;&#xC801; &#xB3C5;&#xB9BD;&#xC131; - &#xAC1C;&#xB150; &#xC2A4;&#xD0A4;&#xB9C8;&#xAC00; &#xBCC0;&#xACBD;&#xB418;&#xC5B4;&#xB3C4; &#xC678;&#xBD80; &#xC2A4;&#xD0A4;&#xB9C8;&#xC5D0;&#xB294; &#xC601;&#xD5A5; &#xC5C6;&#xC74C; - &#xB17C;&#xB9AC;&#xC801; &#xAD6C;&#xC870;&#xAC00; &#xBCC0;&#xACBD;&#xB418;&#xC5B4;&#xB3C4; Application&#xC5D0;&#xB294; &#xC601;&#xD5A5; &#xC5C6;&#xC74C; - &#xC0AC;&#xC6A9;&#xC790; &#xD2B9;&#xC131;&#xC5D0; &#xB9DE;&#xB294; &#xBCC0;&#xACBD;&#xAC00;&#xB2A5; - &#xD1B5;&#xD569; &#xAD6C;&#xC870; &#xBCC0;&#xACBD;&#xAC00;&#xB2A5; &#xBB3C;&#xB9AC;&#xC801; &#xB3C5;&#xB9BD;&#xC131; - &#xB0B4;&#xBD80;&#xC2A4;&#xD0A4;&#xB9C8;&#xAC00; &#xBCC0;&#xACBD;&#xB418;&#xC5B4;&#xB3C4; &#xC678;&#xBD80;/&#xAC1C;&#xB150; &#xC2A4;&#xD0A4;&#xB9C8;&#xC5D0; &#xC601;&#xD5A5; &#xC5C6;&#xC74C; - &#xC800;&#xC7A5;&#xC7A5;&#xCE58;&#xC758; &#xAD6C;&#xC870;&#xBCC0;&#xACBD;&#xC740; Application&#xACFC; &#xAC1C;&#xB150;&#xC2A4;&#xD0A4;&#xB9C8;&#xC5D0; &#xC601;&#xD5A5; &#xC5C6;&#xC74C; - &#xBB3C;&#xB9AC;&#xAD6C;&#xC870;, &#xAC1C;&#xB150;&#xAD6C;&#xC870;&#xB97C; &#xC11C;&#xB85C; &#xC601;&#xD5A5;&#xC5C6;&#xC774; &#xBCC0;&#xACBD;&#xAC00;&#xB2A5; &#xC0AC;&#xC0C1; (Mapping) &#xB17C;&#xB9AC;&#xC801; mapping (&#xC678;&#xBD80;&#xC801; &lt;-&gt; &#xAC1C;&#xB150;&#xC801;) : &#xC678;&#xBD80;&#xC801; &#xBDF0;&#xC640; &#xAC1C;&#xB150;&#xC801; &#xBDF0;&#xC758; &#xC0C1;&#xD638; &#xAD00;&#xB828;&#xC131; &#xC815;&#xC758; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xC811;&#xADFC;&#xD558;&#xB294; &#xBDF0;&#xC758; &#xD544;&#xB4DC;&#xB294; &#xB2E4;&#xB978; &#xD0C0;&#xC785;&#xC744; &#xAC00;&#xC9C8; &#xC218; &#xC788;&#xC73C;&#xB098;, &#xAC1C;&#xB150;&#xC801; &#xBDF0;&#xC758; &#xD544;&#xB4DC; &#xD0C0;&#xC785;&#xC740; &#xBCC0;&#xD654;&#xAC00; &#xC5C6;&#xC74C; &#xBB3C;&#xB9AC;&#xC801; mapping (&#xAC1C;&#xB150;&#xC801; &lt;-&gt; &#xB0B4;&#xBD80;&#xC801;) : &#xAC1C;&#xB150;&#xC801; &#xBDF0;&#xC640; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4;&#xC758; &#xC0C1;&#xD638; &#xAD00;&#xB828;&#xC131; &#xC815;&#xC758; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4; &#xAD6C;&#xC870;&#xAC00; &#xBC14;&#xB014; &#xACBD;&#xC6B0; &#xBB3C;&#xB9AC;&#xC801; mapping&#xC774; &#xBC14;&#xB00C;&#xC5B4;&#xC57C; &#xD568;. &#xAC1C;&#xB150;&#xC801; &#xC2A4;&#xD0A4;&#xB9C8;&#xB294; &#xC548;&#xBC14;&#xB00C;&#xB3C4;&#xB85D; &#xD574;&#xC57C; &#xD568; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xB9C1;&#xC758; 3&#xAC00;&#xC9C0; &#xAC1C;&#xB150; &#xC5C5;&#xBB34;&#xAC00; &#xAD00;&#xC5EC;&#xD558;&#xB294; &#xC5B4;&#xB5A4; &#xAC83; : things (table) &#xC5B4;&#xB5A4; &#xAC83;&#xC774; &#xAC00;&#xC9C0;&#xB294; &#xC131;&#xACA9; : attributes (column) &#xC5C5;&#xBB34;&#xAC00; &#xAD00;&#xC5EC;&#xD558;&#xB294; &#xC5B4;&#xB5A4; &#xAC83; &#xAC04;&#xC758; &#xAD00;&#xACC4; : relationships &#xC88B;&#xC740; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xC758; &#xC694;&#xC18C; &#xC644;&#xC804;&#xC131; (completeness) : &#xC5C5;&#xBB34;&#xC5D0; &#xD544;&#xC694;&#xD55C; &#xBAA8;&#xB4E0; &#xB370;&#xC774;&#xD130;&#xAC00; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xC5D0; &#xC815;&#xC758;&#xB418;&#xC5B4; &#xC788;&#xC5B4;&#xC57C; &#xD568; &#xC911;&#xBCF5;&#xBC30;&#xC81C; (non-redundancy) : &#xB3D9;&#xC77C;&#xD55C; &#xC0AC;&#xC2E4;&#xC740; &#xBC18;&#xB4DC;&#xC2DC; &#xD55C; &#xBC88;&#xB9CC; &#xAE30;&#xB85D; (ex. &#xB098;&#xC774;, &#xC0DD;&#xB144;&#xC6D4;&#xC77C; &#xC740; &#xC911;&#xBCF5;) &#xC5C5;&#xBB34;&#xADDC;&#xCE59; (business rules) : &#xC218;&#xB9CE;&#xC740; &#xC5C5;&#xBB34;&#xADDC;&#xCE59;&#xC744; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xC5D0; &#xD45C;&#xD604; &#xB370;&#xC774;&#xD130; &#xC7AC;&#xC0AC;&#xC6A9; (data reusability) : &#xB370;&#xC774;&#xD130; &#xD1B5;&#xD569;&#xC131;, &#xB3C5;&#xB9BD;&#xC131;&#xC744; &#xCDA9;&#xBD84;&#xD788; &#xACE0;&#xB824; &#xC758;&#xC0AC;&#xC18C;&#xD1B5; (communication) : &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378;&#xC740; &#xC5C5;&#xBB34;&#xB97C; &#xB370;&#xC774;&#xD130; &#xAD00;&#xC810;&#xC5D0;&#xC11C; &#xBD84;&#xC11D;&#xD558;&#xACE0; &#xC124;&#xACC4;&#xD558;&#xC5EC; &#xB098;&#xC624;&#xB294; &#xCD5C;&#xC885; &#xC0B0;&#xCD9C;&#xBB3C;. &#xBAA8;&#xB4E0; &#xC5C5;&#xBB34; &#xADDC;&#xCE59;&#xC744; &#xC5D4;&#xD2F0;&#xD2F0;, &#xC11C;&#xBE0C;&#xD0C0;&#xC785;, &#xC18D;&#xC131;, &#xAD00;&#xACC4; &#xB4F1;&#xC758; &#xD615;&#xD0DC;&#xB85C; &#xCD5C;&#xB300;&#xD55C; &#xC790;&#xC138;&#xD558;&#xAC8C; &#xD45C;&#xD604;. &#xC5C5;&#xBB34;&#xAD00;&#xB828;&#xC790;&#xB4E4;&#xC740; &#xC774;&#xB97C; &#xC5C5;&#xBB34; &#xADDC;&#xCE59;&#xACFC; &#xB3D9;&#xC77C;&#xD558;&#xAC8C; &#xBC1B;&#xC544;&#xB4E4;&#xC774;&#xACE0; &#xC815;&#xBCF4;&#xC2DC;&#xC2A4;&#xD15C; &#xD65C;&#xC6A9; &#xD1B5;&#xD569;&#xC131; (integration) : &#xAC01; &#xBD80;&#xC11C;&#xBCC4; &#xB530;&#xB85C; &#xC874;&#xC7AC;&#xD588;&#xB358; &#xB370;&#xC774;&#xD130; &#xC911; &#xC911;&#xBCF5;&#xC801;&#xC778; &#xC131;&#xACA9;&#xB4E4;(&#xB9C8;&#xC2A4;&#xD130; &#xD14C;&#xC774;&#xBE14;)&#xC744; &#xD1B5;&#xD569; &#xAD00;&#xB9AC; 2&#xC808; &#xC5D4;&#xD130;&#xD2F0; (entity) 2.1 &#xC5D4;&#xD130;&#xD2F0;&#xC758; &#xD2B9;&#xC131; &#xC5C5;&#xBB34;&#xC5D0; &#xD544;&#xC694;&#xD558;&#xACE0; &#xC720;&#xC6A9;&#xD55C; &#xC815;&#xBCF4;&#xB97C; &#xC800;&#xC7A5;&#xD558;&#xACE0; &#xAD00;&#xB9AC;&#xD558;&#xAE30; &#xC704;&#xD55C; &#xC9D1;&#xD569;&#xC801;&#xC778; &#xAC83;(thing) &#xBC18;&#xB4DC;&#xC2DC; &#xD544;&#xC694;&#xD55C; &#xC815;&#xBCF4; unique&#xD558;&#xAC8C; &#xC2DD;&#xBCC4;&#xC774; &#xAC00;&#xB2A5; &#xBC18;&#xB4DC;&#xC2DC; &#xC18D;&#xC131;(attribute)&#xB97C; &#xAC00;&#xC838;&#xC57C; &#xD568; &#xC5C5;&#xBB34; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB418;&#xC5B4;&#xC57C; &#xD568; &#xCD5C;&#xC18C; &#xD55C; &#xAC1C; &#xC774;&#xC0C1;&#xC758; &#xB2E4;&#xB978; &#xC5D4;&#xD130;&#xD2F0;&#xC640;&#xC758; &#xAD00;&#xACC4; &#xD544;&#xC218; &#xC601;&#xC18D;&#xC801;&#xC73C;&#xB85C; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xC778;&#xC2A4;&#xD134;&#xC2A4;(instance)&#xC758; &#xC9D1;&#xD569; 2.2 &#xC5D4;&#xD130;&#xD2F0;&#xC758; &#xBD84;&#xB958; &#xC720;&#xBB34;&#xD615;&#xC5D0; &#xB530;&#xB978; &#xBD84;&#xB958; &#xC720;&#xD615;&#xC5D4;&#xD130;&#xD2F0; : &#xC0AC;&#xC6D0;, &#xBB3C;&#xD488; &#xAC1C;&#xB150;&#xC5D4;&#xD130;&#xD2F0; : &#xBD80;&#xC11C;, &#xBCF4;&#xD5D8;&#xC0C1;&#xD488; &#xC0AC;&#xAC74;&#xC5D4;&#xD130;&#xD2F0; : &#xC8FC;&#xBB38;, &#xCCAD;&#xAD6C; &#xBC1C;&#xC0DD;&#xC2DC;&#xC810;&#xC5D0; &#xB530;&#xB978; &#xBD84;&#xB958; &#xAE30;&#xBCF8; &#xC5D4;&#xD130;&#xD2F0; (fundamental entity, key entity) : &#xB3C5;&#xB9BD;&#xC801; &#xC0DD;&#xC131; &#xAC00;&#xB2A5;, &#xB2E4;&#xB978; &#xC5D4;&#xD130;&#xD2F0;&#xC758; &#xC8FC;&#xC5B4; &#xC5ED;&#xD560; (ex. &#xC0AC;&#xC6D0; &#xBD80;&#xC11C;, &#xACE0;&#xAC1D;, &#xC0C1;&#xD488;) &#xC911;&#xC2EC; &#xC5D4;&#xD130;&#xD2F0; (main entity) : &#xAE30;&#xBCF8; &#xC5D4;&#xD130;&#xD2F0;&#xB85C; &#xBD80;&#xD130; &#xBC1C;&#xC0DD;&#xD558;&#xACE0;, &#xC5C5;&#xBB34;&#xC758; &#xC911;&#xC2EC; &#xC5ED;&#xD560; (ex. &#xACC4;&#xC57D;, &#xC8FC;&#xBB38;, &#xB9E4;&#xCD9C;) &#xD589;&#xC704; &#xC5D4;&#xD130;&#xD2F0; (active entity) : 2&#xAC1C; &#xC774;&#xC0C1;&#xC758; &#xBD80;&#xBAA8;&#xB85C; &#xBD80;&#xD130; &#xBC1C;&#xC0DD;&#xD558;&#xACE0; &#xC790;&#xC8FC; &#xBC14;&#xB00C;&#xAC70;&#xB098; &#xB370;&#xC774;&#xD130;&#xB7C9;&#xC774; &#xC99D;&#xAC00;&#xB418;&#xB294; &#xC131;&#xACA9;&#xC744; &#xAC00;&#xC9D0; (ex. &#xC8FC;&#xBB38;&#xBAA9;&#xB85D;, &#xC0AC;&#xC6D0;&#xBCC0;&#xACBD;&#xC774;&#xB825;) 2.3 &#xC778;&#xC2A4;&#xD134;&#xC2A4; (instance) &#xC5D4;&#xD130;&#xD2F0;&#xB85C;&#xBD80;&#xD130; &#xC0DD;&#xC131;&#xB41C; &#xD558;&#xB098;&#xC758; &#xAC1C;&#xCCB4; entity&#xAC00; class&#xD558;&#xBA74; instance &#xB294; object 3&#xC808; &#xC18D;&#xC131; (attribute) 3.1 &#xC18D;&#xC131;&#xC758; &#xD2B9;&#xC9D5; &#xC758;&#xBBF8;&#xC0C1; &#xB354; &#xC774;&#xC0C1; &#xBD84;&#xB9AC;&#xB418;&#xC9C0; &#xC54A;&#xC74C; : 2&#xAC1C; &#xC774;&#xC0C1;&#xC758; &#xAC12;&#xC744; &#xAC00;&#xC9C8; &#xACBD;&#xC6B0; &#xBD84;&#xB9AC;&#xD574;&#xC57C; &#xD568; &#xC5D4;&#xD130;&#xD2F0;&#xB97C; &#xC124;&#xBA85;&#xD558;&#xACE0; &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xC758; &#xAD6C;&#xC131;&#xC694;&#xC18C; &#xC815;&#xADDC;&#xD654; &#xADDC;&#xCE59;&#xC5D0; &#xC758;&#xAC70;&#xD574; &#xC8FC;&#xC2DD;&#xBCC4;&#xC790;&#xC5D0; &#xD568;&#xC218;&#xC801; &#xC885;&#xC18D;&#xC131;&#xC744; &#xAC00;&#xC838;&#xC57C; &#xD568; &#xC5C5;&#xBB34;&#xC0C1; &#xD544;&#xC694;&#xB85C; &#xD574;&#xC57C;&#xD55C;&#xB2E4;. 3.2 &#xC18D;&#xC131;&#xC758; &#xBD84;&#xB958; &#xD2B9;&#xC131;&#xC5D0; &#xC758;&#xD55C; &#xBD84;&#xB958; &#xAE30;&#xBCF8;&#xC18D;&#xC131; (basic attribute) : &#xC5C5;&#xBB34;&#xB85C;&#xBD80;&#xD130; &#xCD94;&#xCD9C;&#xD55C; &#xBAA8;&#xB4E0; &#xC18D;&#xC131; &#xC124;&#xACC4;&#xC18D;&#xC131; (designed attribute) : &#xC5C5;&#xBB34;&#xB97C; &#xADDC;&#xCE59;&#xD654;&#xD558;&#xAE30; &#xC704;&#xD574; &#xC0C8;&#xB85C; &#xB9CC;&#xB4E4;&#xAC70;&#xB098; &#xBCC0;&#xD615;&#xD55C; &#xC18D;&#xC131; (ex. &#xC77C;&#xB828;&#xBC88;&#xD638;) &#xD30C;&#xC0DD;&#xC18D;&#xC131; (derived attribute) : &#xB2E4;&#xB978; &#xC18D;&#xC131;&#xC5D0; &#xC601;&#xD5A5;&#xC744; &#xBC1B;&#xB294; &#xC18D;&#xC131;. &#xC8FC;&#xB85C; &#xACC4;&#xC0B0; &#xAC12;&#xB4E4;. &#xB418;&#xB3C4;&#xB85D;&#xC774;&#xBA74; &#xC801;&#xAC8C; &#xC815;&#xC758;&#xD558;&#xB294;&#xAC8C; &#xC88B;&#xC74C; &#xAD6C;&#xC131;&#xBC29;&#xC2DD;&#xC5D0; &#xB530;&#xB978; &#xBD84;&#xB958; PK (primary key), FK (foreign key), &#xC77C;&#xBC18;&#xC18D;&#xC131; &#xB4F1;&#x2026; 3.3 &#xB3C4;&#xBA54;&#xC778; (domain) &#xC18D;&#xC131;&#xC774; &#xAC00;&#xC9C8; &#xC218; &#xC788;&#xB294; &#xAC12;&#xC758; &#xBC94;&#xC704; 4&#xC808; &#xAD00;&#xACC4; (relationship) &#xC778;&#xC2A4;&#xD134;&#xC2A4; &#xC0AC;&#xC774;&#xC758; &#xC5F0;&#xAD00;&#xC131; 4.1 &#xAD00;&#xACC4;&#xC758; &#xBD84;&#xB958; &#xC874;&#xC7AC;&#xC5D0; &#xC758;&#xD55C; &#xAD00;&#xACC4; : &#xBD80;&#xC11C; (1) : &#xC0AC;&#xC6D0; (M) &#xD589;&#xC704;&#xC5D0; &#xC758;&#xD55C; &#xAD00;&#xACC4; : &#xACE0;&#xAC1D; (1) : &#xC8FC;&#xBB38; (M) 4.2 &#xAD00;&#xACC4; &#xCC28;&#xC218;(degree, cardinality) 1 : 1 &#xAD00;&#xACC4; : &#xC0AC;&#xC6D0; - &#xBCD1;&#xC5ED;&#xC0AC;&#xD56D; 1 : M &#xAD00;&#xACC4; : &#xBD80;&#xC11C; (1) : &#xC0AC;&#xC6D0; (M) M : M &#xAD00;&#xACC4; : &#xC8FC;&#xBB38; (M) : &#xC81C;&#xD488; (M) 5&#xC808; &#xC2DD;&#xBCC4;&#xC790; (identifiers) entity &#xB0B4;&#xC5D0;&#xC11C; instance&#xC758; &#xAD6C;&#xBD84;&#xC790; 5.1 &#xC2DD;&#xBCC4;&#xC790;&#xC758; &#xD2B9;&#xC9D5; &#xC720;&#xC77C;&#xC131; : &#xC8FC;&#xC2DD;&#xBCC4;&#xC790;&#xC5D0; &#xC758;&#xD574; &#xC5D4;&#xD130;&#xD2F0; &#xB0B4;&#xC758; &#xBAA8;&#xB4E0; &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xAC00; &#xC720;&#xC77C;&#xD558;&#xAC8C; &#xBD80;&#xBD84; &#xCD5C;&#xC18C;&#xC131; : &#xC8FC;&#xC2DD;&#xBCC4;&#xC790;&#xB97C; &#xAD6C;&#xC131;&#xD558;&#xB294; &#xC18D;&#xC131;&#xC758; &#xC218;&#xB294; &#xC720;&#xC77C;&#xC131;&#xC744; &#xB9CC;&#xC871;&#xD558;&#xB294; &#xCD5C;&#xC18C;&#xC758; &#xC218; &#xBD88;&#xBCC0;&#xC131; : &#xC790;&#xC8FC; &#xBCC0;&#xD558;&#xC9C0; &#xC54A;&#xB294; &#xAC12;&#xC774;&#xC5B4;&#xC57C; &#xD568; &#xC874;&#xC7AC;&#xC131; : &#xBC18;&#xB4DC;&#xC2DC; &#xAC12;&#xC774; &#xC788;&#xC5B4;&#xC57C;&#xD568; (NOT NULL) 5.2 &#xC8FC;&#xC2DD;&#xBCC4;&#xC790; &#xB3C4;&#xCD9C;&#xAE30;&#xC900; &#xC5C5;&#xBB34;&#xC5D0;&#xC11C; &#xC790;&#xC8FC; &#xC774;&#xC6A9;&#xB418;&#xB294; &#xC18D;&#xC131; : PK&#xB85C; &#xB4F1;&#xB85D; = index &#xC0DD;&#xC131; &#xBA85;&#xCE6D;, &#xB0B4;&#xC5ED;&#xB4F1;&#xACFC; &#xAC19;&#xC740; &#xC774;&#xB984;&#xC740; &#xD53C;&#xD574;&#xC57C; &#xD568; : &#xB2E4;&#xB978; &#xC801;&#xB2F9;&#xD55C; &#xAD6C;&#xBD84;&#xC790;&#xAC00; &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xC73C;&#xBA74; &#xC77C;&#xBCC0;&#xBC88;&#xD638; &#xAC19;&#xC740; &#xAC83;&#xC744; &#xC0C8;&#xB85C; &#xC0DD;&#xC131; &#xC18D;&#xC131;&#xC218;&#xAC00; &#xB9CE;&#xC544;&#xC9C0;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; &#xD568; : WHERE &#xC870;&#xAC74;&#xC774; &#xBCF5;&#xC7A1;&#xD574;&#xC9D0;. &#xC0C8;&#xB85C;&#xC6B4; &#xC778;&#xC870;&#xC2DD;&#xBCC4;&#xC790;&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xB294;&#xAC8C; &#xD3B8;&#xD568; 5.3 &#xC678;&#xBD80;&#xC2DD;&#xBCC4;&#xC790; (foreign identifier)&#xC640;&#xC758; &#xAD00;&#xACC4; 5.3.1 &#xC2DD;&#xBCC4;&#xAD00;&#xACC4;, &#xBE44;&#xC2DD;&#xBCC4;&#xAD00;&#xACC4; &#xC2DD;&#xBCC4;&#xC790;&#xAD00;&#xACC4; : &#xBD80;&#xBAA8;&#xC758; &#xC2DD;&#xBCC4;&#xC790;&#xB97C; &#xC790;&#xC2DD;&#xC758; &#xC2DD;&#xBCC4;&#xC790;&#xB85C; &#xC0AC;&#xC6A9; FK&#xAC00; NOT NULL&#xC774;&#xC5B4;&#xC57C; &#xD568; &#xC885;&#xC18D;&#xAD00;&#xACC4; : 1 : 1 &#xB610;&#xB294; 1 : M &#xC0C1;&#xC18D;&#xBC1B;&#xC740; &#xC8FC;&#xC2DD;&#xBCC4;&#xC790;&#xC18D;&#xC131;&#xC744; &#xD0C0; &#xC5D4;&#xD130;&#xD2F0;&#xC5D0; &#xC774;&#xC804; &#xD544;&#xC694; &#xBE44;&#xC2DD;&#xBCC4;&#xAD00;&#xACC4; : &#xBD80;&#xBAA8;&#xC5C6;&#xB294; &#xC790;&#xC2DD;&#xC774; &#xC0DD;&#xC131;&#xB420; &#xC218; &#xC788;&#xC74C; &#xC790;&#xC2DD;&#xC758; &#xC77C;&#xBC18; &#xC18D;&#xC131;&#xC5D0; &#xC0DD;&#xC131; &#xB428; : NULL &#xC77C; &#xC218; &#xC788;&#xC74C; &#xBD80;&#xBAA8;&#xC640; &#xC790;&#xC2DD;&#xC758; &#xC0DD;&#xBA85;&#xC8FC;&#xAE30;(life cycle)&#xC744; &#xB2EC;&#xB9AC;&#xD560; &#xACBD;&#xC6B0; &#xC720;&#xC6A9;&#xD568; &#xC790;&#xC2DD; &#xC5D4;&#xD130;&#xD2F0;&#xC758; &#xC8FC; &#xC2DD;&#xBCC4;&#xC790;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xC5B4;&#xB3C4; &#xB418;&#xC9C0;&#xB9CC;, &#xB530;&#xB85C; &#xC0DD;&#xC131;&#xD558;&#xB294;&#xAC8C; &#xB354; &#xC720;&#xB9AC;&#xD558;&#xB2E4;&#xACE0; &#xD310;&#xB2E8; &#xB420; &#xACBD;&#xC6B0; 5.4.2 &#xAD00;&#xACC4;&#xC5D0; &#xB300;&#xD55C; &#xC8FC;&#xC758;&#xC0AC;&#xD56D; &#xC2DD;&#xBCC4;&#xAD00;&#xACC4; / &#xBE44;&#xC2DD;&#xBCC4;&#xAD00;&#xACC4; &#xACB0;&#xC815; &#xC5B4;&#xB5BB;&#xAC8C; &#xAD00;&#xACC4;&#xB97C; &#xC9D3;&#xB294;&#xB0D0;&#xC5D0; &#xB530;&#xB77C; &#xC18D;&#xC131;&#xC758; &#xC815;&#xC758; &#xBC0F; SQL &#xC791;&#xC131;&#xC2DC;&#xC5D0; &#xB2EC;&#xB77C;&#xC9C0;&#xBBC0;&#xB85C; SQL &#xC804;&#xB7B5;&#xC5D0; &#xB9DE;&#xAC8C; &#xACB0;&#xC815;&#xD574;&#xC57C; &#xD55C;&#xB2E4;. &#xC2DD;&#xBCC4;&#xAD00;&#xACC4;&#xB85C;&#xB9CC; &#xC124;&#xC815;&#xD560; &#xACBD;&#xC6B0; &#xBB38;&#xC81C;&#xC810; PK &#xC18D;&#xC131;&#xC758; &#xC218;&#xAC00; &#xB370;&#xC774;&#xD130; &#xBAA8;&#xB378; &#xD750;&#xB984;&#xC5D0; &#xB530;&#xB77C; &#xACC4;&#xC18D; &#xC99D;&#xAC00;&#xD558;&#xAC8C; &#xB41C;&#xB2E4;. : &#xC790;&#xC2DD;&#xC758; PK &#xC18D;&#xC131;&#xC218;&#xB294; &#xBD80;&#xBAA8;&#xC758; PK &#xC18D;&#xC131;&#xC218; + n JOIN &#xD560;&#xB54C; &#xC801;&#xC5B4;&#xC918;&#xC57C; &#xD560; WHERE&#xC808;&#xC758; &#xC870;&#xAC74; &#xC218;&#xAC00; &#xB298;&#xC5B4;&#xB09C;&#xB2E4;. &#xBE44;&#xC2DD;&#xBCC4;&#xAD00;&#xACC4;&#xB85C;&#xB9CC; &#xC124;&#xC815;&#xD560; &#xACBD;&#xC6B0; &#xBB38;&#xC81C;&#xC810; &#xC790;&#xC2DD; &#xC5D4;&#xD130;&#xD2F0;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC870;&#xD68C;&#xD560;&#xB54C; &#xBD80;&#xBAA8; &#xC5D4;&#xD130;&#xD2F0;&#xC5D0; WHERE &#xC870;&#xAC74;&#xC744; &#xCD94;&#xAC00;&#xD574; &#xC8FC;&#xC5B4;&#xC57C; &#xD560; &#xACBD;&#xC6B0;&#xAC00; &#xBC1C;&#xC0DD;&#xD55C;&#xB2E4;.","categories":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/categories/Database/"},{"name":"SQLP","slug":"Database/SQLP","permalink":"http://DevStarSJ.github.io/categories/Database/SQLP/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://DevStarSJ.github.io/tags/Database/"},{"name":"Oracle","slug":"Oracle","permalink":"http://DevStarSJ.github.io/tags/Oracle/"},{"name":"SQLP","slug":"SQLP","permalink":"http://DevStarSJ.github.io/tags/SQLP/"}]},{"title":"Install Jenkins","slug":"Devops.Jenkins","date":"2015-11-09T15:00:00.000Z","updated":"2017-04-23T09:57:26.000Z","comments":true,"path":"2015/11/10/Devops.Jenkins/","link":"","permalink":"http://DevStarSJ.github.io/2015/11/10/Devops.Jenkins/","excerpt":"","text":"Install Jenkins 1. Jenkins &#xB780; ? Jenkins Server&#xB294; Open Source CI (Continuous Integration) &#xC744; &#xC790;&#xB3D9;&#xD654;&#xD574;&#xC8FC;&#xB294; Tool&#xC785;&#xB2C8;&#xB2E4;. &#xB300;&#xBD80;&#xBD84; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC740; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; Jenkins&#xB97C; &#xC774;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. Repository (SVN, Git)&#xC5D0;&#xC11C; source code&#xB97C; &#xAC00;&#xC838;&#xC635;&#xB2C8;&#xB2E4;. &#xC815;&#xD574;&#xC9C4; &#xC808;&#xCC28;&#xC5D0; &#xB530;&#xB77C; build &#xBC0F; unit test, integration test&#xB97C; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. &#xC218;&#xD589; &#xACB0;&#xACFC; &#xC774;&#xC0C1;&#xC774; &#xC788;&#xC744; &#xB54C; e-mail&#xC744; &#xD1B5;&#xD574;&#xC11C; reporting&#xD574;&#xC8FC;&#xB294; &#xC5ED;&#xD560;&#xAE4C;&#xC9C0; &#xC218;&#xD589;&#xD574; &#xC90D;&#xB2C8;&#xB2E4;. &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; build &#xB418;&#xC5C8;&#xC73C;&#xBA70;, &#xBAA8;&#xB4E0; test &#xACB0;&#xACFC;&#xC5D0; &#xC774;&#xC0C1;&#xC774; &#xC5C6;&#xB294; &#xACBD;&#xC6B0; &#xBC30;&#xD3EC; &#xD30C;&#xC77C;(setup, update)&#xC744; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. Jenkins &#xC790;&#xCCB4;&#xB294; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xC785;&#xB825;&#xD55C; command line &#xBA85;&#xB839;&#xC5B4;&#xB4E4;&#xC744; &#xD2B9;&#xC815; &#xC870;&#xAC74;&#xC5D0; &#xB9DE;&#xAC8C; &#xB610;&#xB294; &#xD2B9;&#xC815; &#xC2DC;&#xAC04;&#xC774;&#xB098; &#xC77C;&#xC815;&#xD55C; &#xAC04;&#xACA9;&#xC73C;&#xB85C; &#xC218;&#xD589;&#xD574;&#xC8FC;&#xB294; &#xC5ED;&#xD560;&#xC744; &#xD574;&#xC90D;&#xB2C8;&#xB2E4;. build &#xBC0F; test, deploy&#xD558;&#xB294; &#xC5ED;&#xD560; &#xC790;&#xCCB4;&#xB294; command line&#xC5D0;&#xC11C; &#xC218;&#xD589;&#xAC00;&#xB2A5;&#xD55C; &#xD615;&#xD0DC;&#xB85C; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xC9C1;&#xC811; &#xC785;&#xB825;&#xD574; &#xB193;&#xC73C;&#xBA74; &#xADF8; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC218;&#xD589;&#xD574;&#xC8FC;&#xB294; &#xC5ED;&#xD560;&#xC744; &#xD560; &#xBFD0;&#xC774;&#xC9C0;, Jenkins &#xC790;&#xCCB4;&#xC5D0; build tool&#xC774; &#xC788;&#xB2E4;&#xB358;&#xC9C0; &#xADF8;&#xB7EC;&#xC9C4; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. 2. &#xC774;&#xBC88; Posting&#xC5D0;&#xC11C; &#xB2E4;&#xB8F0; &#xB0B4;&#xC6A9; Jenkins download &#xBC0F; &#xC124;&#xCE58; (Windows &#xAE30;&#xC900;) MSBuild plugin &#xC124;&#xCE58; Jenkins item &#xC124;&#xC815; SVN Repository&#xC5D0;&#xC11C; source code &#xB0B4;&#xB824;&#xBC1B;&#xAE30; VisualStudio Solution (.sln)&#xC744; command line&#xC5D0;&#xC11C; &#xC2E4;&#xD589;&#xC2DC;&#xD0A4;&#xAE30; (MSBuild &#xC774;&#xC6A9;) Jenkins item&#xC5D0;&#xC11C; build &#xD6C4; &#xB2E4;&#xB978; item &#xC2E4;&#xD589; 3. Jenkins download &#xBC0F; &#xC124;&#xCE58; Link : http://jenkins-ci.org &#xC704; Link&#xC5D0;&#xC11C; &#xC6B0;&#xCE21;&#xC5D0; &#xC788;&#xB294; Windows&#xB97C; &#xB20C;&#xB7EC;&#xC11C; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xBC1B;&#xC73C;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. zip &#xD30C;&#xC77C;&#xC774; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xBC1B;&#xC544;&#xC9C0;&#xB294;&#xB370; &#xC555;&#xCD95;&#xC744; &#xD480;&#xC5B4;&#xC11C; &#xC14B;&#xC5C5;&#xC744; &#xC2E4;&#xD589;&#xD558;&#xBA74; &#xC124;&#xCE58;&#xAC00; &#xB05D;&#xB0A9;&#xB2C8;&#xB2E4;. &#xBC14;&#xB85C; Jenkins &#xCC3D;&#xC774; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;. &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C;&#xB294; http://localhost:8080 &#xB85C; &#xC811;&#xC18D;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. (&#xB2E4;&#xB978; PC&#xC5D0;&#xC11C; &#xC811;&#xC18D;&#xC2DC;&#xC5D0;&#xB294; PC ip&#xB098; hostname &#xC5D0; 8080 &#xD3EC;&#xD2B8;&#xB85C; &#xC811;&#xC18D;&#xC744; &#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;.) 3. MSBuild plugin &#xC124;&#xCE58; Visual Studio&#xC5D0;&#xC11C; &#xC791;&#xC5C5;&#xD55C; solution &#xD30C;&#xC77C; (.sln)&#xC744; command line&#xC5D0;&#xC11C; build &#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; MSBuild.exe&#xB97C; &#xC2E4;&#xD589;&#xD574;&#xC11C; build &#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. MSBuild.exe&#xB294; Visual Studio &#xC124;&#xCE58;&#xC2DC; &#xAC19;&#xC774; &#xC124;&#xCE58;&#xAC00; &#xB429;&#xB2C8;&#xB2E4;. Jenkins&#xC5D0;&#xC11C; MSBuild&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; &#xBCC4;&#xB3C4;&#xC758; plugin&#xC774; &#xD544;&#xC694;&#xD569;&#xB2C8;&#xB2E4;. &#xBA3C;&#xC800; Jenkins &#xD654;&#xBA74;&#xC5D0;&#xC11C; Jenkins &#xAD00;&#xB9AC;-&gt; &#xD50C;&#xB7EC;&#xADF8;&#xC778; &#xAD00;&#xB9AC; &#xB85C; &#xB4E4;&#xC5B4;&#xAC11;&#xB2C8;&#xB2E4;. internet&#xC5D0; &#xC5F0;&#xACB0;&#xB41C; &#xD658;&#xACBD;&#xC774;&#xB77C;&#xBA74; &#xC124;&#xCE58;&#xAC00;&#xB2A5; &#xD0ED;&#xC5D0;&#xC11C; &#xBC14;&#xB85C; MSBuild&#xB97C; &#xC120;&#xD0DD;&#xD574;&#xC8FC;&#xC2DC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. offline &#xC0C1;&#xD0DC;&#xC758; pc&#xB77C;&#xBA74; https://updates.jenkins-ci.org/download/plugins&#xB85C; &#xB4E4;&#xC5B4;&#xAC00;&#xC11C; &#xC6D0;&#xD558;&#xB294; &#xBC84;&#xC804;&#xC758; MSBuild plugin&#xC744; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xBC1B;&#xC73C;&#xC2DC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xBC1B;&#xC740; &#xB4A4; &#xACE0;&#xAE09; &#xD0ED;&#xC744; &#xB20C;&#xB7EC;&#xC11C; &#xD50C;&#xB7EC;&#xADF8;&#xC778; &#xC62C;&#xB9AC;&#xAE30; &#xC5D0;&#xC11C; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xBC1B;&#xC740; &#xD30C;&#xC77C;&#xC744; &#xC120;&#xD0DD;&#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7F0; &#xB4A4; Jenkins&#xB97C; &#xC7AC;&#xAC00;&#xB3D9; &#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 4. Jenkins &#xD658;&#xACBD;&#xC124;&#xC815; SVN , MSBuild &#xC124;&#xC815;&#xC5D0; &#xB300;&#xD55C; &#xBD80;&#xBD84;&#xC744; &#xC124;&#xBA85;&#xB4DC;&#xB9AC;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB2E4;&#xB978; Tool &#xB4E4;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB3C4; &#xC5B4;&#xB835;&#xC9C0; &#xC54A;&#xAC8C; &#xC2A4;&#xC2A4;&#xB85C; &#xC124;&#xC815;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xAC70;&#xB098;, &#xAC80;&#xC0C9;&#xC744; &#xD558;&#xC2DC;&#xBA74; &#xC790;&#xB8CC;&#xAC00; &#xB9CE;&#xC774; &#xB098;&#xC62C; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;. &#xBA3C;&#xC800; Jenkins &#xD654;&#xBA74;&#xC5D0;&#xC11C; Jenkins &#xAD00;&#xB9AC;-&gt; &#xC2DC;&#xC2A4;&#xD15C; &#xC124;&#xC815; &#xC73C;&#xB85C; &#xB4E4;&#xC5B4;&#xAC11;&#xB2C8;&#xB2E4;. &#xC544;&#xB798;&#xB85C; &#xCB49; &#xB0B4;&#xB9AC;&#xC2DC;&#xBA74; Subversion&#xC774;&#xB780; &#xBD80;&#xBD84;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD604;&#xC7AC; PC&#xC5D0; &#xC124;&#xCE58;&#xB41C; SVN&#xACFC; &#xAC19;&#xC740; &#xBC84;&#xC804;&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD558;&#xBA74; &#xB05D;&#xC785;&#xB2C8;&#xB2E4;. &#xAC70;&#xAE30;&#xC11C; &#xC870;&#xAE08; &#xC704;&#xB85C; &#xC62C;&#xB9AC;&#xC2DC;&#xBA74; MSBuild &#xBD80;&#xBD84;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xAC70;&#xAE30; &#xBC84;&#xD2BC;&#xC744; &#xB204;&#xB978; &#xB4A4; PC&#xC0C1;&#xC758; MSBuild.exe&#xD30C;&#xC77C;&#xC758; &#xC704;&#xCE58;&#xB97C; &#xC785;&#xB825;&#xD574;&#xC90D;&#xB2C8;&#xB2E4;. &#xB2E8;&#xC21C;&#xD788; &#xC5EC;&#xAE30;&#xC5D0; &#xC704;&#xCE58;&#xB9CC; &#xC785;&#xB825;&#xD574; &#xC918;&#xB3C4; &#xB418;&#xC9C0;&#xB9CC;, &#xAC1C;&#xC778;&#xC801;&#xC73C;&#xB85C;&#xB294; &#xD574;&#xB2F9; &#xC704;&#xCE58;&#xB97C; &#xC2DC;&#xC2A4;&#xD15C;&#xD658;&#xACBD;&#xBCC0;&#xC218;&#xC5D0; PATH&#xB85C; &#xC7A1;&#xC544;&#xB450;&#xC2DC;&#xB294; &#xAC83;&#xC744; &#xCD94;&#xCC9C;&#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7EC;&#xBA74; cmd &#xCC3D;&#xC5D0;&#xC11C; &#xC9C1;&#xC811; &#xC2E4;&#xD589;&#xB3C4; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. MSBuild&#xC758; &#xC790;&#xC138;&#xD55C; &#xC0AC;&#xC6A9;&#xBC95;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xC5EC;&#xAE30;&#xC11C; &#xB2E4;&#xB8E8;&#xC9C0; &#xC54A;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. MSDN&#xC5D0; &#xC790;&#xC138;&#xD55C; &#xC124;&#xBA85;&#xC774; &#xC788;&#xC73C;&#xB2C8; &#xCC38;&#xC870;&#xD558;&#xC2DC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. &gt; https://msdn.microsoft.com/ko-kr/library/ms164311.aspx &#xADF8; &#xC911; Jenkins&#xC5D0;&#xC11C; &#xC790;&#xC8FC; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xC608;&#xC2DC; &#xD55C;&#xAC00;&#xC9C0;&#xB9CC; &#xB4E0;&#xB2E4;&#xBA74;&#x2026; 1/p:Configuration=&quot;Release&quot; /t:Clean,Build Release &#xBAA8;&#xB4DC;&#xB85C; Clean &#xD6C4; Build&#xB97C; &#xD560; &#xACBD;&#xC6B0; &#xC704;&#xC640; &#xAC19;&#xC774; &#xC368;&#xC8FC;&#xC2DC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. 5. Jenkins item &#xCD94;&#xAC00; &#xC0C8;&#xB85C;&#xC6B4; item&#xC744; &#xB204;&#xB974;&#xBA74; &#xCD94;&#xAC00;&#xAC00; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC6D0;&#xD558;&#xC2DC;&#xB294; &#xC774;&#xB984;&#xC744; &#xC785;&#xB825;&#xD55C; &#xB4A4; Freestyle project&#xB97C; &#xC120;&#xD0DD;&#xD569;&#xB2C8;&#xB2E4;. &#xBA3C;&#xC800; &#xACE0;&#xAE09; &#xD504;&#xB85C;&#xC81D;&#xD2B8; &#xC635;&#xC158;&#xC5D0;&#xC11C; &#xACE0;&#xAE09; &#xBC84;&#xD2BC;&#xC744; &#xB20C;&#xB7EC;&#xC11C; &#xC0AC;&#xC6A9;&#xC790; &#xBE4C;&#xB4DC; &#xACBD;&#xB85C; &#xC0AC;&#xC6A9;&#xC744; &#xCCB4;&#xD06C;&#xD558;&#xC154;&#xC11C; source code&#xB97C; &#xBC1B;&#xC744; &#xACBD;&#xB85C;&#xB97C; &#xC785;&#xB825;&#xD574; &#xC90D;&#xB2C8;&#xB2E4;. ex. d:\\build\\svn\\test_project &#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xAD00;&#xB9AC;&#xC5D0;&#xB294; Subversion&#xC744; &#xC120;&#xD0DD;&#xD558;&#xC2DC;&#xACE0; Repository URL&#xC744; &#xC785;&#xB825;&#xD569;&#xB2C8;&#xB2E4;. ex. svn://192.168.0.1/repo/test_project/trunk Add Build Step &#xC744; &#xB20C;&#xB7EC;&#xC11C; MSBuild&#xB97C; &#xC120;&#xD0DD;&#xD569;&#xB2C8;&#xB2E4;. build&#xD560; solution&#xC774;&#xB098; project &#xD30C;&#xC77C;&#xBA85;&#xC744; &#xC804;&#xCCB4;&#xACBD;&#xB85C;&#xB098; &#xC704;&#xC5D0; &#xC815;&#xD55C; &#xC0AC;&#xC6A9;&#xC790; &#xBE4C;&#xB4DC; &#xACBD;&#xB85C;&#xB85C; &#xBD80;&#xD130;&#xC758; &#xC0C1;&#xD0DC;&#xACBD;&#xB85C;&#xB85C; &#xC785;&#xB825;&#xD569;&#xB2C8;&#xB2E4;. ex. ./workspace/buildAll.sln &#xADF8;&#xB9AC;&#xACE0; command line argument&#xC5D0; &#xC635;&#xC158;&#xC744; &#xC801;&#xC5B4;&#xC90D;&#xB2C8;&#xB2E4;. ex. /p:Configuration=&quot;Release&quot; /t:Clean,Build &#xD55C; item&#xC5D0;&#xC11C; &#xC5EC;&#xB7EC;&#xAC00;&#xC9C0;&#xC758; build step&#xC744; &#xAC00;&#xC9C8; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC608;&#xB97C; &#xB4E4;&#xC5B4;&#xC11C; Release&#xB85C; &#xBE4C;&#xB4DC;&#xD558;&#xACE0;, Debug&#xB85C;&#xB3C4; &#xBE4C;&#xB4DC; &#xD55C;&#xB2E4;&#xB358;&#xC9C0;, &#xB2E4;&#xB978; project&#xB098; solution &#xB4E4;&#xC744; build &#xD55C;&#xB2E4;&#xB4E0;&#xC9C0; &#xB4F1;&#xC694;. build step&#xC5D0;&#xC11C; Execute Windows batch command&#xB97C; &#xC120;&#xD0DD;&#xD558;&#xC2DC;&#xBA74; &#xC77C;&#xB2E8; command line&#xC5D0;&#xC11C; &#xC120;&#xD0DD;&#xD558;&#xB294; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xADF8;&#xB300;&#xB85C; &#xC785;&#xB825;&#xD558;&#xC154;&#xC11C; &#xC2E4;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xAD00;&#xB828; &#xB0B4;&#xC6A9;&#xC744; &#xBBF8;&#xB9AC; batch file (.bat)&#xB098; python&#xC73C;&#xB85C; &#xC0DD;&#xC131;&#xD574; &#xB193;&#xACE0; &#xC2E4;&#xD589;&#xD558;&#xBA74; &#xD3B8;&#xB9AC;&#xD569;&#xB2C8;&#xB2E4;. &#xD2B9;&#xC815; file&#xB4E4;&#xC744; &#xB2E4;&#xB978; folder&#xB85C; &#xC62E;&#xACA8; &#xB193;&#xACE0; &#xD30C;&#xC77C;&#xC774;&#xB984;&#xC744; &#xB2E4;&#xB974;&#xAC8C; &#xBCF5;&#xC0AC;&#xD558;&#xACE0; &#xB4F1;&#xB4F1;&#xC758; &#xC791;&#xC5C5;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xD604;&#xC7AC; item&#xC774; &#xB05D;&#xB09C; &#xD6C4; &#xB2E4;&#xB978; item&#xC744; &#xC790;&#xB3D9;&#xC73C;&#xB85C; &#xC2DC;&#xC791; &#xC2DC;&#xD0AC;&#xB824;&#xBA74; &#xBE4C;&#xB4DC; &#xD6C4; &#xC870;&#xCE58; &#xCD94;&#xAC00;&#xC5D0;&#xC11C; Build other projects&#xB97C; &#xB20C;&#xB7EC;&#xC11C; &#xB2E4;&#xB978; item&#xBA85;&#xC744; &#xC785;&#xB825;&#xD558;&#xC2DC;&#xBA74; &#xC120;&#xD0DD;&#xC774; &#xB429;&#xB2C8;&#xB2E4;. &#xCF64;&#xB9C8;(,)&#xB97C; &#xC785;&#xB825;&#xD574;&#xC11C; &#xC5EC;&#xB7EC;&#xAC1C; project &#xC2E4;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. Test Project&#xB97C; &#xC2E4;&#xD589;&#xD55C;&#xB2E4;&#xB358;&#xC9C0;, InstallShield&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xBC30;&#xD3EC; &#xD30C;&#xC77C;&#xC744; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xB4F1;&#xC758; &#xC791;&#xC5C5;&#xC744; &#xD558;&#xBA74; &#xD3B8;&#xB9AC;&#xD558;&#xAC8C; &#xD65C;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC8FC;&#xAE30;&#xC801;&#xC73C;&#xB85C; build&#xB97C; &#xD560;&#xB824;&#xBA74; &#xBE4C;&#xB4DC; &#xC720;&#xBC1C;&#xC5D0; Build periodically&#xB97C; &#xC120;&#xD0DD;&#xD558;&#xC154;&#xC11C; Schedule&#xC5D0; &#xC785;&#xB825;&#xD558;&#xC2DC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. &#xCC38;&#xACE0;&#xB85C; &#xB9E4;&#xC77C; &#xC0C8;&#xBCBD;&#xC5D0; &#xB3CC;&#xB9AC;&#xC2E4;&#xB824;&#xBA74; @midnight&#xB77C;&#xACE0; &#xC785;&#xB825;&#xD558;&#xC2DC;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;. &#xC624;&#xB978;&#xCABD; ?&#xB97C; &#xB204;&#xB974;&#xBA74; &#xC790;&#xC138;&#xD55C; &#xC124;&#xBA85;&#xC774; &#xB098;&#xC635;&#xB2C8;&#xB2E4;.","categories":[{"name":"DevOps","slug":"DevOps","permalink":"http://DevStarSJ.github.io/categories/DevOps/"}],"tags":[{"name":"DevOps","slug":"DevOps","permalink":"http://DevStarSJ.github.io/tags/DevOps/"},{"name":"CI/CD","slug":"CI-CD","permalink":"http://DevStarSJ.github.io/tags/CI-CD/"}]}]}